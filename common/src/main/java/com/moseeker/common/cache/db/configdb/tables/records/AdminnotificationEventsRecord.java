/**
 * This class is generated by jOOQ
 */
package com.moseeker.common.cache.db.configdb.tables.records;


import com.moseeker.common.cache.db.configdb.tables.AdminnotificationEvents;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 管理员通知事件列表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminnotificationEventsRecord extends UpdatableRecordImpl<AdminnotificationEventsRecord> implements Record12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> {

	private static final long serialVersionUID = -738341450;

	/**
	 * Setter for <code>configDB.adminnotification_events.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.project_appid</code>. 项目appid
	 */
	public void setProjectAppid(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.project_appid</code>. 项目appid
	 */
	public String getProjectAppid() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.event_key</code>. 事件标识符，大写英文
	 */
	public void setEventKey(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.event_key</code>. 事件标识符，大写英文
	 */
	public String getEventKey() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.event_name</code>. 事件名称
	 */
	public void setEventName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.event_name</code>. 事件名称
	 */
	public String getEventName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.event_desc</code>. 事件描述
	 */
	public void setEventDesc(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.event_desc</code>. 事件描述
	 */
	public String getEventDesc() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.threshold_value</code>. 触发几次后通知
	 */
	public void setThresholdValue(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.threshold_value</code>. 触发几次后通知
	 */
	public Integer getThresholdValue() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.threshold_interval</code>. 单位秒，0表示不限制，  thresholdinterval和thresholdvalue搭配使用，表达 每分钟超过5次 报警。
	 */
	public void setThresholdInterval(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.threshold_interval</code>. 单位秒，0表示不限制，  thresholdinterval和thresholdvalue搭配使用，表达 每分钟超过5次 报警。
	 */
	public Integer getThresholdInterval() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.enable_notifyby_email</code>. 是否email通知， 1是 0否
	 */
	public void setEnableNotifybyEmail(Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.enable_notifyby_email</code>. 是否email通知， 1是 0否
	 */
	public Byte getEnableNotifybyEmail() {
		return (Byte) getValue(7);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.enable_notifyby_sms</code>. 是否短信通知， 1是 0否
	 */
	public void setEnableNotifybySms(Byte value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.enable_notifyby_sms</code>. 是否短信通知， 1是 0否
	 */
	public Byte getEnableNotifybySms() {
		return (Byte) getValue(8);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.enable_notifyby_wechattemplatemessage</code>. 是否微信模板消息通知， 1是 0否
	 */
	public void setEnableNotifybyWechattemplatemessage(Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.enable_notifyby_wechattemplatemessage</code>. 是否微信模板消息通知， 1是 0否
	 */
	public Byte getEnableNotifybyWechattemplatemessage() {
		return (Byte) getValue(9);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.groupid</code>. 发送给哪个组
	 */
	public void setGroupid(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.groupid</code>. 发送给哪个组
	 */
	public Integer getGroupid() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>configDB.adminnotification_events.create_time</code>.
	 */
	public void setCreateTime(Timestamp value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>configDB.adminnotification_events.create_time</code>.
	 */
	public Timestamp getCreateTime() {
		return (Timestamp) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.PROJECT_APPID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.EVENT_KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.EVENT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.EVENT_DESC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.THRESHOLD_VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.THRESHOLD_INTERVAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field8() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field9() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_SMS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field10() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_WECHATTEMPLATEMESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.GROUPID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field12() {
		return AdminnotificationEvents.ADMINNOTIFICATION_EVENTS.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getProjectAppid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getEventKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getEventName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getEventDesc();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getThresholdValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getThresholdInterval();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value8() {
		return getEnableNotifybyEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value9() {
		return getEnableNotifybySms();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value10() {
		return getEnableNotifybyWechattemplatemessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getGroupid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value12() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value2(String value) {
		setProjectAppid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value3(String value) {
		setEventKey(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value4(String value) {
		setEventName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value5(String value) {
		setEventDesc(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value6(Integer value) {
		setThresholdValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value7(Integer value) {
		setThresholdInterval(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value8(Byte value) {
		setEnableNotifybyEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value9(Byte value) {
		setEnableNotifybySms(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value10(Byte value) {
		setEnableNotifybyWechattemplatemessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value11(Integer value) {
		setGroupid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord value12(Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationEventsRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, Byte value8, Byte value9, Byte value10, Integer value11, Timestamp value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AdminnotificationEventsRecord
	 */
	public AdminnotificationEventsRecord() {
		super(AdminnotificationEvents.ADMINNOTIFICATION_EVENTS);
	}

	/**
	 * Create a detached, initialised AdminnotificationEventsRecord
	 */
	public AdminnotificationEventsRecord(Integer id, String projectAppid, String eventKey, String eventName, String eventDesc, Integer thresholdValue, Integer thresholdInterval, Byte enableNotifybyEmail, Byte enableNotifybySms, Byte enableNotifybyWechattemplatemessage, Integer groupid, Timestamp createTime) {
		super(AdminnotificationEvents.ADMINNOTIFICATION_EVENTS);

		setValue(0, id);
		setValue(1, projectAppid);
		setValue(2, eventKey);
		setValue(3, eventName);
		setValue(4, eventDesc);
		setValue(5, thresholdValue);
		setValue(6, thresholdInterval);
		setValue(7, enableNotifybyEmail);
		setValue(8, enableNotifybySms);
		setValue(9, enableNotifybyWechattemplatemessage);
		setValue(10, groupid);
		setValue(11, createTime);
	}
}
