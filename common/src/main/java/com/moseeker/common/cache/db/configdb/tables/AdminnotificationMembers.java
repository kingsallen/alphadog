/**
 * This class is generated by jOOQ
 */
package com.moseeker.common.cache.db.configdb.tables;


import com.moseeker.common.cache.db.configdb.Configdb;
import com.moseeker.common.cache.db.configdb.Keys;
import com.moseeker.common.cache.db.configdb.tables.records.AdminnotificationMembersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 管理员通知联系人
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminnotificationMembers extends TableImpl<AdminnotificationMembersRecord> {

	private static final long serialVersionUID = 1274897821;

	/**
	 * The reference instance of <code>configDB.adminnotification_members</code>
	 */
	public static final AdminnotificationMembers ADMINNOTIFICATION_MEMBERS = new AdminnotificationMembers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AdminnotificationMembersRecord> getRecordType() {
		return AdminnotificationMembersRecord.class;
	}

	/**
	 * The column <code>configDB.adminnotification_members.id</code>.
	 */
	public final TableField<AdminnotificationMembersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>configDB.adminnotification_members.name</code>. 姓名
	 */
	public final TableField<AdminnotificationMembersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "姓名");

	/**
	 * The column <code>configDB.adminnotification_members.mobilephone</code>. 接收通知的手机
	 */
	public final TableField<AdminnotificationMembersRecord, String> MOBILEPHONE = createField("mobilephone", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "接收通知的手机");

	/**
	 * The column <code>configDB.adminnotification_members.wechatopenid</code>. 接收通知的微信openid
	 */
	public final TableField<AdminnotificationMembersRecord, String> WECHATOPENID = createField("wechatopenid", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "接收通知的微信openid");

	/**
	 * The column <code>configDB.adminnotification_members.email</code>. 接收通知的email
	 */
	public final TableField<AdminnotificationMembersRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "接收通知的email");

	/**
	 * The column <code>configDB.adminnotification_members.status</code>. 1 有效 0 无效
	 */
	public final TableField<AdminnotificationMembersRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "1 有效 0 无效");

	/**
	 * The column <code>configDB.adminnotification_members.create_time</code>.
	 */
	public final TableField<AdminnotificationMembersRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>configDB.adminnotification_members</code> table reference
	 */
	public AdminnotificationMembers() {
		this("adminnotification_members", null);
	}

	/**
	 * Create an aliased <code>configDB.adminnotification_members</code> table reference
	 */
	public AdminnotificationMembers(String alias) {
		this(alias, ADMINNOTIFICATION_MEMBERS);
	}

	private AdminnotificationMembers(String alias, Table<AdminnotificationMembersRecord> aliased) {
		this(alias, aliased, null);
	}

	private AdminnotificationMembers(String alias, Table<AdminnotificationMembersRecord> aliased, Field<?>[] parameters) {
		super(alias, Configdb.CONFIGDB, aliased, parameters, "管理员通知联系人");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AdminnotificationMembersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ADMINNOTIFICATION_MEMBERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AdminnotificationMembersRecord> getPrimaryKey() {
		return Keys.KEY_ADMINNOTIFICATION_MEMBERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AdminnotificationMembersRecord>> getKeys() {
		return Arrays.<UniqueKey<AdminnotificationMembersRecord>>asList(Keys.KEY_ADMINNOTIFICATION_MEMBERS_PRIMARY, Keys.KEY_ADMINNOTIFICATION_MEMBERS_NAME, Keys.KEY_ADMINNOTIFICATION_MEMBERS_MOBILEPHONE, Keys.KEY_ADMINNOTIFICATION_MEMBERS_WECHATOPENID, Keys.KEY_ADMINNOTIFICATION_MEMBERS_EMAIL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationMembers as(String alias) {
		return new AdminnotificationMembers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AdminnotificationMembers rename(String name) {
		return new AdminnotificationMembers(name, null);
	}
}
