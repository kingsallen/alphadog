/**
 * This class is generated by jOOQ
 */
package com.moseeker.common.redis.cache.db.configdb.tables;


import com.moseeker.common.redis.cache.db.configdb.Configdb;
import com.moseeker.common.redis.cache.db.configdb.Keys;
import com.moseeker.common.redis.cache.db.configdb.tables.records.AdminnotificationGroupRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 管理员通知群组
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminnotificationGroup extends TableImpl<AdminnotificationGroupRecord> {

	private static final long serialVersionUID = -1295871012;

	/**
	 * The reference instance of <code>configDB.adminnotification_group</code>
	 */
	public static final AdminnotificationGroup ADMINNOTIFICATION_GROUP = new AdminnotificationGroup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AdminnotificationGroupRecord> getRecordType() {
		return AdminnotificationGroupRecord.class;
	}

	/**
	 * The column <code>configDB.adminnotification_group.id</code>.
	 */
	public final TableField<AdminnotificationGroupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>configDB.adminnotification_group.name</code>. 群组名称
	 */
	public final TableField<AdminnotificationGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "群组名称");

	/**
	 * The column <code>configDB.adminnotification_group.create_time</code>.
	 */
	public final TableField<AdminnotificationGroupRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>configDB.adminnotification_group</code> table reference
	 */
	public AdminnotificationGroup() {
		this("adminnotification_group", null);
	}

	/**
	 * Create an aliased <code>configDB.adminnotification_group</code> table reference
	 */
	public AdminnotificationGroup(String alias) {
		this(alias, ADMINNOTIFICATION_GROUP);
	}

	private AdminnotificationGroup(String alias, Table<AdminnotificationGroupRecord> aliased) {
		this(alias, aliased, null);
	}

	private AdminnotificationGroup(String alias, Table<AdminnotificationGroupRecord> aliased, Field<?>[] parameters) {
		super(alias, Configdb.CONFIGDB, aliased, parameters, "管理员通知群组");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AdminnotificationGroupRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ADMINNOTIFICATION_GROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AdminnotificationGroupRecord> getPrimaryKey() {
		return Keys.KEY_ADMINNOTIFICATION_GROUP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AdminnotificationGroupRecord>> getKeys() {
		return Arrays.<UniqueKey<AdminnotificationGroupRecord>>asList(Keys.KEY_ADMINNOTIFICATION_GROUP_PRIMARY, Keys.KEY_ADMINNOTIFICATION_GROUP_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AdminnotificationGroup as(String alias) {
		return new AdminnotificationGroup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AdminnotificationGroup rename(String name) {
		return new AdminnotificationGroup(name, null);
	}
}
