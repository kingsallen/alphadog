apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'

repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

repositories {
    maven {
        url "http://maven.oschina.net/content/groups/public/"
    }
}

dependencies {
    compile "junit:junit:4.5"
    compile "log4j:log4j:1.2.9"
    compile "org.apache.httpcomponents:httpcore:4.4.1"
    compile "joda-time:joda-time:2.7"
    compile "redis.clients:jedis:2.8.0"
    compile "org.jooq:jooq:3.7.3"
    compile "org.jooq:jooq-meta:3.7.3"
    compile "org.jooq:jooq-codegen:3.7.3"
    compile "mysql:mysql-connector-java:5.1.6"
    compile "org.apache.zookeeper:zookeeper:3.4.5"
    compile "org.apache.curator:curator-framework:2.10.0"
    compile "com.alibaba:fastjson:1.2.8"
    compile "org.apache.thrift:libthrift:0.9.3"
    compile "mysql:mysql-connector-java:5.1.6"
    compile "com.jolbox:bonecp:0.8.0.RELEASE"
}

project.description = '''
    公用
    1) redis
        log
        cache
        session 
    2) mail
    3) sms
    4) 敏感词校验
'''

jar {
    // build one flat jar
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes 'Main-Class': 'com.moseeker.common.dbconnection.Test';
    }
}

sourceSets {
    main {
        resources {
            exclude '**/*'
        }
    }
}


task copyEnvResources {

    group "environmental configs"
    description "Use one set of configs in /src/main/resources/\$env, defaults to 'debug'"

    def env = project.getProperties()['env'] ?: 'debug'
    def envResourcesSrc = "src/main/resources/$env/"

    doLast {
        copy {
            from envResourcesSrc
            into processResources.destinationDir
        }
    }

}

jar {
    dependsOn copyEnvResources
}


