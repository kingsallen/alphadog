project.description = '''
    jooq 生成table和record
'''
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

apply from: '../versions.gradle'

dependencies {
    runtime deps["mysql-connector-java"]
    compile deps["jooq-codegen"]
    compile deps["jooq-meta"]
    compile deps["jooq"]
    compile deps["libthrift"]
    compile deps["slf4j-log4j12"]
    testCompile deps["junit"]
}

buildscript {
    apply from: '../versions.gradle'
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath deps["jooq"]
        classpath deps["jooq-codegen"]
        classpath deps["jooq-meta"]
        classpath deps["mysql-connector-java"]
    }
}

sourceCompatibility = 1.8

import javax.xml.bind.JAXB
import org.jooq.util.GenerationTool

['analytics','candidatedb','configdb','dictdb','historydb','hrdb','jobdb','logdb','profiledb','userdb','wordpressdb'].forEach{ db->
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer).configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.9.0.xsd') {
        jdbc() {
            driver('com.mysql.jdbc.Driver')
            url('jdbc:mysql://db-d.dqprism.com:3306/userdb?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE')
            user('daqi')
            password('5F51692091B4031640E18E7C27430E071BC878C8')
        }
        generator() {
            database {
                unsignedTypes false
                name 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema db
                excludes 'view_resume_import'
            }
            generate() {
            }
            target() {
                packageName('com.moseeker.db.'+db)
                directory('src/main/java')
            }
        }
    }

    GenerationTool.main(
            JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}