/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-5-3")
public class EducationExt implements org.apache.thrift.TBase<EducationExt, EducationExt._Fields>, java.io.Serializable, Cloneable, Comparable<EducationExt> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EducationExt");

  private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profile_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField GRADUATION_FIELD_DESC = new org.apache.thrift.protocol.TField("graduation", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MAJORRANK_FIELD_DESC = new org.apache.thrift.protocol.TField("majorrank", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.I16, (short)4);
  private static final org.apache.thrift.protocol.TField GPA_FIELD_DESC = new org.apache.thrift.protocol.TField("gpa", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new EducationExtStandardSchemeFactory());
    schemes.put(TupleScheme.class, new EducationExtTupleSchemeFactory());
  }

  public int profile_id; // required
  public String graduation; // required
  public short majorrank; // required
  public short degree; // required
  public String gpa; // required
  public String create_time; // required
  public String update_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROFILE_ID((short)1, "profile_id"),
    GRADUATION((short)2, "graduation"),
    MAJORRANK((short)3, "majorrank"),
    DEGREE((short)4, "degree"),
    GPA((short)5, "gpa"),
    CREATE_TIME((short)6, "create_time"),
    UPDATE_TIME((short)7, "update_time");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROFILE_ID
          return PROFILE_ID;
        case 2: // GRADUATION
          return GRADUATION;
        case 3: // MAJORRANK
          return MAJORRANK;
        case 4: // DEGREE
          return DEGREE;
        case 5: // GPA
          return GPA;
        case 6: // CREATE_TIME
          return CREATE_TIME;
        case 7: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROFILE_ID_ISSET_ID = 0;
  private static final int __MAJORRANK_ISSET_ID = 1;
  private static final int __DEGREE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profile_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GRADUATION, new org.apache.thrift.meta_data.FieldMetaData("graduation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.MAJORRANK, new org.apache.thrift.meta_data.FieldMetaData("majorrank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.GPA, new org.apache.thrift.meta_data.FieldMetaData("gpa", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EducationExt.class, metaDataMap);
  }

  public EducationExt() {
  }

  public EducationExt(
    int profile_id,
    String graduation,
    short majorrank,
    short degree,
    String gpa,
    String create_time,
    String update_time)
  {
    this();
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    this.graduation = graduation;
    this.majorrank = majorrank;
    setMajorrankIsSet(true);
    this.degree = degree;
    setDegreeIsSet(true);
    this.gpa = gpa;
    this.create_time = create_time;
    this.update_time = update_time;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EducationExt(EducationExt other) {
    __isset_bitfield = other.__isset_bitfield;
    this.profile_id = other.profile_id;
    if (other.isSetGraduation()) {
      this.graduation = other.graduation;
    }
    this.majorrank = other.majorrank;
    this.degree = other.degree;
    if (other.isSetGpa()) {
      this.gpa = other.gpa;
    }
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
  }

  public EducationExt deepCopy() {
    return new EducationExt(this);
  }

  @Override
  public void clear() {
    setProfile_idIsSet(false);
    this.profile_id = 0;
    this.graduation = null;
    setMajorrankIsSet(false);
    this.majorrank = 0;
    setDegreeIsSet(false);
    this.degree = 0;
    this.gpa = null;
    this.create_time = null;
    this.update_time = null;
  }

  public int getProfile_id() {
    return this.profile_id;
  }

  public EducationExt setProfile_id(int profile_id) {
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    return this;
  }

  public void unsetProfile_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  /** Returns true if field profile_id is set (has been assigned a value) and false otherwise */
  public boolean isSetProfile_id() {
    return EncodingUtils.testBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  public void setProfile_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROFILE_ID_ISSET_ID, value);
  }

  public String getGraduation() {
    return this.graduation;
  }

  public EducationExt setGraduation(String graduation) {
    this.graduation = graduation;
    return this;
  }

  public void unsetGraduation() {
    this.graduation = null;
  }

  /** Returns true if field graduation is set (has been assigned a value) and false otherwise */
  public boolean isSetGraduation() {
    return this.graduation != null;
  }

  public void setGraduationIsSet(boolean value) {
    if (!value) {
      this.graduation = null;
    }
  }

  public short getMajorrank() {
    return this.majorrank;
  }

  public EducationExt setMajorrank(short majorrank) {
    this.majorrank = majorrank;
    setMajorrankIsSet(true);
    return this;
  }

  public void unsetMajorrank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAJORRANK_ISSET_ID);
  }

  /** Returns true if field majorrank is set (has been assigned a value) and false otherwise */
  public boolean isSetMajorrank() {
    return EncodingUtils.testBit(__isset_bitfield, __MAJORRANK_ISSET_ID);
  }

  public void setMajorrankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAJORRANK_ISSET_ID, value);
  }

  public short getDegree() {
    return this.degree;
  }

  public EducationExt setDegree(short degree) {
    this.degree = degree;
    setDegreeIsSet(true);
    return this;
  }

  public void unsetDegree() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return EncodingUtils.testBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  public void setDegreeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DEGREE_ISSET_ID, value);
  }

  public String getGpa() {
    return this.gpa;
  }

  public EducationExt setGpa(String gpa) {
    this.gpa = gpa;
    return this;
  }

  public void unsetGpa() {
    this.gpa = null;
  }

  /** Returns true if field gpa is set (has been assigned a value) and false otherwise */
  public boolean isSetGpa() {
    return this.gpa != null;
  }

  public void setGpaIsSet(boolean value) {
    if (!value) {
      this.gpa = null;
    }
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public EducationExt setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public EducationExt setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROFILE_ID:
      if (value == null) {
        unsetProfile_id();
      } else {
        setProfile_id((Integer)value);
      }
      break;

    case GRADUATION:
      if (value == null) {
        unsetGraduation();
      } else {
        setGraduation((String)value);
      }
      break;

    case MAJORRANK:
      if (value == null) {
        unsetMajorrank();
      } else {
        setMajorrank((Short)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((Short)value);
      }
      break;

    case GPA:
      if (value == null) {
        unsetGpa();
      } else {
        setGpa((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROFILE_ID:
      return Integer.valueOf(getProfile_id());

    case GRADUATION:
      return getGraduation();

    case MAJORRANK:
      return Short.valueOf(getMajorrank());

    case DEGREE:
      return Short.valueOf(getDegree());

    case GPA:
      return getGpa();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROFILE_ID:
      return isSetProfile_id();
    case GRADUATION:
      return isSetGraduation();
    case MAJORRANK:
      return isSetMajorrank();
    case DEGREE:
      return isSetDegree();
    case GPA:
      return isSetGpa();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof EducationExt)
      return this.equals((EducationExt)that);
    return false;
  }

  public boolean equals(EducationExt that) {
    if (that == null)
      return false;

    boolean this_present_profile_id = true;
    boolean that_present_profile_id = true;
    if (this_present_profile_id || that_present_profile_id) {
      if (!(this_present_profile_id && that_present_profile_id))
        return false;
      if (this.profile_id != that.profile_id)
        return false;
    }

    boolean this_present_graduation = true && this.isSetGraduation();
    boolean that_present_graduation = true && that.isSetGraduation();
    if (this_present_graduation || that_present_graduation) {
      if (!(this_present_graduation && that_present_graduation))
        return false;
      if (!this.graduation.equals(that.graduation))
        return false;
    }

    boolean this_present_majorrank = true;
    boolean that_present_majorrank = true;
    if (this_present_majorrank || that_present_majorrank) {
      if (!(this_present_majorrank && that_present_majorrank))
        return false;
      if (this.majorrank != that.majorrank)
        return false;
    }

    boolean this_present_degree = true;
    boolean that_present_degree = true;
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (this.degree != that.degree)
        return false;
    }

    boolean this_present_gpa = true && this.isSetGpa();
    boolean that_present_gpa = true && that.isSetGpa();
    if (this_present_gpa || that_present_gpa) {
      if (!(this_present_gpa && that_present_gpa))
        return false;
      if (!this.gpa.equals(that.gpa))
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_profile_id = true;
    list.add(present_profile_id);
    if (present_profile_id)
      list.add(profile_id);

    boolean present_graduation = true && (isSetGraduation());
    list.add(present_graduation);
    if (present_graduation)
      list.add(graduation);

    boolean present_majorrank = true;
    list.add(present_majorrank);
    if (present_majorrank)
      list.add(majorrank);

    boolean present_degree = true;
    list.add(present_degree);
    if (present_degree)
      list.add(degree);

    boolean present_gpa = true && (isSetGpa());
    list.add(present_gpa);
    if (present_gpa)
      list.add(gpa);

    boolean present_create_time = true && (isSetCreate_time());
    list.add(present_create_time);
    if (present_create_time)
      list.add(create_time);

    boolean present_update_time = true && (isSetUpdate_time());
    list.add(present_update_time);
    if (present_update_time)
      list.add(update_time);

    return list.hashCode();
  }

  @Override
  public int compareTo(EducationExt other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProfile_id()).compareTo(other.isSetProfile_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfile_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profile_id, other.profile_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGraduation()).compareTo(other.isSetGraduation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGraduation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.graduation, other.graduation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMajorrank()).compareTo(other.isSetMajorrank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMajorrank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.majorrank, other.majorrank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGpa()).compareTo(other.isSetGpa());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGpa()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gpa, other.gpa);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("EducationExt(");
    boolean first = true;

    sb.append("profile_id:");
    sb.append(this.profile_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("graduation:");
    if (this.graduation == null) {
      sb.append("null");
    } else {
      sb.append(this.graduation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("majorrank:");
    sb.append(this.majorrank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    sb.append(this.degree);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gpa:");
    if (this.gpa == null) {
      sb.append("null");
    } else {
      sb.append(this.gpa);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_time:");
    if (this.create_time == null) {
      sb.append("null");
    } else {
      sb.append(this.create_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_time:");
    if (this.update_time == null) {
      sb.append("null");
    } else {
      sb.append(this.update_time);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EducationExtStandardSchemeFactory implements SchemeFactory {
    public EducationExtStandardScheme getScheme() {
      return new EducationExtStandardScheme();
    }
  }

  private static class EducationExtStandardScheme extends StandardScheme<EducationExt> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EducationExt struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROFILE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profile_id = iprot.readI32();
              struct.setProfile_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // GRADUATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.graduation = iprot.readString();
              struct.setGraduationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MAJORRANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.majorrank = iprot.readI16();
              struct.setMajorrankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.degree = iprot.readI16();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // GPA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.gpa = iprot.readString();
              struct.setGpaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EducationExt struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
      oprot.writeI32(struct.profile_id);
      oprot.writeFieldEnd();
      if (struct.graduation != null) {
        oprot.writeFieldBegin(GRADUATION_FIELD_DESC);
        oprot.writeString(struct.graduation);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MAJORRANK_FIELD_DESC);
      oprot.writeI16(struct.majorrank);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DEGREE_FIELD_DESC);
      oprot.writeI16(struct.degree);
      oprot.writeFieldEnd();
      if (struct.gpa != null) {
        oprot.writeFieldBegin(GPA_FIELD_DESC);
        oprot.writeString(struct.gpa);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.create_time);
        oprot.writeFieldEnd();
      }
      if (struct.update_time != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.update_time);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EducationExtTupleSchemeFactory implements SchemeFactory {
    public EducationExtTupleScheme getScheme() {
      return new EducationExtTupleScheme();
    }
  }

  private static class EducationExtTupleScheme extends TupleScheme<EducationExt> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EducationExt struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProfile_id()) {
        optionals.set(0);
      }
      if (struct.isSetGraduation()) {
        optionals.set(1);
      }
      if (struct.isSetMajorrank()) {
        optionals.set(2);
      }
      if (struct.isSetDegree()) {
        optionals.set(3);
      }
      if (struct.isSetGpa()) {
        optionals.set(4);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(5);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetProfile_id()) {
        oprot.writeI32(struct.profile_id);
      }
      if (struct.isSetGraduation()) {
        oprot.writeString(struct.graduation);
      }
      if (struct.isSetMajorrank()) {
        oprot.writeI16(struct.majorrank);
      }
      if (struct.isSetDegree()) {
        oprot.writeI16(struct.degree);
      }
      if (struct.isSetGpa()) {
        oprot.writeString(struct.gpa);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EducationExt struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.profile_id = iprot.readI32();
        struct.setProfile_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.graduation = iprot.readString();
        struct.setGraduationIsSet(true);
      }
      if (incoming.get(2)) {
        struct.majorrank = iprot.readI16();
        struct.setMajorrankIsSet(true);
      }
      if (incoming.get(3)) {
        struct.degree = iprot.readI16();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.gpa = iprot.readString();
        struct.setGpaIsSet(true);
      }
      if (incoming.get(5)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
    }
  }

}

