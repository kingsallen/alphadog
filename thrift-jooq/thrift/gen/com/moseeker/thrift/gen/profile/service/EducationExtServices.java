/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-5-3")
public class EducationExtServices {

  public interface Iface {

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExts(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.profile.struct.EducationExtPagination getEducationExtPagination(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException;

    public int postEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException;

    public int putEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException;

    public int delEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException;

    public int postEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException;

    public int putEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException;

    public int delEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void getEducationExts(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getEducationExtPagination(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void postEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void putEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void delEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void postEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void putEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void delEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExts(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      send_getEducationExts(query, educationExt);
      return recv_getEducationExts();
    }

    public void send_getEducationExts(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      getEducationExts_args args = new getEducationExts_args();
      args.setQuery(query);
      args.setEducationExt(educationExt);
      sendBase("getEducationExts", args);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> recv_getEducationExts() throws org.apache.thrift.TException
    {
      getEducationExts_result result = new getEducationExts_result();
      receiveBase(result, "getEducationExts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getEducationExts failed: unknown result");
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExtPagination getEducationExtPagination(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      send_getEducationExtPagination(query, educationExt);
      return recv_getEducationExtPagination();
    }

    public void send_getEducationExtPagination(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      getEducationExtPagination_args args = new getEducationExtPagination_args();
      args.setQuery(query);
      args.setEducationExt(educationExt);
      sendBase("getEducationExtPagination", args);
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExtPagination recv_getEducationExtPagination() throws org.apache.thrift.TException
    {
      getEducationExtPagination_result result = new getEducationExtPagination_result();
      receiveBase(result, "getEducationExtPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getEducationExtPagination failed: unknown result");
    }

    public int postEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      send_postEducationExts(educationExts);
      return recv_postEducationExts();
    }

    public void send_postEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      postEducationExts_args args = new postEducationExts_args();
      args.setEducationExts(educationExts);
      sendBase("postEducationExts", args);
    }

    public int recv_postEducationExts() throws org.apache.thrift.TException
    {
      postEducationExts_result result = new postEducationExts_result();
      receiveBase(result, "postEducationExts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "postEducationExts failed: unknown result");
    }

    public int putEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      send_putEducationExts(educationExts);
      return recv_putEducationExts();
    }

    public void send_putEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      putEducationExts_args args = new putEducationExts_args();
      args.setEducationExts(educationExts);
      sendBase("putEducationExts", args);
    }

    public int recv_putEducationExts() throws org.apache.thrift.TException
    {
      putEducationExts_result result = new putEducationExts_result();
      receiveBase(result, "putEducationExts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "putEducationExts failed: unknown result");
    }

    public int delEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      send_delEducationExts(educationExts);
      return recv_delEducationExts();
    }

    public void send_delEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) throws org.apache.thrift.TException
    {
      delEducationExts_args args = new delEducationExts_args();
      args.setEducationExts(educationExts);
      sendBase("delEducationExts", args);
    }

    public int recv_delEducationExts() throws org.apache.thrift.TException
    {
      delEducationExts_result result = new delEducationExts_result();
      receiveBase(result, "delEducationExts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "delEducationExts failed: unknown result");
    }

    public int postEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      send_postEducationExt(educationExt);
      return recv_postEducationExt();
    }

    public void send_postEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      postEducationExt_args args = new postEducationExt_args();
      args.setEducationExt(educationExt);
      sendBase("postEducationExt", args);
    }

    public int recv_postEducationExt() throws org.apache.thrift.TException
    {
      postEducationExt_result result = new postEducationExt_result();
      receiveBase(result, "postEducationExt");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "postEducationExt failed: unknown result");
    }

    public int putEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      send_putEducationExt(educationExt);
      return recv_putEducationExt();
    }

    public void send_putEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      putEducationExt_args args = new putEducationExt_args();
      args.setEducationExt(educationExt);
      sendBase("putEducationExt", args);
    }

    public int recv_putEducationExt() throws org.apache.thrift.TException
    {
      putEducationExt_result result = new putEducationExt_result();
      receiveBase(result, "putEducationExt");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "putEducationExt failed: unknown result");
    }

    public int delEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      send_delEducationExt(educationExt);
      return recv_delEducationExt();
    }

    public void send_delEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) throws org.apache.thrift.TException
    {
      delEducationExt_args args = new delEducationExt_args();
      args.setEducationExt(educationExt);
      sendBase("delEducationExt", args);
    }

    public int recv_delEducationExt() throws org.apache.thrift.TException
    {
      delEducationExt_result result = new delEducationExt_result();
      receiveBase(result, "delEducationExt");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "delEducationExt failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void getEducationExts(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getEducationExts_call method_call = new getEducationExts_call(query, educationExt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getEducationExts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.moseeker.thrift.gen.profile.struct.CommonQuery query;
      private com.moseeker.thrift.gen.profile.struct.EducationExt educationExt;
      public getEducationExts_call(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.query = query;
        this.educationExt = educationExt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getEducationExts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getEducationExts_args args = new getEducationExts_args();
        args.setQuery(query);
        args.setEducationExt(educationExt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getEducationExts();
      }
    }

    public void getEducationExtPagination(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getEducationExtPagination_call method_call = new getEducationExtPagination_call(query, educationExt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getEducationExtPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.moseeker.thrift.gen.profile.struct.CommonQuery query;
      private com.moseeker.thrift.gen.profile.struct.EducationExt educationExt;
      public getEducationExtPagination_call(com.moseeker.thrift.gen.profile.struct.CommonQuery query, com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.query = query;
        this.educationExt = educationExt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getEducationExtPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getEducationExtPagination_args args = new getEducationExtPagination_args();
        args.setQuery(query);
        args.setEducationExt(educationExt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.profile.struct.EducationExtPagination getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getEducationExtPagination();
      }
    }

    public void postEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      postEducationExts_call method_call = new postEducationExts_call(educationExts, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class postEducationExts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts;
      public postEducationExts_call(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExts = educationExts;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("postEducationExts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        postEducationExts_args args = new postEducationExts_args();
        args.setEducationExts(educationExts);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_postEducationExts();
      }
    }

    public void putEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      putEducationExts_call method_call = new putEducationExts_call(educationExts, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class putEducationExts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts;
      public putEducationExts_call(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExts = educationExts;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("putEducationExts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        putEducationExts_args args = new putEducationExts_args();
        args.setEducationExts(educationExts);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_putEducationExts();
      }
    }

    public void delEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      delEducationExts_call method_call = new delEducationExts_call(educationExts, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class delEducationExts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts;
      public delEducationExts_call(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExts = educationExts;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("delEducationExts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        delEducationExts_args args = new delEducationExts_args();
        args.setEducationExts(educationExts);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_delEducationExts();
      }
    }

    public void postEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      postEducationExt_call method_call = new postEducationExt_call(educationExt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class postEducationExt_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.moseeker.thrift.gen.profile.struct.EducationExt educationExt;
      public postEducationExt_call(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExt = educationExt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("postEducationExt", org.apache.thrift.protocol.TMessageType.CALL, 0));
        postEducationExt_args args = new postEducationExt_args();
        args.setEducationExt(educationExt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_postEducationExt();
      }
    }

    public void putEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      putEducationExt_call method_call = new putEducationExt_call(educationExt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class putEducationExt_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.moseeker.thrift.gen.profile.struct.EducationExt educationExt;
      public putEducationExt_call(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExt = educationExt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("putEducationExt", org.apache.thrift.protocol.TMessageType.CALL, 0));
        putEducationExt_args args = new putEducationExt_args();
        args.setEducationExt(educationExt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_putEducationExt();
      }
    }

    public void delEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      delEducationExt_call method_call = new delEducationExt_call(educationExt, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class delEducationExt_call extends org.apache.thrift.async.TAsyncMethodCall {
      private com.moseeker.thrift.gen.profile.struct.EducationExt educationExt;
      public delEducationExt_call(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.educationExt = educationExt;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("delEducationExt", org.apache.thrift.protocol.TMessageType.CALL, 0));
        delEducationExt_args args = new delEducationExt_args();
        args.setEducationExt(educationExt);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public int getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_delEducationExt();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("getEducationExts", new getEducationExts());
      processMap.put("getEducationExtPagination", new getEducationExtPagination());
      processMap.put("postEducationExts", new postEducationExts());
      processMap.put("putEducationExts", new putEducationExts());
      processMap.put("delEducationExts", new delEducationExts());
      processMap.put("postEducationExt", new postEducationExt());
      processMap.put("putEducationExt", new putEducationExt());
      processMap.put("delEducationExt", new delEducationExt());
      return processMap;
    }

    public static class getEducationExts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getEducationExts_args> {
      public getEducationExts() {
        super("getEducationExts");
      }

      public getEducationExts_args getEmptyArgsInstance() {
        return new getEducationExts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getEducationExts_result getResult(I iface, getEducationExts_args args) throws org.apache.thrift.TException {
        getEducationExts_result result = new getEducationExts_result();
        result.success = iface.getEducationExts(args.query, args.educationExt);
        return result;
      }
    }

    public static class getEducationExtPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getEducationExtPagination_args> {
      public getEducationExtPagination() {
        super("getEducationExtPagination");
      }

      public getEducationExtPagination_args getEmptyArgsInstance() {
        return new getEducationExtPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getEducationExtPagination_result getResult(I iface, getEducationExtPagination_args args) throws org.apache.thrift.TException {
        getEducationExtPagination_result result = new getEducationExtPagination_result();
        result.success = iface.getEducationExtPagination(args.query, args.educationExt);
        return result;
      }
    }

    public static class postEducationExts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, postEducationExts_args> {
      public postEducationExts() {
        super("postEducationExts");
      }

      public postEducationExts_args getEmptyArgsInstance() {
        return new postEducationExts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public postEducationExts_result getResult(I iface, postEducationExts_args args) throws org.apache.thrift.TException {
        postEducationExts_result result = new postEducationExts_result();
        result.success = iface.postEducationExts(args.educationExts);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class putEducationExts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, putEducationExts_args> {
      public putEducationExts() {
        super("putEducationExts");
      }

      public putEducationExts_args getEmptyArgsInstance() {
        return new putEducationExts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public putEducationExts_result getResult(I iface, putEducationExts_args args) throws org.apache.thrift.TException {
        putEducationExts_result result = new putEducationExts_result();
        result.success = iface.putEducationExts(args.educationExts);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class delEducationExts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, delEducationExts_args> {
      public delEducationExts() {
        super("delEducationExts");
      }

      public delEducationExts_args getEmptyArgsInstance() {
        return new delEducationExts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public delEducationExts_result getResult(I iface, delEducationExts_args args) throws org.apache.thrift.TException {
        delEducationExts_result result = new delEducationExts_result();
        result.success = iface.delEducationExts(args.educationExts);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class postEducationExt<I extends Iface> extends org.apache.thrift.ProcessFunction<I, postEducationExt_args> {
      public postEducationExt() {
        super("postEducationExt");
      }

      public postEducationExt_args getEmptyArgsInstance() {
        return new postEducationExt_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public postEducationExt_result getResult(I iface, postEducationExt_args args) throws org.apache.thrift.TException {
        postEducationExt_result result = new postEducationExt_result();
        result.success = iface.postEducationExt(args.educationExt);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class putEducationExt<I extends Iface> extends org.apache.thrift.ProcessFunction<I, putEducationExt_args> {
      public putEducationExt() {
        super("putEducationExt");
      }

      public putEducationExt_args getEmptyArgsInstance() {
        return new putEducationExt_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public putEducationExt_result getResult(I iface, putEducationExt_args args) throws org.apache.thrift.TException {
        putEducationExt_result result = new putEducationExt_result();
        result.success = iface.putEducationExt(args.educationExt);
        result.setSuccessIsSet(true);
        return result;
      }
    }

    public static class delEducationExt<I extends Iface> extends org.apache.thrift.ProcessFunction<I, delEducationExt_args> {
      public delEducationExt() {
        super("delEducationExt");
      }

      public delEducationExt_args getEmptyArgsInstance() {
        return new delEducationExt_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public delEducationExt_result getResult(I iface, delEducationExt_args args) throws org.apache.thrift.TException {
        delEducationExt_result result = new delEducationExt_result();
        result.success = iface.delEducationExt(args.educationExt);
        result.setSuccessIsSet(true);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("getEducationExts", new getEducationExts());
      processMap.put("getEducationExtPagination", new getEducationExtPagination());
      processMap.put("postEducationExts", new postEducationExts());
      processMap.put("putEducationExts", new putEducationExts());
      processMap.put("delEducationExts", new delEducationExts());
      processMap.put("postEducationExt", new postEducationExt());
      processMap.put("putEducationExt", new putEducationExt());
      processMap.put("delEducationExt", new delEducationExt());
      return processMap;
    }

    public static class getEducationExts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getEducationExts_args, List<com.moseeker.thrift.gen.profile.struct.EducationExt>> {
      public getEducationExts() {
        super("getEducationExts");
      }

      public getEducationExts_args getEmptyArgsInstance() {
        return new getEducationExts_args();
      }

      public AsyncMethodCallback<List<com.moseeker.thrift.gen.profile.struct.EducationExt>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<com.moseeker.thrift.gen.profile.struct.EducationExt>>() { 
          public void onComplete(List<com.moseeker.thrift.gen.profile.struct.EducationExt> o) {
            getEducationExts_result result = new getEducationExts_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getEducationExts_result result = new getEducationExts_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getEducationExts_args args, org.apache.thrift.async.AsyncMethodCallback<List<com.moseeker.thrift.gen.profile.struct.EducationExt>> resultHandler) throws TException {
        iface.getEducationExts(args.query, args.educationExt,resultHandler);
      }
    }

    public static class getEducationExtPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getEducationExtPagination_args, com.moseeker.thrift.gen.profile.struct.EducationExtPagination> {
      public getEducationExtPagination() {
        super("getEducationExtPagination");
      }

      public getEducationExtPagination_args getEmptyArgsInstance() {
        return new getEducationExtPagination_args();
      }

      public AsyncMethodCallback<com.moseeker.thrift.gen.profile.struct.EducationExtPagination> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<com.moseeker.thrift.gen.profile.struct.EducationExtPagination>() { 
          public void onComplete(com.moseeker.thrift.gen.profile.struct.EducationExtPagination o) {
            getEducationExtPagination_result result = new getEducationExtPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getEducationExtPagination_result result = new getEducationExtPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getEducationExtPagination_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.profile.struct.EducationExtPagination> resultHandler) throws TException {
        iface.getEducationExtPagination(args.query, args.educationExt,resultHandler);
      }
    }

    public static class postEducationExts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, postEducationExts_args, Integer> {
      public postEducationExts() {
        super("postEducationExts");
      }

      public postEducationExts_args getEmptyArgsInstance() {
        return new postEducationExts_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            postEducationExts_result result = new postEducationExts_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            postEducationExts_result result = new postEducationExts_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, postEducationExts_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.postEducationExts(args.educationExts,resultHandler);
      }
    }

    public static class putEducationExts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, putEducationExts_args, Integer> {
      public putEducationExts() {
        super("putEducationExts");
      }

      public putEducationExts_args getEmptyArgsInstance() {
        return new putEducationExts_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            putEducationExts_result result = new putEducationExts_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            putEducationExts_result result = new putEducationExts_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, putEducationExts_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.putEducationExts(args.educationExts,resultHandler);
      }
    }

    public static class delEducationExts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, delEducationExts_args, Integer> {
      public delEducationExts() {
        super("delEducationExts");
      }

      public delEducationExts_args getEmptyArgsInstance() {
        return new delEducationExts_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            delEducationExts_result result = new delEducationExts_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            delEducationExts_result result = new delEducationExts_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, delEducationExts_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.delEducationExts(args.educationExts,resultHandler);
      }
    }

    public static class postEducationExt<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, postEducationExt_args, Integer> {
      public postEducationExt() {
        super("postEducationExt");
      }

      public postEducationExt_args getEmptyArgsInstance() {
        return new postEducationExt_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            postEducationExt_result result = new postEducationExt_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            postEducationExt_result result = new postEducationExt_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, postEducationExt_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.postEducationExt(args.educationExt,resultHandler);
      }
    }

    public static class putEducationExt<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, putEducationExt_args, Integer> {
      public putEducationExt() {
        super("putEducationExt");
      }

      public putEducationExt_args getEmptyArgsInstance() {
        return new putEducationExt_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            putEducationExt_result result = new putEducationExt_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            putEducationExt_result result = new putEducationExt_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, putEducationExt_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.putEducationExt(args.educationExt,resultHandler);
      }
    }

    public static class delEducationExt<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, delEducationExt_args, Integer> {
      public delEducationExt() {
        super("delEducationExt");
      }

      public delEducationExt_args getEmptyArgsInstance() {
        return new delEducationExt_args();
      }

      public AsyncMethodCallback<Integer> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Integer>() { 
          public void onComplete(Integer o) {
            delEducationExt_result result = new delEducationExt_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            delEducationExt_result result = new delEducationExt_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, delEducationExt_args args, org.apache.thrift.async.AsyncMethodCallback<Integer> resultHandler) throws TException {
        iface.delEducationExt(args.educationExt,resultHandler);
      }
    }

  }

  public static class getEducationExts_args implements org.apache.thrift.TBase<getEducationExts_args, getEducationExts_args._Fields>, java.io.Serializable, Cloneable, Comparable<getEducationExts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getEducationExts_args");

    private static final org.apache.thrift.protocol.TField QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("query", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField EDUCATION_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExt", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getEducationExts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getEducationExts_argsTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.CommonQuery query; // required
    public com.moseeker.thrift.gen.profile.struct.EducationExt educationExt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      QUERY((short)1, "query"),
      EDUCATION_EXT((short)2, "educationExt");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // QUERY
            return QUERY;
          case 2: // EDUCATION_EXT
            return EDUCATION_EXT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.QUERY, new org.apache.thrift.meta_data.FieldMetaData("query", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.CommonQuery.class)));
      tmpMap.put(_Fields.EDUCATION_EXT, new org.apache.thrift.meta_data.FieldMetaData("educationExt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getEducationExts_args.class, metaDataMap);
    }

    public getEducationExts_args() {
    }

    public getEducationExts_args(
      com.moseeker.thrift.gen.profile.struct.CommonQuery query,
      com.moseeker.thrift.gen.profile.struct.EducationExt educationExt)
    {
      this();
      this.query = query;
      this.educationExt = educationExt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getEducationExts_args(getEducationExts_args other) {
      if (other.isSetQuery()) {
        this.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery(other.query);
      }
      if (other.isSetEducationExt()) {
        this.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt(other.educationExt);
      }
    }

    public getEducationExts_args deepCopy() {
      return new getEducationExts_args(this);
    }

    @Override
    public void clear() {
      this.query = null;
      this.educationExt = null;
    }

    public com.moseeker.thrift.gen.profile.struct.CommonQuery getQuery() {
      return this.query;
    }

    public getEducationExts_args setQuery(com.moseeker.thrift.gen.profile.struct.CommonQuery query) {
      this.query = query;
      return this;
    }

    public void unsetQuery() {
      this.query = null;
    }

    /** Returns true if field query is set (has been assigned a value) and false otherwise */
    public boolean isSetQuery() {
      return this.query != null;
    }

    public void setQueryIsSet(boolean value) {
      if (!value) {
        this.query = null;
      }
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt getEducationExt() {
      return this.educationExt;
    }

    public getEducationExts_args setEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) {
      this.educationExt = educationExt;
      return this;
    }

    public void unsetEducationExt() {
      this.educationExt = null;
    }

    /** Returns true if field educationExt is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExt() {
      return this.educationExt != null;
    }

    public void setEducationExtIsSet(boolean value) {
      if (!value) {
        this.educationExt = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case QUERY:
        if (value == null) {
          unsetQuery();
        } else {
          setQuery((com.moseeker.thrift.gen.profile.struct.CommonQuery)value);
        }
        break;

      case EDUCATION_EXT:
        if (value == null) {
          unsetEducationExt();
        } else {
          setEducationExt((com.moseeker.thrift.gen.profile.struct.EducationExt)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case QUERY:
        return getQuery();

      case EDUCATION_EXT:
        return getEducationExt();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case QUERY:
        return isSetQuery();
      case EDUCATION_EXT:
        return isSetEducationExt();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getEducationExts_args)
        return this.equals((getEducationExts_args)that);
      return false;
    }

    public boolean equals(getEducationExts_args that) {
      if (that == null)
        return false;

      boolean this_present_query = true && this.isSetQuery();
      boolean that_present_query = true && that.isSetQuery();
      if (this_present_query || that_present_query) {
        if (!(this_present_query && that_present_query))
          return false;
        if (!this.query.equals(that.query))
          return false;
      }

      boolean this_present_educationExt = true && this.isSetEducationExt();
      boolean that_present_educationExt = true && that.isSetEducationExt();
      if (this_present_educationExt || that_present_educationExt) {
        if (!(this_present_educationExt && that_present_educationExt))
          return false;
        if (!this.educationExt.equals(that.educationExt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_query = true && (isSetQuery());
      list.add(present_query);
      if (present_query)
        list.add(query);

      boolean present_educationExt = true && (isSetEducationExt());
      list.add(present_educationExt);
      if (present_educationExt)
        list.add(educationExt);

      return list.hashCode();
    }

    @Override
    public int compareTo(getEducationExts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetQuery()).compareTo(other.isSetQuery());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQuery()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query, other.query);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetEducationExt()).compareTo(other.isSetEducationExt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExt, other.educationExt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getEducationExts_args(");
      boolean first = true;

      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("educationExt:");
      if (this.educationExt == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (query != null) {
        query.validate();
      }
      if (educationExt != null) {
        educationExt.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getEducationExts_argsStandardSchemeFactory implements SchemeFactory {
      public getEducationExts_argsStandardScheme getScheme() {
        return new getEducationExts_argsStandardScheme();
      }
    }

    private static class getEducationExts_argsStandardScheme extends StandardScheme<getEducationExts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getEducationExts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // QUERY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery();
                struct.query.read(iprot);
                struct.setQueryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // EDUCATION_EXT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                struct.educationExt.read(iprot);
                struct.setEducationExtIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getEducationExts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.query != null) {
          oprot.writeFieldBegin(QUERY_FIELD_DESC);
          struct.query.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.educationExt != null) {
          oprot.writeFieldBegin(EDUCATION_EXT_FIELD_DESC);
          struct.educationExt.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getEducationExts_argsTupleSchemeFactory implements SchemeFactory {
      public getEducationExts_argsTupleScheme getScheme() {
        return new getEducationExts_argsTupleScheme();
      }
    }

    private static class getEducationExts_argsTupleScheme extends TupleScheme<getEducationExts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQuery()) {
          optionals.set(0);
        }
        if (struct.isSetEducationExt()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQuery()) {
          struct.query.write(oprot);
        }
        if (struct.isSetEducationExt()) {
          struct.educationExt.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery();
          struct.query.read(iprot);
          struct.setQueryIsSet(true);
        }
        if (incoming.get(1)) {
          struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
          struct.educationExt.read(iprot);
          struct.setEducationExtIsSet(true);
        }
      }
    }

  }

  public static class getEducationExts_result implements org.apache.thrift.TBase<getEducationExts_result, getEducationExts_result._Fields>, java.io.Serializable, Cloneable, Comparable<getEducationExts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getEducationExts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getEducationExts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getEducationExts_resultTupleSchemeFactory());
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getEducationExts_result.class, metaDataMap);
    }

    public getEducationExts_result() {
    }

    public getEducationExts_result(
      List<com.moseeker.thrift.gen.profile.struct.EducationExt> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getEducationExts_result(getEducationExts_result other) {
      if (other.isSetSuccess()) {
        List<com.moseeker.thrift.gen.profile.struct.EducationExt> __this__success = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(other.success.size());
        for (com.moseeker.thrift.gen.profile.struct.EducationExt other_element : other.success) {
          __this__success.add(new com.moseeker.thrift.gen.profile.struct.EducationExt(other_element));
        }
        this.success = __this__success;
      }
    }

    public getEducationExts_result deepCopy() {
      return new getEducationExts_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.moseeker.thrift.gen.profile.struct.EducationExt> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.moseeker.thrift.gen.profile.struct.EducationExt elem) {
      if (this.success == null) {
        this.success = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>();
      }
      this.success.add(elem);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getSuccess() {
      return this.success;
    }

    public getEducationExts_result setSuccess(List<com.moseeker.thrift.gen.profile.struct.EducationExt> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<com.moseeker.thrift.gen.profile.struct.EducationExt>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getEducationExts_result)
        return this.equals((getEducationExts_result)that);
      return false;
    }

    public boolean equals(getEducationExts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getEducationExts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getEducationExts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getEducationExts_resultStandardSchemeFactory implements SchemeFactory {
      public getEducationExts_resultStandardScheme getScheme() {
        return new getEducationExts_resultStandardScheme();
      }
    }

    private static class getEducationExts_resultStandardScheme extends StandardScheme<getEducationExts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getEducationExts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list128 = iprot.readListBegin();
                  struct.success = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list128.size);
                  com.moseeker.thrift.gen.profile.struct.EducationExt _elem129;
                  for (int _i130 = 0; _i130 < _list128.size; ++_i130)
                  {
                    _elem129 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                    _elem129.read(iprot);
                    struct.success.add(_elem129);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getEducationExts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter131 : struct.success)
            {
              _iter131.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getEducationExts_resultTupleSchemeFactory implements SchemeFactory {
      public getEducationExts_resultTupleScheme getScheme() {
        return new getEducationExts_resultTupleScheme();
      }
    }

    private static class getEducationExts_resultTupleScheme extends TupleScheme<getEducationExts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter132 : struct.success)
            {
              _iter132.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list133 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list133.size);
            com.moseeker.thrift.gen.profile.struct.EducationExt _elem134;
            for (int _i135 = 0; _i135 < _list133.size; ++_i135)
            {
              _elem134 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
              _elem134.read(iprot);
              struct.success.add(_elem134);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class getEducationExtPagination_args implements org.apache.thrift.TBase<getEducationExtPagination_args, getEducationExtPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<getEducationExtPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getEducationExtPagination_args");

    private static final org.apache.thrift.protocol.TField QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("query", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField EDUCATION_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExt", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getEducationExtPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getEducationExtPagination_argsTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.CommonQuery query; // required
    public com.moseeker.thrift.gen.profile.struct.EducationExt educationExt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      QUERY((short)1, "query"),
      EDUCATION_EXT((short)2, "educationExt");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // QUERY
            return QUERY;
          case 2: // EDUCATION_EXT
            return EDUCATION_EXT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.QUERY, new org.apache.thrift.meta_data.FieldMetaData("query", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.CommonQuery.class)));
      tmpMap.put(_Fields.EDUCATION_EXT, new org.apache.thrift.meta_data.FieldMetaData("educationExt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getEducationExtPagination_args.class, metaDataMap);
    }

    public getEducationExtPagination_args() {
    }

    public getEducationExtPagination_args(
      com.moseeker.thrift.gen.profile.struct.CommonQuery query,
      com.moseeker.thrift.gen.profile.struct.EducationExt educationExt)
    {
      this();
      this.query = query;
      this.educationExt = educationExt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getEducationExtPagination_args(getEducationExtPagination_args other) {
      if (other.isSetQuery()) {
        this.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery(other.query);
      }
      if (other.isSetEducationExt()) {
        this.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt(other.educationExt);
      }
    }

    public getEducationExtPagination_args deepCopy() {
      return new getEducationExtPagination_args(this);
    }

    @Override
    public void clear() {
      this.query = null;
      this.educationExt = null;
    }

    public com.moseeker.thrift.gen.profile.struct.CommonQuery getQuery() {
      return this.query;
    }

    public getEducationExtPagination_args setQuery(com.moseeker.thrift.gen.profile.struct.CommonQuery query) {
      this.query = query;
      return this;
    }

    public void unsetQuery() {
      this.query = null;
    }

    /** Returns true if field query is set (has been assigned a value) and false otherwise */
    public boolean isSetQuery() {
      return this.query != null;
    }

    public void setQueryIsSet(boolean value) {
      if (!value) {
        this.query = null;
      }
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt getEducationExt() {
      return this.educationExt;
    }

    public getEducationExtPagination_args setEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) {
      this.educationExt = educationExt;
      return this;
    }

    public void unsetEducationExt() {
      this.educationExt = null;
    }

    /** Returns true if field educationExt is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExt() {
      return this.educationExt != null;
    }

    public void setEducationExtIsSet(boolean value) {
      if (!value) {
        this.educationExt = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case QUERY:
        if (value == null) {
          unsetQuery();
        } else {
          setQuery((com.moseeker.thrift.gen.profile.struct.CommonQuery)value);
        }
        break;

      case EDUCATION_EXT:
        if (value == null) {
          unsetEducationExt();
        } else {
          setEducationExt((com.moseeker.thrift.gen.profile.struct.EducationExt)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case QUERY:
        return getQuery();

      case EDUCATION_EXT:
        return getEducationExt();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case QUERY:
        return isSetQuery();
      case EDUCATION_EXT:
        return isSetEducationExt();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getEducationExtPagination_args)
        return this.equals((getEducationExtPagination_args)that);
      return false;
    }

    public boolean equals(getEducationExtPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_query = true && this.isSetQuery();
      boolean that_present_query = true && that.isSetQuery();
      if (this_present_query || that_present_query) {
        if (!(this_present_query && that_present_query))
          return false;
        if (!this.query.equals(that.query))
          return false;
      }

      boolean this_present_educationExt = true && this.isSetEducationExt();
      boolean that_present_educationExt = true && that.isSetEducationExt();
      if (this_present_educationExt || that_present_educationExt) {
        if (!(this_present_educationExt && that_present_educationExt))
          return false;
        if (!this.educationExt.equals(that.educationExt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_query = true && (isSetQuery());
      list.add(present_query);
      if (present_query)
        list.add(query);

      boolean present_educationExt = true && (isSetEducationExt());
      list.add(present_educationExt);
      if (present_educationExt)
        list.add(educationExt);

      return list.hashCode();
    }

    @Override
    public int compareTo(getEducationExtPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetQuery()).compareTo(other.isSetQuery());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQuery()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query, other.query);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetEducationExt()).compareTo(other.isSetEducationExt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExt, other.educationExt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getEducationExtPagination_args(");
      boolean first = true;

      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("educationExt:");
      if (this.educationExt == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (query != null) {
        query.validate();
      }
      if (educationExt != null) {
        educationExt.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getEducationExtPagination_argsStandardSchemeFactory implements SchemeFactory {
      public getEducationExtPagination_argsStandardScheme getScheme() {
        return new getEducationExtPagination_argsStandardScheme();
      }
    }

    private static class getEducationExtPagination_argsStandardScheme extends StandardScheme<getEducationExtPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getEducationExtPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // QUERY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery();
                struct.query.read(iprot);
                struct.setQueryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // EDUCATION_EXT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                struct.educationExt.read(iprot);
                struct.setEducationExtIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getEducationExtPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.query != null) {
          oprot.writeFieldBegin(QUERY_FIELD_DESC);
          struct.query.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.educationExt != null) {
          oprot.writeFieldBegin(EDUCATION_EXT_FIELD_DESC);
          struct.educationExt.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getEducationExtPagination_argsTupleSchemeFactory implements SchemeFactory {
      public getEducationExtPagination_argsTupleScheme getScheme() {
        return new getEducationExtPagination_argsTupleScheme();
      }
    }

    private static class getEducationExtPagination_argsTupleScheme extends TupleScheme<getEducationExtPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getEducationExtPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQuery()) {
          optionals.set(0);
        }
        if (struct.isSetEducationExt()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQuery()) {
          struct.query.write(oprot);
        }
        if (struct.isSetEducationExt()) {
          struct.educationExt.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getEducationExtPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.query = new com.moseeker.thrift.gen.profile.struct.CommonQuery();
          struct.query.read(iprot);
          struct.setQueryIsSet(true);
        }
        if (incoming.get(1)) {
          struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
          struct.educationExt.read(iprot);
          struct.setEducationExtIsSet(true);
        }
      }
    }

  }

  public static class getEducationExtPagination_result implements org.apache.thrift.TBase<getEducationExtPagination_result, getEducationExtPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<getEducationExtPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getEducationExtPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getEducationExtPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getEducationExtPagination_resultTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExtPagination success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExtPagination.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getEducationExtPagination_result.class, metaDataMap);
    }

    public getEducationExtPagination_result() {
    }

    public getEducationExtPagination_result(
      com.moseeker.thrift.gen.profile.struct.EducationExtPagination success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getEducationExtPagination_result(getEducationExtPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.profile.struct.EducationExtPagination(other.success);
      }
    }

    public getEducationExtPagination_result deepCopy() {
      return new getEducationExtPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExtPagination getSuccess() {
      return this.success;
    }

    public getEducationExtPagination_result setSuccess(com.moseeker.thrift.gen.profile.struct.EducationExtPagination success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.profile.struct.EducationExtPagination)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getEducationExtPagination_result)
        return this.equals((getEducationExtPagination_result)that);
      return false;
    }

    public boolean equals(getEducationExtPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(getEducationExtPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getEducationExtPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getEducationExtPagination_resultStandardSchemeFactory implements SchemeFactory {
      public getEducationExtPagination_resultStandardScheme getScheme() {
        return new getEducationExtPagination_resultStandardScheme();
      }
    }

    private static class getEducationExtPagination_resultStandardScheme extends StandardScheme<getEducationExtPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getEducationExtPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.profile.struct.EducationExtPagination();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getEducationExtPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getEducationExtPagination_resultTupleSchemeFactory implements SchemeFactory {
      public getEducationExtPagination_resultTupleScheme getScheme() {
        return new getEducationExtPagination_resultTupleScheme();
      }
    }

    private static class getEducationExtPagination_resultTupleScheme extends TupleScheme<getEducationExtPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getEducationExtPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getEducationExtPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.profile.struct.EducationExtPagination();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class postEducationExts_args implements org.apache.thrift.TBase<postEducationExts_args, postEducationExts_args._Fields>, java.io.Serializable, Cloneable, Comparable<postEducationExts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("postEducationExts_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXTS_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExts", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new postEducationExts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new postEducationExts_argsTupleSchemeFactory());
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXTS((short)1, "educationExts");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXTS
            return EDUCATION_EXTS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXTS, new org.apache.thrift.meta_data.FieldMetaData("educationExts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(postEducationExts_args.class, metaDataMap);
    }

    public postEducationExts_args() {
    }

    public postEducationExts_args(
      List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts)
    {
      this();
      this.educationExts = educationExts;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public postEducationExts_args(postEducationExts_args other) {
      if (other.isSetEducationExts()) {
        List<com.moseeker.thrift.gen.profile.struct.EducationExt> __this__educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(other.educationExts.size());
        for (com.moseeker.thrift.gen.profile.struct.EducationExt other_element : other.educationExts) {
          __this__educationExts.add(new com.moseeker.thrift.gen.profile.struct.EducationExt(other_element));
        }
        this.educationExts = __this__educationExts;
      }
    }

    public postEducationExts_args deepCopy() {
      return new postEducationExts_args(this);
    }

    @Override
    public void clear() {
      this.educationExts = null;
    }

    public int getEducationExtsSize() {
      return (this.educationExts == null) ? 0 : this.educationExts.size();
    }

    public java.util.Iterator<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExtsIterator() {
      return (this.educationExts == null) ? null : this.educationExts.iterator();
    }

    public void addToEducationExts(com.moseeker.thrift.gen.profile.struct.EducationExt elem) {
      if (this.educationExts == null) {
        this.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>();
      }
      this.educationExts.add(elem);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExts() {
      return this.educationExts;
    }

    public postEducationExts_args setEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) {
      this.educationExts = educationExts;
      return this;
    }

    public void unsetEducationExts() {
      this.educationExts = null;
    }

    /** Returns true if field educationExts is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExts() {
      return this.educationExts != null;
    }

    public void setEducationExtsIsSet(boolean value) {
      if (!value) {
        this.educationExts = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXTS:
        if (value == null) {
          unsetEducationExts();
        } else {
          setEducationExts((List<com.moseeker.thrift.gen.profile.struct.EducationExt>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXTS:
        return getEducationExts();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXTS:
        return isSetEducationExts();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof postEducationExts_args)
        return this.equals((postEducationExts_args)that);
      return false;
    }

    public boolean equals(postEducationExts_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExts = true && this.isSetEducationExts();
      boolean that_present_educationExts = true && that.isSetEducationExts();
      if (this_present_educationExts || that_present_educationExts) {
        if (!(this_present_educationExts && that_present_educationExts))
          return false;
        if (!this.educationExts.equals(that.educationExts))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExts = true && (isSetEducationExts());
      list.add(present_educationExts);
      if (present_educationExts)
        list.add(educationExts);

      return list.hashCode();
    }

    @Override
    public int compareTo(postEducationExts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExts()).compareTo(other.isSetEducationExts());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExts()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExts, other.educationExts);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("postEducationExts_args(");
      boolean first = true;

      sb.append("educationExts:");
      if (this.educationExts == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExts);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class postEducationExts_argsStandardSchemeFactory implements SchemeFactory {
      public postEducationExts_argsStandardScheme getScheme() {
        return new postEducationExts_argsStandardScheme();
      }
    }

    private static class postEducationExts_argsStandardScheme extends StandardScheme<postEducationExts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, postEducationExts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXTS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list136 = iprot.readListBegin();
                  struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list136.size);
                  com.moseeker.thrift.gen.profile.struct.EducationExt _elem137;
                  for (int _i138 = 0; _i138 < _list136.size; ++_i138)
                  {
                    _elem137 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                    _elem137.read(iprot);
                    struct.educationExts.add(_elem137);
                  }
                  iprot.readListEnd();
                }
                struct.setEducationExtsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, postEducationExts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExts != null) {
          oprot.writeFieldBegin(EDUCATION_EXTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.educationExts.size()));
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter139 : struct.educationExts)
            {
              _iter139.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class postEducationExts_argsTupleSchemeFactory implements SchemeFactory {
      public postEducationExts_argsTupleScheme getScheme() {
        return new postEducationExts_argsTupleScheme();
      }
    }

    private static class postEducationExts_argsTupleScheme extends TupleScheme<postEducationExts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, postEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExts()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExts()) {
          {
            oprot.writeI32(struct.educationExts.size());
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter140 : struct.educationExts)
            {
              _iter140.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, postEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list141 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list141.size);
            com.moseeker.thrift.gen.profile.struct.EducationExt _elem142;
            for (int _i143 = 0; _i143 < _list141.size; ++_i143)
            {
              _elem142 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
              _elem142.read(iprot);
              struct.educationExts.add(_elem142);
            }
          }
          struct.setEducationExtsIsSet(true);
        }
      }
    }

  }

  public static class postEducationExts_result implements org.apache.thrift.TBase<postEducationExts_result, postEducationExts_result._Fields>, java.io.Serializable, Cloneable, Comparable<postEducationExts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("postEducationExts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new postEducationExts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new postEducationExts_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(postEducationExts_result.class, metaDataMap);
    }

    public postEducationExts_result() {
    }

    public postEducationExts_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public postEducationExts_result(postEducationExts_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public postEducationExts_result deepCopy() {
      return new postEducationExts_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public postEducationExts_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof postEducationExts_result)
        return this.equals((postEducationExts_result)that);
      return false;
    }

    public boolean equals(postEducationExts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(postEducationExts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("postEducationExts_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class postEducationExts_resultStandardSchemeFactory implements SchemeFactory {
      public postEducationExts_resultStandardScheme getScheme() {
        return new postEducationExts_resultStandardScheme();
      }
    }

    private static class postEducationExts_resultStandardScheme extends StandardScheme<postEducationExts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, postEducationExts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, postEducationExts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class postEducationExts_resultTupleSchemeFactory implements SchemeFactory {
      public postEducationExts_resultTupleScheme getScheme() {
        return new postEducationExts_resultTupleScheme();
      }
    }

    private static class postEducationExts_resultTupleScheme extends TupleScheme<postEducationExts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, postEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, postEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class putEducationExts_args implements org.apache.thrift.TBase<putEducationExts_args, putEducationExts_args._Fields>, java.io.Serializable, Cloneable, Comparable<putEducationExts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("putEducationExts_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXTS_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExts", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new putEducationExts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new putEducationExts_argsTupleSchemeFactory());
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXTS((short)1, "educationExts");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXTS
            return EDUCATION_EXTS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXTS, new org.apache.thrift.meta_data.FieldMetaData("educationExts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(putEducationExts_args.class, metaDataMap);
    }

    public putEducationExts_args() {
    }

    public putEducationExts_args(
      List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts)
    {
      this();
      this.educationExts = educationExts;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public putEducationExts_args(putEducationExts_args other) {
      if (other.isSetEducationExts()) {
        List<com.moseeker.thrift.gen.profile.struct.EducationExt> __this__educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(other.educationExts.size());
        for (com.moseeker.thrift.gen.profile.struct.EducationExt other_element : other.educationExts) {
          __this__educationExts.add(new com.moseeker.thrift.gen.profile.struct.EducationExt(other_element));
        }
        this.educationExts = __this__educationExts;
      }
    }

    public putEducationExts_args deepCopy() {
      return new putEducationExts_args(this);
    }

    @Override
    public void clear() {
      this.educationExts = null;
    }

    public int getEducationExtsSize() {
      return (this.educationExts == null) ? 0 : this.educationExts.size();
    }

    public java.util.Iterator<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExtsIterator() {
      return (this.educationExts == null) ? null : this.educationExts.iterator();
    }

    public void addToEducationExts(com.moseeker.thrift.gen.profile.struct.EducationExt elem) {
      if (this.educationExts == null) {
        this.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>();
      }
      this.educationExts.add(elem);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExts() {
      return this.educationExts;
    }

    public putEducationExts_args setEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) {
      this.educationExts = educationExts;
      return this;
    }

    public void unsetEducationExts() {
      this.educationExts = null;
    }

    /** Returns true if field educationExts is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExts() {
      return this.educationExts != null;
    }

    public void setEducationExtsIsSet(boolean value) {
      if (!value) {
        this.educationExts = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXTS:
        if (value == null) {
          unsetEducationExts();
        } else {
          setEducationExts((List<com.moseeker.thrift.gen.profile.struct.EducationExt>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXTS:
        return getEducationExts();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXTS:
        return isSetEducationExts();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof putEducationExts_args)
        return this.equals((putEducationExts_args)that);
      return false;
    }

    public boolean equals(putEducationExts_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExts = true && this.isSetEducationExts();
      boolean that_present_educationExts = true && that.isSetEducationExts();
      if (this_present_educationExts || that_present_educationExts) {
        if (!(this_present_educationExts && that_present_educationExts))
          return false;
        if (!this.educationExts.equals(that.educationExts))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExts = true && (isSetEducationExts());
      list.add(present_educationExts);
      if (present_educationExts)
        list.add(educationExts);

      return list.hashCode();
    }

    @Override
    public int compareTo(putEducationExts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExts()).compareTo(other.isSetEducationExts());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExts()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExts, other.educationExts);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("putEducationExts_args(");
      boolean first = true;

      sb.append("educationExts:");
      if (this.educationExts == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExts);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class putEducationExts_argsStandardSchemeFactory implements SchemeFactory {
      public putEducationExts_argsStandardScheme getScheme() {
        return new putEducationExts_argsStandardScheme();
      }
    }

    private static class putEducationExts_argsStandardScheme extends StandardScheme<putEducationExts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, putEducationExts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXTS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list144 = iprot.readListBegin();
                  struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list144.size);
                  com.moseeker.thrift.gen.profile.struct.EducationExt _elem145;
                  for (int _i146 = 0; _i146 < _list144.size; ++_i146)
                  {
                    _elem145 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                    _elem145.read(iprot);
                    struct.educationExts.add(_elem145);
                  }
                  iprot.readListEnd();
                }
                struct.setEducationExtsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, putEducationExts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExts != null) {
          oprot.writeFieldBegin(EDUCATION_EXTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.educationExts.size()));
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter147 : struct.educationExts)
            {
              _iter147.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class putEducationExts_argsTupleSchemeFactory implements SchemeFactory {
      public putEducationExts_argsTupleScheme getScheme() {
        return new putEducationExts_argsTupleScheme();
      }
    }

    private static class putEducationExts_argsTupleScheme extends TupleScheme<putEducationExts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, putEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExts()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExts()) {
          {
            oprot.writeI32(struct.educationExts.size());
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter148 : struct.educationExts)
            {
              _iter148.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, putEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list149 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list149.size);
            com.moseeker.thrift.gen.profile.struct.EducationExt _elem150;
            for (int _i151 = 0; _i151 < _list149.size; ++_i151)
            {
              _elem150 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
              _elem150.read(iprot);
              struct.educationExts.add(_elem150);
            }
          }
          struct.setEducationExtsIsSet(true);
        }
      }
    }

  }

  public static class putEducationExts_result implements org.apache.thrift.TBase<putEducationExts_result, putEducationExts_result._Fields>, java.io.Serializable, Cloneable, Comparable<putEducationExts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("putEducationExts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new putEducationExts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new putEducationExts_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(putEducationExts_result.class, metaDataMap);
    }

    public putEducationExts_result() {
    }

    public putEducationExts_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public putEducationExts_result(putEducationExts_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public putEducationExts_result deepCopy() {
      return new putEducationExts_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public putEducationExts_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof putEducationExts_result)
        return this.equals((putEducationExts_result)that);
      return false;
    }

    public boolean equals(putEducationExts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(putEducationExts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("putEducationExts_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class putEducationExts_resultStandardSchemeFactory implements SchemeFactory {
      public putEducationExts_resultStandardScheme getScheme() {
        return new putEducationExts_resultStandardScheme();
      }
    }

    private static class putEducationExts_resultStandardScheme extends StandardScheme<putEducationExts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, putEducationExts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, putEducationExts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class putEducationExts_resultTupleSchemeFactory implements SchemeFactory {
      public putEducationExts_resultTupleScheme getScheme() {
        return new putEducationExts_resultTupleScheme();
      }
    }

    private static class putEducationExts_resultTupleScheme extends TupleScheme<putEducationExts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, putEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, putEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class delEducationExts_args implements org.apache.thrift.TBase<delEducationExts_args, delEducationExts_args._Fields>, java.io.Serializable, Cloneable, Comparable<delEducationExts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("delEducationExts_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXTS_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExts", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new delEducationExts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new delEducationExts_argsTupleSchemeFactory());
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXTS((short)1, "educationExts");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXTS
            return EDUCATION_EXTS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXTS, new org.apache.thrift.meta_data.FieldMetaData("educationExts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class))));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(delEducationExts_args.class, metaDataMap);
    }

    public delEducationExts_args() {
    }

    public delEducationExts_args(
      List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts)
    {
      this();
      this.educationExts = educationExts;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public delEducationExts_args(delEducationExts_args other) {
      if (other.isSetEducationExts()) {
        List<com.moseeker.thrift.gen.profile.struct.EducationExt> __this__educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(other.educationExts.size());
        for (com.moseeker.thrift.gen.profile.struct.EducationExt other_element : other.educationExts) {
          __this__educationExts.add(new com.moseeker.thrift.gen.profile.struct.EducationExt(other_element));
        }
        this.educationExts = __this__educationExts;
      }
    }

    public delEducationExts_args deepCopy() {
      return new delEducationExts_args(this);
    }

    @Override
    public void clear() {
      this.educationExts = null;
    }

    public int getEducationExtsSize() {
      return (this.educationExts == null) ? 0 : this.educationExts.size();
    }

    public java.util.Iterator<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExtsIterator() {
      return (this.educationExts == null) ? null : this.educationExts.iterator();
    }

    public void addToEducationExts(com.moseeker.thrift.gen.profile.struct.EducationExt elem) {
      if (this.educationExts == null) {
        this.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>();
      }
      this.educationExts.add(elem);
    }

    public List<com.moseeker.thrift.gen.profile.struct.EducationExt> getEducationExts() {
      return this.educationExts;
    }

    public delEducationExts_args setEducationExts(List<com.moseeker.thrift.gen.profile.struct.EducationExt> educationExts) {
      this.educationExts = educationExts;
      return this;
    }

    public void unsetEducationExts() {
      this.educationExts = null;
    }

    /** Returns true if field educationExts is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExts() {
      return this.educationExts != null;
    }

    public void setEducationExtsIsSet(boolean value) {
      if (!value) {
        this.educationExts = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXTS:
        if (value == null) {
          unsetEducationExts();
        } else {
          setEducationExts((List<com.moseeker.thrift.gen.profile.struct.EducationExt>)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXTS:
        return getEducationExts();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXTS:
        return isSetEducationExts();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof delEducationExts_args)
        return this.equals((delEducationExts_args)that);
      return false;
    }

    public boolean equals(delEducationExts_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExts = true && this.isSetEducationExts();
      boolean that_present_educationExts = true && that.isSetEducationExts();
      if (this_present_educationExts || that_present_educationExts) {
        if (!(this_present_educationExts && that_present_educationExts))
          return false;
        if (!this.educationExts.equals(that.educationExts))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExts = true && (isSetEducationExts());
      list.add(present_educationExts);
      if (present_educationExts)
        list.add(educationExts);

      return list.hashCode();
    }

    @Override
    public int compareTo(delEducationExts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExts()).compareTo(other.isSetEducationExts());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExts()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExts, other.educationExts);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("delEducationExts_args(");
      boolean first = true;

      sb.append("educationExts:");
      if (this.educationExts == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExts);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class delEducationExts_argsStandardSchemeFactory implements SchemeFactory {
      public delEducationExts_argsStandardScheme getScheme() {
        return new delEducationExts_argsStandardScheme();
      }
    }

    private static class delEducationExts_argsStandardScheme extends StandardScheme<delEducationExts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, delEducationExts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXTS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list152 = iprot.readListBegin();
                  struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list152.size);
                  com.moseeker.thrift.gen.profile.struct.EducationExt _elem153;
                  for (int _i154 = 0; _i154 < _list152.size; ++_i154)
                  {
                    _elem153 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                    _elem153.read(iprot);
                    struct.educationExts.add(_elem153);
                  }
                  iprot.readListEnd();
                }
                struct.setEducationExtsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, delEducationExts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExts != null) {
          oprot.writeFieldBegin(EDUCATION_EXTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.educationExts.size()));
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter155 : struct.educationExts)
            {
              _iter155.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class delEducationExts_argsTupleSchemeFactory implements SchemeFactory {
      public delEducationExts_argsTupleScheme getScheme() {
        return new delEducationExts_argsTupleScheme();
      }
    }

    private static class delEducationExts_argsTupleScheme extends TupleScheme<delEducationExts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, delEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExts()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExts()) {
          {
            oprot.writeI32(struct.educationExts.size());
            for (com.moseeker.thrift.gen.profile.struct.EducationExt _iter156 : struct.educationExts)
            {
              _iter156.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, delEducationExts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list157 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.educationExts = new ArrayList<com.moseeker.thrift.gen.profile.struct.EducationExt>(_list157.size);
            com.moseeker.thrift.gen.profile.struct.EducationExt _elem158;
            for (int _i159 = 0; _i159 < _list157.size; ++_i159)
            {
              _elem158 = new com.moseeker.thrift.gen.profile.struct.EducationExt();
              _elem158.read(iprot);
              struct.educationExts.add(_elem158);
            }
          }
          struct.setEducationExtsIsSet(true);
        }
      }
    }

  }

  public static class delEducationExts_result implements org.apache.thrift.TBase<delEducationExts_result, delEducationExts_result._Fields>, java.io.Serializable, Cloneable, Comparable<delEducationExts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("delEducationExts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new delEducationExts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new delEducationExts_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(delEducationExts_result.class, metaDataMap);
    }

    public delEducationExts_result() {
    }

    public delEducationExts_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public delEducationExts_result(delEducationExts_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public delEducationExts_result deepCopy() {
      return new delEducationExts_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public delEducationExts_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof delEducationExts_result)
        return this.equals((delEducationExts_result)that);
      return false;
    }

    public boolean equals(delEducationExts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(delEducationExts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("delEducationExts_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class delEducationExts_resultStandardSchemeFactory implements SchemeFactory {
      public delEducationExts_resultStandardScheme getScheme() {
        return new delEducationExts_resultStandardScheme();
      }
    }

    private static class delEducationExts_resultStandardScheme extends StandardScheme<delEducationExts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, delEducationExts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, delEducationExts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class delEducationExts_resultTupleSchemeFactory implements SchemeFactory {
      public delEducationExts_resultTupleScheme getScheme() {
        return new delEducationExts_resultTupleScheme();
      }
    }

    private static class delEducationExts_resultTupleScheme extends TupleScheme<delEducationExts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, delEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, delEducationExts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class postEducationExt_args implements org.apache.thrift.TBase<postEducationExt_args, postEducationExt_args._Fields>, java.io.Serializable, Cloneable, Comparable<postEducationExt_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("postEducationExt_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExt", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new postEducationExt_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new postEducationExt_argsTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt educationExt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXT((short)1, "educationExt");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXT
            return EDUCATION_EXT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXT, new org.apache.thrift.meta_data.FieldMetaData("educationExt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(postEducationExt_args.class, metaDataMap);
    }

    public postEducationExt_args() {
    }

    public postEducationExt_args(
      com.moseeker.thrift.gen.profile.struct.EducationExt educationExt)
    {
      this();
      this.educationExt = educationExt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public postEducationExt_args(postEducationExt_args other) {
      if (other.isSetEducationExt()) {
        this.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt(other.educationExt);
      }
    }

    public postEducationExt_args deepCopy() {
      return new postEducationExt_args(this);
    }

    @Override
    public void clear() {
      this.educationExt = null;
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt getEducationExt() {
      return this.educationExt;
    }

    public postEducationExt_args setEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) {
      this.educationExt = educationExt;
      return this;
    }

    public void unsetEducationExt() {
      this.educationExt = null;
    }

    /** Returns true if field educationExt is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExt() {
      return this.educationExt != null;
    }

    public void setEducationExtIsSet(boolean value) {
      if (!value) {
        this.educationExt = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXT:
        if (value == null) {
          unsetEducationExt();
        } else {
          setEducationExt((com.moseeker.thrift.gen.profile.struct.EducationExt)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXT:
        return getEducationExt();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXT:
        return isSetEducationExt();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof postEducationExt_args)
        return this.equals((postEducationExt_args)that);
      return false;
    }

    public boolean equals(postEducationExt_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExt = true && this.isSetEducationExt();
      boolean that_present_educationExt = true && that.isSetEducationExt();
      if (this_present_educationExt || that_present_educationExt) {
        if (!(this_present_educationExt && that_present_educationExt))
          return false;
        if (!this.educationExt.equals(that.educationExt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExt = true && (isSetEducationExt());
      list.add(present_educationExt);
      if (present_educationExt)
        list.add(educationExt);

      return list.hashCode();
    }

    @Override
    public int compareTo(postEducationExt_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExt()).compareTo(other.isSetEducationExt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExt, other.educationExt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("postEducationExt_args(");
      boolean first = true;

      sb.append("educationExt:");
      if (this.educationExt == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (educationExt != null) {
        educationExt.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class postEducationExt_argsStandardSchemeFactory implements SchemeFactory {
      public postEducationExt_argsStandardScheme getScheme() {
        return new postEducationExt_argsStandardScheme();
      }
    }

    private static class postEducationExt_argsStandardScheme extends StandardScheme<postEducationExt_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, postEducationExt_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                struct.educationExt.read(iprot);
                struct.setEducationExtIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, postEducationExt_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExt != null) {
          oprot.writeFieldBegin(EDUCATION_EXT_FIELD_DESC);
          struct.educationExt.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class postEducationExt_argsTupleSchemeFactory implements SchemeFactory {
      public postEducationExt_argsTupleScheme getScheme() {
        return new postEducationExt_argsTupleScheme();
      }
    }

    private static class postEducationExt_argsTupleScheme extends TupleScheme<postEducationExt_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, postEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExt()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExt()) {
          struct.educationExt.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, postEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
          struct.educationExt.read(iprot);
          struct.setEducationExtIsSet(true);
        }
      }
    }

  }

  public static class postEducationExt_result implements org.apache.thrift.TBase<postEducationExt_result, postEducationExt_result._Fields>, java.io.Serializable, Cloneable, Comparable<postEducationExt_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("postEducationExt_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new postEducationExt_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new postEducationExt_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(postEducationExt_result.class, metaDataMap);
    }

    public postEducationExt_result() {
    }

    public postEducationExt_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public postEducationExt_result(postEducationExt_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public postEducationExt_result deepCopy() {
      return new postEducationExt_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public postEducationExt_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof postEducationExt_result)
        return this.equals((postEducationExt_result)that);
      return false;
    }

    public boolean equals(postEducationExt_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(postEducationExt_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("postEducationExt_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class postEducationExt_resultStandardSchemeFactory implements SchemeFactory {
      public postEducationExt_resultStandardScheme getScheme() {
        return new postEducationExt_resultStandardScheme();
      }
    }

    private static class postEducationExt_resultStandardScheme extends StandardScheme<postEducationExt_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, postEducationExt_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, postEducationExt_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class postEducationExt_resultTupleSchemeFactory implements SchemeFactory {
      public postEducationExt_resultTupleScheme getScheme() {
        return new postEducationExt_resultTupleScheme();
      }
    }

    private static class postEducationExt_resultTupleScheme extends TupleScheme<postEducationExt_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, postEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, postEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class putEducationExt_args implements org.apache.thrift.TBase<putEducationExt_args, putEducationExt_args._Fields>, java.io.Serializable, Cloneable, Comparable<putEducationExt_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("putEducationExt_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExt", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new putEducationExt_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new putEducationExt_argsTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt educationExt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXT((short)1, "educationExt");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXT
            return EDUCATION_EXT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXT, new org.apache.thrift.meta_data.FieldMetaData("educationExt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(putEducationExt_args.class, metaDataMap);
    }

    public putEducationExt_args() {
    }

    public putEducationExt_args(
      com.moseeker.thrift.gen.profile.struct.EducationExt educationExt)
    {
      this();
      this.educationExt = educationExt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public putEducationExt_args(putEducationExt_args other) {
      if (other.isSetEducationExt()) {
        this.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt(other.educationExt);
      }
    }

    public putEducationExt_args deepCopy() {
      return new putEducationExt_args(this);
    }

    @Override
    public void clear() {
      this.educationExt = null;
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt getEducationExt() {
      return this.educationExt;
    }

    public putEducationExt_args setEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) {
      this.educationExt = educationExt;
      return this;
    }

    public void unsetEducationExt() {
      this.educationExt = null;
    }

    /** Returns true if field educationExt is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExt() {
      return this.educationExt != null;
    }

    public void setEducationExtIsSet(boolean value) {
      if (!value) {
        this.educationExt = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXT:
        if (value == null) {
          unsetEducationExt();
        } else {
          setEducationExt((com.moseeker.thrift.gen.profile.struct.EducationExt)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXT:
        return getEducationExt();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXT:
        return isSetEducationExt();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof putEducationExt_args)
        return this.equals((putEducationExt_args)that);
      return false;
    }

    public boolean equals(putEducationExt_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExt = true && this.isSetEducationExt();
      boolean that_present_educationExt = true && that.isSetEducationExt();
      if (this_present_educationExt || that_present_educationExt) {
        if (!(this_present_educationExt && that_present_educationExt))
          return false;
        if (!this.educationExt.equals(that.educationExt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExt = true && (isSetEducationExt());
      list.add(present_educationExt);
      if (present_educationExt)
        list.add(educationExt);

      return list.hashCode();
    }

    @Override
    public int compareTo(putEducationExt_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExt()).compareTo(other.isSetEducationExt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExt, other.educationExt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("putEducationExt_args(");
      boolean first = true;

      sb.append("educationExt:");
      if (this.educationExt == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (educationExt != null) {
        educationExt.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class putEducationExt_argsStandardSchemeFactory implements SchemeFactory {
      public putEducationExt_argsStandardScheme getScheme() {
        return new putEducationExt_argsStandardScheme();
      }
    }

    private static class putEducationExt_argsStandardScheme extends StandardScheme<putEducationExt_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, putEducationExt_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                struct.educationExt.read(iprot);
                struct.setEducationExtIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, putEducationExt_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExt != null) {
          oprot.writeFieldBegin(EDUCATION_EXT_FIELD_DESC);
          struct.educationExt.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class putEducationExt_argsTupleSchemeFactory implements SchemeFactory {
      public putEducationExt_argsTupleScheme getScheme() {
        return new putEducationExt_argsTupleScheme();
      }
    }

    private static class putEducationExt_argsTupleScheme extends TupleScheme<putEducationExt_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, putEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExt()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExt()) {
          struct.educationExt.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, putEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
          struct.educationExt.read(iprot);
          struct.setEducationExtIsSet(true);
        }
      }
    }

  }

  public static class putEducationExt_result implements org.apache.thrift.TBase<putEducationExt_result, putEducationExt_result._Fields>, java.io.Serializable, Cloneable, Comparable<putEducationExt_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("putEducationExt_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new putEducationExt_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new putEducationExt_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(putEducationExt_result.class, metaDataMap);
    }

    public putEducationExt_result() {
    }

    public putEducationExt_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public putEducationExt_result(putEducationExt_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public putEducationExt_result deepCopy() {
      return new putEducationExt_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public putEducationExt_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof putEducationExt_result)
        return this.equals((putEducationExt_result)that);
      return false;
    }

    public boolean equals(putEducationExt_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(putEducationExt_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("putEducationExt_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class putEducationExt_resultStandardSchemeFactory implements SchemeFactory {
      public putEducationExt_resultStandardScheme getScheme() {
        return new putEducationExt_resultStandardScheme();
      }
    }

    private static class putEducationExt_resultStandardScheme extends StandardScheme<putEducationExt_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, putEducationExt_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, putEducationExt_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class putEducationExt_resultTupleSchemeFactory implements SchemeFactory {
      public putEducationExt_resultTupleScheme getScheme() {
        return new putEducationExt_resultTupleScheme();
      }
    }

    private static class putEducationExt_resultTupleScheme extends TupleScheme<putEducationExt_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, putEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, putEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class delEducationExt_args implements org.apache.thrift.TBase<delEducationExt_args, delEducationExt_args._Fields>, java.io.Serializable, Cloneable, Comparable<delEducationExt_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("delEducationExt_args");

    private static final org.apache.thrift.protocol.TField EDUCATION_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("educationExt", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new delEducationExt_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new delEducationExt_argsTupleSchemeFactory());
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt educationExt; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EDUCATION_EXT((short)1, "educationExt");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EDUCATION_EXT
            return EDUCATION_EXT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EDUCATION_EXT, new org.apache.thrift.meta_data.FieldMetaData("educationExt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.profile.struct.EducationExt.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(delEducationExt_args.class, metaDataMap);
    }

    public delEducationExt_args() {
    }

    public delEducationExt_args(
      com.moseeker.thrift.gen.profile.struct.EducationExt educationExt)
    {
      this();
      this.educationExt = educationExt;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public delEducationExt_args(delEducationExt_args other) {
      if (other.isSetEducationExt()) {
        this.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt(other.educationExt);
      }
    }

    public delEducationExt_args deepCopy() {
      return new delEducationExt_args(this);
    }

    @Override
    public void clear() {
      this.educationExt = null;
    }

    public com.moseeker.thrift.gen.profile.struct.EducationExt getEducationExt() {
      return this.educationExt;
    }

    public delEducationExt_args setEducationExt(com.moseeker.thrift.gen.profile.struct.EducationExt educationExt) {
      this.educationExt = educationExt;
      return this;
    }

    public void unsetEducationExt() {
      this.educationExt = null;
    }

    /** Returns true if field educationExt is set (has been assigned a value) and false otherwise */
    public boolean isSetEducationExt() {
      return this.educationExt != null;
    }

    public void setEducationExtIsSet(boolean value) {
      if (!value) {
        this.educationExt = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case EDUCATION_EXT:
        if (value == null) {
          unsetEducationExt();
        } else {
          setEducationExt((com.moseeker.thrift.gen.profile.struct.EducationExt)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case EDUCATION_EXT:
        return getEducationExt();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case EDUCATION_EXT:
        return isSetEducationExt();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof delEducationExt_args)
        return this.equals((delEducationExt_args)that);
      return false;
    }

    public boolean equals(delEducationExt_args that) {
      if (that == null)
        return false;

      boolean this_present_educationExt = true && this.isSetEducationExt();
      boolean that_present_educationExt = true && that.isSetEducationExt();
      if (this_present_educationExt || that_present_educationExt) {
        if (!(this_present_educationExt && that_present_educationExt))
          return false;
        if (!this.educationExt.equals(that.educationExt))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_educationExt = true && (isSetEducationExt());
      list.add(present_educationExt);
      if (present_educationExt)
        list.add(educationExt);

      return list.hashCode();
    }

    @Override
    public int compareTo(delEducationExt_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetEducationExt()).compareTo(other.isSetEducationExt());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEducationExt()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.educationExt, other.educationExt);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("delEducationExt_args(");
      boolean first = true;

      sb.append("educationExt:");
      if (this.educationExt == null) {
        sb.append("null");
      } else {
        sb.append(this.educationExt);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (educationExt != null) {
        educationExt.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class delEducationExt_argsStandardSchemeFactory implements SchemeFactory {
      public delEducationExt_argsStandardScheme getScheme() {
        return new delEducationExt_argsStandardScheme();
      }
    }

    private static class delEducationExt_argsStandardScheme extends StandardScheme<delEducationExt_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, delEducationExt_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // EDUCATION_EXT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
                struct.educationExt.read(iprot);
                struct.setEducationExtIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, delEducationExt_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.educationExt != null) {
          oprot.writeFieldBegin(EDUCATION_EXT_FIELD_DESC);
          struct.educationExt.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class delEducationExt_argsTupleSchemeFactory implements SchemeFactory {
      public delEducationExt_argsTupleScheme getScheme() {
        return new delEducationExt_argsTupleScheme();
      }
    }

    private static class delEducationExt_argsTupleScheme extends TupleScheme<delEducationExt_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, delEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetEducationExt()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEducationExt()) {
          struct.educationExt.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, delEducationExt_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.educationExt = new com.moseeker.thrift.gen.profile.struct.EducationExt();
          struct.educationExt.read(iprot);
          struct.setEducationExtIsSet(true);
        }
      }
    }

  }

  public static class delEducationExt_result implements org.apache.thrift.TBase<delEducationExt_result, delEducationExt_result._Fields>, java.io.Serializable, Cloneable, Comparable<delEducationExt_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("delEducationExt_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I32, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new delEducationExt_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new delEducationExt_resultTupleSchemeFactory());
    }

    public int success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(delEducationExt_result.class, metaDataMap);
    }

    public delEducationExt_result() {
    }

    public delEducationExt_result(
      int success)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public delEducationExt_result(delEducationExt_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
    }

    public delEducationExt_result deepCopy() {
      return new delEducationExt_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
    }

    public int getSuccess() {
      return this.success;
    }

    public delEducationExt_result setSuccess(int success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Integer.valueOf(getSuccess());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof delEducationExt_result)
        return this.equals((delEducationExt_result)that);
      return false;
    }

    public boolean equals(delEducationExt_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true;
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(delEducationExt_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("delEducationExt_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class delEducationExt_resultStandardSchemeFactory implements SchemeFactory {
      public delEducationExt_resultStandardScheme getScheme() {
        return new delEducationExt_resultStandardScheme();
      }
    }

    private static class delEducationExt_resultStandardScheme extends StandardScheme<delEducationExt_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, delEducationExt_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.success = iprot.readI32();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, delEducationExt_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI32(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class delEducationExt_resultTupleSchemeFactory implements SchemeFactory {
      public delEducationExt_resultTupleScheme getScheme() {
        return new delEducationExt_resultTupleScheme();
      }
    }

    private static class delEducationExt_resultTupleScheme extends TupleScheme<delEducationExt_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, delEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeI32(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, delEducationExt_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readI32();
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
