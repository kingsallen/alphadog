/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-5-3")
public class Education implements org.apache.thrift.TBase<Education, Education._Fields>, java.io.Serializable, Cloneable, Comparable<Education> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Education");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profile_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField STAR_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("starDate", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("endDate", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField END_UNTIL_NOW_FIELD_DESC = new org.apache.thrift.protocol.TField("end_until_now", org.apache.thrift.protocol.TType.I16, (short)5);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.I16, (short)6);
  private static final org.apache.thrift.protocol.TField SCHOOL_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("school_code", org.apache.thrift.protocol.TType.I16, (short)7);
  private static final org.apache.thrift.protocol.TField SCHOOL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("school_name", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MAJOR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("major_code", org.apache.thrift.protocol.TType.I16, (short)9);
  private static final org.apache.thrift.protocol.TField MAJOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("major_name", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I16, (short)11);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new EducationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new EducationTupleSchemeFactory());
  }

  public int id; // required
  public int profile_id; // required
  public String starDate; // required
  public String endDate; // required
  public short end_until_now; // required
  public short degree; // required
  public short school_code; // required
  public String school_name; // required
  public short major_code; // required
  public String major_name; // required
  public short type; // required
  public String description; // required
  public String create_time; // required
  public String update_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PROFILE_ID((short)2, "profile_id"),
    STAR_DATE((short)3, "starDate"),
    END_DATE((short)4, "endDate"),
    END_UNTIL_NOW((short)5, "end_until_now"),
    DEGREE((short)6, "degree"),
    SCHOOL_CODE((short)7, "school_code"),
    SCHOOL_NAME((short)8, "school_name"),
    MAJOR_CODE((short)9, "major_code"),
    MAJOR_NAME((short)10, "major_name"),
    TYPE((short)11, "type"),
    DESCRIPTION((short)12, "description"),
    CREATE_TIME((short)13, "create_time"),
    UPDATE_TIME((short)14, "update_time");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PROFILE_ID
          return PROFILE_ID;
        case 3: // STAR_DATE
          return STAR_DATE;
        case 4: // END_DATE
          return END_DATE;
        case 5: // END_UNTIL_NOW
          return END_UNTIL_NOW;
        case 6: // DEGREE
          return DEGREE;
        case 7: // SCHOOL_CODE
          return SCHOOL_CODE;
        case 8: // SCHOOL_NAME
          return SCHOOL_NAME;
        case 9: // MAJOR_CODE
          return MAJOR_CODE;
        case 10: // MAJOR_NAME
          return MAJOR_NAME;
        case 11: // TYPE
          return TYPE;
        case 12: // DESCRIPTION
          return DESCRIPTION;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PROFILE_ID_ISSET_ID = 1;
  private static final int __END_UNTIL_NOW_ISSET_ID = 2;
  private static final int __DEGREE_ISSET_ID = 3;
  private static final int __SCHOOL_CODE_ISSET_ID = 4;
  private static final int __MAJOR_CODE_ISSET_ID = 5;
  private static final int __TYPE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profile_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STAR_DATE, new org.apache.thrift.meta_data.FieldMetaData("starDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("endDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.END_UNTIL_NOW, new org.apache.thrift.meta_data.FieldMetaData("end_until_now", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.SCHOOL_CODE, new org.apache.thrift.meta_data.FieldMetaData("school_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.SCHOOL_NAME, new org.apache.thrift.meta_data.FieldMetaData("school_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAJOR_CODE, new org.apache.thrift.meta_data.FieldMetaData("major_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.MAJOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("major_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Education.class, metaDataMap);
  }

  public Education() {
  }

  public Education(
    int id,
    int profile_id,
    String starDate,
    String endDate,
    short end_until_now,
    short degree,
    short school_code,
    String school_name,
    short major_code,
    String major_name,
    short type,
    String description,
    String create_time,
    String update_time)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    this.starDate = starDate;
    this.endDate = endDate;
    this.end_until_now = end_until_now;
    setEnd_until_nowIsSet(true);
    this.degree = degree;
    setDegreeIsSet(true);
    this.school_code = school_code;
    setSchool_codeIsSet(true);
    this.school_name = school_name;
    this.major_code = major_code;
    setMajor_codeIsSet(true);
    this.major_name = major_name;
    this.type = type;
    setTypeIsSet(true);
    this.description = description;
    this.create_time = create_time;
    this.update_time = update_time;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Education(Education other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.profile_id = other.profile_id;
    if (other.isSetStarDate()) {
      this.starDate = other.starDate;
    }
    if (other.isSetEndDate()) {
      this.endDate = other.endDate;
    }
    this.end_until_now = other.end_until_now;
    this.degree = other.degree;
    this.school_code = other.school_code;
    if (other.isSetSchool_name()) {
      this.school_name = other.school_name;
    }
    this.major_code = other.major_code;
    if (other.isSetMajor_name()) {
      this.major_name = other.major_name;
    }
    this.type = other.type;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
  }

  public Education deepCopy() {
    return new Education(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setProfile_idIsSet(false);
    this.profile_id = 0;
    this.starDate = null;
    this.endDate = null;
    setEnd_until_nowIsSet(false);
    this.end_until_now = 0;
    setDegreeIsSet(false);
    this.degree = 0;
    setSchool_codeIsSet(false);
    this.school_code = 0;
    this.school_name = null;
    setMajor_codeIsSet(false);
    this.major_code = 0;
    this.major_name = null;
    setTypeIsSet(false);
    this.type = 0;
    this.description = null;
    this.create_time = null;
    this.update_time = null;
  }

  public int getId() {
    return this.id;
  }

  public Education setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getProfile_id() {
    return this.profile_id;
  }

  public Education setProfile_id(int profile_id) {
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    return this;
  }

  public void unsetProfile_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  /** Returns true if field profile_id is set (has been assigned a value) and false otherwise */
  public boolean isSetProfile_id() {
    return EncodingUtils.testBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  public void setProfile_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROFILE_ID_ISSET_ID, value);
  }

  public String getStarDate() {
    return this.starDate;
  }

  public Education setStarDate(String starDate) {
    this.starDate = starDate;
    return this;
  }

  public void unsetStarDate() {
    this.starDate = null;
  }

  /** Returns true if field starDate is set (has been assigned a value) and false otherwise */
  public boolean isSetStarDate() {
    return this.starDate != null;
  }

  public void setStarDateIsSet(boolean value) {
    if (!value) {
      this.starDate = null;
    }
  }

  public String getEndDate() {
    return this.endDate;
  }

  public Education setEndDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  public void unsetEndDate() {
    this.endDate = null;
  }

  /** Returns true if field endDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDate() {
    return this.endDate != null;
  }

  public void setEndDateIsSet(boolean value) {
    if (!value) {
      this.endDate = null;
    }
  }

  public short getEnd_until_now() {
    return this.end_until_now;
  }

  public Education setEnd_until_now(short end_until_now) {
    this.end_until_now = end_until_now;
    setEnd_until_nowIsSet(true);
    return this;
  }

  public void unsetEnd_until_now() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID);
  }

  /** Returns true if field end_until_now is set (has been assigned a value) and false otherwise */
  public boolean isSetEnd_until_now() {
    return EncodingUtils.testBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID);
  }

  public void setEnd_until_nowIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID, value);
  }

  public short getDegree() {
    return this.degree;
  }

  public Education setDegree(short degree) {
    this.degree = degree;
    setDegreeIsSet(true);
    return this;
  }

  public void unsetDegree() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return EncodingUtils.testBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  public void setDegreeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DEGREE_ISSET_ID, value);
  }

  public short getSchool_code() {
    return this.school_code;
  }

  public Education setSchool_code(short school_code) {
    this.school_code = school_code;
    setSchool_codeIsSet(true);
    return this;
  }

  public void unsetSchool_code() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SCHOOL_CODE_ISSET_ID);
  }

  /** Returns true if field school_code is set (has been assigned a value) and false otherwise */
  public boolean isSetSchool_code() {
    return EncodingUtils.testBit(__isset_bitfield, __SCHOOL_CODE_ISSET_ID);
  }

  public void setSchool_codeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SCHOOL_CODE_ISSET_ID, value);
  }

  public String getSchool_name() {
    return this.school_name;
  }

  public Education setSchool_name(String school_name) {
    this.school_name = school_name;
    return this;
  }

  public void unsetSchool_name() {
    this.school_name = null;
  }

  /** Returns true if field school_name is set (has been assigned a value) and false otherwise */
  public boolean isSetSchool_name() {
    return this.school_name != null;
  }

  public void setSchool_nameIsSet(boolean value) {
    if (!value) {
      this.school_name = null;
    }
  }

  public short getMajor_code() {
    return this.major_code;
  }

  public Education setMajor_code(short major_code) {
    this.major_code = major_code;
    setMajor_codeIsSet(true);
    return this;
  }

  public void unsetMajor_code() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAJOR_CODE_ISSET_ID);
  }

  /** Returns true if field major_code is set (has been assigned a value) and false otherwise */
  public boolean isSetMajor_code() {
    return EncodingUtils.testBit(__isset_bitfield, __MAJOR_CODE_ISSET_ID);
  }

  public void setMajor_codeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAJOR_CODE_ISSET_ID, value);
  }

  public String getMajor_name() {
    return this.major_name;
  }

  public Education setMajor_name(String major_name) {
    this.major_name = major_name;
    return this;
  }

  public void unsetMajor_name() {
    this.major_name = null;
  }

  /** Returns true if field major_name is set (has been assigned a value) and false otherwise */
  public boolean isSetMajor_name() {
    return this.major_name != null;
  }

  public void setMajor_nameIsSet(boolean value) {
    if (!value) {
      this.major_name = null;
    }
  }

  public short getType() {
    return this.type;
  }

  public Education setType(short type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public String getDescription() {
    return this.description;
  }

  public Education setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public Education setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public Education setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case PROFILE_ID:
      if (value == null) {
        unsetProfile_id();
      } else {
        setProfile_id((Integer)value);
      }
      break;

    case STAR_DATE:
      if (value == null) {
        unsetStarDate();
      } else {
        setStarDate((String)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEndDate();
      } else {
        setEndDate((String)value);
      }
      break;

    case END_UNTIL_NOW:
      if (value == null) {
        unsetEnd_until_now();
      } else {
        setEnd_until_now((Short)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((Short)value);
      }
      break;

    case SCHOOL_CODE:
      if (value == null) {
        unsetSchool_code();
      } else {
        setSchool_code((Short)value);
      }
      break;

    case SCHOOL_NAME:
      if (value == null) {
        unsetSchool_name();
      } else {
        setSchool_name((String)value);
      }
      break;

    case MAJOR_CODE:
      if (value == null) {
        unsetMajor_code();
      } else {
        setMajor_code((Short)value);
      }
      break;

    case MAJOR_NAME:
      if (value == null) {
        unsetMajor_name();
      } else {
        setMajor_name((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Short)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case PROFILE_ID:
      return Integer.valueOf(getProfile_id());

    case STAR_DATE:
      return getStarDate();

    case END_DATE:
      return getEndDate();

    case END_UNTIL_NOW:
      return Short.valueOf(getEnd_until_now());

    case DEGREE:
      return Short.valueOf(getDegree());

    case SCHOOL_CODE:
      return Short.valueOf(getSchool_code());

    case SCHOOL_NAME:
      return getSchool_name();

    case MAJOR_CODE:
      return Short.valueOf(getMajor_code());

    case MAJOR_NAME:
      return getMajor_name();

    case TYPE:
      return Short.valueOf(getType());

    case DESCRIPTION:
      return getDescription();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PROFILE_ID:
      return isSetProfile_id();
    case STAR_DATE:
      return isSetStarDate();
    case END_DATE:
      return isSetEndDate();
    case END_UNTIL_NOW:
      return isSetEnd_until_now();
    case DEGREE:
      return isSetDegree();
    case SCHOOL_CODE:
      return isSetSchool_code();
    case SCHOOL_NAME:
      return isSetSchool_name();
    case MAJOR_CODE:
      return isSetMajor_code();
    case MAJOR_NAME:
      return isSetMajor_name();
    case TYPE:
      return isSetType();
    case DESCRIPTION:
      return isSetDescription();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Education)
      return this.equals((Education)that);
    return false;
  }

  public boolean equals(Education that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_profile_id = true;
    boolean that_present_profile_id = true;
    if (this_present_profile_id || that_present_profile_id) {
      if (!(this_present_profile_id && that_present_profile_id))
        return false;
      if (this.profile_id != that.profile_id)
        return false;
    }

    boolean this_present_starDate = true && this.isSetStarDate();
    boolean that_present_starDate = true && that.isSetStarDate();
    if (this_present_starDate || that_present_starDate) {
      if (!(this_present_starDate && that_present_starDate))
        return false;
      if (!this.starDate.equals(that.starDate))
        return false;
    }

    boolean this_present_endDate = true && this.isSetEndDate();
    boolean that_present_endDate = true && that.isSetEndDate();
    if (this_present_endDate || that_present_endDate) {
      if (!(this_present_endDate && that_present_endDate))
        return false;
      if (!this.endDate.equals(that.endDate))
        return false;
    }

    boolean this_present_end_until_now = true;
    boolean that_present_end_until_now = true;
    if (this_present_end_until_now || that_present_end_until_now) {
      if (!(this_present_end_until_now && that_present_end_until_now))
        return false;
      if (this.end_until_now != that.end_until_now)
        return false;
    }

    boolean this_present_degree = true;
    boolean that_present_degree = true;
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (this.degree != that.degree)
        return false;
    }

    boolean this_present_school_code = true;
    boolean that_present_school_code = true;
    if (this_present_school_code || that_present_school_code) {
      if (!(this_present_school_code && that_present_school_code))
        return false;
      if (this.school_code != that.school_code)
        return false;
    }

    boolean this_present_school_name = true && this.isSetSchool_name();
    boolean that_present_school_name = true && that.isSetSchool_name();
    if (this_present_school_name || that_present_school_name) {
      if (!(this_present_school_name && that_present_school_name))
        return false;
      if (!this.school_name.equals(that.school_name))
        return false;
    }

    boolean this_present_major_code = true;
    boolean that_present_major_code = true;
    if (this_present_major_code || that_present_major_code) {
      if (!(this_present_major_code && that_present_major_code))
        return false;
      if (this.major_code != that.major_code)
        return false;
    }

    boolean this_present_major_name = true && this.isSetMajor_name();
    boolean that_present_major_name = true && that.isSetMajor_name();
    if (this_present_major_name || that_present_major_name) {
      if (!(this_present_major_name && that_present_major_name))
        return false;
      if (!this.major_name.equals(that.major_name))
        return false;
    }

    boolean this_present_type = true;
    boolean that_present_type = true;
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_profile_id = true;
    list.add(present_profile_id);
    if (present_profile_id)
      list.add(profile_id);

    boolean present_starDate = true && (isSetStarDate());
    list.add(present_starDate);
    if (present_starDate)
      list.add(starDate);

    boolean present_endDate = true && (isSetEndDate());
    list.add(present_endDate);
    if (present_endDate)
      list.add(endDate);

    boolean present_end_until_now = true;
    list.add(present_end_until_now);
    if (present_end_until_now)
      list.add(end_until_now);

    boolean present_degree = true;
    list.add(present_degree);
    if (present_degree)
      list.add(degree);

    boolean present_school_code = true;
    list.add(present_school_code);
    if (present_school_code)
      list.add(school_code);

    boolean present_school_name = true && (isSetSchool_name());
    list.add(present_school_name);
    if (present_school_name)
      list.add(school_name);

    boolean present_major_code = true;
    list.add(present_major_code);
    if (present_major_code)
      list.add(major_code);

    boolean present_major_name = true && (isSetMajor_name());
    list.add(present_major_name);
    if (present_major_name)
      list.add(major_name);

    boolean present_type = true;
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_create_time = true && (isSetCreate_time());
    list.add(present_create_time);
    if (present_create_time)
      list.add(create_time);

    boolean present_update_time = true && (isSetUpdate_time());
    list.add(present_update_time);
    if (present_update_time)
      list.add(update_time);

    return list.hashCode();
  }

  @Override
  public int compareTo(Education other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfile_id()).compareTo(other.isSetProfile_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfile_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profile_id, other.profile_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStarDate()).compareTo(other.isSetStarDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starDate, other.starDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDate()).compareTo(other.isSetEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDate, other.endDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnd_until_now()).compareTo(other.isSetEnd_until_now());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnd_until_now()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_until_now, other.end_until_now);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchool_code()).compareTo(other.isSetSchool_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchool_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.school_code, other.school_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchool_name()).compareTo(other.isSetSchool_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchool_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.school_name, other.school_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMajor_code()).compareTo(other.isSetMajor_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMajor_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major_code, other.major_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMajor_name()).compareTo(other.isSetMajor_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMajor_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major_name, other.major_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Education(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("profile_id:");
    sb.append(this.profile_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("starDate:");
    if (this.starDate == null) {
      sb.append("null");
    } else {
      sb.append(this.starDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDate:");
    if (this.endDate == null) {
      sb.append("null");
    } else {
      sb.append(this.endDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("end_until_now:");
    sb.append(this.end_until_now);
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    sb.append(this.degree);
    first = false;
    if (!first) sb.append(", ");
    sb.append("school_code:");
    sb.append(this.school_code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("school_name:");
    if (this.school_name == null) {
      sb.append("null");
    } else {
      sb.append(this.school_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("major_code:");
    sb.append(this.major_code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("major_name:");
    if (this.major_name == null) {
      sb.append("null");
    } else {
      sb.append(this.major_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    sb.append(this.type);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_time:");
    if (this.create_time == null) {
      sb.append("null");
    } else {
      sb.append(this.create_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_time:");
    if (this.update_time == null) {
      sb.append("null");
    } else {
      sb.append(this.update_time);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EducationStandardSchemeFactory implements SchemeFactory {
    public EducationStandardScheme getScheme() {
      return new EducationStandardScheme();
    }
  }

  private static class EducationStandardScheme extends StandardScheme<Education> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Education struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROFILE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profile_id = iprot.readI32();
              struct.setProfile_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STAR_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.starDate = iprot.readString();
              struct.setStarDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endDate = iprot.readString();
              struct.setEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_UNTIL_NOW
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.end_until_now = iprot.readI16();
              struct.setEnd_until_nowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.degree = iprot.readI16();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SCHOOL_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.school_code = iprot.readI16();
              struct.setSchool_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SCHOOL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.school_name = iprot.readString();
              struct.setSchool_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MAJOR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.major_code = iprot.readI16();
              struct.setMajor_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MAJOR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.major_name = iprot.readString();
              struct.setMajor_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.type = iprot.readI16();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Education struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
      oprot.writeI32(struct.profile_id);
      oprot.writeFieldEnd();
      if (struct.starDate != null) {
        oprot.writeFieldBegin(STAR_DATE_FIELD_DESC);
        oprot.writeString(struct.starDate);
        oprot.writeFieldEnd();
      }
      if (struct.endDate != null) {
        oprot.writeFieldBegin(END_DATE_FIELD_DESC);
        oprot.writeString(struct.endDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(END_UNTIL_NOW_FIELD_DESC);
      oprot.writeI16(struct.end_until_now);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DEGREE_FIELD_DESC);
      oprot.writeI16(struct.degree);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SCHOOL_CODE_FIELD_DESC);
      oprot.writeI16(struct.school_code);
      oprot.writeFieldEnd();
      if (struct.school_name != null) {
        oprot.writeFieldBegin(SCHOOL_NAME_FIELD_DESC);
        oprot.writeString(struct.school_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MAJOR_CODE_FIELD_DESC);
      oprot.writeI16(struct.major_code);
      oprot.writeFieldEnd();
      if (struct.major_name != null) {
        oprot.writeFieldBegin(MAJOR_NAME_FIELD_DESC);
        oprot.writeString(struct.major_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI16(struct.type);
      oprot.writeFieldEnd();
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.create_time);
        oprot.writeFieldEnd();
      }
      if (struct.update_time != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.update_time);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EducationTupleSchemeFactory implements SchemeFactory {
    public EducationTupleScheme getScheme() {
      return new EducationTupleScheme();
    }
  }

  private static class EducationTupleScheme extends TupleScheme<Education> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Education struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetProfile_id()) {
        optionals.set(1);
      }
      if (struct.isSetStarDate()) {
        optionals.set(2);
      }
      if (struct.isSetEndDate()) {
        optionals.set(3);
      }
      if (struct.isSetEnd_until_now()) {
        optionals.set(4);
      }
      if (struct.isSetDegree()) {
        optionals.set(5);
      }
      if (struct.isSetSchool_code()) {
        optionals.set(6);
      }
      if (struct.isSetSchool_name()) {
        optionals.set(7);
      }
      if (struct.isSetMajor_code()) {
        optionals.set(8);
      }
      if (struct.isSetMajor_name()) {
        optionals.set(9);
      }
      if (struct.isSetType()) {
        optionals.set(10);
      }
      if (struct.isSetDescription()) {
        optionals.set(11);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(12);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetProfile_id()) {
        oprot.writeI32(struct.profile_id);
      }
      if (struct.isSetStarDate()) {
        oprot.writeString(struct.starDate);
      }
      if (struct.isSetEndDate()) {
        oprot.writeString(struct.endDate);
      }
      if (struct.isSetEnd_until_now()) {
        oprot.writeI16(struct.end_until_now);
      }
      if (struct.isSetDegree()) {
        oprot.writeI16(struct.degree);
      }
      if (struct.isSetSchool_code()) {
        oprot.writeI16(struct.school_code);
      }
      if (struct.isSetSchool_name()) {
        oprot.writeString(struct.school_name);
      }
      if (struct.isSetMajor_code()) {
        oprot.writeI16(struct.major_code);
      }
      if (struct.isSetMajor_name()) {
        oprot.writeString(struct.major_name);
      }
      if (struct.isSetType()) {
        oprot.writeI16(struct.type);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Education struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.profile_id = iprot.readI32();
        struct.setProfile_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.starDate = iprot.readString();
        struct.setStarDateIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endDate = iprot.readString();
        struct.setEndDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.end_until_now = iprot.readI16();
        struct.setEnd_until_nowIsSet(true);
      }
      if (incoming.get(5)) {
        struct.degree = iprot.readI16();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.school_code = iprot.readI16();
        struct.setSchool_codeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.school_name = iprot.readString();
        struct.setSchool_nameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.major_code = iprot.readI16();
        struct.setMajor_codeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.major_name = iprot.readString();
        struct.setMajor_nameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.type = iprot.readI16();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(12)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
    }
  }

}

