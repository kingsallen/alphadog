/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.UserUserNameEmail1128Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserUserNameEmail1128 extends TableImpl<UserUserNameEmail1128Record> {

    private static final long serialVersionUID = 854838223;

    /**
     * The reference instance of <code>userdb.user_user_name_email1128</code>
     */
    public static final UserUserNameEmail1128 USER_USER_NAME_EMAIL1128 = new UserUserNameEmail1128();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserUserNameEmail1128Record> getRecordType() {
        return UserUserNameEmail1128Record.class;
    }

    /**
     * The column <code>userdb.user_user_name_email1128.id</code>.
     */
    public final TableField<UserUserNameEmail1128Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_user_name_email1128.name</code>.
     */
    public final TableField<UserUserNameEmail1128Record, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>userdb.user_user_name_email1128.email</code>.
     */
    public final TableField<UserUserNameEmail1128Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>userdb.user_user_name_email1128</code> table reference
     */
    public UserUserNameEmail1128() {
        this("user_user_name_email1128", null);
    }

    /**
     * Create an aliased <code>userdb.user_user_name_email1128</code> table reference
     */
    public UserUserNameEmail1128(String alias) {
        this(alias, USER_USER_NAME_EMAIL1128);
    }

    private UserUserNameEmail1128(String alias, Table<UserUserNameEmail1128Record> aliased) {
        this(alias, aliased, null);
    }

    private UserUserNameEmail1128(String alias, Table<UserUserNameEmail1128Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserUserNameEmail1128Record> getPrimaryKey() {
        return Keys.KEY_USER_USER_NAME_EMAIL1128_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserUserNameEmail1128Record>> getKeys() {
        return Arrays.<UniqueKey<UserUserNameEmail1128Record>>asList(Keys.KEY_USER_USER_NAME_EMAIL1128_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserUserNameEmail1128 as(String alias) {
        return new UserUserNameEmail1128(alias, this);
    }

    /**
     * Rename this table
     */
    public UserUserNameEmail1128 rename(String name) {
        return new UserUserNameEmail1128(name, null);
    }
}
