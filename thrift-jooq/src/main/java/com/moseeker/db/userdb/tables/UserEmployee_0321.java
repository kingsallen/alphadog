/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.UserEmployee_0321Record;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEmployee_0321 extends TableImpl<UserEmployee_0321Record> {

    private static final long serialVersionUID = 365199028;

    /**
     * The reference instance of <code>userdb.user_employee_0321</code>
     */
    public static final UserEmployee_0321 USER_EMPLOYEE_0321 = new UserEmployee_0321();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserEmployee_0321Record> getRecordType() {
        return UserEmployee_0321Record.class;
    }

    /**
     * The column <code>userdb.user_employee_0321.id</code>.
     */
    public final TableField<UserEmployee_0321Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_employee_0321.employeeid</code>. 员工ID
     */
    public final TableField<UserEmployee_0321Record, String> EMPLOYEEID = createField("employeeid", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工ID");

    /**
     * The column <code>userdb.user_employee_0321.company_id</code>.
     */
    public final TableField<UserEmployee_0321Record, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.role_id</code>. sys_role.id
     */
    public final TableField<UserEmployee_0321Record, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "sys_role.id");

    /**
     * The column <code>userdb.user_employee_0321.wxuser_id</code>. userdb.user_wx_user.id 微信账号编号。现在已经废弃。关于员工绑定的C端账号，请参考sysuser_id
     */
    public final TableField<UserEmployee_0321Record, Integer> WXUSER_ID = createField("wxuser_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "userdb.user_wx_user.id 微信账号编号。现在已经废弃。关于员工绑定的C端账号，请参考sysuser_id");

    /**
     * The column <code>userdb.user_employee_0321.sex</code>. 0：未知，1：男，2：女
     */
    public final TableField<UserEmployee_0321Record, Byte> SEX = createField("sex", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0：未知，1：男，2：女");

    /**
     * The column <code>userdb.user_employee_0321.ename</code>. 英文名
     */
    public final TableField<UserEmployee_0321Record, String> ENAME = createField("ename", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "英文名");

    /**
     * The column <code>userdb.user_employee_0321.efname</code>. 英文姓
     */
    public final TableField<UserEmployee_0321Record, String> EFNAME = createField("efname", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "英文姓");

    /**
     * The column <code>userdb.user_employee_0321.cname</code>.
     */
    public final TableField<UserEmployee_0321Record, String> CNAME = createField("cname", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>userdb.user_employee_0321.cfname</code>. 中文姓
     */
    public final TableField<UserEmployee_0321Record, String> CFNAME = createField("cfname", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "中文姓");

    /**
     * The column <code>userdb.user_employee_0321.password</code>. 如果为管理员，存储登陆密码
     */
    public final TableField<UserEmployee_0321Record, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "如果为管理员，存储登陆密码");

    /**
     * The column <code>userdb.user_employee_0321.is_admin</code>.
     */
    public final TableField<UserEmployee_0321Record, Byte> IS_ADMIN = createField("is_admin", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.status</code>.
     */
    public final TableField<UserEmployee_0321Record, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.companybody</code>.
     */
    public final TableField<UserEmployee_0321Record, String> COMPANYBODY = createField("companybody", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.departmentname</code>.
     */
    public final TableField<UserEmployee_0321Record, String> DEPARTMENTNAME = createField("departmentname", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.groupname</code>.
     */
    public final TableField<UserEmployee_0321Record, String> GROUPNAME = createField("groupname", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.position</code>.
     */
    public final TableField<UserEmployee_0321Record, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.employdate</code>.
     */
    public final TableField<UserEmployee_0321Record, Date> EMPLOYDATE = createField("employdate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>userdb.user_employee_0321.managername</code>.
     */
    public final TableField<UserEmployee_0321Record, String> MANAGERNAME = createField("managername", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.city</code>.
     */
    public final TableField<UserEmployee_0321Record, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.birthday</code>.
     */
    public final TableField<UserEmployee_0321Record, Date> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>userdb.user_employee_0321.retiredate</code>.
     */
    public final TableField<UserEmployee_0321Record, Date> RETIREDATE = createField("retiredate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>userdb.user_employee_0321.education</code>.
     */
    public final TableField<UserEmployee_0321Record, String> EDUCATION = createField("education", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.address</code>.
     */
    public final TableField<UserEmployee_0321Record, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.idcard</code>.
     */
    public final TableField<UserEmployee_0321Record, String> IDCARD = createField("idcard", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.mobile</code>.
     */
    public final TableField<UserEmployee_0321Record, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>userdb.user_employee_0321.award</code>. 员工积分
     */
    public final TableField<UserEmployee_0321Record, Integer> AWARD = createField("award", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "员工积分");

    /**
     * The column <code>userdb.user_employee_0321.binding_time</code>.
     */
    public final TableField<UserEmployee_0321Record, Timestamp> BINDING_TIME = createField("binding_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>userdb.user_employee_0321.email</code>. email
     */
    public final TableField<UserEmployee_0321Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "email");

    /**
     * The column <code>userdb.user_employee_0321.activation</code>. 员工认证，0：认证成功 1：未认证 2：认证失败 
     */
    public final TableField<UserEmployee_0321Record, Byte> ACTIVATION = createField("activation", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TINYINT)), this, "员工认证，0：认证成功 1：未认证 2：认证失败 ");

    /**
     * The column <code>userdb.user_employee_0321.activation_code</code>. 激活码
     */
    public final TableField<UserEmployee_0321Record, String> ACTIVATION_CODE = createField("activation_code", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "激活码");

    /**
     * The column <code>userdb.user_employee_0321.disable</code>. 是否禁用0：可用1：禁用
     */
    public final TableField<UserEmployee_0321Record, Byte> DISABLE = createField("disable", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否禁用0：可用1：禁用");

    /**
     * The column <code>userdb.user_employee_0321.create_time</code>. 创建时间
     */
    public final TableField<UserEmployee_0321Record, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_employee_0321.update_time</code>. 修改时间
     */
    public final TableField<UserEmployee_0321Record, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>userdb.user_employee_0321.auth_level</code>. 雇主认证：0代表刚注册, 1代表提交了基本信息, 2代表邮箱认证通过, 3代表通过人工审核
     */
    public final TableField<UserEmployee_0321Record, Byte> AUTH_LEVEL = createField("auth_level", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "雇主认证：0代表刚注册, 1代表提交了基本信息, 2代表邮箱认证通过, 3代表通过人工审核");

    /**
     * The column <code>userdb.user_employee_0321.register_time</code>. 注册时间
     */
    public final TableField<UserEmployee_0321Record, Timestamp> REGISTER_TIME = createField("register_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "注册时间");

    /**
     * The column <code>userdb.user_employee_0321.register_ip</code>. 注册IP
     */
    public final TableField<UserEmployee_0321Record, String> REGISTER_IP = createField("register_ip", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "注册IP");

    /**
     * The column <code>userdb.user_employee_0321.last_login_time</code>. 最近登录时间
     */
    public final TableField<UserEmployee_0321Record, Timestamp> LAST_LOGIN_TIME = createField("last_login_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近登录时间");

    /**
     * The column <code>userdb.user_employee_0321.last_login_ip</code>. 最近登录IP
     */
    public final TableField<UserEmployee_0321Record, String> LAST_LOGIN_IP = createField("last_login_ip", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "最近登录IP");

    /**
     * The column <code>userdb.user_employee_0321.login_count</code>. 登录次数
     */
    public final TableField<UserEmployee_0321Record, Long> LOGIN_COUNT = createField("login_count", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "登录次数");

    /**
     * The column <code>userdb.user_employee_0321.source</code>. 来源，0:默认 1:雇主 2:官网 3:微信扫描 4:我也要招人(聚合号) 5:我也要招人(企业号) 8:hr导入员工 9:hr添加的员工
     */
    public final TableField<UserEmployee_0321Record, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "来源，0:默认 1:雇主 2:官网 3:微信扫描 4:我也要招人(聚合号) 5:我也要招人(企业号) 8:hr导入员工 9:hr添加的员工");

    /**
     * The column <code>userdb.user_employee_0321.download_token</code>. 下载行业报告的校验token
     */
    public final TableField<UserEmployee_0321Record, String> DOWNLOAD_TOKEN = createField("download_token", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "下载行业报告的校验token");

    /**
     * The column <code>userdb.user_employee_0321.hr_wxuser_id</code>. hr招聘助手的微信ID，wx_group_user.id
     */
    public final TableField<UserEmployee_0321Record, UInteger> HR_WXUSER_ID = createField("hr_wxuser_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "hr招聘助手的微信ID，wx_group_user.id");

    /**
     * The column <code>userdb.user_employee_0321.custom_field</code>. 配置的自定义认证名称对应的内容
     */
    public final TableField<UserEmployee_0321Record, String> CUSTOM_FIELD = createField("custom_field", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "配置的自定义认证名称对应的内容");

    /**
     * The column <code>userdb.user_employee_0321.is_rp_sent</code>. 是否拿过员工认证红包 0: 没有 1:有
     */
    public final TableField<UserEmployee_0321Record, Byte> IS_RP_SENT = createField("is_rp_sent", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否拿过员工认证红包 0: 没有 1:有");

    /**
     * The column <code>userdb.user_employee_0321.sysuser_id</code>. sysuser.id, 用户ID
     */
    public final TableField<UserEmployee_0321Record, Integer> SYSUSER_ID = createField("sysuser_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "sysuser.id, 用户ID");

    /**
     * The column <code>userdb.user_employee_0321.position_id</code>. hr_employee_position.id, 职能ID
     */
    public final TableField<UserEmployee_0321Record, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "hr_employee_position.id, 职能ID");

    /**
     * The column <code>userdb.user_employee_0321.section_id</code>. hr_employee_section.id, 部门ID
     */
    public final TableField<UserEmployee_0321Record, Integer> SECTION_ID = createField("section_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "hr_employee_section.id, 部门ID");

    /**
     * The column <code>userdb.user_employee_0321.email_isvalid</code>. 是否认证了1：是, 0：否
     */
    public final TableField<UserEmployee_0321Record, Byte> EMAIL_ISVALID = createField("email_isvalid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否认证了1：是, 0：否");

    /**
     * The column <code>userdb.user_employee_0321.auth_method</code>. 员工认证途径 0:使用邮箱认证 1:使用自定义认证 2:使用问答认证
     */
    public final TableField<UserEmployee_0321Record, Byte> AUTH_METHOD = createField("auth_method", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "员工认证途径 0:使用邮箱认证 1:使用自定义认证 2:使用问答认证");

    /**
     * The column <code>userdb.user_employee_0321.custom_field_values</code>. 自定 义字段键值, 结构[{<id>: "<value>"},{...},...]
     */
    public final TableField<UserEmployee_0321Record, String> CUSTOM_FIELD_VALUES = createField("custom_field_values", org.jooq.impl.SQLDataType.VARCHAR.length(4096).nullable(false).defaultValue(org.jooq.impl.DSL.field("[]", org.jooq.impl.SQLDataType.VARCHAR)), this, "自定 义字段键值, 结构[{<id>: \"<value>\"},{...},...]");

    /**
     * Create a <code>userdb.user_employee_0321</code> table reference
     */
    public UserEmployee_0321() {
        this("user_employee_0321", null);
    }

    /**
     * Create an aliased <code>userdb.user_employee_0321</code> table reference
     */
    public UserEmployee_0321(String alias) {
        this(alias, USER_EMPLOYEE_0321);
    }

    private UserEmployee_0321(String alias, Table<UserEmployee_0321Record> aliased) {
        this(alias, aliased, null);
    }

    private UserEmployee_0321(String alias, Table<UserEmployee_0321Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserEmployee_0321Record, Integer> getIdentity() {
        return Keys.IDENTITY_USER_EMPLOYEE_0321;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserEmployee_0321Record> getPrimaryKey() {
        return Keys.KEY_USER_EMPLOYEE_0321_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserEmployee_0321Record>> getKeys() {
        return Arrays.<UniqueKey<UserEmployee_0321Record>>asList(Keys.KEY_USER_EMPLOYEE_0321_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserEmployee_0321 as(String alias) {
        return new UserEmployee_0321(alias, this);
    }

    /**
     * Rename this table
     */
    public UserEmployee_0321 rename(String name) {
        return new UserEmployee_0321(name, null);
    }
}
