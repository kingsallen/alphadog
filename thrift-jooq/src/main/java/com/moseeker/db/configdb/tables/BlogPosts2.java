/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.configdb.tables;


import com.moseeker.db.configdb.Configdb;
import com.moseeker.db.configdb.Keys;
import com.moseeker.db.configdb.tables.records.BlogPosts2Record;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlogPosts2 extends TableImpl<BlogPosts2Record> {

	private static final long serialVersionUID = 2135518988;

	/**
	 * The reference instance of <code>configDB.blog_posts2</code>
	 */
	public static final BlogPosts2 BLOG_POSTS2 = new BlogPosts2();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BlogPosts2Record> getRecordType() {
		return BlogPosts2Record.class;
	}

	/**
	 * The column <code>configDB.blog_posts2.id</code>.
	 */
	public final TableField<BlogPosts2Record, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>configDB.blog_posts2.title</code>.
	 */
	public final TableField<BlogPosts2Record, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>configDB.blog_posts2.text</code>.
	 */
	public final TableField<BlogPosts2Record, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>configDB.blog_posts2.created</code>.
	 */
	public final TableField<BlogPosts2Record, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>configDB.blog_posts2.updated</code>.
	 */
	public final TableField<BlogPosts2Record, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>configDB.blog_posts2</code> table reference
	 */
	public BlogPosts2() {
		this("blog_posts2", null);
	}

	/**
	 * Create an aliased <code>configDB.blog_posts2</code> table reference
	 */
	public BlogPosts2(String alias) {
		this(alias, BLOG_POSTS2);
	}

	private BlogPosts2(String alias, Table<BlogPosts2Record> aliased) {
		this(alias, aliased, null);
	}

	private BlogPosts2(String alias, Table<BlogPosts2Record> aliased, Field<?>[] parameters) {
		super(alias, Configdb.CONFIGDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BlogPosts2Record, UInteger> getIdentity() {
		return Keys.IDENTITY_BLOG_POSTS2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BlogPosts2Record> getPrimaryKey() {
		return Keys.KEY_BLOG_POSTS2_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BlogPosts2Record>> getKeys() {
		return Arrays.<UniqueKey<BlogPosts2Record>>asList(Keys.KEY_BLOG_POSTS2_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlogPosts2 as(String alias) {
		return new BlogPosts2(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BlogPosts2 rename(String name) {
		return new BlogPosts2(name, null);
	}
}
