/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.jobdb.tables;


import com.moseeker.db.jobdb.Jobdb;
import com.moseeker.db.jobdb.Keys;
import com.moseeker.db.jobdb.tables.records.JobPositionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobPosition extends TableImpl<JobPositionRecord> {

	private static final long serialVersionUID = 1854574213;

	/**
	 * The reference instance of <code>jobDB.job_position</code>
	 */
	public static final JobPosition JOB_POSITION = new JobPosition();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<JobPositionRecord> getRecordType() {
		return JobPositionRecord.class;
	}

	/**
	 * The column <code>jobDB.job_position.id</code>.
	 */
	public final TableField<JobPositionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jobDB.job_position.jobnumber</code>. 职位编号
	 */
	public final TableField<JobPositionRecord, String> JOBNUMBER = createField("jobnumber", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false).defaulted(true), this, "职位编号");

	/**
	 * The column <code>jobDB.job_position.company_id</code>. company.id
	 */
	public final TableField<JobPositionRecord, UInteger> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "company.id");

	/**
	 * The column <code>jobDB.job_position.title</code>. 职位标题
	 */
	public final TableField<JobPositionRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "职位标题");

	/**
	 * The column <code>jobDB.job_position.province</code>. 所在省
	 */
	public final TableField<JobPositionRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "所在省");

	/**
	 * The column <code>jobDB.job_position.city</code>. 所在城市
	 */
	public final TableField<JobPositionRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "所在城市");

	/**
	 * The column <code>jobDB.job_position.department</code>. 所在部门
	 */
	public final TableField<JobPositionRecord, String> DEPARTMENT = createField("department", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "所在部门");

	/**
	 * The column <code>jobDB.job_position.l_jobid</code>. jobid from ATS or other channel
	 */
	public final TableField<JobPositionRecord, Integer> L_JOBID = createField("l_jobid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "jobid from ATS or other channel");

	/**
	 * The column <code>jobDB.job_position.publish_date</code>. Default: now, set by js
	 */
	public final TableField<JobPositionRecord, Timestamp> PUBLISH_DATE = createField("publish_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "Default: now, set by js");

	/**
	 * The column <code>jobDB.job_position.stop_date</code>. 截止日期
	 */
	public final TableField<JobPositionRecord, Timestamp> STOP_DATE = createField("stop_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "截止日期");

	/**
	 * The column <code>jobDB.job_position.accountabilities</code>. Job responsibilities
	 */
	public final TableField<JobPositionRecord, String> ACCOUNTABILITIES = createField("accountabilities", org.jooq.impl.SQLDataType.CLOB, this, "Job responsibilities");

	/**
	 * The column <code>jobDB.job_position.experience</code>. 工作经验
	 */
	public final TableField<JobPositionRecord, String> EXPERIENCE = createField("experience", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "工作经验");

	/**
	 * The column <code>jobDB.job_position.requirement</code>. 职位要求
	 */
	public final TableField<JobPositionRecord, String> REQUIREMENT = createField("requirement", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "职位要求");

	/**
	 * The column <code>jobDB.job_position.salary</code>. 薪水
	 */
	public final TableField<JobPositionRecord, String> SALARY = createField("salary", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "薪水");

	/**
	 * The column <code>jobDB.job_position.language</code>. 外语要求
	 */
	public final TableField<JobPositionRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "外语要求");

	/**
	 * The column <code>jobDB.job_position.job_grade</code>. 优先级
	 */
	public final TableField<JobPositionRecord, Integer> JOB_GRADE = createField("job_grade", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "优先级");

	/**
	 * The column <code>jobDB.job_position.status</code>. 0 有效, 1 无效, 2 撤销
	 */
	public final TableField<JobPositionRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0 有效, 1 无效, 2 撤销");

	/**
	 * The column <code>jobDB.job_position.visitnum</code>.
	 */
	public final TableField<JobPositionRecord, Integer> VISITNUM = createField("visitnum", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>jobDB.job_position.lastvisit</code>. openid of last visiter
	 */
	public final TableField<JobPositionRecord, String> LASTVISIT = createField("lastvisit", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "openid of last visiter");

	/**
	 * The column <code>jobDB.job_position.source_id</code>. 职位来源 0：Moseeker
	 */
	public final TableField<JobPositionRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "职位来源 0：Moseeker");

	/**
	 * The column <code>jobDB.job_position.update_time</code>.
	 */
	public final TableField<JobPositionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>jobDB.job_position.business_group</code>. 事业群
	 */
	public final TableField<JobPositionRecord, String> BUSINESS_GROUP = createField("business_group", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "事业群");

	/**
	 * The column <code>jobDB.job_position.employment_type</code>. 0:全职，1：兼职：2：合同工
	 */
	public final TableField<JobPositionRecord, Byte> EMPLOYMENT_TYPE = createField("employment_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:全职，1：兼职：2：合同工");

	/**
	 * The column <code>jobDB.job_position.hr_email</code>. HR联系人邮箱，申请通知
	 */
	public final TableField<JobPositionRecord, String> HR_EMAIL = createField("hr_email", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "HR联系人邮箱，申请通知");

	/**
	 * The column <code>jobDB.job_position.benefits</code>. 职位福利
	 */
	public final TableField<JobPositionRecord, String> BENEFITS = createField("benefits", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "职位福利");

	/**
	 * The column <code>jobDB.job_position.degree</code>. 0:无 1:大专 2:本科 3:硕士 4:MBA 5:博士
	 */
	public final TableField<JobPositionRecord, Byte> DEGREE = createField("degree", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:无 1:大专 2:本科 3:硕士 4:MBA 5:博士");

	/**
	 * The column <code>jobDB.job_position.feature</code>. 职位特色
	 */
	public final TableField<JobPositionRecord, String> FEATURE = createField("feature", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "职位特色");

	/**
	 * The column <code>jobDB.job_position.email_notice</code>. application after email notice hr, 0:yes 1:no
	 */
	public final TableField<JobPositionRecord, Byte> EMAIL_NOTICE = createField("email_notice", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "application after email notice hr, 0:yes 1:no");

	/**
	 * The column <code>jobDB.job_position.candidate_source</code>. 0:社招 1：校招 2:定向招聘
	 */
	public final TableField<JobPositionRecord, Byte> CANDIDATE_SOURCE = createField("candidate_source", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:社招 1：校招 2:定向招聘");

	/**
	 * The column <code>jobDB.job_position.occupation</code>. 职位职能
	 */
	public final TableField<JobPositionRecord, String> OCCUPATION = createField("occupation", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaulted(true), this, "职位职能");

	/**
	 * The column <code>jobDB.job_position.is_recom</code>. 是否需要推荐0：需要 1：不需要
	 */
	public final TableField<JobPositionRecord, Integer> IS_RECOM = createField("is_recom", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "是否需要推荐0：需要 1：不需要");

	/**
	 * The column <code>jobDB.job_position.industry</code>. 所属行业
	 */
	public final TableField<JobPositionRecord, String> INDUSTRY = createField("industry", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "所属行业");

	/**
	 * The column <code>jobDB.job_position.hongbao_config_id</code>.
	 */
	public final TableField<JobPositionRecord, Integer> HONGBAO_CONFIG_ID = createField("hongbao_config_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>jobDB.job_position.hongbao_config_recom_id</code>.
	 */
	public final TableField<JobPositionRecord, Integer> HONGBAO_CONFIG_RECOM_ID = createField("hongbao_config_recom_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>jobDB.job_position.hongbao_config_app_id</code>.
	 */
	public final TableField<JobPositionRecord, Integer> HONGBAO_CONFIG_APP_ID = createField("hongbao_config_app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>jobDB.job_position.email_resume_conf</code>. 0:允许使用email简历进行投递；1:不允许使用email简历投递
	 */
	public final TableField<JobPositionRecord, Byte> EMAIL_RESUME_CONF = createField("email_resume_conf", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:允许使用email简历进行投递；1:不允许使用email简历投递");

	/**
	 * The column <code>jobDB.job_position.l_PostingTargetId</code>. lumesse每一个职位会生成一个PostingTargetId,用来生成每个职位的投递邮箱地址
	 */
	public final TableField<JobPositionRecord, Integer> L_POSTINGTARGETID = createField("l_PostingTargetId", org.jooq.impl.SQLDataType.INTEGER, this, "lumesse每一个职位会生成一个PostingTargetId,用来生成每个职位的投递邮箱地址");

	/**
	 * The column <code>jobDB.job_position.priority</code>. 是否置顶
	 */
	public final TableField<JobPositionRecord, Byte> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "是否置顶");

	/**
	 * The column <code>jobDB.job_position.share_tpl_id</code>. 分享分类0:无1:高大上2：小清新3：逗比
	 */
	public final TableField<JobPositionRecord, Short> SHARE_TPL_ID = createField("share_tpl_id", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), this, "分享分类0:无1:高大上2：小清新3：逗比");

	/**
	 * The column <code>jobDB.job_position.district</code>. 添加区(省市区的区)
	 */
	public final TableField<JobPositionRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "添加区(省市区的区)");

	/**
	 * The column <code>jobDB.job_position.count</code>. 添加招聘人数, 0：不限
	 */
	public final TableField<JobPositionRecord, Short> COUNT = createField("count", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "添加招聘人数, 0：不限");

	/**
	 * The column <code>jobDB.job_position.salary_top</code>. 薪资上限（k）
	 */
	public final TableField<JobPositionRecord, Integer> SALARY_TOP = createField("salary_top", org.jooq.impl.SQLDataType.INTEGER, this, "薪资上限（k）");

	/**
	 * The column <code>jobDB.job_position.salary_bottom</code>. 薪资下限（k）
	 */
	public final TableField<JobPositionRecord, Integer> SALARY_BOTTOM = createField("salary_bottom", org.jooq.impl.SQLDataType.INTEGER, this, "薪资下限（k）");

	/**
	 * The column <code>jobDB.job_position.experience_above</code>. 及以上 1：需要， 0：不需要
	 */
	public final TableField<JobPositionRecord, Byte> EXPERIENCE_ABOVE = createField("experience_above", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "及以上 1：需要， 0：不需要");

	/**
	 * The column <code>jobDB.job_position.degree_above</code>. 及以上 1：需要， 0：不需要
	 */
	public final TableField<JobPositionRecord, Byte> DEGREE_ABOVE = createField("degree_above", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "及以上 1：需要， 0：不需要");

	/**
	 * The column <code>jobDB.job_position.management_experience</code>. 是否要求管理经验0：需要1：不需要
	 */
	public final TableField<JobPositionRecord, Byte> MANAGEMENT_EXPERIENCE = createField("management_experience", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "是否要求管理经验0：需要1：不需要");

	/**
	 * The column <code>jobDB.job_position.gender</code>. 0-> female, 1->male, 2->all
	 */
	public final TableField<JobPositionRecord, Byte> GENDER = createField("gender", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0-> female, 1->male, 2->all");

	/**
	 * The column <code>jobDB.job_position.publisher</code>. hr_account.id
	 */
	public final TableField<JobPositionRecord, Integer> PUBLISHER = createField("publisher", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "hr_account.id");

	/**
	 * The column <code>jobDB.job_position.app_cv_config_id</code>. 职位开启并配置自定义模板 hr_app_cv_conf.id
	 */
	public final TableField<JobPositionRecord, Integer> APP_CV_CONFIG_ID = createField("app_cv_config_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "职位开启并配置自定义模板 hr_app_cv_conf.id");

	/**
	 * The column <code>jobDB.job_position.source</code>. 0:手动创建, 1:导入, 9:ATS导入
	 */
	public final TableField<JobPositionRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0:手动创建, 1:导入, 9:ATS导入");

	/**
	 * The column <code>jobDB.job_position.hb_status</code>. 是否正参加活动：0=未参加  1=正参加点击红包活动  2=正参加被申请红包活动  3=正参加1+2红包活动
	 */
	public final TableField<JobPositionRecord, Byte> HB_STATUS = createField("hb_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "是否正参加活动：0=未参加  1=正参加点击红包活动  2=正参加被申请红包活动  3=正参加1+2红包活动");

	/**
	 * Create a <code>jobDB.job_position</code> table reference
	 */
	public JobPosition() {
		this("job_position", null);
	}

	/**
	 * Create an aliased <code>jobDB.job_position</code> table reference
	 */
	public JobPosition(String alias) {
		this(alias, JOB_POSITION);
	}

	private JobPosition(String alias, Table<JobPositionRecord> aliased) {
		this(alias, aliased, null);
	}

	private JobPosition(String alias, Table<JobPositionRecord> aliased, Field<?>[] parameters) {
		super(alias, Jobdb.JOBDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<JobPositionRecord, Integer> getIdentity() {
		return Keys.IDENTITY_JOB_POSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<JobPositionRecord> getPrimaryKey() {
		return Keys.KEY_JOB_POSITION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<JobPositionRecord>> getKeys() {
		return Arrays.<UniqueKey<JobPositionRecord>>asList(Keys.KEY_JOB_POSITION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JobPosition as(String alias) {
		return new JobPosition(alias, this);
	}

	/**
	 * Rename this table
	 */
	public JobPosition rename(String name) {
		return new JobPosition(name, null);
	}
}
