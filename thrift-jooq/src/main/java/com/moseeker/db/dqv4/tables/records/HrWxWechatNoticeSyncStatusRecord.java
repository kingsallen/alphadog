/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.dqv4.tables.records;


import com.moseeker.db.dqv4.tables.HrWxWechatNoticeSyncStatus;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 微信消息通知同步状态
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrWxWechatNoticeSyncStatusRecord extends UpdatableRecordImpl<HrWxWechatNoticeSyncStatusRecord> implements Record5<UInteger, UInteger, Integer, Integer, Timestamp> {

	private static final long serialVersionUID = -1925582766;

	/**
	 * Setter for <code>dqv4.hr_wx_wechat_notice_sync_status.id</code>. 主key
	 */
	public void setId(UInteger value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dqv4.hr_wx_wechat_notice_sync_status.id</code>. 主key
	 */
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>dqv4.hr_wx_wechat_notice_sync_status.wechat_id</code>. 所属公众号
	 */
	public void setWechatId(UInteger value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dqv4.hr_wx_wechat_notice_sync_status.wechat_id</code>. 所属公众号
	 */
	public UInteger getWechatId() {
		return (UInteger) getValue(1);
	}

	/**
	 * Setter for <code>dqv4.hr_wx_wechat_notice_sync_status.status</code>. 同步状态 0:成功, 1:行业修改失败, 2:模板数量超出上限, 3:接口调用失败
	 */
	public void setStatus(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dqv4.hr_wx_wechat_notice_sync_status.status</code>. 同步状态 0:成功, 1:行业修改失败, 2:模板数量超出上限, 3:接口调用失败
	 */
	public Integer getStatus() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>dqv4.hr_wx_wechat_notice_sync_status.count</code>. 同步状态提示应该删除信息的数量
	 */
	public void setCount(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dqv4.hr_wx_wechat_notice_sync_status.count</code>. 同步状态提示应该删除信息的数量
	 */
	public Integer getCount() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>dqv4.hr_wx_wechat_notice_sync_status.update_time</code>.
	 */
	public void setUpdateTime(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dqv4.hr_wx_wechat_notice_sync_status.update_time</code>.
	 */
	public Timestamp getUpdateTime() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UInteger, UInteger, Integer, Integer, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UInteger, UInteger, Integer, Integer, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field2() {
		return HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS.WECHAT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS.COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS.UPDATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value2() {
		return getWechatId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getUpdateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord value2(UInteger value) {
		setWechatId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord value3(Integer value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord value4(Integer value) {
		setCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord value5(Timestamp value) {
		setUpdateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HrWxWechatNoticeSyncStatusRecord values(UInteger value1, UInteger value2, Integer value3, Integer value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached HrWxWechatNoticeSyncStatusRecord
	 */
	public HrWxWechatNoticeSyncStatusRecord() {
		super(HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS);
	}

	/**
	 * Create a detached, initialised HrWxWechatNoticeSyncStatusRecord
	 */
	public HrWxWechatNoticeSyncStatusRecord(UInteger id, UInteger wechatId, Integer status, Integer count, Timestamp updateTime) {
		super(HrWxWechatNoticeSyncStatus.HR_WX_WECHAT_NOTICE_SYNC_STATUS);

		setValue(0, id);
		setValue(1, wechatId);
		setValue(2, status);
		setValue(3, count);
		setValue(4, updateTime);
	}
}
