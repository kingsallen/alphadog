/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.analytics.tables.records;


import com.moseeker.db.analytics.tables.StmPcEvent;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 请求事件元数据表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StmPcEventRecord extends UpdatableRecordImpl<StmPcEventRecord> implements Record20<Integer, String, Integer, Integer, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, String, Timestamp> {

	private static final long serialVersionUID = -1191881633;

	/**
	 * Setter for <code>analytics.stm_pc_event.id</code>. primary key
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.id</code>. primary key
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.req_type</code>. 请求类型外键
	 */
	public void setReqType(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.req_type</code>. 请求类型外键
	 */
	public String getReqType() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.status_code</code>. 状态码 (200.404,etc)
	 */
	public void setStatusCode(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.status_code</code>. 状态码 (200.404,etc)
	 */
	public Integer getStatusCode() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.wechat_id</code>. 微信公共号id
	 */
	public void setWechatId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.wechat_id</code>. 微信公共号id
	 */
	public Integer getWechatId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.res_type</code>. 返回类型外键
	 */
	public void setResType(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.res_type</code>. 返回类型外键
	 */
	public String getResType() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.handler</code>. handler处理文件
	 */
	public void setHandler(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.handler</code>. handler处理文件
	 */
	public String getHandler() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.wechat_type</code>. 微信公共号类型
	 */
	public void setWechatType(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.wechat_type</code>. 微信公共号类型
	 */
	public Integer getWechatType() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.open_id</code>. 微信绑定id
	 */
	public void setOpenId(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.open_id</code>. 微信绑定id
	 */
	public String getOpenId() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.dquser_id</code>. Moseeker注册id
	 */
	public void setDquserId(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.dquser_id</code>. Moseeker注册id
	 */
	public String getDquserId() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.viewer_id</code>. 系统分配的访问者id
	 */
	public void setViewerId(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.viewer_id</code>. 系统分配的访问者id
	 */
	public String getViewerId() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.res_content</code>. 返回内容
	 */
	public void setResContent(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.res_content</code>. 返回内容
	 */
	public String getResContent() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.referer</code>. 来源
	 */
	public void setReferer(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.referer</code>. 来源
	 */
	public String getReferer() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.req_uri</code>. 请求uri
	 */
	public void setReqUri(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.req_uri</code>. 请求uri
	 */
	public String getReqUri() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.req_params</code>. 请求参数
	 */
	public void setReqParams(String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.req_params</code>. 请求参数
	 */
	public String getReqParams() {
		return (String) getValue(13);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.event</code>. 事件类型外键
	 */
	public void setEvent(String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.event</code>. 事件类型外键
	 */
	public String getEvent() {
		return (String) getValue(14);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.remote_ip</code>.
	 */
	public void setRemoteIp(String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.remote_ip</code>.
	 */
	public String getRemoteIp() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.session_id</code>. session id
	 */
	public void setSessionId(String value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.session_id</code>. session id
	 */
	public String getSessionId() {
		return (String) getValue(16);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.sys_user_cookie</code>. 用户的cookie内容
	 */
	public void setSysUserCookie(String value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.sys_user_cookie</code>. 用户的cookie内容
	 */
	public String getSysUserCookie() {
		return (String) getValue(17);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.useragent</code>. 客户端user agent
	 */
	public void setUseragent(String value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.useragent</code>. 客户端user agent
	 */
	public String getUseragent() {
		return (String) getValue(18);
	}

	/**
	 * Setter for <code>analytics.stm_pc_event.create_time</code>. 日志记录创建时间
	 */
	public void setCreateTime(Timestamp value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>analytics.stm_pc_event.create_time</code>. 日志记录创建时间
	 */
	public Timestamp getCreateTime() {
		return (Timestamp) getValue(19);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record20 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row20<Integer, String, Integer, Integer, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, String, Timestamp> fieldsRow() {
		return (Row20) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row20<Integer, String, Integer, Integer, String, String, Integer, String, String, String, String, String, String, String, String, String, String, String, String, Timestamp> valuesRow() {
		return (Row20) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return StmPcEvent.STM_PC_EVENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return StmPcEvent.STM_PC_EVENT.REQ_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return StmPcEvent.STM_PC_EVENT.STATUS_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return StmPcEvent.STM_PC_EVENT.WECHAT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return StmPcEvent.STM_PC_EVENT.RES_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return StmPcEvent.STM_PC_EVENT.HANDLER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return StmPcEvent.STM_PC_EVENT.WECHAT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return StmPcEvent.STM_PC_EVENT.OPEN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return StmPcEvent.STM_PC_EVENT.DQUSER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return StmPcEvent.STM_PC_EVENT.VIEWER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return StmPcEvent.STM_PC_EVENT.RES_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return StmPcEvent.STM_PC_EVENT.REFERER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return StmPcEvent.STM_PC_EVENT.REQ_URI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field14() {
		return StmPcEvent.STM_PC_EVENT.REQ_PARAMS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field15() {
		return StmPcEvent.STM_PC_EVENT.EVENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field16() {
		return StmPcEvent.STM_PC_EVENT.REMOTE_IP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field17() {
		return StmPcEvent.STM_PC_EVENT.SESSION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field18() {
		return StmPcEvent.STM_PC_EVENT.SYS_USER_COOKIE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field19() {
		return StmPcEvent.STM_PC_EVENT.USERAGENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field20() {
		return StmPcEvent.STM_PC_EVENT.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getReqType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getStatusCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getWechatId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getResType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getHandler();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getWechatType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getOpenId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getDquserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getViewerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getResContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getReferer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getReqUri();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value14() {
		return getReqParams();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value15() {
		return getEvent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value16() {
		return getRemoteIp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value17() {
		return getSessionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value18() {
		return getSysUserCookie();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value19() {
		return getUseragent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value20() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value2(String value) {
		setReqType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value3(Integer value) {
		setStatusCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value4(Integer value) {
		setWechatId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value5(String value) {
		setResType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value6(String value) {
		setHandler(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value7(Integer value) {
		setWechatType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value8(String value) {
		setOpenId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value9(String value) {
		setDquserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value10(String value) {
		setViewerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value11(String value) {
		setResContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value12(String value) {
		setReferer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value13(String value) {
		setReqUri(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value14(String value) {
		setReqParams(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value15(String value) {
		setEvent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value16(String value) {
		setRemoteIp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value17(String value) {
		setSessionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value18(String value) {
		setSysUserCookie(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value19(String value) {
		setUseragent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord value20(Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StmPcEventRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5, String value6, Integer value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, String value15, String value16, String value17, String value18, String value19, Timestamp value20) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		value17(value17);
		value18(value18);
		value19(value19);
		value20(value20);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StmPcEventRecord
	 */
	public StmPcEventRecord() {
		super(StmPcEvent.STM_PC_EVENT);
	}

	/**
	 * Create a detached, initialised StmPcEventRecord
	 */
	public StmPcEventRecord(Integer id, String reqType, Integer statusCode, Integer wechatId, String resType, String handler, Integer wechatType, String openId, String dquserId, String viewerId, String resContent, String referer, String reqUri, String reqParams, String event, String remoteIp, String sessionId, String sysUserCookie, String useragent, Timestamp createTime) {
		super(StmPcEvent.STM_PC_EVENT);

		setValue(0, id);
		setValue(1, reqType);
		setValue(2, statusCode);
		setValue(3, wechatId);
		setValue(4, resType);
		setValue(5, handler);
		setValue(6, wechatType);
		setValue(7, openId);
		setValue(8, dquserId);
		setValue(9, viewerId);
		setValue(10, resContent);
		setValue(11, referer);
		setValue(12, reqUri);
		setValue(13, reqParams);
		setValue(14, event);
		setValue(15, remoteIp);
		setValue(16, sessionId);
		setValue(17, sysUserCookie);
		setValue(18, useragent);
		setValue(19, createTime);
	}
}
