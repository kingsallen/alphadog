/*
 * This file is generated by jOOQ.
*/
package com.moseeker.db.dictdb.tables;


import com.moseeker.db.dictdb.Dictdb;
import com.moseeker.db.dictdb.Keys;
import com.moseeker.db.dictdb.tables.records.DictCityPostcodeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictCityPostcode extends TableImpl<DictCityPostcodeRecord> {

    private static final long serialVersionUID = -1414561654;

    /**
     * The reference instance of <code>dictdb.dict_city_postcode</code>
     */
    public static final DictCityPostcode DICT_CITY_POSTCODE = new DictCityPostcode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictCityPostcodeRecord> getRecordType() {
        return DictCityPostcodeRecord.class;
    }

    /**
     * The column <code>dictdb.dict_city_postcode.id</code>.
     */
    public final TableField<DictCityPostcodeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dictdb.dict_city_postcode.postcode</code>. 邮编
     */
    public final TableField<DictCityPostcodeRecord, String> POSTCODE = createField("postcode", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "邮编");

    /**
     * The column <code>dictdb.dict_city_postcode.province</code>. 省份
     */
    public final TableField<DictCityPostcodeRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "省份");

    /**
     * The column <code>dictdb.dict_city_postcode.city</code>. 城市
     */
    public final TableField<DictCityPostcodeRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "城市");

    /**
     * The column <code>dictdb.dict_city_postcode.district</code>. 地区或区县
     */
    public final TableField<DictCityPostcodeRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "地区或区县");

    /**
     * The column <code>dictdb.dict_city_postcode.code</code>. 行政区号
     */
    public final TableField<DictCityPostcodeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "行政区号");

    /**
     * Create a <code>dictdb.dict_city_postcode</code> table reference
     */
    public DictCityPostcode() {
        this("dict_city_postcode", null);
    }

    /**
     * Create an aliased <code>dictdb.dict_city_postcode</code> table reference
     */
    public DictCityPostcode(String alias) {
        this(alias, DICT_CITY_POSTCODE);
    }

    private DictCityPostcode(String alias, Table<DictCityPostcodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictCityPostcode(String alias, Table<DictCityPostcodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dictdb.DICTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictCityPostcodeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DICT_CITY_POSTCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictCityPostcodeRecord> getPrimaryKey() {
        return Keys.KEY_DICT_CITY_POSTCODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictCityPostcodeRecord>> getKeys() {
        return Arrays.<UniqueKey<DictCityPostcodeRecord>>asList(Keys.KEY_DICT_CITY_POSTCODE_PRIMARY, Keys.KEY_DICT_CITY_POSTCODE_DICT_CITY_POSTCODE_POSTCODE_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictCityPostcode as(String alias) {
        return new DictCityPostcode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictCityPostcode rename(String name) {
        return new DictCityPostcode(name, null);
    }
}
