/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.dictdb.tables;


import com.moseeker.db.dictdb.Dictdb;
import com.moseeker.db.dictdb.Keys;
import com.moseeker.db.dictdb.tables.records.DictIndustryRecord;
import com.moseeker.db.dictdb.tables.records.DictIndustryTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 行业二级分类字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictIndustry extends TableImpl<DictIndustryRecord> {

    private static final long serialVersionUID = -489282290;

    /**
     * The reference instance of <code>dictDB.dict_industry</code>
     */
    public static final DictIndustry DICT_INDUSTRY = new DictIndustry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictIndustryRecord> getRecordType() {
        return DictIndustryRecord.class;
    }

    /**
     * The column <code>dictDB.dict_industry.code</code>. 字典code
     */
    public final TableField<DictIndustryRecord, UInteger> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "字典code");

    /**
     * The column <code>dictDB.dict_industry.name</code>. 字典name
     */
    public final TableField<DictIndustryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "字典name");

    /**
     * The column <code>dictDB.dict_industry.type</code>. 字典分类code
     */
    public final TableField<DictIndustryRecord, DictIndustryTypeRecord> TYPE = createField("type", com.moseeker.db.dictdb.tables.DictIndustryType.DICT_INDUSTRY_TYPE.getDataType(), this, "字典分类code");

    /**
     * Create a <code>dictDB.dict_industry</code> table reference
     */
    public DictIndustry() {
        this("dict_industry", null);
    }

    /**
     * Create an aliased <code>dictDB.dict_industry</code> table reference
     */
    public DictIndustry(String alias) {
        this(alias, DICT_INDUSTRY);
    }

    private DictIndustry(String alias, Table<DictIndustryRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictIndustry(String alias, Table<DictIndustryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "行业二级分类字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dictdb.DICTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictIndustryRecord>> getKeys() {
        return Arrays.<UniqueKey<DictIndustryRecord>>asList(Keys.KEY_DICT_INDUSTRY_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictIndustry as(String alias) {
        return new DictIndustry(alias, this);
    }

    /**
     * Rename this table
     */
    public DictIndustry rename(String name) {
        return new DictIndustry(name, null);
    }
}
