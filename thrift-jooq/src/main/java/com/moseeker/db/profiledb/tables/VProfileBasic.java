/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.profiledb.tables;


import com.moseeker.db.profiledb.Profiledb;
import com.moseeker.db.profiledb.tables.records.VProfileBasicRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VProfileBasic extends TableImpl<VProfileBasicRecord> {

	private static final long serialVersionUID = 1253878186;

	/**
	 * The reference instance of <code>profiledb.v_profile_basic</code>
	 */
	public static final VProfileBasic V_PROFILE_BASIC = new VProfileBasic();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VProfileBasicRecord> getRecordType() {
		return VProfileBasicRecord.class;
	}

	/**
	 * The column <code>profiledb.v_profile_basic.id</code>. 主key
	 */
	public final TableField<VProfileBasicRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "主key");

	/**
	 * The column <code>profiledb.v_profile_basic.user_id</code>. 用户ID
	 */
	public final TableField<VProfileBasicRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "用户ID");

	/**
	 * The column <code>profiledb.v_profile_basic.name</code>.
	 */
	public final TableField<VProfileBasicRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>profiledb.v_profile_basic</code> table reference
	 */
	public VProfileBasic() {
		this("v_profile_basic", null);
	}

	/**
	 * Create an aliased <code>profiledb.v_profile_basic</code> table reference
	 */
	public VProfileBasic(String alias) {
		this(alias, V_PROFILE_BASIC);
	}

	private VProfileBasic(String alias, Table<VProfileBasicRecord> aliased) {
		this(alias, aliased, null);
	}

	private VProfileBasic(String alias, Table<VProfileBasicRecord> aliased, Field<?>[] parameters) {
		super(alias, Profiledb.PROFILEDB, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VProfileBasic as(String alias) {
		return new VProfileBasic(alias, this);
	}

	/**
	 * Rename this table
	 */
	public VProfileBasic rename(String name) {
		return new VProfileBasic(name, null);
	}
}
