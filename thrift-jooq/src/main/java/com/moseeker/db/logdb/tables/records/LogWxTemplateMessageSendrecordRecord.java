/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.logdb.tables.records;


import com.moseeker.db.logdb.tables.LogWxTemplateMessageSendrecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 模板消息发送结果记录
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogWxTemplateMessageSendrecordRecord extends UpdatableRecordImpl<LogWxTemplateMessageSendrecordRecord> implements Record15<UInteger, UInteger, UInteger, Long, String, String, String, String, UInteger, String, Timestamp, Timestamp, String, Integer, String> {

	private static final long serialVersionUID = 527017431;

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.id</code>. 主key
	 */
	public void setId(UInteger value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.id</code>. 主key
	 */
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.template_id</code>. 我的模板ID
	 */
	public void setTemplateId(UInteger value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.template_id</code>. 我的模板ID
	 */
	public UInteger getTemplateId() {
		return (UInteger) getValue(1);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.wechat_id</code>. 所属公众号
	 */
	public void setWechatId(UInteger value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.wechat_id</code>. 所属公众号
	 */
	public UInteger getWechatId() {
		return (UInteger) getValue(2);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.msgid</code>. 发送消息ID
	 */
	public void setMsgid(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.msgid</code>. 发送消息ID
	 */
	public Long getMsgid() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.open_id</code>. 微信用户OPENID
	 */
	public void setOpenId(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.open_id</code>. 微信用户OPENID
	 */
	public String getOpenId() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.url</code>. link
	 */
	public void setUrl(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.url</code>. link
	 */
	public String getUrl() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.topcolor</code>. 信息顶部颜色
	 */
	public void setTopcolor(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.topcolor</code>. 信息顶部颜色
	 */
	public String getTopcolor() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.jsondata</code>. 发送的json数据
	 */
	public void setJsondata(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.jsondata</code>. 发送的json数据
	 */
	public String getJsondata() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.errcode</code>. 返回结果值
	 */
	public void setErrcode(UInteger value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.errcode</code>. 返回结果值
	 */
	public UInteger getErrcode() {
		return (UInteger) getValue(8);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.errmsg</code>. 返回提示信息
	 */
	public void setErrmsg(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.errmsg</code>. 返回提示信息
	 */
	public String getErrmsg() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.sendtime</code>. 发送时间
	 */
	public void setSendtime(Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.sendtime</code>. 发送时间
	 */
	public Timestamp getSendtime() {
		return (Timestamp) getValue(10);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.updatetime</code>. 反馈状态时间
	 */
	public void setUpdatetime(Timestamp value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.updatetime</code>. 反馈状态时间
	 */
	public Timestamp getUpdatetime() {
		return (Timestamp) getValue(11);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.sendstatus</code>. 发送状态
	 */
	public void setSendstatus(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.sendstatus</code>. 发送状态
	 */
	public String getSendstatus() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.sendtype</code>. 发送类型 0:微信 1:邮件 2:短信
	 */
	public void setSendtype(Integer value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.sendtype</code>. 发送类型 0:微信 1:邮件 2:短信
	 */
	public Integer getSendtype() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>logdb.log_wx_template_message_sendrecord.access_token</code>. 发送时的access_token
	 */
	public void setAccessToken(String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>logdb.log_wx_template_message_sendrecord.access_token</code>. 发送时的access_token
	 */
	public String getAccessToken() {
		return (String) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<UInteger, UInteger, UInteger, Long, String, String, String, String, UInteger, String, Timestamp, Timestamp, String, Integer, String> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<UInteger, UInteger, UInteger, Long, String, String, String, String, UInteger, String, Timestamp, Timestamp, String, Integer, String> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field2() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.TEMPLATE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field3() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.WECHAT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.MSGID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.OPEN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.TOPCOLOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.JSONDATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field9() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.ERRCODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.ERRMSG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field11() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.SENDTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field12() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.UPDATETIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.SENDSTATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field14() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.SENDTYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field15() {
		return LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD.ACCESS_TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value2() {
		return getTemplateId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value3() {
		return getWechatId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getMsgid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getOpenId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getTopcolor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getJsondata();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value9() {
		return getErrcode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getErrmsg();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value11() {
		return getSendtime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value12() {
		return getUpdatetime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getSendstatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value14() {
		return getSendtype();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value15() {
		return getAccessToken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value2(UInteger value) {
		setTemplateId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value3(UInteger value) {
		setWechatId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value4(Long value) {
		setMsgid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value5(String value) {
		setOpenId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value6(String value) {
		setUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value7(String value) {
		setTopcolor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value8(String value) {
		setJsondata(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value9(UInteger value) {
		setErrcode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value10(String value) {
		setErrmsg(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value11(Timestamp value) {
		setSendtime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value12(Timestamp value) {
		setUpdatetime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value13(String value) {
		setSendstatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value14(Integer value) {
		setSendtype(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord value15(String value) {
		setAccessToken(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWxTemplateMessageSendrecordRecord values(UInteger value1, UInteger value2, UInteger value3, Long value4, String value5, String value6, String value7, String value8, UInteger value9, String value10, Timestamp value11, Timestamp value12, String value13, Integer value14, String value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LogWxTemplateMessageSendrecordRecord
	 */
	public LogWxTemplateMessageSendrecordRecord() {
		super(LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD);
	}

	/**
	 * Create a detached, initialised LogWxTemplateMessageSendrecordRecord
	 */
	public LogWxTemplateMessageSendrecordRecord(UInteger id, UInteger templateId, UInteger wechatId, Long msgid, String openId, String url, String topcolor, String jsondata, UInteger errcode, String errmsg, Timestamp sendtime, Timestamp updatetime, String sendstatus, Integer sendtype, String accessToken) {
		super(LogWxTemplateMessageSendrecord.LOG_WX_TEMPLATE_MESSAGE_SENDRECORD);

		setValue(0, id);
		setValue(1, templateId);
		setValue(2, wechatId);
		setValue(3, msgid);
		setValue(4, openId);
		setValue(5, url);
		setValue(6, topcolor);
		setValue(7, jsondata);
		setValue(8, errcode);
		setValue(9, errmsg);
		setValue(10, sendtime);
		setValue(11, updatetime);
		setValue(12, sendstatus);
		setValue(13, sendtype);
		setValue(14, accessToken);
	}
}
