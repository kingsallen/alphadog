/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.logdb.tables;


import com.moseeker.db.logdb.Keys;
import com.moseeker.db.logdb.Logdb;
import com.moseeker.db.logdb.tables.records.LogSmsRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 短信发送记录表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogSmsRecord extends TableImpl<LogSmsRecordRecord> {

	private static final long serialVersionUID = -624280032;

	/**
	 * The reference instance of <code>logDB.log_sms_record</code>
	 */
	public static final LogSmsRecord LOG_SMS_RECORD = new LogSmsRecord();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LogSmsRecordRecord> getRecordType() {
		return LogSmsRecordRecord.class;
	}

	/**
	 * The column <code>logDB.log_sms_record.id</code>.
	 */
	public final TableField<LogSmsRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>logDB.log_sms_record.sys</code>. 来自系统，0:未知 1:platform 2:qx 3:hr 4:官网 9:script
	 */
	public final TableField<LogSmsRecordRecord, Byte> SYS = createField("sys", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "来自系统，0:未知 1:platform 2:qx 3:hr 4:官网 9:script");

	/**
	 * The column <code>logDB.log_sms_record.mobile</code>.
	 */
	public final TableField<LogSmsRecordRecord, Long> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>logDB.log_sms_record.msg</code>. 发送内容
	 */
	public final TableField<LogSmsRecordRecord, String> MSG = createField("msg", org.jooq.impl.SQLDataType.CLOB, this, "发送内容");

	/**
	 * The column <code>logDB.log_sms_record.ip</code>. IP
	 */
	public final TableField<LogSmsRecordRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "IP");

	/**
	 * The column <code>logDB.log_sms_record.create_time</code>.
	 */
	public final TableField<LogSmsRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>logDB.log_sms_record</code> table reference
	 */
	public LogSmsRecord() {
		this("log_sms_record", null);
	}

	/**
	 * Create an aliased <code>logDB.log_sms_record</code> table reference
	 */
	public LogSmsRecord(String alias) {
		this(alias, LOG_SMS_RECORD);
	}

	private LogSmsRecord(String alias, Table<LogSmsRecordRecord> aliased) {
		this(alias, aliased, null);
	}

	private LogSmsRecord(String alias, Table<LogSmsRecordRecord> aliased, Field<?>[] parameters) {
		super(alias, Logdb.LOGDB, aliased, parameters, "短信发送记录表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LogSmsRecordRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_LOG_SMS_RECORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LogSmsRecordRecord> getPrimaryKey() {
		return Keys.KEY_LOG_SMS_RECORD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LogSmsRecordRecord>> getKeys() {
		return Arrays.<UniqueKey<LogSmsRecordRecord>>asList(Keys.KEY_LOG_SMS_RECORD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogSmsRecord as(String alias) {
		return new LogSmsRecord(alias, this);
	}

	/**
	 * Rename this table
	 */
	public LogSmsRecord rename(String name) {
		return new LogSmsRecord(name, null);
	}
}
