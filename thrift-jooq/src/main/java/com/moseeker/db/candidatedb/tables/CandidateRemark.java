/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.candidatedb.tables;


import com.moseeker.db.candidatedb.Candidatedb;
import com.moseeker.db.candidatedb.Keys;
import com.moseeker.db.candidatedb.tables.records.CandidateRemarkRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * HR对候选人备注信息信息
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CandidateRemark extends TableImpl<CandidateRemarkRecord> {

	private static final long serialVersionUID = 1806063319;

	/**
	 * The reference instance of <code>candidateDB.candidate_remark</code>
	 */
	public static final CandidateRemark CANDIDATE_REMARK = new CandidateRemark();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CandidateRemarkRecord> getRecordType() {
		return CandidateRemarkRecord.class;
	}

	/**
	 * The column <code>candidateDB.candidate_remark.id</code>.
	 */
	public final TableField<CandidateRemarkRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>candidateDB.candidate_remark.hraccount_id</code>. 做候选人标记的账号编号 hr_account.id
	 */
	public final TableField<CandidateRemarkRecord, Integer> HRACCOUNT_ID = createField("hraccount_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "做候选人标记的账号编号 hr_account.id");

	/**
	 * The column <code>candidateDB.candidate_remark.wxuser_id</code>. wx_group_user.id 被推荐者 微信 ID
	 */
	public final TableField<CandidateRemarkRecord, Integer> WXUSER_ID = createField("wxuser_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "wx_group_user.id 被推荐者 微信 ID");

	/**
	 * The column <code>candidateDB.candidate_remark.gender</code>. 0：未知，1：男，2：女
	 */
	public final TableField<CandidateRemarkRecord, Integer> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "0：未知，1：男，2：女");

	/**
	 * The column <code>candidateDB.candidate_remark.age</code>. 年龄
	 */
	public final TableField<CandidateRemarkRecord, String> AGE = createField("age", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaulted(true), this, "年龄");

	/**
	 * The column <code>candidateDB.candidate_remark.mobile</code>. 联系方式
	 */
	public final TableField<CandidateRemarkRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaulted(true), this, "联系方式");

	/**
	 * The column <code>candidateDB.candidate_remark.email</code>. 邮箱
	 */
	public final TableField<CandidateRemarkRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "邮箱");

	/**
	 * The column <code>candidateDB.candidate_remark.current_company</code>. 现处公司
	 */
	public final TableField<CandidateRemarkRecord, String> CURRENT_COMPANY = createField("current_company", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "现处公司");

	/**
	 * The column <code>candidateDB.candidate_remark.current_position</code>. 职务
	 */
	public final TableField<CandidateRemarkRecord, String> CURRENT_POSITION = createField("current_position", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "职务");

	/**
	 * The column <code>candidateDB.candidate_remark.education</code>. 毕业院校
	 */
	public final TableField<CandidateRemarkRecord, String> EDUCATION = createField("education", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "毕业院校");

	/**
	 * The column <code>candidateDB.candidate_remark.degree</code>. 学历
	 */
	public final TableField<CandidateRemarkRecord, String> DEGREE = createField("degree", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "学历");

	/**
	 * The column <code>candidateDB.candidate_remark.graduate_at</code>. 毕业时间
	 */
	public final TableField<CandidateRemarkRecord, Timestamp> GRADUATE_AT = createField("graduate_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "毕业时间");

	/**
	 * The column <code>candidateDB.candidate_remark.is_star</code>. 0: 星标 1: 没有星标
	 */
	public final TableField<CandidateRemarkRecord, Byte> IS_STAR = createField("is_star", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0: 星标 1: 没有星标");

	/**
	 * The column <code>candidateDB.candidate_remark.remark</code>. 备注
	 */
	public final TableField<CandidateRemarkRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(20000).nullable(false).defaulted(true), this, "备注");

	/**
	 * The column <code>candidateDB.candidate_remark.create_time</code>. 创建时间
	 */
	public final TableField<CandidateRemarkRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>candidateDB.candidate_remark.update_time</code>. 修改时间
	 */
	public final TableField<CandidateRemarkRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "修改时间");

	/**
	 * The column <code>candidateDB.candidate_remark.status</code>. 0: 新数据 1: 正常 2:被忽略
	 */
	public final TableField<CandidateRemarkRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "0: 新数据 1: 正常 2:被忽略");

	/**
	 * The column <code>candidateDB.candidate_remark.name</code>. 候选人姓名
	 */
	public final TableField<CandidateRemarkRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "候选人姓名");

	/**
	 * Create a <code>candidateDB.candidate_remark</code> table reference
	 */
	public CandidateRemark() {
		this("candidate_remark", null);
	}

	/**
	 * Create an aliased <code>candidateDB.candidate_remark</code> table reference
	 */
	public CandidateRemark(String alias) {
		this(alias, CANDIDATE_REMARK);
	}

	private CandidateRemark(String alias, Table<CandidateRemarkRecord> aliased) {
		this(alias, aliased, null);
	}

	private CandidateRemark(String alias, Table<CandidateRemarkRecord> aliased, Field<?>[] parameters) {
		super(alias, Candidatedb.CANDIDATEDB, aliased, parameters, "HR对候选人备注信息信息");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CandidateRemarkRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_CANDIDATE_REMARK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CandidateRemarkRecord> getPrimaryKey() {
		return Keys.KEY_CANDIDATE_REMARK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CandidateRemarkRecord>> getKeys() {
		return Arrays.<UniqueKey<CandidateRemarkRecord>>asList(Keys.KEY_CANDIDATE_REMARK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CandidateRemark as(String alias) {
		return new CandidateRemark(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CandidateRemark rename(String name) {
		return new CandidateRemark(name, null);
	}
}
