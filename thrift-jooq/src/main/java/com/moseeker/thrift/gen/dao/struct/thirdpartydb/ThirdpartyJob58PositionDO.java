/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.thirdpartydb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-11-27")
public class ThirdpartyJob58PositionDO implements org.apache.thrift.TBase<ThirdpartyJob58PositionDO, ThirdpartyJob58PositionDO._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdpartyJob58PositionDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdpartyJob58PositionDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ADDRESS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("addressId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("addressName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("occupation", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField FEATURES_FIELD_DESC = new org.apache.thrift.protocol.TField("features", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SALARY_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryTop", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField SALARY_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryBottom", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SALARY_DISCUSS_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryDiscuss", org.apache.thrift.protocol.TType.BYTE, (short)9);
  private static final org.apache.thrift.protocol.TField FRESH_GRADUATE_FIELD_DESC = new org.apache.thrift.protocol.TField("freshGraduate", org.apache.thrift.protocol.TType.BYTE, (short)10);
  private static final org.apache.thrift.protocol.TField SHOW_CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("showContact", org.apache.thrift.protocol.TType.BYTE, (short)11);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdpartyJob58PositionDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdpartyJob58PositionDOTupleSchemeFactory();

  public int id; // optional
  public int pid; // optional
  public int addressId; // optional
  public String addressName; // optional
  public int occupation; // optional
  public String features; // optional
  public int salaryTop; // optional
  public int salaryBottom; // optional
  public byte salaryDiscuss; // optional
  public byte freshGraduate; // optional
  public byte showContact; // optional
  public byte status; // optional
  public String createTime; // optional
  public String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PID((short)2, "pid"),
    ADDRESS_ID((short)3, "addressId"),
    ADDRESS_NAME((short)4, "addressName"),
    OCCUPATION((short)5, "occupation"),
    FEATURES((short)6, "features"),
    SALARY_TOP((short)7, "salaryTop"),
    SALARY_BOTTOM((short)8, "salaryBottom"),
    SALARY_DISCUSS((short)9, "salaryDiscuss"),
    FRESH_GRADUATE((short)10, "freshGraduate"),
    SHOW_CONTACT((short)11, "showContact"),
    STATUS((short)12, "status"),
    CREATE_TIME((short)13, "createTime"),
    UPDATE_TIME((short)14, "updateTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PID
          return PID;
        case 3: // ADDRESS_ID
          return ADDRESS_ID;
        case 4: // ADDRESS_NAME
          return ADDRESS_NAME;
        case 5: // OCCUPATION
          return OCCUPATION;
        case 6: // FEATURES
          return FEATURES;
        case 7: // SALARY_TOP
          return SALARY_TOP;
        case 8: // SALARY_BOTTOM
          return SALARY_BOTTOM;
        case 9: // SALARY_DISCUSS
          return SALARY_DISCUSS;
        case 10: // FRESH_GRADUATE
          return FRESH_GRADUATE;
        case 11: // SHOW_CONTACT
          return SHOW_CONTACT;
        case 12: // STATUS
          return STATUS;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PID_ISSET_ID = 1;
  private static final int __ADDRESSID_ISSET_ID = 2;
  private static final int __OCCUPATION_ISSET_ID = 3;
  private static final int __SALARYTOP_ISSET_ID = 4;
  private static final int __SALARYBOTTOM_ISSET_ID = 5;
  private static final int __SALARYDISCUSS_ISSET_ID = 6;
  private static final int __FRESHGRADUATE_ISSET_ID = 7;
  private static final int __SHOWCONTACT_ISSET_ID = 8;
  private static final int __STATUS_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.PID,_Fields.ADDRESS_ID,_Fields.ADDRESS_NAME,_Fields.OCCUPATION,_Fields.FEATURES,_Fields.SALARY_TOP,_Fields.SALARY_BOTTOM,_Fields.SALARY_DISCUSS,_Fields.FRESH_GRADUATE,_Fields.SHOW_CONTACT,_Fields.STATUS,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADDRESS_ID, new org.apache.thrift.meta_data.FieldMetaData("addressId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADDRESS_NAME, new org.apache.thrift.meta_data.FieldMetaData("addressName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("occupation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEATURES, new org.apache.thrift.meta_data.FieldMetaData("features", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY_TOP, new org.apache.thrift.meta_data.FieldMetaData("salaryTop", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("salaryBottom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_DISCUSS, new org.apache.thrift.meta_data.FieldMetaData("salaryDiscuss", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.FRESH_GRADUATE, new org.apache.thrift.meta_data.FieldMetaData("freshGraduate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SHOW_CONTACT, new org.apache.thrift.meta_data.FieldMetaData("showContact", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdpartyJob58PositionDO.class, metaDataMap);
  }

  public ThirdpartyJob58PositionDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdpartyJob58PositionDO(ThirdpartyJob58PositionDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.pid = other.pid;
    this.addressId = other.addressId;
    if (other.isSetAddressName()) {
      this.addressName = other.addressName;
    }
    this.occupation = other.occupation;
    if (other.isSetFeatures()) {
      this.features = other.features;
    }
    this.salaryTop = other.salaryTop;
    this.salaryBottom = other.salaryBottom;
    this.salaryDiscuss = other.salaryDiscuss;
    this.freshGraduate = other.freshGraduate;
    this.showContact = other.showContact;
    this.status = other.status;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public ThirdpartyJob58PositionDO deepCopy() {
    return new ThirdpartyJob58PositionDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPidIsSet(false);
    this.pid = 0;
    setAddressIdIsSet(false);
    this.addressId = 0;
    this.addressName = null;
    setOccupationIsSet(false);
    this.occupation = 0;
    this.features = null;
    setSalaryTopIsSet(false);
    this.salaryTop = 0;
    setSalaryBottomIsSet(false);
    this.salaryBottom = 0;
    setSalaryDiscussIsSet(false);
    this.salaryDiscuss = 0;
    setFreshGraduateIsSet(false);
    this.freshGraduate = 0;
    setShowContactIsSet(false);
    this.showContact = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public ThirdpartyJob58PositionDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPid() {
    return this.pid;
  }

  public ThirdpartyJob58PositionDO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getAddressId() {
    return this.addressId;
  }

  public ThirdpartyJob58PositionDO setAddressId(int addressId) {
    this.addressId = addressId;
    setAddressIdIsSet(true);
    return this;
  }

  public void unsetAddressId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ADDRESSID_ISSET_ID);
  }

  /** Returns true if field addressId is set (has been assigned a value) and false otherwise */
  public boolean isSetAddressId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ADDRESSID_ISSET_ID);
  }

  public void setAddressIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ADDRESSID_ISSET_ID, value);
  }

  public String getAddressName() {
    return this.addressName;
  }

  public ThirdpartyJob58PositionDO setAddressName(String addressName) {
    this.addressName = addressName;
    return this;
  }

  public void unsetAddressName() {
    this.addressName = null;
  }

  /** Returns true if field addressName is set (has been assigned a value) and false otherwise */
  public boolean isSetAddressName() {
    return this.addressName != null;
  }

  public void setAddressNameIsSet(boolean value) {
    if (!value) {
      this.addressName = null;
    }
  }

  public int getOccupation() {
    return this.occupation;
  }

  public ThirdpartyJob58PositionDO setOccupation(int occupation) {
    this.occupation = occupation;
    setOccupationIsSet(true);
    return this;
  }

  public void unsetOccupation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OCCUPATION_ISSET_ID);
  }

  /** Returns true if field occupation is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OCCUPATION_ISSET_ID);
  }

  public void setOccupationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OCCUPATION_ISSET_ID, value);
  }

  public String getFeatures() {
    return this.features;
  }

  public ThirdpartyJob58PositionDO setFeatures(String features) {
    this.features = features;
    return this;
  }

  public void unsetFeatures() {
    this.features = null;
  }

  /** Returns true if field features is set (has been assigned a value) and false otherwise */
  public boolean isSetFeatures() {
    return this.features != null;
  }

  public void setFeaturesIsSet(boolean value) {
    if (!value) {
      this.features = null;
    }
  }

  public int getSalaryTop() {
    return this.salaryTop;
  }

  public ThirdpartyJob58PositionDO setSalaryTop(int salaryTop) {
    this.salaryTop = salaryTop;
    setSalaryTopIsSet(true);
    return this;
  }

  public void unsetSalaryTop() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARYTOP_ISSET_ID);
  }

  /** Returns true if field salaryTop is set (has been assigned a value) and false otherwise */
  public boolean isSetSalaryTop() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARYTOP_ISSET_ID);
  }

  public void setSalaryTopIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARYTOP_ISSET_ID, value);
  }

  public int getSalaryBottom() {
    return this.salaryBottom;
  }

  public ThirdpartyJob58PositionDO setSalaryBottom(int salaryBottom) {
    this.salaryBottom = salaryBottom;
    setSalaryBottomIsSet(true);
    return this;
  }

  public void unsetSalaryBottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID);
  }

  /** Returns true if field salaryBottom is set (has been assigned a value) and false otherwise */
  public boolean isSetSalaryBottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID);
  }

  public void setSalaryBottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID, value);
  }

  public byte getSalaryDiscuss() {
    return this.salaryDiscuss;
  }

  public ThirdpartyJob58PositionDO setSalaryDiscuss(byte salaryDiscuss) {
    this.salaryDiscuss = salaryDiscuss;
    setSalaryDiscussIsSet(true);
    return this;
  }

  public void unsetSalaryDiscuss() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARYDISCUSS_ISSET_ID);
  }

  /** Returns true if field salaryDiscuss is set (has been assigned a value) and false otherwise */
  public boolean isSetSalaryDiscuss() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARYDISCUSS_ISSET_ID);
  }

  public void setSalaryDiscussIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARYDISCUSS_ISSET_ID, value);
  }

  public byte getFreshGraduate() {
    return this.freshGraduate;
  }

  public ThirdpartyJob58PositionDO setFreshGraduate(byte freshGraduate) {
    this.freshGraduate = freshGraduate;
    setFreshGraduateIsSet(true);
    return this;
  }

  public void unsetFreshGraduate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FRESHGRADUATE_ISSET_ID);
  }

  /** Returns true if field freshGraduate is set (has been assigned a value) and false otherwise */
  public boolean isSetFreshGraduate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FRESHGRADUATE_ISSET_ID);
  }

  public void setFreshGraduateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FRESHGRADUATE_ISSET_ID, value);
  }

  public byte getShowContact() {
    return this.showContact;
  }

  public ThirdpartyJob58PositionDO setShowContact(byte showContact) {
    this.showContact = showContact;
    setShowContactIsSet(true);
    return this;
  }

  public void unsetShowContact() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOWCONTACT_ISSET_ID);
  }

  /** Returns true if field showContact is set (has been assigned a value) and false otherwise */
  public boolean isSetShowContact() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOWCONTACT_ISSET_ID);
  }

  public void setShowContactIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOWCONTACT_ISSET_ID, value);
  }

  public byte getStatus() {
    return this.status;
  }

  public ThirdpartyJob58PositionDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public ThirdpartyJob58PositionDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public ThirdpartyJob58PositionDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case ADDRESS_ID:
      if (value == null) {
        unsetAddressId();
      } else {
        setAddressId((Integer)value);
      }
      break;

    case ADDRESS_NAME:
      if (value == null) {
        unsetAddressName();
      } else {
        setAddressName((String)value);
      }
      break;

    case OCCUPATION:
      if (value == null) {
        unsetOccupation();
      } else {
        setOccupation((Integer)value);
      }
      break;

    case FEATURES:
      if (value == null) {
        unsetFeatures();
      } else {
        setFeatures((String)value);
      }
      break;

    case SALARY_TOP:
      if (value == null) {
        unsetSalaryTop();
      } else {
        setSalaryTop((Integer)value);
      }
      break;

    case SALARY_BOTTOM:
      if (value == null) {
        unsetSalaryBottom();
      } else {
        setSalaryBottom((Integer)value);
      }
      break;

    case SALARY_DISCUSS:
      if (value == null) {
        unsetSalaryDiscuss();
      } else {
        setSalaryDiscuss((Byte)value);
      }
      break;

    case FRESH_GRADUATE:
      if (value == null) {
        unsetFreshGraduate();
      } else {
        setFreshGraduate((Byte)value);
      }
      break;

    case SHOW_CONTACT:
      if (value == null) {
        unsetShowContact();
      } else {
        setShowContact((Byte)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Byte)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PID:
      return getPid();

    case ADDRESS_ID:
      return getAddressId();

    case ADDRESS_NAME:
      return getAddressName();

    case OCCUPATION:
      return getOccupation();

    case FEATURES:
      return getFeatures();

    case SALARY_TOP:
      return getSalaryTop();

    case SALARY_BOTTOM:
      return getSalaryBottom();

    case SALARY_DISCUSS:
      return getSalaryDiscuss();

    case FRESH_GRADUATE:
      return getFreshGraduate();

    case SHOW_CONTACT:
      return getShowContact();

    case STATUS:
      return getStatus();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PID:
      return isSetPid();
    case ADDRESS_ID:
      return isSetAddressId();
    case ADDRESS_NAME:
      return isSetAddressName();
    case OCCUPATION:
      return isSetOccupation();
    case FEATURES:
      return isSetFeatures();
    case SALARY_TOP:
      return isSetSalaryTop();
    case SALARY_BOTTOM:
      return isSetSalaryBottom();
    case SALARY_DISCUSS:
      return isSetSalaryDiscuss();
    case FRESH_GRADUATE:
      return isSetFreshGraduate();
    case SHOW_CONTACT:
      return isSetShowContact();
    case STATUS:
      return isSetStatus();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdpartyJob58PositionDO)
      return this.equals((ThirdpartyJob58PositionDO)that);
    return false;
  }

  public boolean equals(ThirdpartyJob58PositionDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_addressId = true && this.isSetAddressId();
    boolean that_present_addressId = true && that.isSetAddressId();
    if (this_present_addressId || that_present_addressId) {
      if (!(this_present_addressId && that_present_addressId))
        return false;
      if (this.addressId != that.addressId)
        return false;
    }

    boolean this_present_addressName = true && this.isSetAddressName();
    boolean that_present_addressName = true && that.isSetAddressName();
    if (this_present_addressName || that_present_addressName) {
      if (!(this_present_addressName && that_present_addressName))
        return false;
      if (!this.addressName.equals(that.addressName))
        return false;
    }

    boolean this_present_occupation = true && this.isSetOccupation();
    boolean that_present_occupation = true && that.isSetOccupation();
    if (this_present_occupation || that_present_occupation) {
      if (!(this_present_occupation && that_present_occupation))
        return false;
      if (this.occupation != that.occupation)
        return false;
    }

    boolean this_present_features = true && this.isSetFeatures();
    boolean that_present_features = true && that.isSetFeatures();
    if (this_present_features || that_present_features) {
      if (!(this_present_features && that_present_features))
        return false;
      if (!this.features.equals(that.features))
        return false;
    }

    boolean this_present_salaryTop = true && this.isSetSalaryTop();
    boolean that_present_salaryTop = true && that.isSetSalaryTop();
    if (this_present_salaryTop || that_present_salaryTop) {
      if (!(this_present_salaryTop && that_present_salaryTop))
        return false;
      if (this.salaryTop != that.salaryTop)
        return false;
    }

    boolean this_present_salaryBottom = true && this.isSetSalaryBottom();
    boolean that_present_salaryBottom = true && that.isSetSalaryBottom();
    if (this_present_salaryBottom || that_present_salaryBottom) {
      if (!(this_present_salaryBottom && that_present_salaryBottom))
        return false;
      if (this.salaryBottom != that.salaryBottom)
        return false;
    }

    boolean this_present_salaryDiscuss = true && this.isSetSalaryDiscuss();
    boolean that_present_salaryDiscuss = true && that.isSetSalaryDiscuss();
    if (this_present_salaryDiscuss || that_present_salaryDiscuss) {
      if (!(this_present_salaryDiscuss && that_present_salaryDiscuss))
        return false;
      if (this.salaryDiscuss != that.salaryDiscuss)
        return false;
    }

    boolean this_present_freshGraduate = true && this.isSetFreshGraduate();
    boolean that_present_freshGraduate = true && that.isSetFreshGraduate();
    if (this_present_freshGraduate || that_present_freshGraduate) {
      if (!(this_present_freshGraduate && that_present_freshGraduate))
        return false;
      if (this.freshGraduate != that.freshGraduate)
        return false;
    }

    boolean this_present_showContact = true && this.isSetShowContact();
    boolean that_present_showContact = true && that.isSetShowContact();
    if (this_present_showContact || that_present_showContact) {
      if (!(this_present_showContact && that_present_showContact))
        return false;
      if (this.showContact != that.showContact)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPid()) ? 131071 : 524287);
    if (isSetPid())
      hashCode = hashCode * 8191 + pid;

    hashCode = hashCode * 8191 + ((isSetAddressId()) ? 131071 : 524287);
    if (isSetAddressId())
      hashCode = hashCode * 8191 + addressId;

    hashCode = hashCode * 8191 + ((isSetAddressName()) ? 131071 : 524287);
    if (isSetAddressName())
      hashCode = hashCode * 8191 + addressName.hashCode();

    hashCode = hashCode * 8191 + ((isSetOccupation()) ? 131071 : 524287);
    if (isSetOccupation())
      hashCode = hashCode * 8191 + occupation;

    hashCode = hashCode * 8191 + ((isSetFeatures()) ? 131071 : 524287);
    if (isSetFeatures())
      hashCode = hashCode * 8191 + features.hashCode();

    hashCode = hashCode * 8191 + ((isSetSalaryTop()) ? 131071 : 524287);
    if (isSetSalaryTop())
      hashCode = hashCode * 8191 + salaryTop;

    hashCode = hashCode * 8191 + ((isSetSalaryBottom()) ? 131071 : 524287);
    if (isSetSalaryBottom())
      hashCode = hashCode * 8191 + salaryBottom;

    hashCode = hashCode * 8191 + ((isSetSalaryDiscuss()) ? 131071 : 524287);
    if (isSetSalaryDiscuss())
      hashCode = hashCode * 8191 + (int) (salaryDiscuss);

    hashCode = hashCode * 8191 + ((isSetFreshGraduate()) ? 131071 : 524287);
    if (isSetFreshGraduate())
      hashCode = hashCode * 8191 + (int) (freshGraduate);

    hashCode = hashCode * 8191 + ((isSetShowContact()) ? 131071 : 524287);
    if (isSetShowContact())
      hashCode = hashCode * 8191 + (int) (showContact);

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ThirdpartyJob58PositionDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressId()).compareTo(other.isSetAddressId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addressId, other.addressId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressName()).compareTo(other.isSetAddressName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addressName, other.addressName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOccupation()).compareTo(other.isSetOccupation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupation, other.occupation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeatures()).compareTo(other.isSetFeatures());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeatures()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.features, other.features);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalaryTop()).compareTo(other.isSetSalaryTop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalaryTop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryTop, other.salaryTop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalaryBottom()).compareTo(other.isSetSalaryBottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalaryBottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryBottom, other.salaryBottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalaryDiscuss()).compareTo(other.isSetSalaryDiscuss());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalaryDiscuss()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryDiscuss, other.salaryDiscuss);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFreshGraduate()).compareTo(other.isSetFreshGraduate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFreshGraduate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.freshGraduate, other.freshGraduate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShowContact()).compareTo(other.isSetShowContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showContact, other.showContact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdpartyJob58PositionDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPid()) {
      if (!first) sb.append(", ");
      sb.append("pid:");
      sb.append(this.pid);
      first = false;
    }
    if (isSetAddressId()) {
      if (!first) sb.append(", ");
      sb.append("addressId:");
      sb.append(this.addressId);
      first = false;
    }
    if (isSetAddressName()) {
      if (!first) sb.append(", ");
      sb.append("addressName:");
      if (this.addressName == null) {
        sb.append("null");
      } else {
        sb.append(this.addressName);
      }
      first = false;
    }
    if (isSetOccupation()) {
      if (!first) sb.append(", ");
      sb.append("occupation:");
      sb.append(this.occupation);
      first = false;
    }
    if (isSetFeatures()) {
      if (!first) sb.append(", ");
      sb.append("features:");
      if (this.features == null) {
        sb.append("null");
      } else {
        sb.append(this.features);
      }
      first = false;
    }
    if (isSetSalaryTop()) {
      if (!first) sb.append(", ");
      sb.append("salaryTop:");
      sb.append(this.salaryTop);
      first = false;
    }
    if (isSetSalaryBottom()) {
      if (!first) sb.append(", ");
      sb.append("salaryBottom:");
      sb.append(this.salaryBottom);
      first = false;
    }
    if (isSetSalaryDiscuss()) {
      if (!first) sb.append(", ");
      sb.append("salaryDiscuss:");
      sb.append(this.salaryDiscuss);
      first = false;
    }
    if (isSetFreshGraduate()) {
      if (!first) sb.append(", ");
      sb.append("freshGraduate:");
      sb.append(this.freshGraduate);
      first = false;
    }
    if (isSetShowContact()) {
      if (!first) sb.append(", ");
      sb.append("showContact:");
      sb.append(this.showContact);
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdpartyJob58PositionDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyJob58PositionDOStandardScheme getScheme() {
      return new ThirdpartyJob58PositionDOStandardScheme();
    }
  }

  private static class ThirdpartyJob58PositionDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdpartyJob58PositionDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdpartyJob58PositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ADDRESS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.addressId = iprot.readI32();
              struct.setAddressIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.addressName = iprot.readString();
              struct.setAddressNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OCCUPATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.occupation = iprot.readI32();
              struct.setOccupationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FEATURES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.features = iprot.readString();
              struct.setFeaturesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SALARY_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salaryTop = iprot.readI32();
              struct.setSalaryTopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SALARY_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salaryBottom = iprot.readI32();
              struct.setSalaryBottomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SALARY_DISCUSS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.salaryDiscuss = iprot.readByte();
              struct.setSalaryDiscussIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FRESH_GRADUATE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.freshGraduate = iprot.readByte();
              struct.setFreshGraduateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SHOW_CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.showContact = iprot.readByte();
              struct.setShowContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdpartyJob58PositionDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPid()) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeI32(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAddressId()) {
        oprot.writeFieldBegin(ADDRESS_ID_FIELD_DESC);
        oprot.writeI32(struct.addressId);
        oprot.writeFieldEnd();
      }
      if (struct.addressName != null) {
        if (struct.isSetAddressName()) {
          oprot.writeFieldBegin(ADDRESS_NAME_FIELD_DESC);
          oprot.writeString(struct.addressName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOccupation()) {
        oprot.writeFieldBegin(OCCUPATION_FIELD_DESC);
        oprot.writeI32(struct.occupation);
        oprot.writeFieldEnd();
      }
      if (struct.features != null) {
        if (struct.isSetFeatures()) {
          oprot.writeFieldBegin(FEATURES_FIELD_DESC);
          oprot.writeString(struct.features);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSalaryTop()) {
        oprot.writeFieldBegin(SALARY_TOP_FIELD_DESC);
        oprot.writeI32(struct.salaryTop);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalaryBottom()) {
        oprot.writeFieldBegin(SALARY_BOTTOM_FIELD_DESC);
        oprot.writeI32(struct.salaryBottom);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalaryDiscuss()) {
        oprot.writeFieldBegin(SALARY_DISCUSS_FIELD_DESC);
        oprot.writeByte(struct.salaryDiscuss);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFreshGraduate()) {
        oprot.writeFieldBegin(FRESH_GRADUATE_FIELD_DESC);
        oprot.writeByte(struct.freshGraduate);
        oprot.writeFieldEnd();
      }
      if (struct.isSetShowContact()) {
        oprot.writeFieldBegin(SHOW_CONTACT_FIELD_DESC);
        oprot.writeByte(struct.showContact);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdpartyJob58PositionDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyJob58PositionDOTupleScheme getScheme() {
      return new ThirdpartyJob58PositionDOTupleScheme();
    }
  }

  private static class ThirdpartyJob58PositionDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdpartyJob58PositionDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdpartyJob58PositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPid()) {
        optionals.set(1);
      }
      if (struct.isSetAddressId()) {
        optionals.set(2);
      }
      if (struct.isSetAddressName()) {
        optionals.set(3);
      }
      if (struct.isSetOccupation()) {
        optionals.set(4);
      }
      if (struct.isSetFeatures()) {
        optionals.set(5);
      }
      if (struct.isSetSalaryTop()) {
        optionals.set(6);
      }
      if (struct.isSetSalaryBottom()) {
        optionals.set(7);
      }
      if (struct.isSetSalaryDiscuss()) {
        optionals.set(8);
      }
      if (struct.isSetFreshGraduate()) {
        optionals.set(9);
      }
      if (struct.isSetShowContact()) {
        optionals.set(10);
      }
      if (struct.isSetStatus()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(12);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetAddressId()) {
        oprot.writeI32(struct.addressId);
      }
      if (struct.isSetAddressName()) {
        oprot.writeString(struct.addressName);
      }
      if (struct.isSetOccupation()) {
        oprot.writeI32(struct.occupation);
      }
      if (struct.isSetFeatures()) {
        oprot.writeString(struct.features);
      }
      if (struct.isSetSalaryTop()) {
        oprot.writeI32(struct.salaryTop);
      }
      if (struct.isSetSalaryBottom()) {
        oprot.writeI32(struct.salaryBottom);
      }
      if (struct.isSetSalaryDiscuss()) {
        oprot.writeByte(struct.salaryDiscuss);
      }
      if (struct.isSetFreshGraduate()) {
        oprot.writeByte(struct.freshGraduate);
      }
      if (struct.isSetShowContact()) {
        oprot.writeByte(struct.showContact);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdpartyJob58PositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.addressId = iprot.readI32();
        struct.setAddressIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.addressName = iprot.readString();
        struct.setAddressNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.occupation = iprot.readI32();
        struct.setOccupationIsSet(true);
      }
      if (incoming.get(5)) {
        struct.features = iprot.readString();
        struct.setFeaturesIsSet(true);
      }
      if (incoming.get(6)) {
        struct.salaryTop = iprot.readI32();
        struct.setSalaryTopIsSet(true);
      }
      if (incoming.get(7)) {
        struct.salaryBottom = iprot.readI32();
        struct.setSalaryBottomIsSet(true);
      }
      if (incoming.get(8)) {
        struct.salaryDiscuss = iprot.readByte();
        struct.setSalaryDiscussIsSet(true);
      }
      if (incoming.get(9)) {
        struct.freshGraduate = iprot.readByte();
        struct.setFreshGraduateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.showContact = iprot.readByte();
        struct.setShowContactIsSet(true);
      }
      if (incoming.get(11)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

