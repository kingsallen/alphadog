/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-09")
public class HrWxHrChatListDO implements org.apache.thrift.TBase<HrWxHrChatListDO, HrWxHrChatListDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrWxHrChatListDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrWxHrChatListDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SYSUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sysuserId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField HRACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hraccountId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField WX_CHAT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("wxChatTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField HR_CHAT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("hrChatTime", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrWxHrChatListDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrWxHrChatListDOTupleSchemeFactory();

  public int id; // optional
  public int sysuserId; // optional
  public int hraccountId; // optional
  public java.lang.String createTime; // optional
  public java.lang.String wxChatTime; // optional
  public java.lang.String hrChatTime; // optional
  public boolean status; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    SYSUSER_ID((short)2, "sysuserId"),
    HRACCOUNT_ID((short)3, "hraccountId"),
    CREATE_TIME((short)4, "createTime"),
    WX_CHAT_TIME((short)5, "wxChatTime"),
    HR_CHAT_TIME((short)6, "hrChatTime"),
    STATUS((short)7, "status");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SYSUSER_ID
          return SYSUSER_ID;
        case 3: // HRACCOUNT_ID
          return HRACCOUNT_ID;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // WX_CHAT_TIME
          return WX_CHAT_TIME;
        case 6: // HR_CHAT_TIME
          return HR_CHAT_TIME;
        case 7: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SYSUSERID_ISSET_ID = 1;
  private static final int __HRACCOUNTID_ISSET_ID = 2;
  private static final int __STATUS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.SYSUSER_ID,_Fields.HRACCOUNT_ID,_Fields.CREATE_TIME,_Fields.WX_CHAT_TIME,_Fields.HR_CHAT_TIME,_Fields.STATUS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SYSUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("sysuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HRACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hraccountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.WX_CHAT_TIME, new org.apache.thrift.meta_data.FieldMetaData("wxChatTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.HR_CHAT_TIME, new org.apache.thrift.meta_data.FieldMetaData("hrChatTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrWxHrChatListDO.class, metaDataMap);
  }

  public HrWxHrChatListDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrWxHrChatListDO(HrWxHrChatListDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.sysuserId = other.sysuserId;
    this.hraccountId = other.hraccountId;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetWxChatTime()) {
      this.wxChatTime = other.wxChatTime;
    }
    if (other.isSetHrChatTime()) {
      this.hrChatTime = other.hrChatTime;
    }
    this.status = other.status;
  }

  public HrWxHrChatListDO deepCopy() {
    return new HrWxHrChatListDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setSysuserIdIsSet(false);
    this.sysuserId = 0;
    setHraccountIdIsSet(false);
    this.hraccountId = 0;
    this.createTime = null;
    this.wxChatTime = null;
    this.hrChatTime = null;
    setStatusIsSet(false);
    this.status = false;
  }

  public int getId() {
    return this.id;
  }

  public HrWxHrChatListDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getSysuserId() {
    return this.sysuserId;
  }

  public HrWxHrChatListDO setSysuserId(int sysuserId) {
    this.sysuserId = sysuserId;
    setSysuserIdIsSet(true);
    return this;
  }

  public void unsetSysuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  /** Returns true if field sysuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetSysuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  public void setSysuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYSUSERID_ISSET_ID, value);
  }

  public int getHraccountId() {
    return this.hraccountId;
  }

  public HrWxHrChatListDO setHraccountId(int hraccountId) {
    this.hraccountId = hraccountId;
    setHraccountIdIsSet(true);
    return this;
  }

  public void unsetHraccountId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  /** Returns true if field hraccountId is set (has been assigned a value) and false otherwise */
  public boolean isSetHraccountId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  public void setHraccountIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public HrWxHrChatListDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public java.lang.String getWxChatTime() {
    return this.wxChatTime;
  }

  public HrWxHrChatListDO setWxChatTime(java.lang.String wxChatTime) {
    this.wxChatTime = wxChatTime;
    return this;
  }

  public void unsetWxChatTime() {
    this.wxChatTime = null;
  }

  /** Returns true if field wxChatTime is set (has been assigned a value) and false otherwise */
  public boolean isSetWxChatTime() {
    return this.wxChatTime != null;
  }

  public void setWxChatTimeIsSet(boolean value) {
    if (!value) {
      this.wxChatTime = null;
    }
  }

  public java.lang.String getHrChatTime() {
    return this.hrChatTime;
  }

  public HrWxHrChatListDO setHrChatTime(java.lang.String hrChatTime) {
    this.hrChatTime = hrChatTime;
    return this;
  }

  public void unsetHrChatTime() {
    this.hrChatTime = null;
  }

  /** Returns true if field hrChatTime is set (has been assigned a value) and false otherwise */
  public boolean isSetHrChatTime() {
    return this.hrChatTime != null;
  }

  public void setHrChatTimeIsSet(boolean value) {
    if (!value) {
      this.hrChatTime = null;
    }
  }

  public boolean isStatus() {
    return this.status;
  }

  public HrWxHrChatListDO setStatus(boolean status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case SYSUSER_ID:
      if (value == null) {
        unsetSysuserId();
      } else {
        setSysuserId((java.lang.Integer)value);
      }
      break;

    case HRACCOUNT_ID:
      if (value == null) {
        unsetHraccountId();
      } else {
        setHraccountId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case WX_CHAT_TIME:
      if (value == null) {
        unsetWxChatTime();
      } else {
        setWxChatTime((java.lang.String)value);
      }
      break;

    case HR_CHAT_TIME:
      if (value == null) {
        unsetHrChatTime();
      } else {
        setHrChatTime((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Boolean)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case SYSUSER_ID:
      return getSysuserId();

    case HRACCOUNT_ID:
      return getHraccountId();

    case CREATE_TIME:
      return getCreateTime();

    case WX_CHAT_TIME:
      return getWxChatTime();

    case HR_CHAT_TIME:
      return getHrChatTime();

    case STATUS:
      return isStatus();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SYSUSER_ID:
      return isSetSysuserId();
    case HRACCOUNT_ID:
      return isSetHraccountId();
    case CREATE_TIME:
      return isSetCreateTime();
    case WX_CHAT_TIME:
      return isSetWxChatTime();
    case HR_CHAT_TIME:
      return isSetHrChatTime();
    case STATUS:
      return isSetStatus();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrWxHrChatListDO)
      return this.equals((HrWxHrChatListDO)that);
    return false;
  }

  public boolean equals(HrWxHrChatListDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_sysuserId = true && this.isSetSysuserId();
    boolean that_present_sysuserId = true && that.isSetSysuserId();
    if (this_present_sysuserId || that_present_sysuserId) {
      if (!(this_present_sysuserId && that_present_sysuserId))
        return false;
      if (this.sysuserId != that.sysuserId)
        return false;
    }

    boolean this_present_hraccountId = true && this.isSetHraccountId();
    boolean that_present_hraccountId = true && that.isSetHraccountId();
    if (this_present_hraccountId || that_present_hraccountId) {
      if (!(this_present_hraccountId && that_present_hraccountId))
        return false;
      if (this.hraccountId != that.hraccountId)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_wxChatTime = true && this.isSetWxChatTime();
    boolean that_present_wxChatTime = true && that.isSetWxChatTime();
    if (this_present_wxChatTime || that_present_wxChatTime) {
      if (!(this_present_wxChatTime && that_present_wxChatTime))
        return false;
      if (!this.wxChatTime.equals(that.wxChatTime))
        return false;
    }

    boolean this_present_hrChatTime = true && this.isSetHrChatTime();
    boolean that_present_hrChatTime = true && that.isSetHrChatTime();
    if (this_present_hrChatTime || that_present_hrChatTime) {
      if (!(this_present_hrChatTime && that_present_hrChatTime))
        return false;
      if (!this.hrChatTime.equals(that.hrChatTime))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetSysuserId()) ? 131071 : 524287);
    if (isSetSysuserId())
      hashCode = hashCode * 8191 + sysuserId;

    hashCode = hashCode * 8191 + ((isSetHraccountId()) ? 131071 : 524287);
    if (isSetHraccountId())
      hashCode = hashCode * 8191 + hraccountId;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetWxChatTime()) ? 131071 : 524287);
    if (isSetWxChatTime())
      hashCode = hashCode * 8191 + wxChatTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrChatTime()) ? 131071 : 524287);
    if (isSetHrChatTime())
      hashCode = hashCode * 8191 + hrChatTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + ((status) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(HrWxHrChatListDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSysuserId()).compareTo(other.isSetSysuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysuserId, other.sysuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHraccountId()).compareTo(other.isSetHraccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHraccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hraccountId, other.hraccountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWxChatTime()).compareTo(other.isSetWxChatTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWxChatTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wxChatTime, other.wxChatTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrChatTime()).compareTo(other.isSetHrChatTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrChatTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrChatTime, other.hrChatTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrWxHrChatListDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetSysuserId()) {
      if (!first) sb.append(", ");
      sb.append("sysuserId:");
      sb.append(this.sysuserId);
      first = false;
    }
    if (isSetHraccountId()) {
      if (!first) sb.append(", ");
      sb.append("hraccountId:");
      sb.append(this.hraccountId);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetWxChatTime()) {
      if (!first) sb.append(", ");
      sb.append("wxChatTime:");
      if (this.wxChatTime == null) {
        sb.append("null");
      } else {
        sb.append(this.wxChatTime);
      }
      first = false;
    }
    if (isSetHrChatTime()) {
      if (!first) sb.append(", ");
      sb.append("hrChatTime:");
      if (this.hrChatTime == null) {
        sb.append("null");
      } else {
        sb.append(this.hrChatTime);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrWxHrChatListDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxHrChatListDOStandardScheme getScheme() {
      return new HrWxHrChatListDOStandardScheme();
    }
  }

  private static class HrWxHrChatListDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrWxHrChatListDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrWxHrChatListDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SYSUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sysuserId = iprot.readI32();
              struct.setSysuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HRACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hraccountId = iprot.readI32();
              struct.setHraccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WX_CHAT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.wxChatTime = iprot.readString();
              struct.setWxChatTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HR_CHAT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hrChatTime = iprot.readString();
              struct.setHrChatTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.status = iprot.readBool();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrWxHrChatListDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSysuserId()) {
        oprot.writeFieldBegin(SYSUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.sysuserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHraccountId()) {
        oprot.writeFieldBegin(HRACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.hraccountId);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.wxChatTime != null) {
        if (struct.isSetWxChatTime()) {
          oprot.writeFieldBegin(WX_CHAT_TIME_FIELD_DESC);
          oprot.writeString(struct.wxChatTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.hrChatTime != null) {
        if (struct.isSetHrChatTime()) {
          oprot.writeFieldBegin(HR_CHAT_TIME_FIELD_DESC);
          oprot.writeString(struct.hrChatTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeBool(struct.status);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrWxHrChatListDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxHrChatListDOTupleScheme getScheme() {
      return new HrWxHrChatListDOTupleScheme();
    }
  }

  private static class HrWxHrChatListDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrWxHrChatListDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrWxHrChatListDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetSysuserId()) {
        optionals.set(1);
      }
      if (struct.isSetHraccountId()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetWxChatTime()) {
        optionals.set(4);
      }
      if (struct.isSetHrChatTime()) {
        optionals.set(5);
      }
      if (struct.isSetStatus()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetSysuserId()) {
        oprot.writeI32(struct.sysuserId);
      }
      if (struct.isSetHraccountId()) {
        oprot.writeI32(struct.hraccountId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetWxChatTime()) {
        oprot.writeString(struct.wxChatTime);
      }
      if (struct.isSetHrChatTime()) {
        oprot.writeString(struct.hrChatTime);
      }
      if (struct.isSetStatus()) {
        oprot.writeBool(struct.status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrWxHrChatListDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.sysuserId = iprot.readI32();
        struct.setSysuserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hraccountId = iprot.readI32();
        struct.setHraccountIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.wxChatTime = iprot.readString();
        struct.setWxChatTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.hrChatTime = iprot.readString();
        struct.setHrChatTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.status = iprot.readBool();
        struct.setStatusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

