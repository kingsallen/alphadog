/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-04-24")
public class HrThirdPartyAccountDO implements org.apache.thrift.TBase<HrThirdPartyAccountDO, HrThirdPartyAccountDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrThirdPartyAccountDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrThirdPartyAccountDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BINDING_FIELD_DESC = new org.apache.thrift.protocol.TField("binding", org.apache.thrift.protocol.TType.I16, (short)6);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField REMAIN_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("remainNum", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SYNC_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("syncTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REMAIN_PROFILE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("remainProfileNum", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ERROR_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("errorMessage", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("ext", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SYNC_REQUIRE_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("syncRequireCompany", org.apache.thrift.protocol.TType.BYTE, (short)15);
  private static final org.apache.thrift.protocol.TField SYNC_REQUIRE_DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("syncRequireDepartment", org.apache.thrift.protocol.TType.BYTE, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrThirdPartyAccountDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrThirdPartyAccountDOTupleSchemeFactory();

  public int id; // optional
  public short channel; // optional
  public String username; // optional
  public String password; // optional
  public short binding; // optional
  public int companyId; // optional
  public int remainNum; // optional
  public String syncTime; // optional
  public String updateTime; // optional
  public String createTime; // optional
  public int remainProfileNum; // optional
  public String errorMessage; // optional
  public String ext; // optional
  public byte syncRequireCompany; // optional
  public byte syncRequireDepartment; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CHANNEL((short)2, "channel"),
    USERNAME((short)3, "username"),
    PASSWORD((short)4, "password"),
    BINDING((short)6, "binding"),
    COMPANY_ID((short)7, "companyId"),
    REMAIN_NUM((short)8, "remainNum"),
    SYNC_TIME((short)9, "syncTime"),
    UPDATE_TIME((short)10, "updateTime"),
    CREATE_TIME((short)11, "createTime"),
    REMAIN_PROFILE_NUM((short)12, "remainProfileNum"),
    ERROR_MESSAGE((short)13, "errorMessage"),
    EXT((short)14, "ext"),
    SYNC_REQUIRE_COMPANY((short)15, "syncRequireCompany"),
    SYNC_REQUIRE_DEPARTMENT((short)16, "syncRequireDepartment");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CHANNEL
          return CHANNEL;
        case 3: // USERNAME
          return USERNAME;
        case 4: // PASSWORD
          return PASSWORD;
        case 6: // BINDING
          return BINDING;
        case 7: // COMPANY_ID
          return COMPANY_ID;
        case 8: // REMAIN_NUM
          return REMAIN_NUM;
        case 9: // SYNC_TIME
          return SYNC_TIME;
        case 10: // UPDATE_TIME
          return UPDATE_TIME;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // REMAIN_PROFILE_NUM
          return REMAIN_PROFILE_NUM;
        case 13: // ERROR_MESSAGE
          return ERROR_MESSAGE;
        case 14: // EXT
          return EXT;
        case 15: // SYNC_REQUIRE_COMPANY
          return SYNC_REQUIRE_COMPANY;
        case 16: // SYNC_REQUIRE_DEPARTMENT
          return SYNC_REQUIRE_DEPARTMENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CHANNEL_ISSET_ID = 1;
  private static final int __BINDING_ISSET_ID = 2;
  private static final int __COMPANYID_ISSET_ID = 3;
  private static final int __REMAINNUM_ISSET_ID = 4;
  private static final int __REMAINPROFILENUM_ISSET_ID = 5;
  private static final int __SYNCREQUIRECOMPANY_ISSET_ID = 6;
  private static final int __SYNCREQUIREDEPARTMENT_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CHANNEL,_Fields.USERNAME,_Fields.PASSWORD,_Fields.BINDING,_Fields.COMPANY_ID,_Fields.REMAIN_NUM,_Fields.SYNC_TIME,_Fields.UPDATE_TIME,_Fields.CREATE_TIME,_Fields.REMAIN_PROFILE_NUM,_Fields.ERROR_MESSAGE,_Fields.EXT,_Fields.SYNC_REQUIRE_COMPANY,_Fields.SYNC_REQUIRE_DEPARTMENT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BINDING, new org.apache.thrift.meta_data.FieldMetaData("binding", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REMAIN_NUM, new org.apache.thrift.meta_data.FieldMetaData("remainNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SYNC_TIME, new org.apache.thrift.meta_data.FieldMetaData("syncTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMAIN_PROFILE_NUM, new org.apache.thrift.meta_data.FieldMetaData("remainProfileNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ERROR_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("errorMessage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXT, new org.apache.thrift.meta_data.FieldMetaData("ext", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SYNC_REQUIRE_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("syncRequireCompany", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SYNC_REQUIRE_DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("syncRequireDepartment", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrThirdPartyAccountDO.class, metaDataMap);
  }

  public HrThirdPartyAccountDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrThirdPartyAccountDO(HrThirdPartyAccountDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.channel = other.channel;
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    this.binding = other.binding;
    this.companyId = other.companyId;
    this.remainNum = other.remainNum;
    if (other.isSetSyncTime()) {
      this.syncTime = other.syncTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.remainProfileNum = other.remainProfileNum;
    if (other.isSetErrorMessage()) {
      this.errorMessage = other.errorMessage;
    }
    if (other.isSetExt()) {
      this.ext = other.ext;
    }
    this.syncRequireCompany = other.syncRequireCompany;
    this.syncRequireDepartment = other.syncRequireDepartment;
  }

  public HrThirdPartyAccountDO deepCopy() {
    return new HrThirdPartyAccountDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setChannelIsSet(false);
    this.channel = 0;
    this.username = null;
    this.password = null;
    setBindingIsSet(false);
    this.binding = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setRemainNumIsSet(false);
    this.remainNum = 0;
    this.syncTime = null;
    this.updateTime = null;
    this.createTime = null;
    setRemainProfileNumIsSet(false);
    this.remainProfileNum = 0;
    this.errorMessage = null;
    this.ext = null;
    setSyncRequireCompanyIsSet(false);
    this.syncRequireCompany = 0;
    setSyncRequireDepartmentIsSet(false);
    this.syncRequireDepartment = 0;
  }

  public int getId() {
    return this.id;
  }

  public HrThirdPartyAccountDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public short getChannel() {
    return this.channel;
  }

  public HrThirdPartyAccountDO setChannel(short channel) {
    this.channel = channel;
    setChannelIsSet(true);
    return this;
  }

  public void unsetChannel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  public void setChannelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
  }

  public String getUsername() {
    return this.username;
  }

  public HrThirdPartyAccountDO setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public HrThirdPartyAccountDO setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public short getBinding() {
    return this.binding;
  }

  public HrThirdPartyAccountDO setBinding(short binding) {
    this.binding = binding;
    setBindingIsSet(true);
    return this;
  }

  public void unsetBinding() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BINDING_ISSET_ID);
  }

  /** Returns true if field binding is set (has been assigned a value) and false otherwise */
  public boolean isSetBinding() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BINDING_ISSET_ID);
  }

  public void setBindingIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BINDING_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public HrThirdPartyAccountDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getRemainNum() {
    return this.remainNum;
  }

  public HrThirdPartyAccountDO setRemainNum(int remainNum) {
    this.remainNum = remainNum;
    setRemainNumIsSet(true);
    return this;
  }

  public void unsetRemainNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REMAINNUM_ISSET_ID);
  }

  /** Returns true if field remainNum is set (has been assigned a value) and false otherwise */
  public boolean isSetRemainNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REMAINNUM_ISSET_ID);
  }

  public void setRemainNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REMAINNUM_ISSET_ID, value);
  }

  public String getSyncTime() {
    return this.syncTime;
  }

  public HrThirdPartyAccountDO setSyncTime(String syncTime) {
    this.syncTime = syncTime;
    return this;
  }

  public void unsetSyncTime() {
    this.syncTime = null;
  }

  /** Returns true if field syncTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncTime() {
    return this.syncTime != null;
  }

  public void setSyncTimeIsSet(boolean value) {
    if (!value) {
      this.syncTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public HrThirdPartyAccountDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public HrThirdPartyAccountDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getRemainProfileNum() {
    return this.remainProfileNum;
  }

  public HrThirdPartyAccountDO setRemainProfileNum(int remainProfileNum) {
    this.remainProfileNum = remainProfileNum;
    setRemainProfileNumIsSet(true);
    return this;
  }

  public void unsetRemainProfileNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REMAINPROFILENUM_ISSET_ID);
  }

  /** Returns true if field remainProfileNum is set (has been assigned a value) and false otherwise */
  public boolean isSetRemainProfileNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REMAINPROFILENUM_ISSET_ID);
  }

  public void setRemainProfileNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REMAINPROFILENUM_ISSET_ID, value);
  }

  public String getErrorMessage() {
    return this.errorMessage;
  }

  public HrThirdPartyAccountDO setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  public void unsetErrorMessage() {
    this.errorMessage = null;
  }

  /** Returns true if field errorMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetErrorMessage() {
    return this.errorMessage != null;
  }

  public void setErrorMessageIsSet(boolean value) {
    if (!value) {
      this.errorMessage = null;
    }
  }

  public String getExt() {
    return this.ext;
  }

  public HrThirdPartyAccountDO setExt(String ext) {
    this.ext = ext;
    return this;
  }

  public void unsetExt() {
    this.ext = null;
  }

  /** Returns true if field ext is set (has been assigned a value) and false otherwise */
  public boolean isSetExt() {
    return this.ext != null;
  }

  public void setExtIsSet(boolean value) {
    if (!value) {
      this.ext = null;
    }
  }

  public byte getSyncRequireCompany() {
    return this.syncRequireCompany;
  }

  public HrThirdPartyAccountDO setSyncRequireCompany(byte syncRequireCompany) {
    this.syncRequireCompany = syncRequireCompany;
    setSyncRequireCompanyIsSet(true);
    return this;
  }

  public void unsetSyncRequireCompany() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCREQUIRECOMPANY_ISSET_ID);
  }

  /** Returns true if field syncRequireCompany is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncRequireCompany() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCREQUIRECOMPANY_ISSET_ID);
  }

  public void setSyncRequireCompanyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCREQUIRECOMPANY_ISSET_ID, value);
  }

  public byte getSyncRequireDepartment() {
    return this.syncRequireDepartment;
  }

  public HrThirdPartyAccountDO setSyncRequireDepartment(byte syncRequireDepartment) {
    this.syncRequireDepartment = syncRequireDepartment;
    setSyncRequireDepartmentIsSet(true);
    return this;
  }

  public void unsetSyncRequireDepartment() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCREQUIREDEPARTMENT_ISSET_ID);
  }

  /** Returns true if field syncRequireDepartment is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncRequireDepartment() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCREQUIREDEPARTMENT_ISSET_ID);
  }

  public void setSyncRequireDepartmentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCREQUIREDEPARTMENT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case CHANNEL:
      if (value == null) {
        unsetChannel();
      } else {
        setChannel((Short)value);
      }
      break;

    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case BINDING:
      if (value == null) {
        unsetBinding();
      } else {
        setBinding((Short)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case REMAIN_NUM:
      if (value == null) {
        unsetRemainNum();
      } else {
        setRemainNum((Integer)value);
      }
      break;

    case SYNC_TIME:
      if (value == null) {
        unsetSyncTime();
      } else {
        setSyncTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case REMAIN_PROFILE_NUM:
      if (value == null) {
        unsetRemainProfileNum();
      } else {
        setRemainProfileNum((Integer)value);
      }
      break;

    case ERROR_MESSAGE:
      if (value == null) {
        unsetErrorMessage();
      } else {
        setErrorMessage((String)value);
      }
      break;

    case EXT:
      if (value == null) {
        unsetExt();
      } else {
        setExt((String)value);
      }
      break;

    case SYNC_REQUIRE_COMPANY:
      if (value == null) {
        unsetSyncRequireCompany();
      } else {
        setSyncRequireCompany((Byte)value);
      }
      break;

    case SYNC_REQUIRE_DEPARTMENT:
      if (value == null) {
        unsetSyncRequireDepartment();
      } else {
        setSyncRequireDepartment((Byte)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CHANNEL:
      return getChannel();

    case USERNAME:
      return getUsername();

    case PASSWORD:
      return getPassword();

    case BINDING:
      return getBinding();

    case COMPANY_ID:
      return getCompanyId();

    case REMAIN_NUM:
      return getRemainNum();

    case SYNC_TIME:
      return getSyncTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case CREATE_TIME:
      return getCreateTime();

    case REMAIN_PROFILE_NUM:
      return getRemainProfileNum();

    case ERROR_MESSAGE:
      return getErrorMessage();

    case EXT:
      return getExt();

    case SYNC_REQUIRE_COMPANY:
      return getSyncRequireCompany();

    case SYNC_REQUIRE_DEPARTMENT:
      return getSyncRequireDepartment();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CHANNEL:
      return isSetChannel();
    case USERNAME:
      return isSetUsername();
    case PASSWORD:
      return isSetPassword();
    case BINDING:
      return isSetBinding();
    case COMPANY_ID:
      return isSetCompanyId();
    case REMAIN_NUM:
      return isSetRemainNum();
    case SYNC_TIME:
      return isSetSyncTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case REMAIN_PROFILE_NUM:
      return isSetRemainProfileNum();
    case ERROR_MESSAGE:
      return isSetErrorMessage();
    case EXT:
      return isSetExt();
    case SYNC_REQUIRE_COMPANY:
      return isSetSyncRequireCompany();
    case SYNC_REQUIRE_DEPARTMENT:
      return isSetSyncRequireDepartment();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof HrThirdPartyAccountDO)
      return this.equals((HrThirdPartyAccountDO)that);
    return false;
  }

  public boolean equals(HrThirdPartyAccountDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_channel = true && this.isSetChannel();
    boolean that_present_channel = true && that.isSetChannel();
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (this.channel != that.channel)
        return false;
    }

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_binding = true && this.isSetBinding();
    boolean that_present_binding = true && that.isSetBinding();
    if (this_present_binding || that_present_binding) {
      if (!(this_present_binding && that_present_binding))
        return false;
      if (this.binding != that.binding)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_remainNum = true && this.isSetRemainNum();
    boolean that_present_remainNum = true && that.isSetRemainNum();
    if (this_present_remainNum || that_present_remainNum) {
      if (!(this_present_remainNum && that_present_remainNum))
        return false;
      if (this.remainNum != that.remainNum)
        return false;
    }

    boolean this_present_syncTime = true && this.isSetSyncTime();
    boolean that_present_syncTime = true && that.isSetSyncTime();
    if (this_present_syncTime || that_present_syncTime) {
      if (!(this_present_syncTime && that_present_syncTime))
        return false;
      if (!this.syncTime.equals(that.syncTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_remainProfileNum = true && this.isSetRemainProfileNum();
    boolean that_present_remainProfileNum = true && that.isSetRemainProfileNum();
    if (this_present_remainProfileNum || that_present_remainProfileNum) {
      if (!(this_present_remainProfileNum && that_present_remainProfileNum))
        return false;
      if (this.remainProfileNum != that.remainProfileNum)
        return false;
    }

    boolean this_present_errorMessage = true && this.isSetErrorMessage();
    boolean that_present_errorMessage = true && that.isSetErrorMessage();
    if (this_present_errorMessage || that_present_errorMessage) {
      if (!(this_present_errorMessage && that_present_errorMessage))
        return false;
      if (!this.errorMessage.equals(that.errorMessage))
        return false;
    }

    boolean this_present_ext = true && this.isSetExt();
    boolean that_present_ext = true && that.isSetExt();
    if (this_present_ext || that_present_ext) {
      if (!(this_present_ext && that_present_ext))
        return false;
      if (!this.ext.equals(that.ext))
        return false;
    }

    boolean this_present_syncRequireCompany = true && this.isSetSyncRequireCompany();
    boolean that_present_syncRequireCompany = true && that.isSetSyncRequireCompany();
    if (this_present_syncRequireCompany || that_present_syncRequireCompany) {
      if (!(this_present_syncRequireCompany && that_present_syncRequireCompany))
        return false;
      if (this.syncRequireCompany != that.syncRequireCompany)
        return false;
    }

    boolean this_present_syncRequireDepartment = true && this.isSetSyncRequireDepartment();
    boolean that_present_syncRequireDepartment = true && that.isSetSyncRequireDepartment();
    if (this_present_syncRequireDepartment || that_present_syncRequireDepartment) {
      if (!(this_present_syncRequireDepartment && that_present_syncRequireDepartment))
        return false;
      if (this.syncRequireDepartment != that.syncRequireDepartment)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetChannel()) ? 131071 : 524287);
    if (isSetChannel())
      hashCode = hashCode * 8191 + channel;

    hashCode = hashCode * 8191 + ((isSetUsername()) ? 131071 : 524287);
    if (isSetUsername())
      hashCode = hashCode * 8191 + username.hashCode();

    hashCode = hashCode * 8191 + ((isSetPassword()) ? 131071 : 524287);
    if (isSetPassword())
      hashCode = hashCode * 8191 + password.hashCode();

    hashCode = hashCode * 8191 + ((isSetBinding()) ? 131071 : 524287);
    if (isSetBinding())
      hashCode = hashCode * 8191 + binding;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetRemainNum()) ? 131071 : 524287);
    if (isSetRemainNum())
      hashCode = hashCode * 8191 + remainNum;

    hashCode = hashCode * 8191 + ((isSetSyncTime()) ? 131071 : 524287);
    if (isSetSyncTime())
      hashCode = hashCode * 8191 + syncTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetRemainProfileNum()) ? 131071 : 524287);
    if (isSetRemainProfileNum())
      hashCode = hashCode * 8191 + remainProfileNum;

    hashCode = hashCode * 8191 + ((isSetErrorMessage()) ? 131071 : 524287);
    if (isSetErrorMessage())
      hashCode = hashCode * 8191 + errorMessage.hashCode();

    hashCode = hashCode * 8191 + ((isSetExt()) ? 131071 : 524287);
    if (isSetExt())
      hashCode = hashCode * 8191 + ext.hashCode();

    hashCode = hashCode * 8191 + ((isSetSyncRequireCompany()) ? 131071 : 524287);
    if (isSetSyncRequireCompany())
      hashCode = hashCode * 8191 + (int) (syncRequireCompany);

    hashCode = hashCode * 8191 + ((isSetSyncRequireDepartment()) ? 131071 : 524287);
    if (isSetSyncRequireDepartment())
      hashCode = hashCode * 8191 + (int) (syncRequireDepartment);

    return hashCode;
  }

  @Override
  public int compareTo(HrThirdPartyAccountDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(other.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, other.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBinding()).compareTo(other.isSetBinding());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBinding()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.binding, other.binding);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemainNum()).compareTo(other.isSetRemainNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemainNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remainNum, other.remainNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSyncTime()).compareTo(other.isSetSyncTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncTime, other.syncTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemainProfileNum()).compareTo(other.isSetRemainProfileNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemainProfileNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remainProfileNum, other.remainProfileNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErrorMessage()).compareTo(other.isSetErrorMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrorMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorMessage, other.errorMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExt()).compareTo(other.isSetExt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ext, other.ext);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSyncRequireCompany()).compareTo(other.isSetSyncRequireCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncRequireCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncRequireCompany, other.syncRequireCompany);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSyncRequireDepartment()).compareTo(other.isSetSyncRequireDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncRequireDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncRequireDepartment, other.syncRequireDepartment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("HrThirdPartyAccountDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetChannel()) {
      if (!first) sb.append(", ");
      sb.append("channel:");
      sb.append(this.channel);
      first = false;
    }
    if (isSetUsername()) {
      if (!first) sb.append(", ");
      sb.append("username:");
      if (this.username == null) {
        sb.append("null");
      } else {
        sb.append(this.username);
      }
      first = false;
    }
    if (isSetPassword()) {
      if (!first) sb.append(", ");
      sb.append("password:");
      if (this.password == null) {
        sb.append("null");
      } else {
        sb.append(this.password);
      }
      first = false;
    }
    if (isSetBinding()) {
      if (!first) sb.append(", ");
      sb.append("binding:");
      sb.append(this.binding);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetRemainNum()) {
      if (!first) sb.append(", ");
      sb.append("remainNum:");
      sb.append(this.remainNum);
      first = false;
    }
    if (isSetSyncTime()) {
      if (!first) sb.append(", ");
      sb.append("syncTime:");
      if (this.syncTime == null) {
        sb.append("null");
      } else {
        sb.append(this.syncTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetRemainProfileNum()) {
      if (!first) sb.append(", ");
      sb.append("remainProfileNum:");
      sb.append(this.remainProfileNum);
      first = false;
    }
    if (isSetErrorMessage()) {
      if (!first) sb.append(", ");
      sb.append("errorMessage:");
      if (this.errorMessage == null) {
        sb.append("null");
      } else {
        sb.append(this.errorMessage);
      }
      first = false;
    }
    if (isSetExt()) {
      if (!first) sb.append(", ");
      sb.append("ext:");
      if (this.ext == null) {
        sb.append("null");
      } else {
        sb.append(this.ext);
      }
      first = false;
    }
    if (isSetSyncRequireCompany()) {
      if (!first) sb.append(", ");
      sb.append("syncRequireCompany:");
      sb.append(this.syncRequireCompany);
      first = false;
    }
    if (isSetSyncRequireDepartment()) {
      if (!first) sb.append(", ");
      sb.append("syncRequireDepartment:");
      sb.append(this.syncRequireDepartment);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrThirdPartyAccountDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrThirdPartyAccountDOStandardScheme getScheme() {
      return new HrThirdPartyAccountDOStandardScheme();
    }
  }

  private static class HrThirdPartyAccountDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrThirdPartyAccountDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrThirdPartyAccountDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.channel = iprot.readI16();
              struct.setChannelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BINDING
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.binding = iprot.readI16();
              struct.setBindingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REMAIN_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.remainNum = iprot.readI32();
              struct.setRemainNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SYNC_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.syncTime = iprot.readString();
              struct.setSyncTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REMAIN_PROFILE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.remainProfileNum = iprot.readI32();
              struct.setRemainProfileNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ERROR_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errorMessage = iprot.readString();
              struct.setErrorMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // EXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ext = iprot.readString();
              struct.setExtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SYNC_REQUIRE_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.syncRequireCompany = iprot.readByte();
              struct.setSyncRequireCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SYNC_REQUIRE_DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.syncRequireDepartment = iprot.readByte();
              struct.setSyncRequireDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrThirdPartyAccountDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetChannel()) {
        oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
        oprot.writeI16(struct.channel);
        oprot.writeFieldEnd();
      }
      if (struct.username != null) {
        if (struct.isSetUsername()) {
          oprot.writeFieldBegin(USERNAME_FIELD_DESC);
          oprot.writeString(struct.username);
          oprot.writeFieldEnd();
        }
      }
      if (struct.password != null) {
        if (struct.isSetPassword()) {
          oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
          oprot.writeString(struct.password);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBinding()) {
        oprot.writeFieldBegin(BINDING_FIELD_DESC);
        oprot.writeI16(struct.binding);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRemainNum()) {
        oprot.writeFieldBegin(REMAIN_NUM_FIELD_DESC);
        oprot.writeI32(struct.remainNum);
        oprot.writeFieldEnd();
      }
      if (struct.syncTime != null) {
        if (struct.isSetSyncTime()) {
          oprot.writeFieldBegin(SYNC_TIME_FIELD_DESC);
          oprot.writeString(struct.syncTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRemainProfileNum()) {
        oprot.writeFieldBegin(REMAIN_PROFILE_NUM_FIELD_DESC);
        oprot.writeI32(struct.remainProfileNum);
        oprot.writeFieldEnd();
      }
      if (struct.errorMessage != null) {
        if (struct.isSetErrorMessage()) {
          oprot.writeFieldBegin(ERROR_MESSAGE_FIELD_DESC);
          oprot.writeString(struct.errorMessage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ext != null) {
        if (struct.isSetExt()) {
          oprot.writeFieldBegin(EXT_FIELD_DESC);
          oprot.writeString(struct.ext);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSyncRequireCompany()) {
        oprot.writeFieldBegin(SYNC_REQUIRE_COMPANY_FIELD_DESC);
        oprot.writeByte(struct.syncRequireCompany);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSyncRequireDepartment()) {
        oprot.writeFieldBegin(SYNC_REQUIRE_DEPARTMENT_FIELD_DESC);
        oprot.writeByte(struct.syncRequireDepartment);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrThirdPartyAccountDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrThirdPartyAccountDOTupleScheme getScheme() {
      return new HrThirdPartyAccountDOTupleScheme();
    }
  }

  private static class HrThirdPartyAccountDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrThirdPartyAccountDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrThirdPartyAccountDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetChannel()) {
        optionals.set(1);
      }
      if (struct.isSetUsername()) {
        optionals.set(2);
      }
      if (struct.isSetPassword()) {
        optionals.set(3);
      }
      if (struct.isSetBinding()) {
        optionals.set(4);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(5);
      }
      if (struct.isSetRemainNum()) {
        optionals.set(6);
      }
      if (struct.isSetSyncTime()) {
        optionals.set(7);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(8);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(9);
      }
      if (struct.isSetRemainProfileNum()) {
        optionals.set(10);
      }
      if (struct.isSetErrorMessage()) {
        optionals.set(11);
      }
      if (struct.isSetExt()) {
        optionals.set(12);
      }
      if (struct.isSetSyncRequireCompany()) {
        optionals.set(13);
      }
      if (struct.isSetSyncRequireDepartment()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetChannel()) {
        oprot.writeI16(struct.channel);
      }
      if (struct.isSetUsername()) {
        oprot.writeString(struct.username);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetBinding()) {
        oprot.writeI16(struct.binding);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetRemainNum()) {
        oprot.writeI32(struct.remainNum);
      }
      if (struct.isSetSyncTime()) {
        oprot.writeString(struct.syncTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetRemainProfileNum()) {
        oprot.writeI32(struct.remainProfileNum);
      }
      if (struct.isSetErrorMessage()) {
        oprot.writeString(struct.errorMessage);
      }
      if (struct.isSetExt()) {
        oprot.writeString(struct.ext);
      }
      if (struct.isSetSyncRequireCompany()) {
        oprot.writeByte(struct.syncRequireCompany);
      }
      if (struct.isSetSyncRequireDepartment()) {
        oprot.writeByte(struct.syncRequireDepartment);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrThirdPartyAccountDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.channel = iprot.readI16();
        struct.setChannelIsSet(true);
      }
      if (incoming.get(2)) {
        struct.username = iprot.readString();
        struct.setUsernameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(4)) {
        struct.binding = iprot.readI16();
        struct.setBindingIsSet(true);
      }
      if (incoming.get(5)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.remainNum = iprot.readI32();
        struct.setRemainNumIsSet(true);
      }
      if (incoming.get(7)) {
        struct.syncTime = iprot.readString();
        struct.setSyncTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.remainProfileNum = iprot.readI32();
        struct.setRemainProfileNumIsSet(true);
      }
      if (incoming.get(11)) {
        struct.errorMessage = iprot.readString();
        struct.setErrorMessageIsSet(true);
      }
      if (incoming.get(12)) {
        struct.ext = iprot.readString();
        struct.setExtIsSet(true);
      }
      if (incoming.get(13)) {
        struct.syncRequireCompany = iprot.readByte();
        struct.setSyncRequireCompanyIsSet(true);
      }
      if (incoming.get(14)) {
        struct.syncRequireDepartment = iprot.readByte();
        struct.setSyncRequireDepartmentIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

