/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-07-04")
public class CompanyOptions implements org.apache.thrift.TBase<CompanyOptions, CompanyOptions._Fields>, java.io.Serializable, Cloneable, Comparable<CompanyOptions> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CompanyOptions");

  private static final org.apache.thrift.protocol.TField HR_EMPLOYEE_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("hrEmployeePosition", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField HR_EMPLOYEE_SECTION_FIELD_DESC = new org.apache.thrift.protocol.TField("hrEmployeeSection", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CompanyOptionsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CompanyOptionsTupleSchemeFactory();

  public java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> hrEmployeePosition; // required
  public java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> hrEmployeeSection; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HR_EMPLOYEE_POSITION((short)1, "hrEmployeePosition"),
    HR_EMPLOYEE_SECTION((short)2, "hrEmployeeSection");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HR_EMPLOYEE_POSITION
          return HR_EMPLOYEE_POSITION;
        case 2: // HR_EMPLOYEE_SECTION
          return HR_EMPLOYEE_SECTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HR_EMPLOYEE_POSITION, new org.apache.thrift.meta_data.FieldMetaData("hrEmployeePosition", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO.class))));
    tmpMap.put(_Fields.HR_EMPLOYEE_SECTION, new org.apache.thrift.meta_data.FieldMetaData("hrEmployeeSection", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CompanyOptions.class, metaDataMap);
  }

  public CompanyOptions() {
  }

  public CompanyOptions(
    java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> hrEmployeePosition,
    java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> hrEmployeeSection)
  {
    this();
    this.hrEmployeePosition = hrEmployeePosition;
    this.hrEmployeeSection = hrEmployeeSection;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CompanyOptions(CompanyOptions other) {
    if (other.isSetHrEmployeePosition()) {
      java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> __this__hrEmployeePosition = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO>(other.hrEmployeePosition.size());
      for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO other_element : other.hrEmployeePosition) {
        __this__hrEmployeePosition.add(new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO(other_element));
      }
      this.hrEmployeePosition = __this__hrEmployeePosition;
    }
    if (other.isSetHrEmployeeSection()) {
      java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> __this__hrEmployeeSection = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO>(other.hrEmployeeSection.size());
      for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO other_element : other.hrEmployeeSection) {
        __this__hrEmployeeSection.add(new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO(other_element));
      }
      this.hrEmployeeSection = __this__hrEmployeeSection;
    }
  }

  public CompanyOptions deepCopy() {
    return new CompanyOptions(this);
  }

  @Override
  public void clear() {
    this.hrEmployeePosition = null;
    this.hrEmployeeSection = null;
  }

  public int getHrEmployeePositionSize() {
    return (this.hrEmployeePosition == null) ? 0 : this.hrEmployeePosition.size();
  }

  public java.util.Iterator<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> getHrEmployeePositionIterator() {
    return (this.hrEmployeePosition == null) ? null : this.hrEmployeePosition.iterator();
  }

  public void addToHrEmployeePosition(com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO elem) {
    if (this.hrEmployeePosition == null) {
      this.hrEmployeePosition = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO>();
    }
    this.hrEmployeePosition.add(elem);
  }

  public java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> getHrEmployeePosition() {
    return this.hrEmployeePosition;
  }

  public CompanyOptions setHrEmployeePosition(java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO> hrEmployeePosition) {
    this.hrEmployeePosition = hrEmployeePosition;
    return this;
  }

  public void unsetHrEmployeePosition() {
    this.hrEmployeePosition = null;
  }

  /** Returns true if field hrEmployeePosition is set (has been assigned a value) and false otherwise */
  public boolean isSetHrEmployeePosition() {
    return this.hrEmployeePosition != null;
  }

  public void setHrEmployeePositionIsSet(boolean value) {
    if (!value) {
      this.hrEmployeePosition = null;
    }
  }

  public int getHrEmployeeSectionSize() {
    return (this.hrEmployeeSection == null) ? 0 : this.hrEmployeeSection.size();
  }

  public java.util.Iterator<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> getHrEmployeeSectionIterator() {
    return (this.hrEmployeeSection == null) ? null : this.hrEmployeeSection.iterator();
  }

  public void addToHrEmployeeSection(com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO elem) {
    if (this.hrEmployeeSection == null) {
      this.hrEmployeeSection = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO>();
    }
    this.hrEmployeeSection.add(elem);
  }

  public java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> getHrEmployeeSection() {
    return this.hrEmployeeSection;
  }

  public CompanyOptions setHrEmployeeSection(java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO> hrEmployeeSection) {
    this.hrEmployeeSection = hrEmployeeSection;
    return this;
  }

  public void unsetHrEmployeeSection() {
    this.hrEmployeeSection = null;
  }

  /** Returns true if field hrEmployeeSection is set (has been assigned a value) and false otherwise */
  public boolean isSetHrEmployeeSection() {
    return this.hrEmployeeSection != null;
  }

  public void setHrEmployeeSectionIsSet(boolean value) {
    if (!value) {
      this.hrEmployeeSection = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HR_EMPLOYEE_POSITION:
      if (value == null) {
        unsetHrEmployeePosition();
      } else {
        setHrEmployeePosition((java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO>)value);
      }
      break;

    case HR_EMPLOYEE_SECTION:
      if (value == null) {
        unsetHrEmployeeSection();
      } else {
        setHrEmployeeSection((java.util.List<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HR_EMPLOYEE_POSITION:
      return getHrEmployeePosition();

    case HR_EMPLOYEE_SECTION:
      return getHrEmployeeSection();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HR_EMPLOYEE_POSITION:
      return isSetHrEmployeePosition();
    case HR_EMPLOYEE_SECTION:
      return isSetHrEmployeeSection();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CompanyOptions)
      return this.equals((CompanyOptions)that);
    return false;
  }

  public boolean equals(CompanyOptions that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_hrEmployeePosition = true && this.isSetHrEmployeePosition();
    boolean that_present_hrEmployeePosition = true && that.isSetHrEmployeePosition();
    if (this_present_hrEmployeePosition || that_present_hrEmployeePosition) {
      if (!(this_present_hrEmployeePosition && that_present_hrEmployeePosition))
        return false;
      if (!this.hrEmployeePosition.equals(that.hrEmployeePosition))
        return false;
    }

    boolean this_present_hrEmployeeSection = true && this.isSetHrEmployeeSection();
    boolean that_present_hrEmployeeSection = true && that.isSetHrEmployeeSection();
    if (this_present_hrEmployeeSection || that_present_hrEmployeeSection) {
      if (!(this_present_hrEmployeeSection && that_present_hrEmployeeSection))
        return false;
      if (!this.hrEmployeeSection.equals(that.hrEmployeeSection))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetHrEmployeePosition()) ? 131071 : 524287);
    if (isSetHrEmployeePosition())
      hashCode = hashCode * 8191 + hrEmployeePosition.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrEmployeeSection()) ? 131071 : 524287);
    if (isSetHrEmployeeSection())
      hashCode = hashCode * 8191 + hrEmployeeSection.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(CompanyOptions other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHrEmployeePosition()).compareTo(other.isSetHrEmployeePosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrEmployeePosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrEmployeePosition, other.hrEmployeePosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHrEmployeeSection()).compareTo(other.isSetHrEmployeeSection());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrEmployeeSection()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrEmployeeSection, other.hrEmployeeSection);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CompanyOptions(");
    boolean first = true;

    sb.append("hrEmployeePosition:");
    if (this.hrEmployeePosition == null) {
      sb.append("null");
    } else {
      sb.append(this.hrEmployeePosition);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hrEmployeeSection:");
    if (this.hrEmployeeSection == null) {
      sb.append("null");
    } else {
      sb.append(this.hrEmployeeSection);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CompanyOptionsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CompanyOptionsStandardScheme getScheme() {
      return new CompanyOptionsStandardScheme();
    }
  }

  private static class CompanyOptionsStandardScheme extends org.apache.thrift.scheme.StandardScheme<CompanyOptions> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CompanyOptions struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HR_EMPLOYEE_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.hrEmployeePosition = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO>(_list0.size);
                com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO();
                  _elem1.read(iprot);
                  struct.hrEmployeePosition.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setHrEmployeePositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HR_EMPLOYEE_SECTION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.hrEmployeeSection = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO>(_list3.size);
                com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO();
                  _elem4.read(iprot);
                  struct.hrEmployeeSection.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setHrEmployeeSectionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CompanyOptions struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.hrEmployeePosition != null) {
        oprot.writeFieldBegin(HR_EMPLOYEE_POSITION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.hrEmployeePosition.size()));
          for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO _iter6 : struct.hrEmployeePosition)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.hrEmployeeSection != null) {
        oprot.writeFieldBegin(HR_EMPLOYEE_SECTION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.hrEmployeeSection.size()));
          for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO _iter7 : struct.hrEmployeeSection)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CompanyOptionsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CompanyOptionsTupleScheme getScheme() {
      return new CompanyOptionsTupleScheme();
    }
  }

  private static class CompanyOptionsTupleScheme extends org.apache.thrift.scheme.TupleScheme<CompanyOptions> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CompanyOptions struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetHrEmployeePosition()) {
        optionals.set(0);
      }
      if (struct.isSetHrEmployeeSection()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetHrEmployeePosition()) {
        {
          oprot.writeI32(struct.hrEmployeePosition.size());
          for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO _iter8 : struct.hrEmployeePosition)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetHrEmployeeSection()) {
        {
          oprot.writeI32(struct.hrEmployeeSection.size());
          for (com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO _iter9 : struct.hrEmployeeSection)
          {
            _iter9.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CompanyOptions struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.hrEmployeePosition = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO>(_list10.size);
          com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeePositionDO();
            _elem11.read(iprot);
            struct.hrEmployeePosition.add(_elem11);
          }
        }
        struct.setHrEmployeePositionIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.hrEmployeeSection = new java.util.ArrayList<com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO>(_list13.size);
          com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new com.moseeker.thrift.gen.dao.struct.hrdb.HrEmployeeSectionDO();
            _elem14.read(iprot);
            struct.hrEmployeeSection.add(_elem14);
          }
        }
        struct.setHrEmployeeSectionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

