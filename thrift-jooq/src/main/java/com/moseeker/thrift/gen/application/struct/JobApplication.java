/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.application.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-15")
public class JobApplication implements org.apache.thrift.TBase<JobApplication, JobApplication._Fields>, java.io.Serializable, Cloneable, Comparable<JobApplication> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobApplication");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField WECHAT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wechat_id", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField RECOMMENDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recommender_id", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SUBMIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submit_time", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("status_id", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField L_APPLICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("l_application_id", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField REWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("reward", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("source_id", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField APPLIER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applier_id", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField ATS_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("ats_status", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField APPLIER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("applier_name", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField ROUTINE_FIELD_DESC = new org.apache.thrift.protocol.TField("routine", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField IS_VIEWED_FIELD_DESC = new org.apache.thrift.protocol.TField("is_viewed", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField NOT_SUITABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("not_suitable", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField APP_TPL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("app_tpl_id", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField _CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_create_time", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField PROXY_FIELD_DESC = new org.apache.thrift.protocol.TField("proxy", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField APPLY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("apply_type", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField EMAIL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("email_status", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField RECOMMENDER_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recommender_user_id", org.apache.thrift.protocol.TType.I64, (short)24);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("view_count", org.apache.thrift.protocol.TType.I32, (short)25);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobApplicationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobApplicationTupleSchemeFactory();

  public long id; // optional
  public long wechat_id; // optional
  public long position_id; // optional
  public long recommender_id; // optional
  public java.lang.String submit_time; // optional
  public long status_id; // optional
  public long l_application_id; // optional
  public long reward; // optional
  public long source_id; // optional
  public long applier_id; // optional
  public int ats_status; // optional
  public java.lang.String applier_name; // optional
  public int disable; // optional
  public int routine; // optional
  public int is_viewed; // optional
  public int not_suitable; // optional
  public long company_id; // optional
  public int app_tpl_id; // optional
  public java.lang.String _create_time; // optional
  public java.lang.String update_time; // optional
  public int proxy; // optional
  public int apply_type; // optional
  public int email_status; // optional
  public long recommender_user_id; // optional
  public int view_count; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    WECHAT_ID((short)2, "wechat_id"),
    POSITION_ID((short)3, "position_id"),
    RECOMMENDER_ID((short)4, "recommender_id"),
    SUBMIT_TIME((short)5, "submit_time"),
    STATUS_ID((short)6, "status_id"),
    L_APPLICATION_ID((short)7, "l_application_id"),
    REWARD((short)8, "reward"),
    SOURCE_ID((short)9, "source_id"),
    APPLIER_ID((short)10, "applier_id"),
    ATS_STATUS((short)11, "ats_status"),
    APPLIER_NAME((short)12, "applier_name"),
    DISABLE((short)13, "disable"),
    ROUTINE((short)14, "routine"),
    IS_VIEWED((short)15, "is_viewed"),
    NOT_SUITABLE((short)16, "not_suitable"),
    COMPANY_ID((short)17, "company_id"),
    APP_TPL_ID((short)18, "app_tpl_id"),
    _CREATE_TIME((short)19, "_create_time"),
    UPDATE_TIME((short)20, "update_time"),
    PROXY((short)21, "proxy"),
    APPLY_TYPE((short)22, "apply_type"),
    EMAIL_STATUS((short)23, "email_status"),
    RECOMMENDER_USER_ID((short)24, "recommender_user_id"),
    VIEW_COUNT((short)25, "view_count");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // WECHAT_ID
          return WECHAT_ID;
        case 3: // POSITION_ID
          return POSITION_ID;
        case 4: // RECOMMENDER_ID
          return RECOMMENDER_ID;
        case 5: // SUBMIT_TIME
          return SUBMIT_TIME;
        case 6: // STATUS_ID
          return STATUS_ID;
        case 7: // L_APPLICATION_ID
          return L_APPLICATION_ID;
        case 8: // REWARD
          return REWARD;
        case 9: // SOURCE_ID
          return SOURCE_ID;
        case 10: // APPLIER_ID
          return APPLIER_ID;
        case 11: // ATS_STATUS
          return ATS_STATUS;
        case 12: // APPLIER_NAME
          return APPLIER_NAME;
        case 13: // DISABLE
          return DISABLE;
        case 14: // ROUTINE
          return ROUTINE;
        case 15: // IS_VIEWED
          return IS_VIEWED;
        case 16: // NOT_SUITABLE
          return NOT_SUITABLE;
        case 17: // COMPANY_ID
          return COMPANY_ID;
        case 18: // APP_TPL_ID
          return APP_TPL_ID;
        case 19: // _CREATE_TIME
          return _CREATE_TIME;
        case 20: // UPDATE_TIME
          return UPDATE_TIME;
        case 21: // PROXY
          return PROXY;
        case 22: // APPLY_TYPE
          return APPLY_TYPE;
        case 23: // EMAIL_STATUS
          return EMAIL_STATUS;
        case 24: // RECOMMENDER_USER_ID
          return RECOMMENDER_USER_ID;
        case 25: // VIEW_COUNT
          return VIEW_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __WECHAT_ID_ISSET_ID = 1;
  private static final int __POSITION_ID_ISSET_ID = 2;
  private static final int __RECOMMENDER_ID_ISSET_ID = 3;
  private static final int __STATUS_ID_ISSET_ID = 4;
  private static final int __L_APPLICATION_ID_ISSET_ID = 5;
  private static final int __REWARD_ISSET_ID = 6;
  private static final int __SOURCE_ID_ISSET_ID = 7;
  private static final int __APPLIER_ID_ISSET_ID = 8;
  private static final int __ATS_STATUS_ISSET_ID = 9;
  private static final int __DISABLE_ISSET_ID = 10;
  private static final int __ROUTINE_ISSET_ID = 11;
  private static final int __IS_VIEWED_ISSET_ID = 12;
  private static final int __NOT_SUITABLE_ISSET_ID = 13;
  private static final int __COMPANY_ID_ISSET_ID = 14;
  private static final int __APP_TPL_ID_ISSET_ID = 15;
  private static final int __PROXY_ISSET_ID = 16;
  private static final int __APPLY_TYPE_ISSET_ID = 17;
  private static final int __EMAIL_STATUS_ISSET_ID = 18;
  private static final int __RECOMMENDER_USER_ID_ISSET_ID = 19;
  private static final int __VIEW_COUNT_ISSET_ID = 20;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.WECHAT_ID,_Fields.POSITION_ID,_Fields.RECOMMENDER_ID,_Fields.SUBMIT_TIME,_Fields.STATUS_ID,_Fields.L_APPLICATION_ID,_Fields.REWARD,_Fields.SOURCE_ID,_Fields.APPLIER_ID,_Fields.ATS_STATUS,_Fields.APPLIER_NAME,_Fields.DISABLE,_Fields.ROUTINE,_Fields.IS_VIEWED,_Fields.NOT_SUITABLE,_Fields.COMPANY_ID,_Fields.APP_TPL_ID,_Fields._CREATE_TIME,_Fields.UPDATE_TIME,_Fields.PROXY,_Fields.APPLY_TYPE,_Fields.EMAIL_STATUS,_Fields.RECOMMENDER_USER_ID,_Fields.VIEW_COUNT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.WECHAT_ID, new org.apache.thrift.meta_data.FieldMetaData("wechat_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RECOMMENDER_ID, new org.apache.thrift.meta_data.FieldMetaData("recommender_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SUBMIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("submit_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.STATUS_ID, new org.apache.thrift.meta_data.FieldMetaData("status_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.L_APPLICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("l_application_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REWARD, new org.apache.thrift.meta_data.FieldMetaData("reward", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("source_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.APPLIER_ID, new org.apache.thrift.meta_data.FieldMetaData("applier_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ATS_STATUS, new org.apache.thrift.meta_data.FieldMetaData("ats_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLIER_NAME, new org.apache.thrift.meta_data.FieldMetaData("applier_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROUTINE, new org.apache.thrift.meta_data.FieldMetaData("routine", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_VIEWED, new org.apache.thrift.meta_data.FieldMetaData("is_viewed", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOT_SUITABLE, new org.apache.thrift.meta_data.FieldMetaData("not_suitable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.APP_TPL_ID, new org.apache.thrift.meta_data.FieldMetaData("app_tpl_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.PROXY, new org.apache.thrift.meta_data.FieldMetaData("proxy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("apply_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("email_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOMMENDER_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("recommender_user_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("view_count", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobApplication.class, metaDataMap);
  }

  public JobApplication() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobApplication(JobApplication other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.wechat_id = other.wechat_id;
    this.position_id = other.position_id;
    this.recommender_id = other.recommender_id;
    if (other.isSetSubmit_time()) {
      this.submit_time = other.submit_time;
    }
    this.status_id = other.status_id;
    this.l_application_id = other.l_application_id;
    this.reward = other.reward;
    this.source_id = other.source_id;
    this.applier_id = other.applier_id;
    this.ats_status = other.ats_status;
    if (other.isSetApplier_name()) {
      this.applier_name = other.applier_name;
    }
    this.disable = other.disable;
    this.routine = other.routine;
    this.is_viewed = other.is_viewed;
    this.not_suitable = other.not_suitable;
    this.company_id = other.company_id;
    this.app_tpl_id = other.app_tpl_id;
    if (other.isSet_create_time()) {
      this._create_time = other._create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    this.proxy = other.proxy;
    this.apply_type = other.apply_type;
    this.email_status = other.email_status;
    this.recommender_user_id = other.recommender_user_id;
    this.view_count = other.view_count;
  }

  public JobApplication deepCopy() {
    return new JobApplication(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setWechat_idIsSet(false);
    this.wechat_id = 0;
    setPosition_idIsSet(false);
    this.position_id = 0;
    setRecommender_idIsSet(false);
    this.recommender_id = 0;
    this.submit_time = null;
    setStatus_idIsSet(false);
    this.status_id = 0;
    setL_application_idIsSet(false);
    this.l_application_id = 0;
    setRewardIsSet(false);
    this.reward = 0;
    setSource_idIsSet(false);
    this.source_id = 0;
    setApplier_idIsSet(false);
    this.applier_id = 0;
    setAts_statusIsSet(false);
    this.ats_status = 0;
    this.applier_name = null;
    setDisableIsSet(false);
    this.disable = 0;
    setRoutineIsSet(false);
    this.routine = 0;
    setIs_viewedIsSet(false);
    this.is_viewed = 0;
    setNot_suitableIsSet(false);
    this.not_suitable = 0;
    setCompany_idIsSet(false);
    this.company_id = 0;
    setApp_tpl_idIsSet(false);
    this.app_tpl_id = 0;
    this._create_time = null;
    this.update_time = null;
    setProxyIsSet(false);
    this.proxy = 0;
    setApply_typeIsSet(false);
    this.apply_type = 0;
    setEmail_statusIsSet(false);
    this.email_status = 0;
    setRecommender_user_idIsSet(false);
    this.recommender_user_id = 0;
    setView_countIsSet(false);
    this.view_count = 0;
  }

  public long getId() {
    return this.id;
  }

  public JobApplication setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public long getWechat_id() {
    return this.wechat_id;
  }

  public JobApplication setWechat_id(long wechat_id) {
    this.wechat_id = wechat_id;
    setWechat_idIsSet(true);
    return this;
  }

  public void unsetWechat_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WECHAT_ID_ISSET_ID);
  }

  /** Returns true if field wechat_id is set (has been assigned a value) and false otherwise */
  public boolean isSetWechat_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WECHAT_ID_ISSET_ID);
  }

  public void setWechat_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WECHAT_ID_ISSET_ID, value);
  }

  public long getPosition_id() {
    return this.position_id;
  }

  public JobApplication setPosition_id(long position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public long getRecommender_id() {
    return this.recommender_id;
  }

  public JobApplication setRecommender_id(long recommender_id) {
    this.recommender_id = recommender_id;
    setRecommender_idIsSet(true);
    return this;
  }

  public void unsetRecommender_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDER_ID_ISSET_ID);
  }

  /** Returns true if field recommender_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommender_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDER_ID_ISSET_ID);
  }

  public void setRecommender_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDER_ID_ISSET_ID, value);
  }

  public java.lang.String getSubmit_time() {
    return this.submit_time;
  }

  public JobApplication setSubmit_time(java.lang.String submit_time) {
    this.submit_time = submit_time;
    return this;
  }

  public void unsetSubmit_time() {
    this.submit_time = null;
  }

  /** Returns true if field submit_time is set (has been assigned a value) and false otherwise */
  public boolean isSetSubmit_time() {
    return this.submit_time != null;
  }

  public void setSubmit_timeIsSet(boolean value) {
    if (!value) {
      this.submit_time = null;
    }
  }

  public long getStatus_id() {
    return this.status_id;
  }

  public JobApplication setStatus_id(long status_id) {
    this.status_id = status_id;
    setStatus_idIsSet(true);
    return this;
  }

  public void unsetStatus_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ID_ISSET_ID);
  }

  /** Returns true if field status_id is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ID_ISSET_ID);
  }

  public void setStatus_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ID_ISSET_ID, value);
  }

  public long getL_application_id() {
    return this.l_application_id;
  }

  public JobApplication setL_application_id(long l_application_id) {
    this.l_application_id = l_application_id;
    setL_application_idIsSet(true);
    return this;
  }

  public void unsetL_application_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __L_APPLICATION_ID_ISSET_ID);
  }

  /** Returns true if field l_application_id is set (has been assigned a value) and false otherwise */
  public boolean isSetL_application_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __L_APPLICATION_ID_ISSET_ID);
  }

  public void setL_application_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __L_APPLICATION_ID_ISSET_ID, value);
  }

  public long getReward() {
    return this.reward;
  }

  public JobApplication setReward(long reward) {
    this.reward = reward;
    setRewardIsSet(true);
    return this;
  }

  public void unsetReward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  /** Returns true if field reward is set (has been assigned a value) and false otherwise */
  public boolean isSetReward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  public void setRewardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REWARD_ISSET_ID, value);
  }

  public long getSource_id() {
    return this.source_id;
  }

  public JobApplication setSource_id(long source_id) {
    this.source_id = source_id;
    setSource_idIsSet(true);
    return this;
  }

  public void unsetSource_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  /** Returns true if field source_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSource_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  public void setSource_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ID_ISSET_ID, value);
  }

  public long getApplier_id() {
    return this.applier_id;
  }

  public JobApplication setApplier_id(long applier_id) {
    this.applier_id = applier_id;
    setApplier_idIsSet(true);
    return this;
  }

  public void unsetApplier_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLIER_ID_ISSET_ID);
  }

  /** Returns true if field applier_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApplier_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLIER_ID_ISSET_ID);
  }

  public void setApplier_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLIER_ID_ISSET_ID, value);
  }

  public int getAts_status() {
    return this.ats_status;
  }

  public JobApplication setAts_status(int ats_status) {
    this.ats_status = ats_status;
    setAts_statusIsSet(true);
    return this;
  }

  public void unsetAts_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATS_STATUS_ISSET_ID);
  }

  /** Returns true if field ats_status is set (has been assigned a value) and false otherwise */
  public boolean isSetAts_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATS_STATUS_ISSET_ID);
  }

  public void setAts_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATS_STATUS_ISSET_ID, value);
  }

  public java.lang.String getApplier_name() {
    return this.applier_name;
  }

  public JobApplication setApplier_name(java.lang.String applier_name) {
    this.applier_name = applier_name;
    return this;
  }

  public void unsetApplier_name() {
    this.applier_name = null;
  }

  /** Returns true if field applier_name is set (has been assigned a value) and false otherwise */
  public boolean isSetApplier_name() {
    return this.applier_name != null;
  }

  public void setApplier_nameIsSet(boolean value) {
    if (!value) {
      this.applier_name = null;
    }
  }

  public int getDisable() {
    return this.disable;
  }

  public JobApplication setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public int getRoutine() {
    return this.routine;
  }

  public JobApplication setRoutine(int routine) {
    this.routine = routine;
    setRoutineIsSet(true);
    return this;
  }

  public void unsetRoutine() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROUTINE_ISSET_ID);
  }

  /** Returns true if field routine is set (has been assigned a value) and false otherwise */
  public boolean isSetRoutine() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROUTINE_ISSET_ID);
  }

  public void setRoutineIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROUTINE_ISSET_ID, value);
  }

  public int getIs_viewed() {
    return this.is_viewed;
  }

  public JobApplication setIs_viewed(int is_viewed) {
    this.is_viewed = is_viewed;
    setIs_viewedIsSet(true);
    return this;
  }

  public void unsetIs_viewed() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_VIEWED_ISSET_ID);
  }

  /** Returns true if field is_viewed is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_viewed() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_VIEWED_ISSET_ID);
  }

  public void setIs_viewedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_VIEWED_ISSET_ID, value);
  }

  public int getNot_suitable() {
    return this.not_suitable;
  }

  public JobApplication setNot_suitable(int not_suitable) {
    this.not_suitable = not_suitable;
    setNot_suitableIsSet(true);
    return this;
  }

  public void unsetNot_suitable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NOT_SUITABLE_ISSET_ID);
  }

  /** Returns true if field not_suitable is set (has been assigned a value) and false otherwise */
  public boolean isSetNot_suitable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NOT_SUITABLE_ISSET_ID);
  }

  public void setNot_suitableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NOT_SUITABLE_ISSET_ID, value);
  }

  public long getCompany_id() {
    return this.company_id;
  }

  public JobApplication setCompany_id(long company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getApp_tpl_id() {
    return this.app_tpl_id;
  }

  public JobApplication setApp_tpl_id(int app_tpl_id) {
    this.app_tpl_id = app_tpl_id;
    setApp_tpl_idIsSet(true);
    return this;
  }

  public void unsetApp_tpl_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APP_TPL_ID_ISSET_ID);
  }

  /** Returns true if field app_tpl_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_tpl_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APP_TPL_ID_ISSET_ID);
  }

  public void setApp_tpl_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APP_TPL_ID_ISSET_ID, value);
  }

  public java.lang.String get_create_time() {
    return this._create_time;
  }

  public JobApplication set_create_time(java.lang.String _create_time) {
    this._create_time = _create_time;
    return this;
  }

  public void unset_create_time() {
    this._create_time = null;
  }

  /** Returns true if field _create_time is set (has been assigned a value) and false otherwise */
  public boolean isSet_create_time() {
    return this._create_time != null;
  }

  public void set_create_timeIsSet(boolean value) {
    if (!value) {
      this._create_time = null;
    }
  }

  public java.lang.String getUpdate_time() {
    return this.update_time;
  }

  public JobApplication setUpdate_time(java.lang.String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public int getProxy() {
    return this.proxy;
  }

  public JobApplication setProxy(int proxy) {
    this.proxy = proxy;
    setProxyIsSet(true);
    return this;
  }

  public void unsetProxy() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROXY_ISSET_ID);
  }

  /** Returns true if field proxy is set (has been assigned a value) and false otherwise */
  public boolean isSetProxy() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROXY_ISSET_ID);
  }

  public void setProxyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROXY_ISSET_ID, value);
  }

  public int getApply_type() {
    return this.apply_type;
  }

  public JobApplication setApply_type(int apply_type) {
    this.apply_type = apply_type;
    setApply_typeIsSet(true);
    return this;
  }

  public void unsetApply_type() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLY_TYPE_ISSET_ID);
  }

  /** Returns true if field apply_type is set (has been assigned a value) and false otherwise */
  public boolean isSetApply_type() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLY_TYPE_ISSET_ID);
  }

  public void setApply_typeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLY_TYPE_ISSET_ID, value);
  }

  public int getEmail_status() {
    return this.email_status;
  }

  public JobApplication setEmail_status(int email_status) {
    this.email_status = email_status;
    setEmail_statusIsSet(true);
    return this;
  }

  public void unsetEmail_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAIL_STATUS_ISSET_ID);
  }

  /** Returns true if field email_status is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAIL_STATUS_ISSET_ID);
  }

  public void setEmail_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAIL_STATUS_ISSET_ID, value);
  }

  public long getRecommender_user_id() {
    return this.recommender_user_id;
  }

  public JobApplication setRecommender_user_id(long recommender_user_id) {
    this.recommender_user_id = recommender_user_id;
    setRecommender_user_idIsSet(true);
    return this;
  }

  public void unsetRecommender_user_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDER_USER_ID_ISSET_ID);
  }

  /** Returns true if field recommender_user_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommender_user_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDER_USER_ID_ISSET_ID);
  }

  public void setRecommender_user_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDER_USER_ID_ISSET_ID, value);
  }

  public int getView_count() {
    return this.view_count;
  }

  public JobApplication setView_count(int view_count) {
    this.view_count = view_count;
    setView_countIsSet(true);
    return this;
  }

  public void unsetView_count() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID);
  }

  /** Returns true if field view_count is set (has been assigned a value) and false otherwise */
  public boolean isSetView_count() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID);
  }

  public void setView_countIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case WECHAT_ID:
      if (value == null) {
        unsetWechat_id();
      } else {
        setWechat_id((java.lang.Long)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((java.lang.Long)value);
      }
      break;

    case RECOMMENDER_ID:
      if (value == null) {
        unsetRecommender_id();
      } else {
        setRecommender_id((java.lang.Long)value);
      }
      break;

    case SUBMIT_TIME:
      if (value == null) {
        unsetSubmit_time();
      } else {
        setSubmit_time((java.lang.String)value);
      }
      break;

    case STATUS_ID:
      if (value == null) {
        unsetStatus_id();
      } else {
        setStatus_id((java.lang.Long)value);
      }
      break;

    case L_APPLICATION_ID:
      if (value == null) {
        unsetL_application_id();
      } else {
        setL_application_id((java.lang.Long)value);
      }
      break;

    case REWARD:
      if (value == null) {
        unsetReward();
      } else {
        setReward((java.lang.Long)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSource_id();
      } else {
        setSource_id((java.lang.Long)value);
      }
      break;

    case APPLIER_ID:
      if (value == null) {
        unsetApplier_id();
      } else {
        setApplier_id((java.lang.Long)value);
      }
      break;

    case ATS_STATUS:
      if (value == null) {
        unsetAts_status();
      } else {
        setAts_status((java.lang.Integer)value);
      }
      break;

    case APPLIER_NAME:
      if (value == null) {
        unsetApplier_name();
      } else {
        setApplier_name((java.lang.String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((java.lang.Integer)value);
      }
      break;

    case ROUTINE:
      if (value == null) {
        unsetRoutine();
      } else {
        setRoutine((java.lang.Integer)value);
      }
      break;

    case IS_VIEWED:
      if (value == null) {
        unsetIs_viewed();
      } else {
        setIs_viewed((java.lang.Integer)value);
      }
      break;

    case NOT_SUITABLE:
      if (value == null) {
        unsetNot_suitable();
      } else {
        setNot_suitable((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Long)value);
      }
      break;

    case APP_TPL_ID:
      if (value == null) {
        unsetApp_tpl_id();
      } else {
        setApp_tpl_id((java.lang.Integer)value);
      }
      break;

    case _CREATE_TIME:
      if (value == null) {
        unset_create_time();
      } else {
        set_create_time((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((java.lang.String)value);
      }
      break;

    case PROXY:
      if (value == null) {
        unsetProxy();
      } else {
        setProxy((java.lang.Integer)value);
      }
      break;

    case APPLY_TYPE:
      if (value == null) {
        unsetApply_type();
      } else {
        setApply_type((java.lang.Integer)value);
      }
      break;

    case EMAIL_STATUS:
      if (value == null) {
        unsetEmail_status();
      } else {
        setEmail_status((java.lang.Integer)value);
      }
      break;

    case RECOMMENDER_USER_ID:
      if (value == null) {
        unsetRecommender_user_id();
      } else {
        setRecommender_user_id((java.lang.Long)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetView_count();
      } else {
        setView_count((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case WECHAT_ID:
      return getWechat_id();

    case POSITION_ID:
      return getPosition_id();

    case RECOMMENDER_ID:
      return getRecommender_id();

    case SUBMIT_TIME:
      return getSubmit_time();

    case STATUS_ID:
      return getStatus_id();

    case L_APPLICATION_ID:
      return getL_application_id();

    case REWARD:
      return getReward();

    case SOURCE_ID:
      return getSource_id();

    case APPLIER_ID:
      return getApplier_id();

    case ATS_STATUS:
      return getAts_status();

    case APPLIER_NAME:
      return getApplier_name();

    case DISABLE:
      return getDisable();

    case ROUTINE:
      return getRoutine();

    case IS_VIEWED:
      return getIs_viewed();

    case NOT_SUITABLE:
      return getNot_suitable();

    case COMPANY_ID:
      return getCompany_id();

    case APP_TPL_ID:
      return getApp_tpl_id();

    case _CREATE_TIME:
      return get_create_time();

    case UPDATE_TIME:
      return getUpdate_time();

    case PROXY:
      return getProxy();

    case APPLY_TYPE:
      return getApply_type();

    case EMAIL_STATUS:
      return getEmail_status();

    case RECOMMENDER_USER_ID:
      return getRecommender_user_id();

    case VIEW_COUNT:
      return getView_count();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case WECHAT_ID:
      return isSetWechat_id();
    case POSITION_ID:
      return isSetPosition_id();
    case RECOMMENDER_ID:
      return isSetRecommender_id();
    case SUBMIT_TIME:
      return isSetSubmit_time();
    case STATUS_ID:
      return isSetStatus_id();
    case L_APPLICATION_ID:
      return isSetL_application_id();
    case REWARD:
      return isSetReward();
    case SOURCE_ID:
      return isSetSource_id();
    case APPLIER_ID:
      return isSetApplier_id();
    case ATS_STATUS:
      return isSetAts_status();
    case APPLIER_NAME:
      return isSetApplier_name();
    case DISABLE:
      return isSetDisable();
    case ROUTINE:
      return isSetRoutine();
    case IS_VIEWED:
      return isSetIs_viewed();
    case NOT_SUITABLE:
      return isSetNot_suitable();
    case COMPANY_ID:
      return isSetCompany_id();
    case APP_TPL_ID:
      return isSetApp_tpl_id();
    case _CREATE_TIME:
      return isSet_create_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case PROXY:
      return isSetProxy();
    case APPLY_TYPE:
      return isSetApply_type();
    case EMAIL_STATUS:
      return isSetEmail_status();
    case RECOMMENDER_USER_ID:
      return isSetRecommender_user_id();
    case VIEW_COUNT:
      return isSetView_count();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof JobApplication)
      return this.equals((JobApplication)that);
    return false;
  }

  public boolean equals(JobApplication that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_wechat_id = true && this.isSetWechat_id();
    boolean that_present_wechat_id = true && that.isSetWechat_id();
    if (this_present_wechat_id || that_present_wechat_id) {
      if (!(this_present_wechat_id && that_present_wechat_id))
        return false;
      if (this.wechat_id != that.wechat_id)
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_recommender_id = true && this.isSetRecommender_id();
    boolean that_present_recommender_id = true && that.isSetRecommender_id();
    if (this_present_recommender_id || that_present_recommender_id) {
      if (!(this_present_recommender_id && that_present_recommender_id))
        return false;
      if (this.recommender_id != that.recommender_id)
        return false;
    }

    boolean this_present_submit_time = true && this.isSetSubmit_time();
    boolean that_present_submit_time = true && that.isSetSubmit_time();
    if (this_present_submit_time || that_present_submit_time) {
      if (!(this_present_submit_time && that_present_submit_time))
        return false;
      if (!this.submit_time.equals(that.submit_time))
        return false;
    }

    boolean this_present_status_id = true && this.isSetStatus_id();
    boolean that_present_status_id = true && that.isSetStatus_id();
    if (this_present_status_id || that_present_status_id) {
      if (!(this_present_status_id && that_present_status_id))
        return false;
      if (this.status_id != that.status_id)
        return false;
    }

    boolean this_present_l_application_id = true && this.isSetL_application_id();
    boolean that_present_l_application_id = true && that.isSetL_application_id();
    if (this_present_l_application_id || that_present_l_application_id) {
      if (!(this_present_l_application_id && that_present_l_application_id))
        return false;
      if (this.l_application_id != that.l_application_id)
        return false;
    }

    boolean this_present_reward = true && this.isSetReward();
    boolean that_present_reward = true && that.isSetReward();
    if (this_present_reward || that_present_reward) {
      if (!(this_present_reward && that_present_reward))
        return false;
      if (this.reward != that.reward)
        return false;
    }

    boolean this_present_source_id = true && this.isSetSource_id();
    boolean that_present_source_id = true && that.isSetSource_id();
    if (this_present_source_id || that_present_source_id) {
      if (!(this_present_source_id && that_present_source_id))
        return false;
      if (this.source_id != that.source_id)
        return false;
    }

    boolean this_present_applier_id = true && this.isSetApplier_id();
    boolean that_present_applier_id = true && that.isSetApplier_id();
    if (this_present_applier_id || that_present_applier_id) {
      if (!(this_present_applier_id && that_present_applier_id))
        return false;
      if (this.applier_id != that.applier_id)
        return false;
    }

    boolean this_present_ats_status = true && this.isSetAts_status();
    boolean that_present_ats_status = true && that.isSetAts_status();
    if (this_present_ats_status || that_present_ats_status) {
      if (!(this_present_ats_status && that_present_ats_status))
        return false;
      if (this.ats_status != that.ats_status)
        return false;
    }

    boolean this_present_applier_name = true && this.isSetApplier_name();
    boolean that_present_applier_name = true && that.isSetApplier_name();
    if (this_present_applier_name || that_present_applier_name) {
      if (!(this_present_applier_name && that_present_applier_name))
        return false;
      if (!this.applier_name.equals(that.applier_name))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_routine = true && this.isSetRoutine();
    boolean that_present_routine = true && that.isSetRoutine();
    if (this_present_routine || that_present_routine) {
      if (!(this_present_routine && that_present_routine))
        return false;
      if (this.routine != that.routine)
        return false;
    }

    boolean this_present_is_viewed = true && this.isSetIs_viewed();
    boolean that_present_is_viewed = true && that.isSetIs_viewed();
    if (this_present_is_viewed || that_present_is_viewed) {
      if (!(this_present_is_viewed && that_present_is_viewed))
        return false;
      if (this.is_viewed != that.is_viewed)
        return false;
    }

    boolean this_present_not_suitable = true && this.isSetNot_suitable();
    boolean that_present_not_suitable = true && that.isSetNot_suitable();
    if (this_present_not_suitable || that_present_not_suitable) {
      if (!(this_present_not_suitable && that_present_not_suitable))
        return false;
      if (this.not_suitable != that.not_suitable)
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_app_tpl_id = true && this.isSetApp_tpl_id();
    boolean that_present_app_tpl_id = true && that.isSetApp_tpl_id();
    if (this_present_app_tpl_id || that_present_app_tpl_id) {
      if (!(this_present_app_tpl_id && that_present_app_tpl_id))
        return false;
      if (this.app_tpl_id != that.app_tpl_id)
        return false;
    }

    boolean this_present__create_time = true && this.isSet_create_time();
    boolean that_present__create_time = true && that.isSet_create_time();
    if (this_present__create_time || that_present__create_time) {
      if (!(this_present__create_time && that_present__create_time))
        return false;
      if (!this._create_time.equals(that._create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_proxy = true && this.isSetProxy();
    boolean that_present_proxy = true && that.isSetProxy();
    if (this_present_proxy || that_present_proxy) {
      if (!(this_present_proxy && that_present_proxy))
        return false;
      if (this.proxy != that.proxy)
        return false;
    }

    boolean this_present_apply_type = true && this.isSetApply_type();
    boolean that_present_apply_type = true && that.isSetApply_type();
    if (this_present_apply_type || that_present_apply_type) {
      if (!(this_present_apply_type && that_present_apply_type))
        return false;
      if (this.apply_type != that.apply_type)
        return false;
    }

    boolean this_present_email_status = true && this.isSetEmail_status();
    boolean that_present_email_status = true && that.isSetEmail_status();
    if (this_present_email_status || that_present_email_status) {
      if (!(this_present_email_status && that_present_email_status))
        return false;
      if (this.email_status != that.email_status)
        return false;
    }

    boolean this_present_recommender_user_id = true && this.isSetRecommender_user_id();
    boolean that_present_recommender_user_id = true && that.isSetRecommender_user_id();
    if (this_present_recommender_user_id || that_present_recommender_user_id) {
      if (!(this_present_recommender_user_id && that_present_recommender_user_id))
        return false;
      if (this.recommender_user_id != that.recommender_user_id)
        return false;
    }

    boolean this_present_view_count = true && this.isSetView_count();
    boolean that_present_view_count = true && that.isSetView_count();
    if (this_present_view_count || that_present_view_count) {
      if (!(this_present_view_count && that_present_view_count))
        return false;
      if (this.view_count != that.view_count)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(id);

    hashCode = hashCode * 8191 + ((isSetWechat_id()) ? 131071 : 524287);
    if (isSetWechat_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(wechat_id);

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(position_id);

    hashCode = hashCode * 8191 + ((isSetRecommender_id()) ? 131071 : 524287);
    if (isSetRecommender_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(recommender_id);

    hashCode = hashCode * 8191 + ((isSetSubmit_time()) ? 131071 : 524287);
    if (isSetSubmit_time())
      hashCode = hashCode * 8191 + submit_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus_id()) ? 131071 : 524287);
    if (isSetStatus_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(status_id);

    hashCode = hashCode * 8191 + ((isSetL_application_id()) ? 131071 : 524287);
    if (isSetL_application_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(l_application_id);

    hashCode = hashCode * 8191 + ((isSetReward()) ? 131071 : 524287);
    if (isSetReward())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(reward);

    hashCode = hashCode * 8191 + ((isSetSource_id()) ? 131071 : 524287);
    if (isSetSource_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(source_id);

    hashCode = hashCode * 8191 + ((isSetApplier_id()) ? 131071 : 524287);
    if (isSetApplier_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(applier_id);

    hashCode = hashCode * 8191 + ((isSetAts_status()) ? 131071 : 524287);
    if (isSetAts_status())
      hashCode = hashCode * 8191 + ats_status;

    hashCode = hashCode * 8191 + ((isSetApplier_name()) ? 131071 : 524287);
    if (isSetApplier_name())
      hashCode = hashCode * 8191 + applier_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetRoutine()) ? 131071 : 524287);
    if (isSetRoutine())
      hashCode = hashCode * 8191 + routine;

    hashCode = hashCode * 8191 + ((isSetIs_viewed()) ? 131071 : 524287);
    if (isSetIs_viewed())
      hashCode = hashCode * 8191 + is_viewed;

    hashCode = hashCode * 8191 + ((isSetNot_suitable()) ? 131071 : 524287);
    if (isSetNot_suitable())
      hashCode = hashCode * 8191 + not_suitable;

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(company_id);

    hashCode = hashCode * 8191 + ((isSetApp_tpl_id()) ? 131071 : 524287);
    if (isSetApp_tpl_id())
      hashCode = hashCode * 8191 + app_tpl_id;

    hashCode = hashCode * 8191 + ((isSet_create_time()) ? 131071 : 524287);
    if (isSet_create_time())
      hashCode = hashCode * 8191 + _create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetProxy()) ? 131071 : 524287);
    if (isSetProxy())
      hashCode = hashCode * 8191 + proxy;

    hashCode = hashCode * 8191 + ((isSetApply_type()) ? 131071 : 524287);
    if (isSetApply_type())
      hashCode = hashCode * 8191 + apply_type;

    hashCode = hashCode * 8191 + ((isSetEmail_status()) ? 131071 : 524287);
    if (isSetEmail_status())
      hashCode = hashCode * 8191 + email_status;

    hashCode = hashCode * 8191 + ((isSetRecommender_user_id()) ? 131071 : 524287);
    if (isSetRecommender_user_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(recommender_user_id);

    hashCode = hashCode * 8191 + ((isSetView_count()) ? 131071 : 524287);
    if (isSetView_count())
      hashCode = hashCode * 8191 + view_count;

    return hashCode;
  }

  @Override
  public int compareTo(JobApplication other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWechat_id()).compareTo(other.isSetWechat_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWechat_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wechat_id, other.wechat_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommender_id()).compareTo(other.isSetRecommender_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommender_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommender_id, other.recommender_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubmit_time()).compareTo(other.isSetSubmit_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubmit_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submit_time, other.submit_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus_id()).compareTo(other.isSetStatus_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status_id, other.status_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetL_application_id()).compareTo(other.isSetL_application_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetL_application_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.l_application_id, other.l_application_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReward()).compareTo(other.isSetReward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reward, other.reward);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource_id()).compareTo(other.isSetSource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source_id, other.source_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplier_id()).compareTo(other.isSetApplier_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplier_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applier_id, other.applier_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAts_status()).compareTo(other.isSetAts_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAts_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ats_status, other.ats_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplier_name()).compareTo(other.isSetApplier_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplier_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applier_name, other.applier_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoutine()).compareTo(other.isSetRoutine());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoutine()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.routine, other.routine);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_viewed()).compareTo(other.isSetIs_viewed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_viewed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_viewed, other.is_viewed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNot_suitable()).compareTo(other.isSetNot_suitable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNot_suitable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.not_suitable, other.not_suitable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApp_tpl_id()).compareTo(other.isSetApp_tpl_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_tpl_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_tpl_id, other.app_tpl_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_create_time()).compareTo(other.isSet_create_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_create_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._create_time, other._create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProxy()).compareTo(other.isSetProxy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProxy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proxy, other.proxy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApply_type()).compareTo(other.isSetApply_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApply_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apply_type, other.apply_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail_status()).compareTo(other.isSetEmail_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_status, other.email_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommender_user_id()).compareTo(other.isSetRecommender_user_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommender_user_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommender_user_id, other.recommender_user_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetView_count()).compareTo(other.isSetView_count());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetView_count()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.view_count, other.view_count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("JobApplication(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetWechat_id()) {
      if (!first) sb.append(", ");
      sb.append("wechat_id:");
      sb.append(this.wechat_id);
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetRecommender_id()) {
      if (!first) sb.append(", ");
      sb.append("recommender_id:");
      sb.append(this.recommender_id);
      first = false;
    }
    if (isSetSubmit_time()) {
      if (!first) sb.append(", ");
      sb.append("submit_time:");
      if (this.submit_time == null) {
        sb.append("null");
      } else {
        sb.append(this.submit_time);
      }
      first = false;
    }
    if (isSetStatus_id()) {
      if (!first) sb.append(", ");
      sb.append("status_id:");
      sb.append(this.status_id);
      first = false;
    }
    if (isSetL_application_id()) {
      if (!first) sb.append(", ");
      sb.append("l_application_id:");
      sb.append(this.l_application_id);
      first = false;
    }
    if (isSetReward()) {
      if (!first) sb.append(", ");
      sb.append("reward:");
      sb.append(this.reward);
      first = false;
    }
    if (isSetSource_id()) {
      if (!first) sb.append(", ");
      sb.append("source_id:");
      sb.append(this.source_id);
      first = false;
    }
    if (isSetApplier_id()) {
      if (!first) sb.append(", ");
      sb.append("applier_id:");
      sb.append(this.applier_id);
      first = false;
    }
    if (isSetAts_status()) {
      if (!first) sb.append(", ");
      sb.append("ats_status:");
      sb.append(this.ats_status);
      first = false;
    }
    if (isSetApplier_name()) {
      if (!first) sb.append(", ");
      sb.append("applier_name:");
      if (this.applier_name == null) {
        sb.append("null");
      } else {
        sb.append(this.applier_name);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetRoutine()) {
      if (!first) sb.append(", ");
      sb.append("routine:");
      sb.append(this.routine);
      first = false;
    }
    if (isSetIs_viewed()) {
      if (!first) sb.append(", ");
      sb.append("is_viewed:");
      sb.append(this.is_viewed);
      first = false;
    }
    if (isSetNot_suitable()) {
      if (!first) sb.append(", ");
      sb.append("not_suitable:");
      sb.append(this.not_suitable);
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetApp_tpl_id()) {
      if (!first) sb.append(", ");
      sb.append("app_tpl_id:");
      sb.append(this.app_tpl_id);
      first = false;
    }
    if (isSet_create_time()) {
      if (!first) sb.append(", ");
      sb.append("_create_time:");
      if (this._create_time == null) {
        sb.append("null");
      } else {
        sb.append(this._create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetProxy()) {
      if (!first) sb.append(", ");
      sb.append("proxy:");
      sb.append(this.proxy);
      first = false;
    }
    if (isSetApply_type()) {
      if (!first) sb.append(", ");
      sb.append("apply_type:");
      sb.append(this.apply_type);
      first = false;
    }
    if (isSetEmail_status()) {
      if (!first) sb.append(", ");
      sb.append("email_status:");
      sb.append(this.email_status);
      first = false;
    }
    if (isSetRecommender_user_id()) {
      if (!first) sb.append(", ");
      sb.append("recommender_user_id:");
      sb.append(this.recommender_user_id);
      first = false;
    }
    if (isSetView_count()) {
      if (!first) sb.append(", ");
      sb.append("view_count:");
      sb.append(this.view_count);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobApplicationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationStandardScheme getScheme() {
      return new JobApplicationStandardScheme();
    }
  }

  private static class JobApplicationStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobApplication> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobApplication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WECHAT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.wechat_id = iprot.readI64();
              struct.setWechat_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.position_id = iprot.readI64();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RECOMMENDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.recommender_id = iprot.readI64();
              struct.setRecommender_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUBMIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.submit_time = iprot.readString();
              struct.setSubmit_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.status_id = iprot.readI64();
              struct.setStatus_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // L_APPLICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.l_application_id = iprot.readI64();
              struct.setL_application_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.reward = iprot.readI64();
              struct.setRewardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.source_id = iprot.readI64();
              struct.setSource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // APPLIER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.applier_id = iprot.readI64();
              struct.setApplier_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ATS_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ats_status = iprot.readI32();
              struct.setAts_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPLIER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applier_name = iprot.readString();
              struct.setApplier_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ROUTINE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.routine = iprot.readI32();
              struct.setRoutineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // IS_VIEWED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_viewed = iprot.readI32();
              struct.setIs_viewedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // NOT_SUITABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.not_suitable = iprot.readI32();
              struct.setNot_suitableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.company_id = iprot.readI64();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // APP_TPL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.app_tpl_id = iprot.readI32();
              struct.setApp_tpl_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // _CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._create_time = iprot.readString();
              struct.set_create_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PROXY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.proxy = iprot.readI32();
              struct.setProxyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // APPLY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.apply_type = iprot.readI32();
              struct.setApply_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // EMAIL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.email_status = iprot.readI32();
              struct.setEmail_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // RECOMMENDER_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.recommender_user_id = iprot.readI64();
              struct.setRecommender_user_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.view_count = iprot.readI32();
              struct.setView_countIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobApplication struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWechat_id()) {
        oprot.writeFieldBegin(WECHAT_ID_FIELD_DESC);
        oprot.writeI64(struct.wechat_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI64(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecommender_id()) {
        oprot.writeFieldBegin(RECOMMENDER_ID_FIELD_DESC);
        oprot.writeI64(struct.recommender_id);
        oprot.writeFieldEnd();
      }
      if (struct.submit_time != null) {
        if (struct.isSetSubmit_time()) {
          oprot.writeFieldBegin(SUBMIT_TIME_FIELD_DESC);
          oprot.writeString(struct.submit_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus_id()) {
        oprot.writeFieldBegin(STATUS_ID_FIELD_DESC);
        oprot.writeI64(struct.status_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetL_application_id()) {
        oprot.writeFieldBegin(L_APPLICATION_ID_FIELD_DESC);
        oprot.writeI64(struct.l_application_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetReward()) {
        oprot.writeFieldBegin(REWARD_FIELD_DESC);
        oprot.writeI64(struct.reward);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSource_id()) {
        oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
        oprot.writeI64(struct.source_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApplier_id()) {
        oprot.writeFieldBegin(APPLIER_ID_FIELD_DESC);
        oprot.writeI64(struct.applier_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAts_status()) {
        oprot.writeFieldBegin(ATS_STATUS_FIELD_DESC);
        oprot.writeI32(struct.ats_status);
        oprot.writeFieldEnd();
      }
      if (struct.applier_name != null) {
        if (struct.isSetApplier_name()) {
          oprot.writeFieldBegin(APPLIER_NAME_FIELD_DESC);
          oprot.writeString(struct.applier_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRoutine()) {
        oprot.writeFieldBegin(ROUTINE_FIELD_DESC);
        oprot.writeI32(struct.routine);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIs_viewed()) {
        oprot.writeFieldBegin(IS_VIEWED_FIELD_DESC);
        oprot.writeI32(struct.is_viewed);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNot_suitable()) {
        oprot.writeFieldBegin(NOT_SUITABLE_FIELD_DESC);
        oprot.writeI32(struct.not_suitable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI64(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApp_tpl_id()) {
        oprot.writeFieldBegin(APP_TPL_ID_FIELD_DESC);
        oprot.writeI32(struct.app_tpl_id);
        oprot.writeFieldEnd();
      }
      if (struct._create_time != null) {
        if (struct.isSet_create_time()) {
          oprot.writeFieldBegin(_CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct._create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProxy()) {
        oprot.writeFieldBegin(PROXY_FIELD_DESC);
        oprot.writeI32(struct.proxy);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApply_type()) {
        oprot.writeFieldBegin(APPLY_TYPE_FIELD_DESC);
        oprot.writeI32(struct.apply_type);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmail_status()) {
        oprot.writeFieldBegin(EMAIL_STATUS_FIELD_DESC);
        oprot.writeI32(struct.email_status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecommender_user_id()) {
        oprot.writeFieldBegin(RECOMMENDER_USER_ID_FIELD_DESC);
        oprot.writeI64(struct.recommender_user_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetView_count()) {
        oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
        oprot.writeI32(struct.view_count);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobApplicationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationTupleScheme getScheme() {
      return new JobApplicationTupleScheme();
    }
  }

  private static class JobApplicationTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobApplication> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobApplication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetWechat_id()) {
        optionals.set(1);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(2);
      }
      if (struct.isSetRecommender_id()) {
        optionals.set(3);
      }
      if (struct.isSetSubmit_time()) {
        optionals.set(4);
      }
      if (struct.isSetStatus_id()) {
        optionals.set(5);
      }
      if (struct.isSetL_application_id()) {
        optionals.set(6);
      }
      if (struct.isSetReward()) {
        optionals.set(7);
      }
      if (struct.isSetSource_id()) {
        optionals.set(8);
      }
      if (struct.isSetApplier_id()) {
        optionals.set(9);
      }
      if (struct.isSetAts_status()) {
        optionals.set(10);
      }
      if (struct.isSetApplier_name()) {
        optionals.set(11);
      }
      if (struct.isSetDisable()) {
        optionals.set(12);
      }
      if (struct.isSetRoutine()) {
        optionals.set(13);
      }
      if (struct.isSetIs_viewed()) {
        optionals.set(14);
      }
      if (struct.isSetNot_suitable()) {
        optionals.set(15);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(16);
      }
      if (struct.isSetApp_tpl_id()) {
        optionals.set(17);
      }
      if (struct.isSet_create_time()) {
        optionals.set(18);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(19);
      }
      if (struct.isSetProxy()) {
        optionals.set(20);
      }
      if (struct.isSetApply_type()) {
        optionals.set(21);
      }
      if (struct.isSetEmail_status()) {
        optionals.set(22);
      }
      if (struct.isSetRecommender_user_id()) {
        optionals.set(23);
      }
      if (struct.isSetView_count()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetWechat_id()) {
        oprot.writeI64(struct.wechat_id);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI64(struct.position_id);
      }
      if (struct.isSetRecommender_id()) {
        oprot.writeI64(struct.recommender_id);
      }
      if (struct.isSetSubmit_time()) {
        oprot.writeString(struct.submit_time);
      }
      if (struct.isSetStatus_id()) {
        oprot.writeI64(struct.status_id);
      }
      if (struct.isSetL_application_id()) {
        oprot.writeI64(struct.l_application_id);
      }
      if (struct.isSetReward()) {
        oprot.writeI64(struct.reward);
      }
      if (struct.isSetSource_id()) {
        oprot.writeI64(struct.source_id);
      }
      if (struct.isSetApplier_id()) {
        oprot.writeI64(struct.applier_id);
      }
      if (struct.isSetAts_status()) {
        oprot.writeI32(struct.ats_status);
      }
      if (struct.isSetApplier_name()) {
        oprot.writeString(struct.applier_name);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetRoutine()) {
        oprot.writeI32(struct.routine);
      }
      if (struct.isSetIs_viewed()) {
        oprot.writeI32(struct.is_viewed);
      }
      if (struct.isSetNot_suitable()) {
        oprot.writeI32(struct.not_suitable);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI64(struct.company_id);
      }
      if (struct.isSetApp_tpl_id()) {
        oprot.writeI32(struct.app_tpl_id);
      }
      if (struct.isSet_create_time()) {
        oprot.writeString(struct._create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetProxy()) {
        oprot.writeI32(struct.proxy);
      }
      if (struct.isSetApply_type()) {
        oprot.writeI32(struct.apply_type);
      }
      if (struct.isSetEmail_status()) {
        oprot.writeI32(struct.email_status);
      }
      if (struct.isSetRecommender_user_id()) {
        oprot.writeI64(struct.recommender_user_id);
      }
      if (struct.isSetView_count()) {
        oprot.writeI32(struct.view_count);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobApplication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.wechat_id = iprot.readI64();
        struct.setWechat_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.position_id = iprot.readI64();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.recommender_id = iprot.readI64();
        struct.setRecommender_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.submit_time = iprot.readString();
        struct.setSubmit_timeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status_id = iprot.readI64();
        struct.setStatus_idIsSet(true);
      }
      if (incoming.get(6)) {
        struct.l_application_id = iprot.readI64();
        struct.setL_application_idIsSet(true);
      }
      if (incoming.get(7)) {
        struct.reward = iprot.readI64();
        struct.setRewardIsSet(true);
      }
      if (incoming.get(8)) {
        struct.source_id = iprot.readI64();
        struct.setSource_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.applier_id = iprot.readI64();
        struct.setApplier_idIsSet(true);
      }
      if (incoming.get(10)) {
        struct.ats_status = iprot.readI32();
        struct.setAts_statusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.applier_name = iprot.readString();
        struct.setApplier_nameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(13)) {
        struct.routine = iprot.readI32();
        struct.setRoutineIsSet(true);
      }
      if (incoming.get(14)) {
        struct.is_viewed = iprot.readI32();
        struct.setIs_viewedIsSet(true);
      }
      if (incoming.get(15)) {
        struct.not_suitable = iprot.readI32();
        struct.setNot_suitableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.company_id = iprot.readI64();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(17)) {
        struct.app_tpl_id = iprot.readI32();
        struct.setApp_tpl_idIsSet(true);
      }
      if (incoming.get(18)) {
        struct._create_time = iprot.readString();
        struct.set_create_timeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.proxy = iprot.readI32();
        struct.setProxyIsSet(true);
      }
      if (incoming.get(21)) {
        struct.apply_type = iprot.readI32();
        struct.setApply_typeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.email_status = iprot.readI32();
        struct.setEmail_statusIsSet(true);
      }
      if (incoming.get(23)) {
        struct.recommender_user_id = iprot.readI64();
        struct.setRecommender_user_idIsSet(true);
      }
      if (incoming.get(24)) {
        struct.view_count = iprot.readI32();
        struct.setView_countIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

