/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.apps.positionbs.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-23")
public class ThirdPartyPosition implements org.apache.thrift.TBase<ThirdPartyPosition, ThirdPartyPosition._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdPartyPosition> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdPartyPosition");

  private static final org.apache.thrift.protocol.TField SALARY_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_top", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SALARY_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_bottom", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField SALARY_MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_month", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField USE_COMPANY_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("use_company_address", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("occupation", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField THIRD_PARTY_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("third_party_account_id", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField FEEDBACK_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("feedback_period", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SALARY_DISCUSS_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_discuss", org.apache.thrift.protocol.TType.BOOL, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdPartyPositionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdPartyPositionTupleSchemeFactory();

  public int salary_top; // optional
  public int salary_bottom; // optional
  public java.lang.String salary_month; // optional
  public int count; // optional
  public java.lang.String address; // optional
  public boolean use_company_address; // optional
  public java.util.List<java.lang.String> occupation; // optional
  public int channel; // optional
  public int third_party_account_id; // optional
  public java.lang.String department; // optional
  public int feedback_period; // optional
  public boolean salary_discuss; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SALARY_TOP((short)1, "salary_top"),
    SALARY_BOTTOM((short)2, "salary_bottom"),
    SALARY_MONTH((short)3, "salary_month"),
    COUNT((short)4, "count"),
    ADDRESS((short)5, "address"),
    USE_COMPANY_ADDRESS((short)6, "use_company_address"),
    OCCUPATION((short)7, "occupation"),
    CHANNEL((short)8, "channel"),
    THIRD_PARTY_ACCOUNT_ID((short)9, "third_party_account_id"),
    DEPARTMENT((short)10, "department"),
    FEEDBACK_PERIOD((short)11, "feedback_period"),
    SALARY_DISCUSS((short)12, "salary_discuss");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SALARY_TOP
          return SALARY_TOP;
        case 2: // SALARY_BOTTOM
          return SALARY_BOTTOM;
        case 3: // SALARY_MONTH
          return SALARY_MONTH;
        case 4: // COUNT
          return COUNT;
        case 5: // ADDRESS
          return ADDRESS;
        case 6: // USE_COMPANY_ADDRESS
          return USE_COMPANY_ADDRESS;
        case 7: // OCCUPATION
          return OCCUPATION;
        case 8: // CHANNEL
          return CHANNEL;
        case 9: // THIRD_PARTY_ACCOUNT_ID
          return THIRD_PARTY_ACCOUNT_ID;
        case 10: // DEPARTMENT
          return DEPARTMENT;
        case 11: // FEEDBACK_PERIOD
          return FEEDBACK_PERIOD;
        case 12: // SALARY_DISCUSS
          return SALARY_DISCUSS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SALARY_TOP_ISSET_ID = 0;
  private static final int __SALARY_BOTTOM_ISSET_ID = 1;
  private static final int __COUNT_ISSET_ID = 2;
  private static final int __USE_COMPANY_ADDRESS_ISSET_ID = 3;
  private static final int __CHANNEL_ISSET_ID = 4;
  private static final int __THIRD_PARTY_ACCOUNT_ID_ISSET_ID = 5;
  private static final int __FEEDBACK_PERIOD_ISSET_ID = 6;
  private static final int __SALARY_DISCUSS_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SALARY_TOP,_Fields.SALARY_BOTTOM,_Fields.SALARY_MONTH,_Fields.COUNT,_Fields.ADDRESS,_Fields.USE_COMPANY_ADDRESS,_Fields.OCCUPATION,_Fields.CHANNEL,_Fields.THIRD_PARTY_ACCOUNT_ID,_Fields.DEPARTMENT,_Fields.FEEDBACK_PERIOD,_Fields.SALARY_DISCUSS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SALARY_TOP, new org.apache.thrift.meta_data.FieldMetaData("salary_top", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("salary_bottom", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_MONTH, new org.apache.thrift.meta_data.FieldMetaData("salary_month", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USE_COMPANY_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("use_company_address", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("occupation", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.THIRD_PARTY_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("third_party_account_id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FEEDBACK_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("feedback_period", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_DISCUSS, new org.apache.thrift.meta_data.FieldMetaData("salary_discuss", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdPartyPosition.class, metaDataMap);
  }

  public ThirdPartyPosition() {
    this.salary_discuss = false;

  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartyPosition(ThirdPartyPosition other) {
    __isset_bitfield = other.__isset_bitfield;
    this.salary_top = other.salary_top;
    this.salary_bottom = other.salary_bottom;
    if (other.isSetSalary_month()) {
      this.salary_month = other.salary_month;
    }
    this.count = other.count;
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.use_company_address = other.use_company_address;
    if (other.isSetOccupation()) {
      java.util.List<java.lang.String> __this__occupation = new java.util.ArrayList<java.lang.String>(other.occupation);
      this.occupation = __this__occupation;
    }
    this.channel = other.channel;
    this.third_party_account_id = other.third_party_account_id;
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    this.feedback_period = other.feedback_period;
    this.salary_discuss = other.salary_discuss;
  }

  public ThirdPartyPosition deepCopy() {
    return new ThirdPartyPosition(this);
  }

  @Override
  public void clear() {
    setSalary_topIsSet(false);
    this.salary_top = 0;
    setSalary_bottomIsSet(false);
    this.salary_bottom = 0;
    this.salary_month = null;
    setCountIsSet(false);
    this.count = 0;
    this.address = null;
    setUse_company_addressIsSet(false);
    this.use_company_address = false;
    this.occupation = null;
    setChannelIsSet(false);
    this.channel = 0;
    setThird_party_account_idIsSet(false);
    this.third_party_account_id = 0;
    this.department = null;
    setFeedback_periodIsSet(false);
    this.feedback_period = 0;
    this.salary_discuss = false;

  }

  public int getSalary_top() {
    return this.salary_top;
  }

  public ThirdPartyPosition setSalary_top(int salary_top) {
    this.salary_top = salary_top;
    setSalary_topIsSet(true);
    return this;
  }

  public void unsetSalary_top() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  /** Returns true if field salary_top is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_top() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  public void setSalary_topIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_TOP_ISSET_ID, value);
  }

  public int getSalary_bottom() {
    return this.salary_bottom;
  }

  public ThirdPartyPosition setSalary_bottom(int salary_bottom) {
    this.salary_bottom = salary_bottom;
    setSalary_bottomIsSet(true);
    return this;
  }

  public void unsetSalary_bottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  /** Returns true if field salary_bottom is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_bottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  public void setSalary_bottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID, value);
  }

  public java.lang.String getSalary_month() {
    return this.salary_month;
  }

  public ThirdPartyPosition setSalary_month(java.lang.String salary_month) {
    this.salary_month = salary_month;
    return this;
  }

  public void unsetSalary_month() {
    this.salary_month = null;
  }

  /** Returns true if field salary_month is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_month() {
    return this.salary_month != null;
  }

  public void setSalary_monthIsSet(boolean value) {
    if (!value) {
      this.salary_month = null;
    }
  }

  public int getCount() {
    return this.count;
  }

  public ThirdPartyPosition setCount(int count) {
    this.count = count;
    setCountIsSet(true);
    return this;
  }

  public void unsetCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  /** Returns true if field count is set (has been assigned a value) and false otherwise */
  public boolean isSetCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  public void setCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
  }

  public java.lang.String getAddress() {
    return this.address;
  }

  public ThirdPartyPosition setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public boolean isUse_company_address() {
    return this.use_company_address;
  }

  public ThirdPartyPosition setUse_company_address(boolean use_company_address) {
    this.use_company_address = use_company_address;
    setUse_company_addressIsSet(true);
    return this;
  }

  public void unsetUse_company_address() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USE_COMPANY_ADDRESS_ISSET_ID);
  }

  /** Returns true if field use_company_address is set (has been assigned a value) and false otherwise */
  public boolean isSetUse_company_address() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USE_COMPANY_ADDRESS_ISSET_ID);
  }

  public void setUse_company_addressIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USE_COMPANY_ADDRESS_ISSET_ID, value);
  }

  public int getOccupationSize() {
    return (this.occupation == null) ? 0 : this.occupation.size();
  }

  public java.util.Iterator<java.lang.String> getOccupationIterator() {
    return (this.occupation == null) ? null : this.occupation.iterator();
  }

  public void addToOccupation(java.lang.String elem) {
    if (this.occupation == null) {
      this.occupation = new java.util.ArrayList<java.lang.String>();
    }
    this.occupation.add(elem);
  }

  public java.util.List<java.lang.String> getOccupation() {
    return this.occupation;
  }

  public ThirdPartyPosition setOccupation(java.util.List<java.lang.String> occupation) {
    this.occupation = occupation;
    return this;
  }

  public void unsetOccupation() {
    this.occupation = null;
  }

  /** Returns true if field occupation is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupation() {
    return this.occupation != null;
  }

  public void setOccupationIsSet(boolean value) {
    if (!value) {
      this.occupation = null;
    }
  }

  public int getChannel() {
    return this.channel;
  }

  public ThirdPartyPosition setChannel(int channel) {
    this.channel = channel;
    setChannelIsSet(true);
    return this;
  }

  public void unsetChannel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  public void setChannelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
  }

  public int getThird_party_account_id() {
    return this.third_party_account_id;
  }

  public ThirdPartyPosition setThird_party_account_id(int third_party_account_id) {
    this.third_party_account_id = third_party_account_id;
    setThird_party_account_idIsSet(true);
    return this;
  }

  public void unsetThird_party_account_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __THIRD_PARTY_ACCOUNT_ID_ISSET_ID);
  }

  /** Returns true if field third_party_account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetThird_party_account_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __THIRD_PARTY_ACCOUNT_ID_ISSET_ID);
  }

  public void setThird_party_account_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __THIRD_PARTY_ACCOUNT_ID_ISSET_ID, value);
  }

  public java.lang.String getDepartment() {
    return this.department;
  }

  public ThirdPartyPosition setDepartment(java.lang.String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public int getFeedback_period() {
    return this.feedback_period;
  }

  public ThirdPartyPosition setFeedback_period(int feedback_period) {
    this.feedback_period = feedback_period;
    setFeedback_periodIsSet(true);
    return this;
  }

  public void unsetFeedback_period() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID);
  }

  /** Returns true if field feedback_period is set (has been assigned a value) and false otherwise */
  public boolean isSetFeedback_period() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID);
  }

  public void setFeedback_periodIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID, value);
  }

  public boolean isSalary_discuss() {
    return this.salary_discuss;
  }

  public ThirdPartyPosition setSalary_discuss(boolean salary_discuss) {
    this.salary_discuss = salary_discuss;
    setSalary_discussIsSet(true);
    return this;
  }

  public void unsetSalary_discuss() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID);
  }

  /** Returns true if field salary_discuss is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_discuss() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID);
  }

  public void setSalary_discussIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
      case SALARY_TOP:
        if (value == null) {
          unsetSalary_top();
        } else {
          setSalary_top((java.lang.Integer)value);
        }
        break;

      case SALARY_BOTTOM:
        if (value == null) {
          unsetSalary_bottom();
        } else {
          setSalary_bottom((java.lang.Integer)value);
        }
        break;

      case SALARY_MONTH:
        if (value == null) {
          unsetSalary_month();
        } else {
          setSalary_month((java.lang.String)value);
        }
        break;

      case COUNT:
        if (value == null) {
          unsetCount();
        } else {
          setCount((java.lang.Integer)value);
        }
        break;

      case ADDRESS:
        if (value == null) {
          unsetAddress();
        } else {
          setAddress((java.lang.String)value);
        }
        break;

      case USE_COMPANY_ADDRESS:
        if (value == null) {
          unsetUse_company_address();
        } else {
          setUse_company_address((java.lang.Boolean)value);
        }
        break;

      case OCCUPATION:
        if (value == null) {
          unsetOccupation();
        } else {
          setOccupation((java.util.List<java.lang.String>)value);
        }
        break;

      case CHANNEL:
        if (value == null) {
          unsetChannel();
        } else {
          setChannel((java.lang.Integer)value);
        }
        break;

      case THIRD_PARTY_ACCOUNT_ID:
        if (value == null) {
          unsetThird_party_account_id();
        } else {
          setThird_party_account_id((java.lang.Integer)value);
        }
        break;

      case DEPARTMENT:
        if (value == null) {
          unsetDepartment();
        } else {
          setDepartment((java.lang.String)value);
        }
        break;

      case FEEDBACK_PERIOD:
        if (value == null) {
          unsetFeedback_period();
        } else {
          setFeedback_period((java.lang.Integer)value);
        }
        break;

      case SALARY_DISCUSS:
        if (value == null) {
          unsetSalary_discuss();
        } else {
          setSalary_discuss((java.lang.Boolean)value);
        }
        break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
      case SALARY_TOP:
        return getSalary_top();

      case SALARY_BOTTOM:
        return getSalary_bottom();

      case SALARY_MONTH:
        return getSalary_month();

      case COUNT:
        return getCount();

      case ADDRESS:
        return getAddress();

      case USE_COMPANY_ADDRESS:
        return isUse_company_address();

      case OCCUPATION:
        return getOccupation();

      case CHANNEL:
        return getChannel();

      case THIRD_PARTY_ACCOUNT_ID:
        return getThird_party_account_id();

      case DEPARTMENT:
        return getDepartment();

      case FEEDBACK_PERIOD:
        return getFeedback_period();

      case SALARY_DISCUSS:
        return isSalary_discuss();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
      case SALARY_TOP:
        return isSetSalary_top();
      case SALARY_BOTTOM:
        return isSetSalary_bottom();
      case SALARY_MONTH:
        return isSetSalary_month();
      case COUNT:
        return isSetCount();
      case ADDRESS:
        return isSetAddress();
      case USE_COMPANY_ADDRESS:
        return isSetUse_company_address();
      case OCCUPATION:
        return isSetOccupation();
      case CHANNEL:
        return isSetChannel();
      case THIRD_PARTY_ACCOUNT_ID:
        return isSetThird_party_account_id();
      case DEPARTMENT:
        return isSetDepartment();
      case FEEDBACK_PERIOD:
        return isSetFeedback_period();
      case SALARY_DISCUSS:
        return isSetSalary_discuss();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartyPosition)
      return this.equals((ThirdPartyPosition)that);
    return false;
  }

  public boolean equals(ThirdPartyPosition that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_salary_top = true && this.isSetSalary_top();
    boolean that_present_salary_top = true && that.isSetSalary_top();
    if (this_present_salary_top || that_present_salary_top) {
      if (!(this_present_salary_top && that_present_salary_top))
        return false;
      if (this.salary_top != that.salary_top)
        return false;
    }

    boolean this_present_salary_bottom = true && this.isSetSalary_bottom();
    boolean that_present_salary_bottom = true && that.isSetSalary_bottom();
    if (this_present_salary_bottom || that_present_salary_bottom) {
      if (!(this_present_salary_bottom && that_present_salary_bottom))
        return false;
      if (this.salary_bottom != that.salary_bottom)
        return false;
    }

    boolean this_present_salary_month = true && this.isSetSalary_month();
    boolean that_present_salary_month = true && that.isSetSalary_month();
    if (this_present_salary_month || that_present_salary_month) {
      if (!(this_present_salary_month && that_present_salary_month))
        return false;
      if (!this.salary_month.equals(that.salary_month))
        return false;
    }

    boolean this_present_count = true && this.isSetCount();
    boolean that_present_count = true && that.isSetCount();
    if (this_present_count || that_present_count) {
      if (!(this_present_count && that_present_count))
        return false;
      if (this.count != that.count)
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_use_company_address = true && this.isSetUse_company_address();
    boolean that_present_use_company_address = true && that.isSetUse_company_address();
    if (this_present_use_company_address || that_present_use_company_address) {
      if (!(this_present_use_company_address && that_present_use_company_address))
        return false;
      if (this.use_company_address != that.use_company_address)
        return false;
    }

    boolean this_present_occupation = true && this.isSetOccupation();
    boolean that_present_occupation = true && that.isSetOccupation();
    if (this_present_occupation || that_present_occupation) {
      if (!(this_present_occupation && that_present_occupation))
        return false;
      if (!this.occupation.equals(that.occupation))
        return false;
    }

    boolean this_present_channel = true && this.isSetChannel();
    boolean that_present_channel = true && that.isSetChannel();
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (this.channel != that.channel)
        return false;
    }

    boolean this_present_third_party_account_id = true && this.isSetThird_party_account_id();
    boolean that_present_third_party_account_id = true && that.isSetThird_party_account_id();
    if (this_present_third_party_account_id || that_present_third_party_account_id) {
      if (!(this_present_third_party_account_id && that_present_third_party_account_id))
        return false;
      if (this.third_party_account_id != that.third_party_account_id)
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_feedback_period = true && this.isSetFeedback_period();
    boolean that_present_feedback_period = true && that.isSetFeedback_period();
    if (this_present_feedback_period || that_present_feedback_period) {
      if (!(this_present_feedback_period && that_present_feedback_period))
        return false;
      if (this.feedback_period != that.feedback_period)
        return false;
    }

    boolean this_present_salary_discuss = true && this.isSetSalary_discuss();
    boolean that_present_salary_discuss = true && that.isSetSalary_discuss();
    if (this_present_salary_discuss || that_present_salary_discuss) {
      if (!(this_present_salary_discuss && that_present_salary_discuss))
        return false;
      if (this.salary_discuss != that.salary_discuss)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSalary_top()) ? 131071 : 524287);
    if (isSetSalary_top())
      hashCode = hashCode * 8191 + salary_top;

    hashCode = hashCode * 8191 + ((isSetSalary_bottom()) ? 131071 : 524287);
    if (isSetSalary_bottom())
      hashCode = hashCode * 8191 + salary_bottom;

    hashCode = hashCode * 8191 + ((isSetSalary_month()) ? 131071 : 524287);
    if (isSetSalary_month())
      hashCode = hashCode * 8191 + salary_month.hashCode();

    hashCode = hashCode * 8191 + ((isSetCount()) ? 131071 : 524287);
    if (isSetCount())
      hashCode = hashCode * 8191 + count;

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetUse_company_address()) ? 131071 : 524287);
    if (isSetUse_company_address())
      hashCode = hashCode * 8191 + ((use_company_address) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetOccupation()) ? 131071 : 524287);
    if (isSetOccupation())
      hashCode = hashCode * 8191 + occupation.hashCode();

    hashCode = hashCode * 8191 + ((isSetChannel()) ? 131071 : 524287);
    if (isSetChannel())
      hashCode = hashCode * 8191 + channel;

    hashCode = hashCode * 8191 + ((isSetThird_party_account_id()) ? 131071 : 524287);
    if (isSetThird_party_account_id())
      hashCode = hashCode * 8191 + third_party_account_id;

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + ((isSetFeedback_period()) ? 131071 : 524287);
    if (isSetFeedback_period())
      hashCode = hashCode * 8191 + feedback_period;

    hashCode = hashCode * 8191 + ((isSetSalary_discuss()) ? 131071 : 524287);
    if (isSetSalary_discuss())
      hashCode = hashCode * 8191 + ((salary_discuss) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(ThirdPartyPosition other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSalary_top()).compareTo(other.isSetSalary_top());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_top()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_top, other.salary_top);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_bottom()).compareTo(other.isSetSalary_bottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_bottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_bottom, other.salary_bottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_month()).compareTo(other.isSetSalary_month());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_month()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_month, other.salary_month);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUse_company_address()).compareTo(other.isSetUse_company_address());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUse_company_address()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.use_company_address, other.use_company_address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOccupation()).compareTo(other.isSetOccupation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupation, other.occupation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetThird_party_account_id()).compareTo(other.isSetThird_party_account_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThird_party_account_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.third_party_account_id, other.third_party_account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeedback_period()).compareTo(other.isSetFeedback_period());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeedback_period()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feedback_period, other.feedback_period);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_discuss()).compareTo(other.isSetSalary_discuss());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_discuss()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_discuss, other.salary_discuss);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ThirdPartyPosition(");
    boolean first = true;

    if (isSetSalary_top()) {
      sb.append("salary_top:");
      sb.append(this.salary_top);
      first = false;
    }
    if (isSetSalary_bottom()) {
      if (!first) sb.append(", ");
      sb.append("salary_bottom:");
      sb.append(this.salary_bottom);
      first = false;
    }
    if (isSetSalary_month()) {
      if (!first) sb.append(", ");
      sb.append("salary_month:");
      if (this.salary_month == null) {
        sb.append("null");
      } else {
        sb.append(this.salary_month);
      }
      first = false;
    }
    if (isSetCount()) {
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetUse_company_address()) {
      if (!first) sb.append(", ");
      sb.append("use_company_address:");
      sb.append(this.use_company_address);
      first = false;
    }
    if (isSetOccupation()) {
      if (!first) sb.append(", ");
      sb.append("occupation:");
      if (this.occupation == null) {
        sb.append("null");
      } else {
        sb.append(this.occupation);
      }
      first = false;
    }
    if (isSetChannel()) {
      if (!first) sb.append(", ");
      sb.append("channel:");
      sb.append(this.channel);
      first = false;
    }
    if (isSetThird_party_account_id()) {
      if (!first) sb.append(", ");
      sb.append("third_party_account_id:");
      sb.append(this.third_party_account_id);
      first = false;
    }
    if (isSetDepartment()) {
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
    }
    if (isSetFeedback_period()) {
      if (!first) sb.append(", ");
      sb.append("feedback_period:");
      sb.append(this.feedback_period);
      first = false;
    }
    if (isSetSalary_discuss()) {
      if (!first) sb.append(", ");
      sb.append("salary_discuss:");
      sb.append(this.salary_discuss);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdPartyPositionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyPositionStandardScheme getScheme() {
      return new ThirdPartyPositionStandardScheme();
    }
  }

  private static class ThirdPartyPositionStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdPartyPosition> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdPartyPosition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // SALARY_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salary_top = iprot.readI32();
              struct.setSalary_topIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SALARY_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salary_bottom = iprot.readI32();
              struct.setSalary_bottomIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SALARY_MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salary_month = iprot.readString();
              struct.setSalary_monthIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.count = iprot.readI32();
              struct.setCountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USE_COMPANY_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.use_company_address = iprot.readBool();
              struct.setUse_company_addressIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OCCUPATION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.occupation = new java.util.ArrayList<java.lang.String>(_list0.size);
                java.lang.String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.occupation.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setOccupationIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channel = iprot.readI32();
              struct.setChannelIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // THIRD_PARTY_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.third_party_account_id = iprot.readI32();
              struct.setThird_party_account_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // FEEDBACK_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.feedback_period = iprot.readI32();
              struct.setFeedback_periodIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SALARY_DISCUSS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.salary_discuss = iprot.readBool();
              struct.setSalary_discussIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdPartyPosition struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetSalary_top()) {
        oprot.writeFieldBegin(SALARY_TOP_FIELD_DESC);
        oprot.writeI32(struct.salary_top);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalary_bottom()) {
        oprot.writeFieldBegin(SALARY_BOTTOM_FIELD_DESC);
        oprot.writeI32(struct.salary_bottom);
        oprot.writeFieldEnd();
      }
      if (struct.salary_month != null) {
        if (struct.isSetSalary_month()) {
          oprot.writeFieldBegin(SALARY_MONTH_FIELD_DESC);
          oprot.writeString(struct.salary_month);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCount()) {
        oprot.writeFieldBegin(COUNT_FIELD_DESC);
        oprot.writeI32(struct.count);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetUse_company_address()) {
        oprot.writeFieldBegin(USE_COMPANY_ADDRESS_FIELD_DESC);
        oprot.writeBool(struct.use_company_address);
        oprot.writeFieldEnd();
      }
      if (struct.occupation != null) {
        if (struct.isSetOccupation()) {
          oprot.writeFieldBegin(OCCUPATION_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.occupation.size()));
            for (java.lang.String _iter3 : struct.occupation)
            {
              oprot.writeString(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetChannel()) {
        oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
        oprot.writeI32(struct.channel);
        oprot.writeFieldEnd();
      }
      if (struct.isSetThird_party_account_id()) {
        oprot.writeFieldBegin(THIRD_PARTY_ACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.third_party_account_id);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        if (struct.isSetDepartment()) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          oprot.writeString(struct.department);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetFeedback_period()) {
        oprot.writeFieldBegin(FEEDBACK_PERIOD_FIELD_DESC);
        oprot.writeI32(struct.feedback_period);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalary_discuss()) {
        oprot.writeFieldBegin(SALARY_DISCUSS_FIELD_DESC);
        oprot.writeBool(struct.salary_discuss);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdPartyPositionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyPositionTupleScheme getScheme() {
      return new ThirdPartyPositionTupleScheme();
    }
  }

  private static class ThirdPartyPositionTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdPartyPosition> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPosition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSalary_top()) {
        optionals.set(0);
      }
      if (struct.isSetSalary_bottom()) {
        optionals.set(1);
      }
      if (struct.isSetSalary_month()) {
        optionals.set(2);
      }
      if (struct.isSetCount()) {
        optionals.set(3);
      }
      if (struct.isSetAddress()) {
        optionals.set(4);
      }
      if (struct.isSetUse_company_address()) {
        optionals.set(5);
      }
      if (struct.isSetOccupation()) {
        optionals.set(6);
      }
      if (struct.isSetChannel()) {
        optionals.set(7);
      }
      if (struct.isSetThird_party_account_id()) {
        optionals.set(8);
      }
      if (struct.isSetDepartment()) {
        optionals.set(9);
      }
      if (struct.isSetFeedback_period()) {
        optionals.set(10);
      }
      if (struct.isSetSalary_discuss()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetSalary_top()) {
        oprot.writeI32(struct.salary_top);
      }
      if (struct.isSetSalary_bottom()) {
        oprot.writeI32(struct.salary_bottom);
      }
      if (struct.isSetSalary_month()) {
        oprot.writeString(struct.salary_month);
      }
      if (struct.isSetCount()) {
        oprot.writeI32(struct.count);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetUse_company_address()) {
        oprot.writeBool(struct.use_company_address);
      }
      if (struct.isSetOccupation()) {
        {
          oprot.writeI32(struct.occupation.size());
          for (java.lang.String _iter4 : struct.occupation)
          {
            oprot.writeString(_iter4);
          }
        }
      }
      if (struct.isSetChannel()) {
        oprot.writeI32(struct.channel);
      }
      if (struct.isSetThird_party_account_id()) {
        oprot.writeI32(struct.third_party_account_id);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetFeedback_period()) {
        oprot.writeI32(struct.feedback_period);
      }
      if (struct.isSetSalary_discuss()) {
        oprot.writeBool(struct.salary_discuss);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPosition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.salary_top = iprot.readI32();
        struct.setSalary_topIsSet(true);
      }
      if (incoming.get(1)) {
        struct.salary_bottom = iprot.readI32();
        struct.setSalary_bottomIsSet(true);
      }
      if (incoming.get(2)) {
        struct.salary_month = iprot.readString();
        struct.setSalary_monthIsSet(true);
      }
      if (incoming.get(3)) {
        struct.count = iprot.readI32();
        struct.setCountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(5)) {
        struct.use_company_address = iprot.readBool();
        struct.setUse_company_addressIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.occupation = new java.util.ArrayList<java.lang.String>(_list5.size);
          java.lang.String _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readString();
            struct.occupation.add(_elem6);
          }
        }
        struct.setOccupationIsSet(true);
      }
      if (incoming.get(7)) {
        struct.channel = iprot.readI32();
        struct.setChannelIsSet(true);
      }
      if (incoming.get(8)) {
        struct.third_party_account_id = iprot.readI32();
        struct.setThird_party_account_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(10)) {
        struct.feedback_period = iprot.readI32();
        struct.setFeedback_periodIsSet(true);
      }
      if (incoming.get(11)) {
        struct.salary_discuss = iprot.readBool();
        struct.setSalary_discussIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

