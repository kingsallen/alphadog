/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.position.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-08")
public class JobPostrionObj implements org.apache.thrift.TBase<JobPostrionObj, JobPostrionObj._Fields>, java.io.Serializable, Cloneable, Comparable<JobPostrionObj> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobPostrionObj");

  private static final org.apache.thrift.protocol.TField JOBNUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("jobnumber", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROVINCE_FIELD_DESC = new org.apache.thrift.protocol.TField("province", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STOP_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("stop_date", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ACCOUNTABILITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("accountabilities", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SALARY_FIELD_DESC = new org.apache.thrift.protocol.TField("salary", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)11);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("source_id", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField BUSINESS_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("business_group", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField EMPLOYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("employment_type", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField HR_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_email", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField FEATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("feature", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField EMAIL_NOTICE_FIELD_DESC = new org.apache.thrift.protocol.TField("email_notice", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField CANDIDATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("candidate_source", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("occupation", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField INDUSTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("industry", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField EMAIL_RESUME_CONF_FIELD_DESC = new org.apache.thrift.protocol.TField("email_resume_conf", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField DISTRICT_FIELD_DESC = new org.apache.thrift.protocol.TField("district", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField SALARY_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_top", org.apache.thrift.protocol.TType.DOUBLE, (short)25);
  private static final org.apache.thrift.protocol.TField SALARY_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_bottom", org.apache.thrift.protocol.TType.DOUBLE, (short)26);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_ABOVE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience_above", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField DEGREE_ABOVE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree_above", org.apache.thrift.protocol.TType.I32, (short)28);
  private static final org.apache.thrift.protocol.TField MANAGEMENT_EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("management_experience", org.apache.thrift.protocol.TType.I32, (short)29);
  private static final org.apache.thrift.protocol.TField GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("gender", org.apache.thrift.protocol.TType.I32, (short)30);
  private static final org.apache.thrift.protocol.TField PUBLISHER_FIELD_DESC = new org.apache.thrift.protocol.TField("publisher", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField APP_CV_CONFIG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("app_cv_config_id", org.apache.thrift.protocol.TType.I32, (short)32);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)33);
  private static final org.apache.thrift.protocol.TField AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("age", org.apache.thrift.protocol.TType.I32, (short)34);
  private static final org.apache.thrift.protocol.TField MAJOR_REQUIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("major_required", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField WORK_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("work_address", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField KEYWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("keyword", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField REPORTING_TO_FIELD_DESC = new org.apache.thrift.protocol.TField("reporting_to", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField IS_HIRING_FIELD_DESC = new org.apache.thrift.protocol.TField("is_hiring", org.apache.thrift.protocol.TType.I32, (short)39);
  private static final org.apache.thrift.protocol.TField UNDERLINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("underlings", org.apache.thrift.protocol.TType.I32, (short)40);
  private static final org.apache.thrift.protocol.TField LANGUAGE_REQUIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("language_required", org.apache.thrift.protocol.TType.I32, (short)41);
  private static final org.apache.thrift.protocol.TField CURRENT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("current_status", org.apache.thrift.protocol.TType.I32, (short)42);
  private static final org.apache.thrift.protocol.TField POSITION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("position_code", org.apache.thrift.protocol.TType.I64, (short)43);
  private static final org.apache.thrift.protocol.TField TEAM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("team_id", org.apache.thrift.protocol.TType.I32, (short)44);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.LIST, (short)45);
  private static final org.apache.thrift.protocol.TField EXTRA_FIELD_DESC = new org.apache.thrift.protocol.TField("extra", org.apache.thrift.protocol.TType.STRING, (short)46);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)47);
  private static final org.apache.thrift.protocol.TField REQUIREMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("requirement", org.apache.thrift.protocol.TType.STRING, (short)48);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobPostrionObjStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobPostrionObjTupleSchemeFactory();

  public java.lang.String jobnumber; // required
  public int company_id; // required
  public java.lang.String title; // required
  public java.lang.String province; // required
  public java.lang.String department; // required
  public java.lang.String stop_date; // required
  public java.lang.String accountabilities; // required
  public java.lang.String experience; // required
  public java.lang.String salary; // required
  public java.lang.String language; // required
  public byte status; // required
  public int source_id; // required
  public java.lang.String business_group; // required
  public int employment_type; // required
  public java.lang.String hr_email; // required
  public int degree; // required
  public java.lang.String feature; // required
  public int email_notice; // required
  public int candidate_source; // required
  public java.lang.String occupation; // required
  public java.lang.String industry; // required
  public int email_resume_conf; // required
  public java.lang.String district; // required
  public int count; // required
  public double salary_top; // required
  public double salary_bottom; // required
  public int experience_above; // required
  public int degree_above; // required
  public int management_experience; // required
  public int gender; // required
  public int publisher; // required
  public int app_cv_config_id; // required
  public int source; // required
  public int age; // required
  public java.lang.String major_required; // required
  public java.lang.String work_address; // required
  public java.lang.String keyword; // required
  public java.lang.String reporting_to; // required
  public int is_hiring; // required
  public int underlings; // required
  public int language_required; // required
  public int current_status; // required
  public long position_code; // required
  public int team_id; // required
  public java.util.List<City> city; // required
  public java.lang.String extra; // required
  public int id; // required
  public java.lang.String requirement; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOBNUMBER((short)1, "jobnumber"),
    COMPANY_ID((short)2, "company_id"),
    TITLE((short)3, "title"),
    PROVINCE((short)4, "province"),
    DEPARTMENT((short)5, "department"),
    STOP_DATE((short)6, "stop_date"),
    ACCOUNTABILITIES((short)7, "accountabilities"),
    EXPERIENCE((short)8, "experience"),
    SALARY((short)9, "salary"),
    LANGUAGE((short)10, "language"),
    STATUS((short)11, "status"),
    SOURCE_ID((short)12, "source_id"),
    BUSINESS_GROUP((short)13, "business_group"),
    EMPLOYMENT_TYPE((short)14, "employment_type"),
    HR_EMAIL((short)15, "hr_email"),
    DEGREE((short)16, "degree"),
    FEATURE((short)17, "feature"),
    EMAIL_NOTICE((short)18, "email_notice"),
    CANDIDATE_SOURCE((short)19, "candidate_source"),
    OCCUPATION((short)20, "occupation"),
    INDUSTRY((short)21, "industry"),
    EMAIL_RESUME_CONF((short)22, "email_resume_conf"),
    DISTRICT((short)23, "district"),
    COUNT((short)24, "count"),
    SALARY_TOP((short)25, "salary_top"),
    SALARY_BOTTOM((short)26, "salary_bottom"),
    EXPERIENCE_ABOVE((short)27, "experience_above"),
    DEGREE_ABOVE((short)28, "degree_above"),
    MANAGEMENT_EXPERIENCE((short)29, "management_experience"),
    GENDER((short)30, "gender"),
    PUBLISHER((short)31, "publisher"),
    APP_CV_CONFIG_ID((short)32, "app_cv_config_id"),
    SOURCE((short)33, "source"),
    AGE((short)34, "age"),
    MAJOR_REQUIRED((short)35, "major_required"),
    WORK_ADDRESS((short)36, "work_address"),
    KEYWORD((short)37, "keyword"),
    REPORTING_TO((short)38, "reporting_to"),
    IS_HIRING((short)39, "is_hiring"),
    UNDERLINGS((short)40, "underlings"),
    LANGUAGE_REQUIRED((short)41, "language_required"),
    CURRENT_STATUS((short)42, "current_status"),
    POSITION_CODE((short)43, "position_code"),
    TEAM_ID((short)44, "team_id"),
    CITY((short)45, "city"),
    EXTRA((short)46, "extra"),
    ID((short)47, "id"),
    REQUIREMENT((short)48, "requirement");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOBNUMBER
          return JOBNUMBER;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // TITLE
          return TITLE;
        case 4: // PROVINCE
          return PROVINCE;
        case 5: // DEPARTMENT
          return DEPARTMENT;
        case 6: // STOP_DATE
          return STOP_DATE;
        case 7: // ACCOUNTABILITIES
          return ACCOUNTABILITIES;
        case 8: // EXPERIENCE
          return EXPERIENCE;
        case 9: // SALARY
          return SALARY;
        case 10: // LANGUAGE
          return LANGUAGE;
        case 11: // STATUS
          return STATUS;
        case 12: // SOURCE_ID
          return SOURCE_ID;
        case 13: // BUSINESS_GROUP
          return BUSINESS_GROUP;
        case 14: // EMPLOYMENT_TYPE
          return EMPLOYMENT_TYPE;
        case 15: // HR_EMAIL
          return HR_EMAIL;
        case 16: // DEGREE
          return DEGREE;
        case 17: // FEATURE
          return FEATURE;
        case 18: // EMAIL_NOTICE
          return EMAIL_NOTICE;
        case 19: // CANDIDATE_SOURCE
          return CANDIDATE_SOURCE;
        case 20: // OCCUPATION
          return OCCUPATION;
        case 21: // INDUSTRY
          return INDUSTRY;
        case 22: // EMAIL_RESUME_CONF
          return EMAIL_RESUME_CONF;
        case 23: // DISTRICT
          return DISTRICT;
        case 24: // COUNT
          return COUNT;
        case 25: // SALARY_TOP
          return SALARY_TOP;
        case 26: // SALARY_BOTTOM
          return SALARY_BOTTOM;
        case 27: // EXPERIENCE_ABOVE
          return EXPERIENCE_ABOVE;
        case 28: // DEGREE_ABOVE
          return DEGREE_ABOVE;
        case 29: // MANAGEMENT_EXPERIENCE
          return MANAGEMENT_EXPERIENCE;
        case 30: // GENDER
          return GENDER;
        case 31: // PUBLISHER
          return PUBLISHER;
        case 32: // APP_CV_CONFIG_ID
          return APP_CV_CONFIG_ID;
        case 33: // SOURCE
          return SOURCE;
        case 34: // AGE
          return AGE;
        case 35: // MAJOR_REQUIRED
          return MAJOR_REQUIRED;
        case 36: // WORK_ADDRESS
          return WORK_ADDRESS;
        case 37: // KEYWORD
          return KEYWORD;
        case 38: // REPORTING_TO
          return REPORTING_TO;
        case 39: // IS_HIRING
          return IS_HIRING;
        case 40: // UNDERLINGS
          return UNDERLINGS;
        case 41: // LANGUAGE_REQUIRED
          return LANGUAGE_REQUIRED;
        case 42: // CURRENT_STATUS
          return CURRENT_STATUS;
        case 43: // POSITION_CODE
          return POSITION_CODE;
        case 44: // TEAM_ID
          return TEAM_ID;
        case 45: // CITY
          return CITY;
        case 46: // EXTRA
          return EXTRA;
        case 47: // ID
          return ID;
        case 48: // REQUIREMENT
          return REQUIREMENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANY_ID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __SOURCE_ID_ISSET_ID = 2;
  private static final int __EMPLOYMENT_TYPE_ISSET_ID = 3;
  private static final int __DEGREE_ISSET_ID = 4;
  private static final int __EMAIL_NOTICE_ISSET_ID = 5;
  private static final int __CANDIDATE_SOURCE_ISSET_ID = 6;
  private static final int __EMAIL_RESUME_CONF_ISSET_ID = 7;
  private static final int __COUNT_ISSET_ID = 8;
  private static final int __SALARY_TOP_ISSET_ID = 9;
  private static final int __SALARY_BOTTOM_ISSET_ID = 10;
  private static final int __EXPERIENCE_ABOVE_ISSET_ID = 11;
  private static final int __DEGREE_ABOVE_ISSET_ID = 12;
  private static final int __MANAGEMENT_EXPERIENCE_ISSET_ID = 13;
  private static final int __GENDER_ISSET_ID = 14;
  private static final int __PUBLISHER_ISSET_ID = 15;
  private static final int __APP_CV_CONFIG_ID_ISSET_ID = 16;
  private static final int __SOURCE_ISSET_ID = 17;
  private static final int __AGE_ISSET_ID = 18;
  private static final int __IS_HIRING_ISSET_ID = 19;
  private static final int __UNDERLINGS_ISSET_ID = 20;
  private static final int __LANGUAGE_REQUIRED_ISSET_ID = 21;
  private static final int __CURRENT_STATUS_ISSET_ID = 22;
  private static final int __POSITION_CODE_ISSET_ID = 23;
  private static final int __TEAM_ID_ISSET_ID = 24;
  private static final int __ID_ISSET_ID = 25;
  private int __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOBNUMBER, new org.apache.thrift.meta_data.FieldMetaData("jobnumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE, new org.apache.thrift.meta_data.FieldMetaData("province", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STOP_DATE, new org.apache.thrift.meta_data.FieldMetaData("stop_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.ACCOUNTABILITIES, new org.apache.thrift.meta_data.FieldMetaData("accountabilities", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY, new org.apache.thrift.meta_data.FieldMetaData("salary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("source_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUSINESS_GROUP, new org.apache.thrift.meta_data.FieldMetaData("business_group", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("employment_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("hr_email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEATURE, new org.apache.thrift.meta_data.FieldMetaData("feature", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL_NOTICE, new org.apache.thrift.meta_data.FieldMetaData("email_notice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CANDIDATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("candidate_source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("occupation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INDUSTRY, new org.apache.thrift.meta_data.FieldMetaData("industry", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL_RESUME_CONF, new org.apache.thrift.meta_data.FieldMetaData("email_resume_conf", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DISTRICT, new org.apache.thrift.meta_data.FieldMetaData("district", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_TOP, new org.apache.thrift.meta_data.FieldMetaData("salary_top", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALARY_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("salary_bottom", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EXPERIENCE_ABOVE, new org.apache.thrift.meta_data.FieldMetaData("experience_above", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEGREE_ABOVE, new org.apache.thrift.meta_data.FieldMetaData("degree_above", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MANAGEMENT_EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("management_experience", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GENDER, new org.apache.thrift.meta_data.FieldMetaData("gender", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PUBLISHER, new org.apache.thrift.meta_data.FieldMetaData("publisher", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_CV_CONFIG_ID, new org.apache.thrift.meta_data.FieldMetaData("app_cv_config_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGE, new org.apache.thrift.meta_data.FieldMetaData("age", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAJOR_REQUIRED, new org.apache.thrift.meta_data.FieldMetaData("major_required", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORK_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("work_address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEYWORD, new org.apache.thrift.meta_data.FieldMetaData("keyword", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REPORTING_TO, new org.apache.thrift.meta_data.FieldMetaData("reporting_to", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_HIRING, new org.apache.thrift.meta_data.FieldMetaData("is_hiring", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UNDERLINGS, new org.apache.thrift.meta_data.FieldMetaData("underlings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_REQUIRED, new org.apache.thrift.meta_data.FieldMetaData("language_required", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CURRENT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("current_status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_CODE, new org.apache.thrift.meta_data.FieldMetaData("position_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TEAM_ID, new org.apache.thrift.meta_data.FieldMetaData("team_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "City"))));
    tmpMap.put(_Fields.EXTRA, new org.apache.thrift.meta_data.FieldMetaData("extra", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REQUIREMENT, new org.apache.thrift.meta_data.FieldMetaData("requirement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobPostrionObj.class, metaDataMap);
  }

  public JobPostrionObj() {
  }

  public JobPostrionObj(
    java.lang.String jobnumber,
    int company_id,
    java.lang.String title,
    java.lang.String province,
    java.lang.String department,
    java.lang.String stop_date,
    java.lang.String accountabilities,
    java.lang.String experience,
    java.lang.String salary,
    java.lang.String language,
    byte status,
    int source_id,
    java.lang.String business_group,
    int employment_type,
    java.lang.String hr_email,
    int degree,
    java.lang.String feature,
    int email_notice,
    int candidate_source,
    java.lang.String occupation,
    java.lang.String industry,
    int email_resume_conf,
    java.lang.String district,
    int count,
    double salary_top,
    double salary_bottom,
    int experience_above,
    int degree_above,
    int management_experience,
    int gender,
    int publisher,
    int app_cv_config_id,
    int source,
    int age,
    java.lang.String major_required,
    java.lang.String work_address,
    java.lang.String keyword,
    java.lang.String reporting_to,
    int is_hiring,
    int underlings,
    int language_required,
    int current_status,
    long position_code,
    int team_id,
    java.util.List<City> city,
    java.lang.String extra,
    int id,
    java.lang.String requirement)
  {
    this();
    this.jobnumber = jobnumber;
    this.company_id = company_id;
    setCompany_idIsSet(true);
    this.title = title;
    this.province = province;
    this.department = department;
    this.stop_date = stop_date;
    this.accountabilities = accountabilities;
    this.experience = experience;
    this.salary = salary;
    this.language = language;
    this.status = status;
    setStatusIsSet(true);
    this.source_id = source_id;
    setSource_idIsSet(true);
    this.business_group = business_group;
    this.employment_type = employment_type;
    setEmployment_typeIsSet(true);
    this.hr_email = hr_email;
    this.degree = degree;
    setDegreeIsSet(true);
    this.feature = feature;
    this.email_notice = email_notice;
    setEmail_noticeIsSet(true);
    this.candidate_source = candidate_source;
    setCandidate_sourceIsSet(true);
    this.occupation = occupation;
    this.industry = industry;
    this.email_resume_conf = email_resume_conf;
    setEmail_resume_confIsSet(true);
    this.district = district;
    this.count = count;
    setCountIsSet(true);
    this.salary_top = salary_top;
    setSalary_topIsSet(true);
    this.salary_bottom = salary_bottom;
    setSalary_bottomIsSet(true);
    this.experience_above = experience_above;
    setExperience_aboveIsSet(true);
    this.degree_above = degree_above;
    setDegree_aboveIsSet(true);
    this.management_experience = management_experience;
    setManagement_experienceIsSet(true);
    this.gender = gender;
    setGenderIsSet(true);
    this.publisher = publisher;
    setPublisherIsSet(true);
    this.app_cv_config_id = app_cv_config_id;
    setApp_cv_config_idIsSet(true);
    this.source = source;
    setSourceIsSet(true);
    this.age = age;
    setAgeIsSet(true);
    this.major_required = major_required;
    this.work_address = work_address;
    this.keyword = keyword;
    this.reporting_to = reporting_to;
    this.is_hiring = is_hiring;
    setIs_hiringIsSet(true);
    this.underlings = underlings;
    setUnderlingsIsSet(true);
    this.language_required = language_required;
    setLanguage_requiredIsSet(true);
    this.current_status = current_status;
    setCurrent_statusIsSet(true);
    this.position_code = position_code;
    setPosition_codeIsSet(true);
    this.team_id = team_id;
    setTeam_idIsSet(true);
    this.city = city;
    this.extra = extra;
    this.id = id;
    setIdIsSet(true);
    this.requirement = requirement;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobPostrionObj(JobPostrionObj other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetJobnumber()) {
      this.jobnumber = other.jobnumber;
    }
    this.company_id = other.company_id;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetProvince()) {
      this.province = other.province;
    }
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    if (other.isSetStop_date()) {
      this.stop_date = other.stop_date;
    }
    if (other.isSetAccountabilities()) {
      this.accountabilities = other.accountabilities;
    }
    if (other.isSetExperience()) {
      this.experience = other.experience;
    }
    if (other.isSetSalary()) {
      this.salary = other.salary;
    }
    if (other.isSetLanguage()) {
      this.language = other.language;
    }
    this.status = other.status;
    this.source_id = other.source_id;
    if (other.isSetBusiness_group()) {
      this.business_group = other.business_group;
    }
    this.employment_type = other.employment_type;
    if (other.isSetHr_email()) {
      this.hr_email = other.hr_email;
    }
    this.degree = other.degree;
    if (other.isSetFeature()) {
      this.feature = other.feature;
    }
    this.email_notice = other.email_notice;
    this.candidate_source = other.candidate_source;
    if (other.isSetOccupation()) {
      this.occupation = other.occupation;
    }
    if (other.isSetIndustry()) {
      this.industry = other.industry;
    }
    this.email_resume_conf = other.email_resume_conf;
    if (other.isSetDistrict()) {
      this.district = other.district;
    }
    this.count = other.count;
    this.salary_top = other.salary_top;
    this.salary_bottom = other.salary_bottom;
    this.experience_above = other.experience_above;
    this.degree_above = other.degree_above;
    this.management_experience = other.management_experience;
    this.gender = other.gender;
    this.publisher = other.publisher;
    this.app_cv_config_id = other.app_cv_config_id;
    this.source = other.source;
    this.age = other.age;
    if (other.isSetMajor_required()) {
      this.major_required = other.major_required;
    }
    if (other.isSetWork_address()) {
      this.work_address = other.work_address;
    }
    if (other.isSetKeyword()) {
      this.keyword = other.keyword;
    }
    if (other.isSetReporting_to()) {
      this.reporting_to = other.reporting_to;
    }
    this.is_hiring = other.is_hiring;
    this.underlings = other.underlings;
    this.language_required = other.language_required;
    this.current_status = other.current_status;
    this.position_code = other.position_code;
    this.team_id = other.team_id;
    if (other.isSetCity()) {
      java.util.List<City> __this__city = new java.util.ArrayList<City>(other.city.size());
      for (City other_element : other.city) {
        __this__city.add(other_element);
      }
      this.city = __this__city;
    }
    if (other.isSetExtra()) {
      this.extra = other.extra;
    }
    this.id = other.id;
    if (other.isSetRequirement()) {
      this.requirement = other.requirement;
    }
  }

  public JobPostrionObj deepCopy() {
    return new JobPostrionObj(this);
  }

  @Override
  public void clear() {
    this.jobnumber = null;
    setCompany_idIsSet(false);
    this.company_id = 0;
    this.title = null;
    this.province = null;
    this.department = null;
    this.stop_date = null;
    this.accountabilities = null;
    this.experience = null;
    this.salary = null;
    this.language = null;
    setStatusIsSet(false);
    this.status = 0;
    setSource_idIsSet(false);
    this.source_id = 0;
    this.business_group = null;
    setEmployment_typeIsSet(false);
    this.employment_type = 0;
    this.hr_email = null;
    setDegreeIsSet(false);
    this.degree = 0;
    this.feature = null;
    setEmail_noticeIsSet(false);
    this.email_notice = 0;
    setCandidate_sourceIsSet(false);
    this.candidate_source = 0;
    this.occupation = null;
    this.industry = null;
    setEmail_resume_confIsSet(false);
    this.email_resume_conf = 0;
    this.district = null;
    setCountIsSet(false);
    this.count = 0;
    setSalary_topIsSet(false);
    this.salary_top = 0.0;
    setSalary_bottomIsSet(false);
    this.salary_bottom = 0.0;
    setExperience_aboveIsSet(false);
    this.experience_above = 0;
    setDegree_aboveIsSet(false);
    this.degree_above = 0;
    setManagement_experienceIsSet(false);
    this.management_experience = 0;
    setGenderIsSet(false);
    this.gender = 0;
    setPublisherIsSet(false);
    this.publisher = 0;
    setApp_cv_config_idIsSet(false);
    this.app_cv_config_id = 0;
    setSourceIsSet(false);
    this.source = 0;
    setAgeIsSet(false);
    this.age = 0;
    this.major_required = null;
    this.work_address = null;
    this.keyword = null;
    this.reporting_to = null;
    setIs_hiringIsSet(false);
    this.is_hiring = 0;
    setUnderlingsIsSet(false);
    this.underlings = 0;
    setLanguage_requiredIsSet(false);
    this.language_required = 0;
    setCurrent_statusIsSet(false);
    this.current_status = 0;
    setPosition_codeIsSet(false);
    this.position_code = 0;
    setTeam_idIsSet(false);
    this.team_id = 0;
    this.city = null;
    this.extra = null;
    setIdIsSet(false);
    this.id = 0;
    this.requirement = null;
  }

  public java.lang.String getJobnumber() {
    return this.jobnumber;
  }

  public JobPostrionObj setJobnumber(java.lang.String jobnumber) {
    this.jobnumber = jobnumber;
    return this;
  }

  public void unsetJobnumber() {
    this.jobnumber = null;
  }

  /** Returns true if field jobnumber is set (has been assigned a value) and false otherwise */
  public boolean isSetJobnumber() {
    return this.jobnumber != null;
  }

  public void setJobnumberIsSet(boolean value) {
    if (!value) {
      this.jobnumber = null;
    }
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public JobPostrionObj setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public java.lang.String getTitle() {
    return this.title;
  }

  public JobPostrionObj setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public java.lang.String getProvince() {
    return this.province;
  }

  public JobPostrionObj setProvince(java.lang.String province) {
    this.province = province;
    return this;
  }

  public void unsetProvince() {
    this.province = null;
  }

  /** Returns true if field province is set (has been assigned a value) and false otherwise */
  public boolean isSetProvince() {
    return this.province != null;
  }

  public void setProvinceIsSet(boolean value) {
    if (!value) {
      this.province = null;
    }
  }

  public java.lang.String getDepartment() {
    return this.department;
  }

  public JobPostrionObj setDepartment(java.lang.String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public java.lang.String getStop_date() {
    return this.stop_date;
  }

  public JobPostrionObj setStop_date(java.lang.String stop_date) {
    this.stop_date = stop_date;
    return this;
  }

  public void unsetStop_date() {
    this.stop_date = null;
  }

  /** Returns true if field stop_date is set (has been assigned a value) and false otherwise */
  public boolean isSetStop_date() {
    return this.stop_date != null;
  }

  public void setStop_dateIsSet(boolean value) {
    if (!value) {
      this.stop_date = null;
    }
  }

  public java.lang.String getAccountabilities() {
    return this.accountabilities;
  }

  public JobPostrionObj setAccountabilities(java.lang.String accountabilities) {
    this.accountabilities = accountabilities;
    return this;
  }

  public void unsetAccountabilities() {
    this.accountabilities = null;
  }

  /** Returns true if field accountabilities is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountabilities() {
    return this.accountabilities != null;
  }

  public void setAccountabilitiesIsSet(boolean value) {
    if (!value) {
      this.accountabilities = null;
    }
  }

  public java.lang.String getExperience() {
    return this.experience;
  }

  public JobPostrionObj setExperience(java.lang.String experience) {
    this.experience = experience;
    return this;
  }

  public void unsetExperience() {
    this.experience = null;
  }

  /** Returns true if field experience is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience() {
    return this.experience != null;
  }

  public void setExperienceIsSet(boolean value) {
    if (!value) {
      this.experience = null;
    }
  }

  public java.lang.String getSalary() {
    return this.salary;
  }

  public JobPostrionObj setSalary(java.lang.String salary) {
    this.salary = salary;
    return this;
  }

  public void unsetSalary() {
    this.salary = null;
  }

  /** Returns true if field salary is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary() {
    return this.salary != null;
  }

  public void setSalaryIsSet(boolean value) {
    if (!value) {
      this.salary = null;
    }
  }

  public java.lang.String getLanguage() {
    return this.language;
  }

  public JobPostrionObj setLanguage(java.lang.String language) {
    this.language = language;
    return this;
  }

  public void unsetLanguage() {
    this.language = null;
  }

  /** Returns true if field language is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguage() {
    return this.language != null;
  }

  public void setLanguageIsSet(boolean value) {
    if (!value) {
      this.language = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public JobPostrionObj setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getSource_id() {
    return this.source_id;
  }

  public JobPostrionObj setSource_id(int source_id) {
    this.source_id = source_id;
    setSource_idIsSet(true);
    return this;
  }

  public void unsetSource_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  /** Returns true if field source_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSource_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  public void setSource_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ID_ISSET_ID, value);
  }

  public java.lang.String getBusiness_group() {
    return this.business_group;
  }

  public JobPostrionObj setBusiness_group(java.lang.String business_group) {
    this.business_group = business_group;
    return this;
  }

  public void unsetBusiness_group() {
    this.business_group = null;
  }

  /** Returns true if field business_group is set (has been assigned a value) and false otherwise */
  public boolean isSetBusiness_group() {
    return this.business_group != null;
  }

  public void setBusiness_groupIsSet(boolean value) {
    if (!value) {
      this.business_group = null;
    }
  }

  public int getEmployment_type() {
    return this.employment_type;
  }

  public JobPostrionObj setEmployment_type(int employment_type) {
    this.employment_type = employment_type;
    setEmployment_typeIsSet(true);
    return this;
  }

  public void unsetEmployment_type() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYMENT_TYPE_ISSET_ID);
  }

  /** Returns true if field employment_type is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployment_type() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYMENT_TYPE_ISSET_ID);
  }

  public void setEmployment_typeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYMENT_TYPE_ISSET_ID, value);
  }

  public java.lang.String getHr_email() {
    return this.hr_email;
  }

  public JobPostrionObj setHr_email(java.lang.String hr_email) {
    this.hr_email = hr_email;
    return this;
  }

  public void unsetHr_email() {
    this.hr_email = null;
  }

  /** Returns true if field hr_email is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_email() {
    return this.hr_email != null;
  }

  public void setHr_emailIsSet(boolean value) {
    if (!value) {
      this.hr_email = null;
    }
  }

  public int getDegree() {
    return this.degree;
  }

  public JobPostrionObj setDegree(int degree) {
    this.degree = degree;
    setDegreeIsSet(true);
    return this;
  }

  public void unsetDegree() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEGREE_ISSET_ID);
  }

  public void setDegreeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEGREE_ISSET_ID, value);
  }

  public java.lang.String getFeature() {
    return this.feature;
  }

  public JobPostrionObj setFeature(java.lang.String feature) {
    this.feature = feature;
    return this;
  }

  public void unsetFeature() {
    this.feature = null;
  }

  /** Returns true if field feature is set (has been assigned a value) and false otherwise */
  public boolean isSetFeature() {
    return this.feature != null;
  }

  public void setFeatureIsSet(boolean value) {
    if (!value) {
      this.feature = null;
    }
  }

  public int getEmail_notice() {
    return this.email_notice;
  }

  public JobPostrionObj setEmail_notice(int email_notice) {
    this.email_notice = email_notice;
    setEmail_noticeIsSet(true);
    return this;
  }

  public void unsetEmail_notice() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAIL_NOTICE_ISSET_ID);
  }

  /** Returns true if field email_notice is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_notice() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAIL_NOTICE_ISSET_ID);
  }

  public void setEmail_noticeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAIL_NOTICE_ISSET_ID, value);
  }

  public int getCandidate_source() {
    return this.candidate_source;
  }

  public JobPostrionObj setCandidate_source(int candidate_source) {
    this.candidate_source = candidate_source;
    setCandidate_sourceIsSet(true);
    return this;
  }

  public void unsetCandidate_source() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANDIDATE_SOURCE_ISSET_ID);
  }

  /** Returns true if field candidate_source is set (has been assigned a value) and false otherwise */
  public boolean isSetCandidate_source() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANDIDATE_SOURCE_ISSET_ID);
  }

  public void setCandidate_sourceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANDIDATE_SOURCE_ISSET_ID, value);
  }

  public java.lang.String getOccupation() {
    return this.occupation;
  }

  public JobPostrionObj setOccupation(java.lang.String occupation) {
    this.occupation = occupation;
    return this;
  }

  public void unsetOccupation() {
    this.occupation = null;
  }

  /** Returns true if field occupation is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupation() {
    return this.occupation != null;
  }

  public void setOccupationIsSet(boolean value) {
    if (!value) {
      this.occupation = null;
    }
  }

  public java.lang.String getIndustry() {
    return this.industry;
  }

  public JobPostrionObj setIndustry(java.lang.String industry) {
    this.industry = industry;
    return this;
  }

  public void unsetIndustry() {
    this.industry = null;
  }

  /** Returns true if field industry is set (has been assigned a value) and false otherwise */
  public boolean isSetIndustry() {
    return this.industry != null;
  }

  public void setIndustryIsSet(boolean value) {
    if (!value) {
      this.industry = null;
    }
  }

  public int getEmail_resume_conf() {
    return this.email_resume_conf;
  }

  public JobPostrionObj setEmail_resume_conf(int email_resume_conf) {
    this.email_resume_conf = email_resume_conf;
    setEmail_resume_confIsSet(true);
    return this;
  }

  public void unsetEmail_resume_conf() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAIL_RESUME_CONF_ISSET_ID);
  }

  /** Returns true if field email_resume_conf is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_resume_conf() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAIL_RESUME_CONF_ISSET_ID);
  }

  public void setEmail_resume_confIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAIL_RESUME_CONF_ISSET_ID, value);
  }

  public java.lang.String getDistrict() {
    return this.district;
  }

  public JobPostrionObj setDistrict(java.lang.String district) {
    this.district = district;
    return this;
  }

  public void unsetDistrict() {
    this.district = null;
  }

  /** Returns true if field district is set (has been assigned a value) and false otherwise */
  public boolean isSetDistrict() {
    return this.district != null;
  }

  public void setDistrictIsSet(boolean value) {
    if (!value) {
      this.district = null;
    }
  }

  public int getCount() {
    return this.count;
  }

  public JobPostrionObj setCount(int count) {
    this.count = count;
    setCountIsSet(true);
    return this;
  }

  public void unsetCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  /** Returns true if field count is set (has been assigned a value) and false otherwise */
  public boolean isSetCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
  }

  public void setCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
  }

  public double getSalary_top() {
    return this.salary_top;
  }

  public JobPostrionObj setSalary_top(double salary_top) {
    this.salary_top = salary_top;
    setSalary_topIsSet(true);
    return this;
  }

  public void unsetSalary_top() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  /** Returns true if field salary_top is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_top() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  public void setSalary_topIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_TOP_ISSET_ID, value);
  }

  public double getSalary_bottom() {
    return this.salary_bottom;
  }

  public JobPostrionObj setSalary_bottom(double salary_bottom) {
    this.salary_bottom = salary_bottom;
    setSalary_bottomIsSet(true);
    return this;
  }

  public void unsetSalary_bottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  /** Returns true if field salary_bottom is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_bottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  public void setSalary_bottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID, value);
  }

  public int getExperience_above() {
    return this.experience_above;
  }

  public JobPostrionObj setExperience_above(int experience_above) {
    this.experience_above = experience_above;
    setExperience_aboveIsSet(true);
    return this;
  }

  public void unsetExperience_above() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EXPERIENCE_ABOVE_ISSET_ID);
  }

  /** Returns true if field experience_above is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience_above() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EXPERIENCE_ABOVE_ISSET_ID);
  }

  public void setExperience_aboveIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EXPERIENCE_ABOVE_ISSET_ID, value);
  }

  public int getDegree_above() {
    return this.degree_above;
  }

  public JobPostrionObj setDegree_above(int degree_above) {
    this.degree_above = degree_above;
    setDegree_aboveIsSet(true);
    return this;
  }

  public void unsetDegree_above() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEGREE_ABOVE_ISSET_ID);
  }

  /** Returns true if field degree_above is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree_above() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEGREE_ABOVE_ISSET_ID);
  }

  public void setDegree_aboveIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEGREE_ABOVE_ISSET_ID, value);
  }

  public int getManagement_experience() {
    return this.management_experience;
  }

  public JobPostrionObj setManagement_experience(int management_experience) {
    this.management_experience = management_experience;
    setManagement_experienceIsSet(true);
    return this;
  }

  public void unsetManagement_experience() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MANAGEMENT_EXPERIENCE_ISSET_ID);
  }

  /** Returns true if field management_experience is set (has been assigned a value) and false otherwise */
  public boolean isSetManagement_experience() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MANAGEMENT_EXPERIENCE_ISSET_ID);
  }

  public void setManagement_experienceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MANAGEMENT_EXPERIENCE_ISSET_ID, value);
  }

  public int getGender() {
    return this.gender;
  }

  public JobPostrionObj setGender(int gender) {
    this.gender = gender;
    setGenderIsSet(true);
    return this;
  }

  public void unsetGender() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  /** Returns true if field gender is set (has been assigned a value) and false otherwise */
  public boolean isSetGender() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  public void setGenderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GENDER_ISSET_ID, value);
  }

  public int getPublisher() {
    return this.publisher;
  }

  public JobPostrionObj setPublisher(int publisher) {
    this.publisher = publisher;
    setPublisherIsSet(true);
    return this;
  }

  public void unsetPublisher() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PUBLISHER_ISSET_ID);
  }

  /** Returns true if field publisher is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisher() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PUBLISHER_ISSET_ID);
  }

  public void setPublisherIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PUBLISHER_ISSET_ID, value);
  }

  public int getApp_cv_config_id() {
    return this.app_cv_config_id;
  }

  public JobPostrionObj setApp_cv_config_id(int app_cv_config_id) {
    this.app_cv_config_id = app_cv_config_id;
    setApp_cv_config_idIsSet(true);
    return this;
  }

  public void unsetApp_cv_config_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APP_CV_CONFIG_ID_ISSET_ID);
  }

  /** Returns true if field app_cv_config_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_cv_config_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APP_CV_CONFIG_ID_ISSET_ID);
  }

  public void setApp_cv_config_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APP_CV_CONFIG_ID_ISSET_ID, value);
  }

  public int getSource() {
    return this.source;
  }

  public JobPostrionObj setSource(int source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
  }

  public int getAge() {
    return this.age;
  }

  public JobPostrionObj setAge(int age) {
    this.age = age;
    setAgeIsSet(true);
    return this;
  }

  public void unsetAge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  /** Returns true if field age is set (has been assigned a value) and false otherwise */
  public boolean isSetAge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  public void setAgeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_ISSET_ID, value);
  }

  public java.lang.String getMajor_required() {
    return this.major_required;
  }

  public JobPostrionObj setMajor_required(java.lang.String major_required) {
    this.major_required = major_required;
    return this;
  }

  public void unsetMajor_required() {
    this.major_required = null;
  }

  /** Returns true if field major_required is set (has been assigned a value) and false otherwise */
  public boolean isSetMajor_required() {
    return this.major_required != null;
  }

  public void setMajor_requiredIsSet(boolean value) {
    if (!value) {
      this.major_required = null;
    }
  }

  public java.lang.String getWork_address() {
    return this.work_address;
  }

  public JobPostrionObj setWork_address(java.lang.String work_address) {
    this.work_address = work_address;
    return this;
  }

  public void unsetWork_address() {
    this.work_address = null;
  }

  /** Returns true if field work_address is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_address() {
    return this.work_address != null;
  }

  public void setWork_addressIsSet(boolean value) {
    if (!value) {
      this.work_address = null;
    }
  }

  public java.lang.String getKeyword() {
    return this.keyword;
  }

  public JobPostrionObj setKeyword(java.lang.String keyword) {
    this.keyword = keyword;
    return this;
  }

  public void unsetKeyword() {
    this.keyword = null;
  }

  /** Returns true if field keyword is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyword() {
    return this.keyword != null;
  }

  public void setKeywordIsSet(boolean value) {
    if (!value) {
      this.keyword = null;
    }
  }

  public java.lang.String getReporting_to() {
    return this.reporting_to;
  }

  public JobPostrionObj setReporting_to(java.lang.String reporting_to) {
    this.reporting_to = reporting_to;
    return this;
  }

  public void unsetReporting_to() {
    this.reporting_to = null;
  }

  /** Returns true if field reporting_to is set (has been assigned a value) and false otherwise */
  public boolean isSetReporting_to() {
    return this.reporting_to != null;
  }

  public void setReporting_toIsSet(boolean value) {
    if (!value) {
      this.reporting_to = null;
    }
  }

  public int getIs_hiring() {
    return this.is_hiring;
  }

  public JobPostrionObj setIs_hiring(int is_hiring) {
    this.is_hiring = is_hiring;
    setIs_hiringIsSet(true);
    return this;
  }

  public void unsetIs_hiring() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_HIRING_ISSET_ID);
  }

  /** Returns true if field is_hiring is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_hiring() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_HIRING_ISSET_ID);
  }

  public void setIs_hiringIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_HIRING_ISSET_ID, value);
  }

  public int getUnderlings() {
    return this.underlings;
  }

  public JobPostrionObj setUnderlings(int underlings) {
    this.underlings = underlings;
    setUnderlingsIsSet(true);
    return this;
  }

  public void unsetUnderlings() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UNDERLINGS_ISSET_ID);
  }

  /** Returns true if field underlings is set (has been assigned a value) and false otherwise */
  public boolean isSetUnderlings() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UNDERLINGS_ISSET_ID);
  }

  public void setUnderlingsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UNDERLINGS_ISSET_ID, value);
  }

  public int getLanguage_required() {
    return this.language_required;
  }

  public JobPostrionObj setLanguage_required(int language_required) {
    this.language_required = language_required;
    setLanguage_requiredIsSet(true);
    return this;
  }

  public void unsetLanguage_required() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGE_REQUIRED_ISSET_ID);
  }

  /** Returns true if field language_required is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguage_required() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGE_REQUIRED_ISSET_ID);
  }

  public void setLanguage_requiredIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGE_REQUIRED_ISSET_ID, value);
  }

  public int getCurrent_status() {
    return this.current_status;
  }

  public JobPostrionObj setCurrent_status(int current_status) {
    this.current_status = current_status;
    setCurrent_statusIsSet(true);
    return this;
  }

  public void unsetCurrent_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CURRENT_STATUS_ISSET_ID);
  }

  /** Returns true if field current_status is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrent_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CURRENT_STATUS_ISSET_ID);
  }

  public void setCurrent_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CURRENT_STATUS_ISSET_ID, value);
  }

  public long getPosition_code() {
    return this.position_code;
  }

  public JobPostrionObj setPosition_code(long position_code) {
    this.position_code = position_code;
    setPosition_codeIsSet(true);
    return this;
  }

  public void unsetPosition_code() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_CODE_ISSET_ID);
  }

  /** Returns true if field position_code is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_code() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_CODE_ISSET_ID);
  }

  public void setPosition_codeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_CODE_ISSET_ID, value);
  }

  public int getTeam_id() {
    return this.team_id;
  }

  public JobPostrionObj setTeam_id(int team_id) {
    this.team_id = team_id;
    setTeam_idIsSet(true);
    return this;
  }

  public void unsetTeam_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TEAM_ID_ISSET_ID);
  }

  /** Returns true if field team_id is set (has been assigned a value) and false otherwise */
  public boolean isSetTeam_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TEAM_ID_ISSET_ID);
  }

  public void setTeam_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TEAM_ID_ISSET_ID, value);
  }

  public int getCitySize() {
    return (this.city == null) ? 0 : this.city.size();
  }

  public java.util.Iterator<City> getCityIterator() {
    return (this.city == null) ? null : this.city.iterator();
  }

  public void addToCity(City elem) {
    if (this.city == null) {
      this.city = new java.util.ArrayList<City>();
    }
    this.city.add(elem);
  }

  public java.util.List<City> getCity() {
    return this.city;
  }

  public JobPostrionObj setCity(java.util.List<City> city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public java.lang.String getExtra() {
    return this.extra;
  }

  public JobPostrionObj setExtra(java.lang.String extra) {
    this.extra = extra;
    return this;
  }

  public void unsetExtra() {
    this.extra = null;
  }

  /** Returns true if field extra is set (has been assigned a value) and false otherwise */
  public boolean isSetExtra() {
    return this.extra != null;
  }

  public void setExtraIsSet(boolean value) {
    if (!value) {
      this.extra = null;
    }
  }

  public int getId() {
    return this.id;
  }

  public JobPostrionObj setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getRequirement() {
    return this.requirement;
  }

  public JobPostrionObj setRequirement(java.lang.String requirement) {
    this.requirement = requirement;
    return this;
  }

  public void unsetRequirement() {
    this.requirement = null;
  }

  /** Returns true if field requirement is set (has been assigned a value) and false otherwise */
  public boolean isSetRequirement() {
    return this.requirement != null;
  }

  public void setRequirementIsSet(boolean value) {
    if (!value) {
      this.requirement = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case JOBNUMBER:
      if (value == null) {
        unsetJobnumber();
      } else {
        setJobnumber((java.lang.String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case PROVINCE:
      if (value == null) {
        unsetProvince();
      } else {
        setProvince((java.lang.String)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((java.lang.String)value);
      }
      break;

    case STOP_DATE:
      if (value == null) {
        unsetStop_date();
      } else {
        setStop_date((java.lang.String)value);
      }
      break;

    case ACCOUNTABILITIES:
      if (value == null) {
        unsetAccountabilities();
      } else {
        setAccountabilities((java.lang.String)value);
      }
      break;

    case EXPERIENCE:
      if (value == null) {
        unsetExperience();
      } else {
        setExperience((java.lang.String)value);
      }
      break;

    case SALARY:
      if (value == null) {
        unsetSalary();
      } else {
        setSalary((java.lang.String)value);
      }
      break;

    case LANGUAGE:
      if (value == null) {
        unsetLanguage();
      } else {
        setLanguage((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Byte)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSource_id();
      } else {
        setSource_id((java.lang.Integer)value);
      }
      break;

    case BUSINESS_GROUP:
      if (value == null) {
        unsetBusiness_group();
      } else {
        setBusiness_group((java.lang.String)value);
      }
      break;

    case EMPLOYMENT_TYPE:
      if (value == null) {
        unsetEmployment_type();
      } else {
        setEmployment_type((java.lang.Integer)value);
      }
      break;

    case HR_EMAIL:
      if (value == null) {
        unsetHr_email();
      } else {
        setHr_email((java.lang.String)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((java.lang.Integer)value);
      }
      break;

    case FEATURE:
      if (value == null) {
        unsetFeature();
      } else {
        setFeature((java.lang.String)value);
      }
      break;

    case EMAIL_NOTICE:
      if (value == null) {
        unsetEmail_notice();
      } else {
        setEmail_notice((java.lang.Integer)value);
      }
      break;

    case CANDIDATE_SOURCE:
      if (value == null) {
        unsetCandidate_source();
      } else {
        setCandidate_source((java.lang.Integer)value);
      }
      break;

    case OCCUPATION:
      if (value == null) {
        unsetOccupation();
      } else {
        setOccupation((java.lang.String)value);
      }
      break;

    case INDUSTRY:
      if (value == null) {
        unsetIndustry();
      } else {
        setIndustry((java.lang.String)value);
      }
      break;

    case EMAIL_RESUME_CONF:
      if (value == null) {
        unsetEmail_resume_conf();
      } else {
        setEmail_resume_conf((java.lang.Integer)value);
      }
      break;

    case DISTRICT:
      if (value == null) {
        unsetDistrict();
      } else {
        setDistrict((java.lang.String)value);
      }
      break;

    case COUNT:
      if (value == null) {
        unsetCount();
      } else {
        setCount((java.lang.Integer)value);
      }
      break;

    case SALARY_TOP:
      if (value == null) {
        unsetSalary_top();
      } else {
        setSalary_top((java.lang.Double)value);
      }
      break;

    case SALARY_BOTTOM:
      if (value == null) {
        unsetSalary_bottom();
      } else {
        setSalary_bottom((java.lang.Double)value);
      }
      break;

    case EXPERIENCE_ABOVE:
      if (value == null) {
        unsetExperience_above();
      } else {
        setExperience_above((java.lang.Integer)value);
      }
      break;

    case DEGREE_ABOVE:
      if (value == null) {
        unsetDegree_above();
      } else {
        setDegree_above((java.lang.Integer)value);
      }
      break;

    case MANAGEMENT_EXPERIENCE:
      if (value == null) {
        unsetManagement_experience();
      } else {
        setManagement_experience((java.lang.Integer)value);
      }
      break;

    case GENDER:
      if (value == null) {
        unsetGender();
      } else {
        setGender((java.lang.Integer)value);
      }
      break;

    case PUBLISHER:
      if (value == null) {
        unsetPublisher();
      } else {
        setPublisher((java.lang.Integer)value);
      }
      break;

    case APP_CV_CONFIG_ID:
      if (value == null) {
        unsetApp_cv_config_id();
      } else {
        setApp_cv_config_id((java.lang.Integer)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((java.lang.Integer)value);
      }
      break;

    case AGE:
      if (value == null) {
        unsetAge();
      } else {
        setAge((java.lang.Integer)value);
      }
      break;

    case MAJOR_REQUIRED:
      if (value == null) {
        unsetMajor_required();
      } else {
        setMajor_required((java.lang.String)value);
      }
      break;

    case WORK_ADDRESS:
      if (value == null) {
        unsetWork_address();
      } else {
        setWork_address((java.lang.String)value);
      }
      break;

    case KEYWORD:
      if (value == null) {
        unsetKeyword();
      } else {
        setKeyword((java.lang.String)value);
      }
      break;

    case REPORTING_TO:
      if (value == null) {
        unsetReporting_to();
      } else {
        setReporting_to((java.lang.String)value);
      }
      break;

    case IS_HIRING:
      if (value == null) {
        unsetIs_hiring();
      } else {
        setIs_hiring((java.lang.Integer)value);
      }
      break;

    case UNDERLINGS:
      if (value == null) {
        unsetUnderlings();
      } else {
        setUnderlings((java.lang.Integer)value);
      }
      break;

    case LANGUAGE_REQUIRED:
      if (value == null) {
        unsetLanguage_required();
      } else {
        setLanguage_required((java.lang.Integer)value);
      }
      break;

    case CURRENT_STATUS:
      if (value == null) {
        unsetCurrent_status();
      } else {
        setCurrent_status((java.lang.Integer)value);
      }
      break;

    case POSITION_CODE:
      if (value == null) {
        unsetPosition_code();
      } else {
        setPosition_code((java.lang.Long)value);
      }
      break;

    case TEAM_ID:
      if (value == null) {
        unsetTeam_id();
      } else {
        setTeam_id((java.lang.Integer)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((java.util.List<City>)value);
      }
      break;

    case EXTRA:
      if (value == null) {
        unsetExtra();
      } else {
        setExtra((java.lang.String)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case REQUIREMENT:
      if (value == null) {
        unsetRequirement();
      } else {
        setRequirement((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case JOBNUMBER:
      return getJobnumber();

    case COMPANY_ID:
      return getCompany_id();

    case TITLE:
      return getTitle();

    case PROVINCE:
      return getProvince();

    case DEPARTMENT:
      return getDepartment();

    case STOP_DATE:
      return getStop_date();

    case ACCOUNTABILITIES:
      return getAccountabilities();

    case EXPERIENCE:
      return getExperience();

    case SALARY:
      return getSalary();

    case LANGUAGE:
      return getLanguage();

    case STATUS:
      return getStatus();

    case SOURCE_ID:
      return getSource_id();

    case BUSINESS_GROUP:
      return getBusiness_group();

    case EMPLOYMENT_TYPE:
      return getEmployment_type();

    case HR_EMAIL:
      return getHr_email();

    case DEGREE:
      return getDegree();

    case FEATURE:
      return getFeature();

    case EMAIL_NOTICE:
      return getEmail_notice();

    case CANDIDATE_SOURCE:
      return getCandidate_source();

    case OCCUPATION:
      return getOccupation();

    case INDUSTRY:
      return getIndustry();

    case EMAIL_RESUME_CONF:
      return getEmail_resume_conf();

    case DISTRICT:
      return getDistrict();

    case COUNT:
      return getCount();

    case SALARY_TOP:
      return getSalary_top();

    case SALARY_BOTTOM:
      return getSalary_bottom();

    case EXPERIENCE_ABOVE:
      return getExperience_above();

    case DEGREE_ABOVE:
      return getDegree_above();

    case MANAGEMENT_EXPERIENCE:
      return getManagement_experience();

    case GENDER:
      return getGender();

    case PUBLISHER:
      return getPublisher();

    case APP_CV_CONFIG_ID:
      return getApp_cv_config_id();

    case SOURCE:
      return getSource();

    case AGE:
      return getAge();

    case MAJOR_REQUIRED:
      return getMajor_required();

    case WORK_ADDRESS:
      return getWork_address();

    case KEYWORD:
      return getKeyword();

    case REPORTING_TO:
      return getReporting_to();

    case IS_HIRING:
      return getIs_hiring();

    case UNDERLINGS:
      return getUnderlings();

    case LANGUAGE_REQUIRED:
      return getLanguage_required();

    case CURRENT_STATUS:
      return getCurrent_status();

    case POSITION_CODE:
      return getPosition_code();

    case TEAM_ID:
      return getTeam_id();

    case CITY:
      return getCity();

    case EXTRA:
      return getExtra();

    case ID:
      return getId();

    case REQUIREMENT:
      return getRequirement();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case JOBNUMBER:
      return isSetJobnumber();
    case COMPANY_ID:
      return isSetCompany_id();
    case TITLE:
      return isSetTitle();
    case PROVINCE:
      return isSetProvince();
    case DEPARTMENT:
      return isSetDepartment();
    case STOP_DATE:
      return isSetStop_date();
    case ACCOUNTABILITIES:
      return isSetAccountabilities();
    case EXPERIENCE:
      return isSetExperience();
    case SALARY:
      return isSetSalary();
    case LANGUAGE:
      return isSetLanguage();
    case STATUS:
      return isSetStatus();
    case SOURCE_ID:
      return isSetSource_id();
    case BUSINESS_GROUP:
      return isSetBusiness_group();
    case EMPLOYMENT_TYPE:
      return isSetEmployment_type();
    case HR_EMAIL:
      return isSetHr_email();
    case DEGREE:
      return isSetDegree();
    case FEATURE:
      return isSetFeature();
    case EMAIL_NOTICE:
      return isSetEmail_notice();
    case CANDIDATE_SOURCE:
      return isSetCandidate_source();
    case OCCUPATION:
      return isSetOccupation();
    case INDUSTRY:
      return isSetIndustry();
    case EMAIL_RESUME_CONF:
      return isSetEmail_resume_conf();
    case DISTRICT:
      return isSetDistrict();
    case COUNT:
      return isSetCount();
    case SALARY_TOP:
      return isSetSalary_top();
    case SALARY_BOTTOM:
      return isSetSalary_bottom();
    case EXPERIENCE_ABOVE:
      return isSetExperience_above();
    case DEGREE_ABOVE:
      return isSetDegree_above();
    case MANAGEMENT_EXPERIENCE:
      return isSetManagement_experience();
    case GENDER:
      return isSetGender();
    case PUBLISHER:
      return isSetPublisher();
    case APP_CV_CONFIG_ID:
      return isSetApp_cv_config_id();
    case SOURCE:
      return isSetSource();
    case AGE:
      return isSetAge();
    case MAJOR_REQUIRED:
      return isSetMajor_required();
    case WORK_ADDRESS:
      return isSetWork_address();
    case KEYWORD:
      return isSetKeyword();
    case REPORTING_TO:
      return isSetReporting_to();
    case IS_HIRING:
      return isSetIs_hiring();
    case UNDERLINGS:
      return isSetUnderlings();
    case LANGUAGE_REQUIRED:
      return isSetLanguage_required();
    case CURRENT_STATUS:
      return isSetCurrent_status();
    case POSITION_CODE:
      return isSetPosition_code();
    case TEAM_ID:
      return isSetTeam_id();
    case CITY:
      return isSetCity();
    case EXTRA:
      return isSetExtra();
    case ID:
      return isSetId();
    case REQUIREMENT:
      return isSetRequirement();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof JobPostrionObj)
      return this.equals((JobPostrionObj)that);
    return false;
  }

  public boolean equals(JobPostrionObj that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_jobnumber = true && this.isSetJobnumber();
    boolean that_present_jobnumber = true && that.isSetJobnumber();
    if (this_present_jobnumber || that_present_jobnumber) {
      if (!(this_present_jobnumber && that_present_jobnumber))
        return false;
      if (!this.jobnumber.equals(that.jobnumber))
        return false;
    }

    boolean this_present_company_id = true;
    boolean that_present_company_id = true;
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_province = true && this.isSetProvince();
    boolean that_present_province = true && that.isSetProvince();
    if (this_present_province || that_present_province) {
      if (!(this_present_province && that_present_province))
        return false;
      if (!this.province.equals(that.province))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_stop_date = true && this.isSetStop_date();
    boolean that_present_stop_date = true && that.isSetStop_date();
    if (this_present_stop_date || that_present_stop_date) {
      if (!(this_present_stop_date && that_present_stop_date))
        return false;
      if (!this.stop_date.equals(that.stop_date))
        return false;
    }

    boolean this_present_accountabilities = true && this.isSetAccountabilities();
    boolean that_present_accountabilities = true && that.isSetAccountabilities();
    if (this_present_accountabilities || that_present_accountabilities) {
      if (!(this_present_accountabilities && that_present_accountabilities))
        return false;
      if (!this.accountabilities.equals(that.accountabilities))
        return false;
    }

    boolean this_present_experience = true && this.isSetExperience();
    boolean that_present_experience = true && that.isSetExperience();
    if (this_present_experience || that_present_experience) {
      if (!(this_present_experience && that_present_experience))
        return false;
      if (!this.experience.equals(that.experience))
        return false;
    }

    boolean this_present_salary = true && this.isSetSalary();
    boolean that_present_salary = true && that.isSetSalary();
    if (this_present_salary || that_present_salary) {
      if (!(this_present_salary && that_present_salary))
        return false;
      if (!this.salary.equals(that.salary))
        return false;
    }

    boolean this_present_language = true && this.isSetLanguage();
    boolean that_present_language = true && that.isSetLanguage();
    if (this_present_language || that_present_language) {
      if (!(this_present_language && that_present_language))
        return false;
      if (!this.language.equals(that.language))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_source_id = true;
    boolean that_present_source_id = true;
    if (this_present_source_id || that_present_source_id) {
      if (!(this_present_source_id && that_present_source_id))
        return false;
      if (this.source_id != that.source_id)
        return false;
    }

    boolean this_present_business_group = true && this.isSetBusiness_group();
    boolean that_present_business_group = true && that.isSetBusiness_group();
    if (this_present_business_group || that_present_business_group) {
      if (!(this_present_business_group && that_present_business_group))
        return false;
      if (!this.business_group.equals(that.business_group))
        return false;
    }

    boolean this_present_employment_type = true;
    boolean that_present_employment_type = true;
    if (this_present_employment_type || that_present_employment_type) {
      if (!(this_present_employment_type && that_present_employment_type))
        return false;
      if (this.employment_type != that.employment_type)
        return false;
    }

    boolean this_present_hr_email = true && this.isSetHr_email();
    boolean that_present_hr_email = true && that.isSetHr_email();
    if (this_present_hr_email || that_present_hr_email) {
      if (!(this_present_hr_email && that_present_hr_email))
        return false;
      if (!this.hr_email.equals(that.hr_email))
        return false;
    }

    boolean this_present_degree = true;
    boolean that_present_degree = true;
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (this.degree != that.degree)
        return false;
    }

    boolean this_present_feature = true && this.isSetFeature();
    boolean that_present_feature = true && that.isSetFeature();
    if (this_present_feature || that_present_feature) {
      if (!(this_present_feature && that_present_feature))
        return false;
      if (!this.feature.equals(that.feature))
        return false;
    }

    boolean this_present_email_notice = true;
    boolean that_present_email_notice = true;
    if (this_present_email_notice || that_present_email_notice) {
      if (!(this_present_email_notice && that_present_email_notice))
        return false;
      if (this.email_notice != that.email_notice)
        return false;
    }

    boolean this_present_candidate_source = true;
    boolean that_present_candidate_source = true;
    if (this_present_candidate_source || that_present_candidate_source) {
      if (!(this_present_candidate_source && that_present_candidate_source))
        return false;
      if (this.candidate_source != that.candidate_source)
        return false;
    }

    boolean this_present_occupation = true && this.isSetOccupation();
    boolean that_present_occupation = true && that.isSetOccupation();
    if (this_present_occupation || that_present_occupation) {
      if (!(this_present_occupation && that_present_occupation))
        return false;
      if (!this.occupation.equals(that.occupation))
        return false;
    }

    boolean this_present_industry = true && this.isSetIndustry();
    boolean that_present_industry = true && that.isSetIndustry();
    if (this_present_industry || that_present_industry) {
      if (!(this_present_industry && that_present_industry))
        return false;
      if (!this.industry.equals(that.industry))
        return false;
    }

    boolean this_present_email_resume_conf = true;
    boolean that_present_email_resume_conf = true;
    if (this_present_email_resume_conf || that_present_email_resume_conf) {
      if (!(this_present_email_resume_conf && that_present_email_resume_conf))
        return false;
      if (this.email_resume_conf != that.email_resume_conf)
        return false;
    }

    boolean this_present_district = true && this.isSetDistrict();
    boolean that_present_district = true && that.isSetDistrict();
    if (this_present_district || that_present_district) {
      if (!(this_present_district && that_present_district))
        return false;
      if (!this.district.equals(that.district))
        return false;
    }

    boolean this_present_count = true;
    boolean that_present_count = true;
    if (this_present_count || that_present_count) {
      if (!(this_present_count && that_present_count))
        return false;
      if (this.count != that.count)
        return false;
    }

    boolean this_present_salary_top = true;
    boolean that_present_salary_top = true;
    if (this_present_salary_top || that_present_salary_top) {
      if (!(this_present_salary_top && that_present_salary_top))
        return false;
      if (this.salary_top != that.salary_top)
        return false;
    }

    boolean this_present_salary_bottom = true;
    boolean that_present_salary_bottom = true;
    if (this_present_salary_bottom || that_present_salary_bottom) {
      if (!(this_present_salary_bottom && that_present_salary_bottom))
        return false;
      if (this.salary_bottom != that.salary_bottom)
        return false;
    }

    boolean this_present_experience_above = true;
    boolean that_present_experience_above = true;
    if (this_present_experience_above || that_present_experience_above) {
      if (!(this_present_experience_above && that_present_experience_above))
        return false;
      if (this.experience_above != that.experience_above)
        return false;
    }

    boolean this_present_degree_above = true;
    boolean that_present_degree_above = true;
    if (this_present_degree_above || that_present_degree_above) {
      if (!(this_present_degree_above && that_present_degree_above))
        return false;
      if (this.degree_above != that.degree_above)
        return false;
    }

    boolean this_present_management_experience = true;
    boolean that_present_management_experience = true;
    if (this_present_management_experience || that_present_management_experience) {
      if (!(this_present_management_experience && that_present_management_experience))
        return false;
      if (this.management_experience != that.management_experience)
        return false;
    }

    boolean this_present_gender = true;
    boolean that_present_gender = true;
    if (this_present_gender || that_present_gender) {
      if (!(this_present_gender && that_present_gender))
        return false;
      if (this.gender != that.gender)
        return false;
    }

    boolean this_present_publisher = true;
    boolean that_present_publisher = true;
    if (this_present_publisher || that_present_publisher) {
      if (!(this_present_publisher && that_present_publisher))
        return false;
      if (this.publisher != that.publisher)
        return false;
    }

    boolean this_present_app_cv_config_id = true;
    boolean that_present_app_cv_config_id = true;
    if (this_present_app_cv_config_id || that_present_app_cv_config_id) {
      if (!(this_present_app_cv_config_id && that_present_app_cv_config_id))
        return false;
      if (this.app_cv_config_id != that.app_cv_config_id)
        return false;
    }

    boolean this_present_source = true;
    boolean that_present_source = true;
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_age = true;
    boolean that_present_age = true;
    if (this_present_age || that_present_age) {
      if (!(this_present_age && that_present_age))
        return false;
      if (this.age != that.age)
        return false;
    }

    boolean this_present_major_required = true && this.isSetMajor_required();
    boolean that_present_major_required = true && that.isSetMajor_required();
    if (this_present_major_required || that_present_major_required) {
      if (!(this_present_major_required && that_present_major_required))
        return false;
      if (!this.major_required.equals(that.major_required))
        return false;
    }

    boolean this_present_work_address = true && this.isSetWork_address();
    boolean that_present_work_address = true && that.isSetWork_address();
    if (this_present_work_address || that_present_work_address) {
      if (!(this_present_work_address && that_present_work_address))
        return false;
      if (!this.work_address.equals(that.work_address))
        return false;
    }

    boolean this_present_keyword = true && this.isSetKeyword();
    boolean that_present_keyword = true && that.isSetKeyword();
    if (this_present_keyword || that_present_keyword) {
      if (!(this_present_keyword && that_present_keyword))
        return false;
      if (!this.keyword.equals(that.keyword))
        return false;
    }

    boolean this_present_reporting_to = true && this.isSetReporting_to();
    boolean that_present_reporting_to = true && that.isSetReporting_to();
    if (this_present_reporting_to || that_present_reporting_to) {
      if (!(this_present_reporting_to && that_present_reporting_to))
        return false;
      if (!this.reporting_to.equals(that.reporting_to))
        return false;
    }

    boolean this_present_is_hiring = true;
    boolean that_present_is_hiring = true;
    if (this_present_is_hiring || that_present_is_hiring) {
      if (!(this_present_is_hiring && that_present_is_hiring))
        return false;
      if (this.is_hiring != that.is_hiring)
        return false;
    }

    boolean this_present_underlings = true;
    boolean that_present_underlings = true;
    if (this_present_underlings || that_present_underlings) {
      if (!(this_present_underlings && that_present_underlings))
        return false;
      if (this.underlings != that.underlings)
        return false;
    }

    boolean this_present_language_required = true;
    boolean that_present_language_required = true;
    if (this_present_language_required || that_present_language_required) {
      if (!(this_present_language_required && that_present_language_required))
        return false;
      if (this.language_required != that.language_required)
        return false;
    }

    boolean this_present_current_status = true;
    boolean that_present_current_status = true;
    if (this_present_current_status || that_present_current_status) {
      if (!(this_present_current_status && that_present_current_status))
        return false;
      if (this.current_status != that.current_status)
        return false;
    }

    boolean this_present_position_code = true;
    boolean that_present_position_code = true;
    if (this_present_position_code || that_present_position_code) {
      if (!(this_present_position_code && that_present_position_code))
        return false;
      if (this.position_code != that.position_code)
        return false;
    }

    boolean this_present_team_id = true;
    boolean that_present_team_id = true;
    if (this_present_team_id || that_present_team_id) {
      if (!(this_present_team_id && that_present_team_id))
        return false;
      if (this.team_id != that.team_id)
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_extra = true && this.isSetExtra();
    boolean that_present_extra = true && that.isSetExtra();
    if (this_present_extra || that_present_extra) {
      if (!(this_present_extra && that_present_extra))
        return false;
      if (!this.extra.equals(that.extra))
        return false;
    }

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_requirement = true && this.isSetRequirement();
    boolean that_present_requirement = true && that.isSetRequirement();
    if (this_present_requirement || that_present_requirement) {
      if (!(this_present_requirement && that_present_requirement))
        return false;
      if (!this.requirement.equals(that.requirement))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetJobnumber()) ? 131071 : 524287);
    if (isSetJobnumber())
      hashCode = hashCode * 8191 + jobnumber.hashCode();

    hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetProvince()) ? 131071 : 524287);
    if (isSetProvince())
      hashCode = hashCode * 8191 + province.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + ((isSetStop_date()) ? 131071 : 524287);
    if (isSetStop_date())
      hashCode = hashCode * 8191 + stop_date.hashCode();

    hashCode = hashCode * 8191 + ((isSetAccountabilities()) ? 131071 : 524287);
    if (isSetAccountabilities())
      hashCode = hashCode * 8191 + accountabilities.hashCode();

    hashCode = hashCode * 8191 + ((isSetExperience()) ? 131071 : 524287);
    if (isSetExperience())
      hashCode = hashCode * 8191 + experience.hashCode();

    hashCode = hashCode * 8191 + ((isSetSalary()) ? 131071 : 524287);
    if (isSetSalary())
      hashCode = hashCode * 8191 + salary.hashCode();

    hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
    if (isSetLanguage())
      hashCode = hashCode * 8191 + language.hashCode();

    hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + source_id;

    hashCode = hashCode * 8191 + ((isSetBusiness_group()) ? 131071 : 524287);
    if (isSetBusiness_group())
      hashCode = hashCode * 8191 + business_group.hashCode();

    hashCode = hashCode * 8191 + employment_type;

    hashCode = hashCode * 8191 + ((isSetHr_email()) ? 131071 : 524287);
    if (isSetHr_email())
      hashCode = hashCode * 8191 + hr_email.hashCode();

    hashCode = hashCode * 8191 + degree;

    hashCode = hashCode * 8191 + ((isSetFeature()) ? 131071 : 524287);
    if (isSetFeature())
      hashCode = hashCode * 8191 + feature.hashCode();

    hashCode = hashCode * 8191 + email_notice;

    hashCode = hashCode * 8191 + candidate_source;

    hashCode = hashCode * 8191 + ((isSetOccupation()) ? 131071 : 524287);
    if (isSetOccupation())
      hashCode = hashCode * 8191 + occupation.hashCode();

    hashCode = hashCode * 8191 + ((isSetIndustry()) ? 131071 : 524287);
    if (isSetIndustry())
      hashCode = hashCode * 8191 + industry.hashCode();

    hashCode = hashCode * 8191 + email_resume_conf;

    hashCode = hashCode * 8191 + ((isSetDistrict()) ? 131071 : 524287);
    if (isSetDistrict())
      hashCode = hashCode * 8191 + district.hashCode();

    hashCode = hashCode * 8191 + count;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(salary_top);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(salary_bottom);

    hashCode = hashCode * 8191 + experience_above;

    hashCode = hashCode * 8191 + degree_above;

    hashCode = hashCode * 8191 + management_experience;

    hashCode = hashCode * 8191 + gender;

    hashCode = hashCode * 8191 + publisher;

    hashCode = hashCode * 8191 + app_cv_config_id;

    hashCode = hashCode * 8191 + source;

    hashCode = hashCode * 8191 + age;

    hashCode = hashCode * 8191 + ((isSetMajor_required()) ? 131071 : 524287);
    if (isSetMajor_required())
      hashCode = hashCode * 8191 + major_required.hashCode();

    hashCode = hashCode * 8191 + ((isSetWork_address()) ? 131071 : 524287);
    if (isSetWork_address())
      hashCode = hashCode * 8191 + work_address.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyword()) ? 131071 : 524287);
    if (isSetKeyword())
      hashCode = hashCode * 8191 + keyword.hashCode();

    hashCode = hashCode * 8191 + ((isSetReporting_to()) ? 131071 : 524287);
    if (isSetReporting_to())
      hashCode = hashCode * 8191 + reporting_to.hashCode();

    hashCode = hashCode * 8191 + is_hiring;

    hashCode = hashCode * 8191 + underlings;

    hashCode = hashCode * 8191 + language_required;

    hashCode = hashCode * 8191 + current_status;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(position_code);

    hashCode = hashCode * 8191 + team_id;

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtra()) ? 131071 : 524287);
    if (isSetExtra())
      hashCode = hashCode * 8191 + extra.hashCode();

    hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetRequirement()) ? 131071 : 524287);
    if (isSetRequirement())
      hashCode = hashCode * 8191 + requirement.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(JobPostrionObj other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetJobnumber()).compareTo(other.isSetJobnumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobnumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobnumber, other.jobnumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProvince()).compareTo(other.isSetProvince());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvince()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.province, other.province);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStop_date()).compareTo(other.isSetStop_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStop_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop_date, other.stop_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccountabilities()).compareTo(other.isSetAccountabilities());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountabilities()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountabilities, other.accountabilities);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary()).compareTo(other.isSetSalary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary, other.salary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource_id()).compareTo(other.isSetSource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source_id, other.source_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBusiness_group()).compareTo(other.isSetBusiness_group());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusiness_group()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.business_group, other.business_group);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployment_type()).compareTo(other.isSetEmployment_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployment_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employment_type, other.employment_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr_email()).compareTo(other.isSetHr_email());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_email()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_email, other.hr_email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeature()).compareTo(other.isSetFeature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feature, other.feature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail_notice()).compareTo(other.isSetEmail_notice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_notice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_notice, other.email_notice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCandidate_source()).compareTo(other.isSetCandidate_source());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCandidate_source()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.candidate_source, other.candidate_source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOccupation()).compareTo(other.isSetOccupation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupation, other.occupation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIndustry()).compareTo(other.isSetIndustry());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIndustry()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industry, other.industry);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail_resume_conf()).compareTo(other.isSetEmail_resume_conf());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_resume_conf()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_resume_conf, other.email_resume_conf);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDistrict()).compareTo(other.isSetDistrict());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistrict()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.district, other.district);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_top()).compareTo(other.isSetSalary_top());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_top()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_top, other.salary_top);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_bottom()).compareTo(other.isSetSalary_bottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_bottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_bottom, other.salary_bottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExperience_above()).compareTo(other.isSetExperience_above());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience_above()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience_above, other.experience_above);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree_above()).compareTo(other.isSetDegree_above());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree_above()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree_above, other.degree_above);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetManagement_experience()).compareTo(other.isSetManagement_experience());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetManagement_experience()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.management_experience, other.management_experience);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGender()).compareTo(other.isSetGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gender, other.gender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublisher()).compareTo(other.isSetPublisher());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisher()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisher, other.publisher);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApp_cv_config_id()).compareTo(other.isSetApp_cv_config_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_cv_config_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_cv_config_id, other.app_cv_config_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAge()).compareTo(other.isSetAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age, other.age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMajor_required()).compareTo(other.isSetMajor_required());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMajor_required()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major_required, other.major_required);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWork_address()).compareTo(other.isSetWork_address());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_address()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_address, other.work_address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyword()).compareTo(other.isSetKeyword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyword, other.keyword);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReporting_to()).compareTo(other.isSetReporting_to());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReporting_to()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reporting_to, other.reporting_to);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_hiring()).compareTo(other.isSetIs_hiring());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_hiring()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_hiring, other.is_hiring);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUnderlings()).compareTo(other.isSetUnderlings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnderlings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.underlings, other.underlings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLanguage_required()).compareTo(other.isSetLanguage_required());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguage_required()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language_required, other.language_required);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrent_status()).compareTo(other.isSetCurrent_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrent_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.current_status, other.current_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_code()).compareTo(other.isSetPosition_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_code, other.position_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTeam_id()).compareTo(other.isSetTeam_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeam_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.team_id, other.team_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExtra()).compareTo(other.isSetExtra());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtra()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extra, other.extra);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRequirement()).compareTo(other.isSetRequirement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequirement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requirement, other.requirement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("JobPostrionObj(");
    boolean first = true;

    sb.append("jobnumber:");
    if (this.jobnumber == null) {
      sb.append("null");
    } else {
      sb.append(this.jobnumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("company_id:");
    sb.append(this.company_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("province:");
    if (this.province == null) {
      sb.append("null");
    } else {
      sb.append(this.province);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("department:");
    if (this.department == null) {
      sb.append("null");
    } else {
      sb.append(this.department);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stop_date:");
    if (this.stop_date == null) {
      sb.append("null");
    } else {
      sb.append(this.stop_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountabilities:");
    if (this.accountabilities == null) {
      sb.append("null");
    } else {
      sb.append(this.accountabilities);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience:");
    if (this.experience == null) {
      sb.append("null");
    } else {
      sb.append(this.experience);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary:");
    if (this.salary == null) {
      sb.append("null");
    } else {
      sb.append(this.salary);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("language:");
    if (this.language == null) {
      sb.append("null");
    } else {
      sb.append(this.language);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("source_id:");
    sb.append(this.source_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("business_group:");
    if (this.business_group == null) {
      sb.append("null");
    } else {
      sb.append(this.business_group);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("employment_type:");
    sb.append(this.employment_type);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hr_email:");
    if (this.hr_email == null) {
      sb.append("null");
    } else {
      sb.append(this.hr_email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    sb.append(this.degree);
    first = false;
    if (!first) sb.append(", ");
    sb.append("feature:");
    if (this.feature == null) {
      sb.append("null");
    } else {
      sb.append(this.feature);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email_notice:");
    sb.append(this.email_notice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("candidate_source:");
    sb.append(this.candidate_source);
    first = false;
    if (!first) sb.append(", ");
    sb.append("occupation:");
    if (this.occupation == null) {
      sb.append("null");
    } else {
      sb.append(this.occupation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("industry:");
    if (this.industry == null) {
      sb.append("null");
    } else {
      sb.append(this.industry);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email_resume_conf:");
    sb.append(this.email_resume_conf);
    first = false;
    if (!first) sb.append(", ");
    sb.append("district:");
    if (this.district == null) {
      sb.append("null");
    } else {
      sb.append(this.district);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("count:");
    sb.append(this.count);
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_top:");
    sb.append(this.salary_top);
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_bottom:");
    sb.append(this.salary_bottom);
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience_above:");
    sb.append(this.experience_above);
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree_above:");
    sb.append(this.degree_above);
    first = false;
    if (!first) sb.append(", ");
    sb.append("management_experience:");
    sb.append(this.management_experience);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gender:");
    sb.append(this.gender);
    first = false;
    if (!first) sb.append(", ");
    sb.append("publisher:");
    sb.append(this.publisher);
    first = false;
    if (!first) sb.append(", ");
    sb.append("app_cv_config_id:");
    sb.append(this.app_cv_config_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("source:");
    sb.append(this.source);
    first = false;
    if (!first) sb.append(", ");
    sb.append("age:");
    sb.append(this.age);
    first = false;
    if (!first) sb.append(", ");
    sb.append("major_required:");
    if (this.major_required == null) {
      sb.append("null");
    } else {
      sb.append(this.major_required);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("work_address:");
    if (this.work_address == null) {
      sb.append("null");
    } else {
      sb.append(this.work_address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("keyword:");
    if (this.keyword == null) {
      sb.append("null");
    } else {
      sb.append(this.keyword);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reporting_to:");
    if (this.reporting_to == null) {
      sb.append("null");
    } else {
      sb.append(this.reporting_to);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_hiring:");
    sb.append(this.is_hiring);
    first = false;
    if (!first) sb.append(", ");
    sb.append("underlings:");
    sb.append(this.underlings);
    first = false;
    if (!first) sb.append(", ");
    sb.append("language_required:");
    sb.append(this.language_required);
    first = false;
    if (!first) sb.append(", ");
    sb.append("current_status:");
    sb.append(this.current_status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("position_code:");
    sb.append(this.position_code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("team_id:");
    sb.append(this.team_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("city:");
    if (this.city == null) {
      sb.append("null");
    } else {
      sb.append(this.city);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extra:");
    if (this.extra == null) {
      sb.append("null");
    } else {
      sb.append(this.extra);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("requirement:");
    if (this.requirement == null) {
      sb.append("null");
    } else {
      sb.append(this.requirement);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobPostrionObjStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobPostrionObjStandardScheme getScheme() {
      return new JobPostrionObjStandardScheme();
    }
  }

  private static class JobPostrionObjStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobPostrionObj> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobPostrionObj struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOBNUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobnumber = iprot.readString();
              struct.setJobnumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROVINCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.province = iprot.readString();
              struct.setProvinceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STOP_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stop_date = iprot.readString();
              struct.setStop_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ACCOUNTABILITIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountabilities = iprot.readString();
              struct.setAccountabilitiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // EXPERIENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience = iprot.readString();
              struct.setExperienceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SALARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salary = iprot.readString();
              struct.setSalaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LANGUAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.language = iprot.readString();
              struct.setLanguageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source_id = iprot.readI32();
              struct.setSource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BUSINESS_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.business_group = iprot.readString();
              struct.setBusiness_groupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // EMPLOYMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employment_type = iprot.readI32();
              struct.setEmployment_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // HR_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hr_email = iprot.readString();
              struct.setHr_emailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.degree = iprot.readI32();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // FEATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.feature = iprot.readString();
              struct.setFeatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // EMAIL_NOTICE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.email_notice = iprot.readI32();
              struct.setEmail_noticeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CANDIDATE_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.candidate_source = iprot.readI32();
              struct.setCandidate_sourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // OCCUPATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.occupation = iprot.readString();
              struct.setOccupationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // INDUSTRY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.industry = iprot.readString();
              struct.setIndustryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // EMAIL_RESUME_CONF
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.email_resume_conf = iprot.readI32();
              struct.setEmail_resume_confIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DISTRICT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.district = iprot.readString();
              struct.setDistrictIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.count = iprot.readI32();
              struct.setCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // SALARY_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salary_top = iprot.readDouble();
              struct.setSalary_topIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // SALARY_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salary_bottom = iprot.readDouble();
              struct.setSalary_bottomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // EXPERIENCE_ABOVE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.experience_above = iprot.readI32();
              struct.setExperience_aboveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // DEGREE_ABOVE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.degree_above = iprot.readI32();
              struct.setDegree_aboveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // MANAGEMENT_EXPERIENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.management_experience = iprot.readI32();
              struct.setManagement_experienceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.gender = iprot.readI32();
              struct.setGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // PUBLISHER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.publisher = iprot.readI32();
              struct.setPublisherIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // APP_CV_CONFIG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.app_cv_config_id = iprot.readI32();
              struct.setApp_cv_config_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source = iprot.readI32();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.age = iprot.readI32();
              struct.setAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // MAJOR_REQUIRED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.major_required = iprot.readString();
              struct.setMajor_requiredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // WORK_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.work_address = iprot.readString();
              struct.setWork_addressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // KEYWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.keyword = iprot.readString();
              struct.setKeywordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // REPORTING_TO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reporting_to = iprot.readString();
              struct.setReporting_toIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // IS_HIRING
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_hiring = iprot.readI32();
              struct.setIs_hiringIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // UNDERLINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.underlings = iprot.readI32();
              struct.setUnderlingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // LANGUAGE_REQUIRED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.language_required = iprot.readI32();
              struct.setLanguage_requiredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // CURRENT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.current_status = iprot.readI32();
              struct.setCurrent_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // POSITION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.position_code = iprot.readI64();
              struct.setPosition_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // TEAM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.team_id = iprot.readI32();
              struct.setTeam_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list18 = iprot.readListBegin();
                struct.city = new java.util.ArrayList<City>(_list18.size);
                City _elem19;
                for (int _i20 = 0; _i20 < _list18.size; ++_i20)
                {
                  _elem19 = new City();
                  _elem19.read(iprot);
                  struct.city.add(_elem19);
                }
                iprot.readListEnd();
              }
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // EXTRA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extra = iprot.readString();
              struct.setExtraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // REQUIREMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requirement = iprot.readString();
              struct.setRequirementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobPostrionObj struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.jobnumber != null) {
        oprot.writeFieldBegin(JOBNUMBER_FIELD_DESC);
        oprot.writeString(struct.jobnumber);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
      oprot.writeI32(struct.company_id);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.province != null) {
        oprot.writeFieldBegin(PROVINCE_FIELD_DESC);
        oprot.writeString(struct.province);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
        oprot.writeString(struct.department);
        oprot.writeFieldEnd();
      }
      if (struct.stop_date != null) {
        oprot.writeFieldBegin(STOP_DATE_FIELD_DESC);
        oprot.writeString(struct.stop_date);
        oprot.writeFieldEnd();
      }
      if (struct.accountabilities != null) {
        oprot.writeFieldBegin(ACCOUNTABILITIES_FIELD_DESC);
        oprot.writeString(struct.accountabilities);
        oprot.writeFieldEnd();
      }
      if (struct.experience != null) {
        oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
        oprot.writeString(struct.experience);
        oprot.writeFieldEnd();
      }
      if (struct.salary != null) {
        oprot.writeFieldBegin(SALARY_FIELD_DESC);
        oprot.writeString(struct.salary);
        oprot.writeFieldEnd();
      }
      if (struct.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(struct.language);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeByte(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
      oprot.writeI32(struct.source_id);
      oprot.writeFieldEnd();
      if (struct.business_group != null) {
        oprot.writeFieldBegin(BUSINESS_GROUP_FIELD_DESC);
        oprot.writeString(struct.business_group);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EMPLOYMENT_TYPE_FIELD_DESC);
      oprot.writeI32(struct.employment_type);
      oprot.writeFieldEnd();
      if (struct.hr_email != null) {
        oprot.writeFieldBegin(HR_EMAIL_FIELD_DESC);
        oprot.writeString(struct.hr_email);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DEGREE_FIELD_DESC);
      oprot.writeI32(struct.degree);
      oprot.writeFieldEnd();
      if (struct.feature != null) {
        oprot.writeFieldBegin(FEATURE_FIELD_DESC);
        oprot.writeString(struct.feature);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EMAIL_NOTICE_FIELD_DESC);
      oprot.writeI32(struct.email_notice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CANDIDATE_SOURCE_FIELD_DESC);
      oprot.writeI32(struct.candidate_source);
      oprot.writeFieldEnd();
      if (struct.occupation != null) {
        oprot.writeFieldBegin(OCCUPATION_FIELD_DESC);
        oprot.writeString(struct.occupation);
        oprot.writeFieldEnd();
      }
      if (struct.industry != null) {
        oprot.writeFieldBegin(INDUSTRY_FIELD_DESC);
        oprot.writeString(struct.industry);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EMAIL_RESUME_CONF_FIELD_DESC);
      oprot.writeI32(struct.email_resume_conf);
      oprot.writeFieldEnd();
      if (struct.district != null) {
        oprot.writeFieldBegin(DISTRICT_FIELD_DESC);
        oprot.writeString(struct.district);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COUNT_FIELD_DESC);
      oprot.writeI32(struct.count);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALARY_TOP_FIELD_DESC);
      oprot.writeDouble(struct.salary_top);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALARY_BOTTOM_FIELD_DESC);
      oprot.writeDouble(struct.salary_bottom);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPERIENCE_ABOVE_FIELD_DESC);
      oprot.writeI32(struct.experience_above);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DEGREE_ABOVE_FIELD_DESC);
      oprot.writeI32(struct.degree_above);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MANAGEMENT_EXPERIENCE_FIELD_DESC);
      oprot.writeI32(struct.management_experience);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GENDER_FIELD_DESC);
      oprot.writeI32(struct.gender);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PUBLISHER_FIELD_DESC);
      oprot.writeI32(struct.publisher);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(APP_CV_CONFIG_ID_FIELD_DESC);
      oprot.writeI32(struct.app_cv_config_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SOURCE_FIELD_DESC);
      oprot.writeI32(struct.source);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AGE_FIELD_DESC);
      oprot.writeI32(struct.age);
      oprot.writeFieldEnd();
      if (struct.major_required != null) {
        oprot.writeFieldBegin(MAJOR_REQUIRED_FIELD_DESC);
        oprot.writeString(struct.major_required);
        oprot.writeFieldEnd();
      }
      if (struct.work_address != null) {
        oprot.writeFieldBegin(WORK_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.work_address);
        oprot.writeFieldEnd();
      }
      if (struct.keyword != null) {
        oprot.writeFieldBegin(KEYWORD_FIELD_DESC);
        oprot.writeString(struct.keyword);
        oprot.writeFieldEnd();
      }
      if (struct.reporting_to != null) {
        oprot.writeFieldBegin(REPORTING_TO_FIELD_DESC);
        oprot.writeString(struct.reporting_to);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_HIRING_FIELD_DESC);
      oprot.writeI32(struct.is_hiring);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UNDERLINGS_FIELD_DESC);
      oprot.writeI32(struct.underlings);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LANGUAGE_REQUIRED_FIELD_DESC);
      oprot.writeI32(struct.language_required);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CURRENT_STATUS_FIELD_DESC);
      oprot.writeI32(struct.current_status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(POSITION_CODE_FIELD_DESC);
      oprot.writeI64(struct.position_code);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TEAM_ID_FIELD_DESC);
      oprot.writeI32(struct.team_id);
      oprot.writeFieldEnd();
      if (struct.city != null) {
        oprot.writeFieldBegin(CITY_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.city.size()));
          for (City _iter21 : struct.city)
          {
            _iter21.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.extra != null) {
        oprot.writeFieldBegin(EXTRA_FIELD_DESC);
        oprot.writeString(struct.extra);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.requirement != null) {
        oprot.writeFieldBegin(REQUIREMENT_FIELD_DESC);
        oprot.writeString(struct.requirement);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobPostrionObjTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobPostrionObjTupleScheme getScheme() {
      return new JobPostrionObjTupleScheme();
    }
  }

  private static class JobPostrionObjTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobPostrionObj> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobPostrionObj struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetJobnumber()) {
        optionals.set(0);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetProvince()) {
        optionals.set(3);
      }
      if (struct.isSetDepartment()) {
        optionals.set(4);
      }
      if (struct.isSetStop_date()) {
        optionals.set(5);
      }
      if (struct.isSetAccountabilities()) {
        optionals.set(6);
      }
      if (struct.isSetExperience()) {
        optionals.set(7);
      }
      if (struct.isSetSalary()) {
        optionals.set(8);
      }
      if (struct.isSetLanguage()) {
        optionals.set(9);
      }
      if (struct.isSetStatus()) {
        optionals.set(10);
      }
      if (struct.isSetSource_id()) {
        optionals.set(11);
      }
      if (struct.isSetBusiness_group()) {
        optionals.set(12);
      }
      if (struct.isSetEmployment_type()) {
        optionals.set(13);
      }
      if (struct.isSetHr_email()) {
        optionals.set(14);
      }
      if (struct.isSetDegree()) {
        optionals.set(15);
      }
      if (struct.isSetFeature()) {
        optionals.set(16);
      }
      if (struct.isSetEmail_notice()) {
        optionals.set(17);
      }
      if (struct.isSetCandidate_source()) {
        optionals.set(18);
      }
      if (struct.isSetOccupation()) {
        optionals.set(19);
      }
      if (struct.isSetIndustry()) {
        optionals.set(20);
      }
      if (struct.isSetEmail_resume_conf()) {
        optionals.set(21);
      }
      if (struct.isSetDistrict()) {
        optionals.set(22);
      }
      if (struct.isSetCount()) {
        optionals.set(23);
      }
      if (struct.isSetSalary_top()) {
        optionals.set(24);
      }
      if (struct.isSetSalary_bottom()) {
        optionals.set(25);
      }
      if (struct.isSetExperience_above()) {
        optionals.set(26);
      }
      if (struct.isSetDegree_above()) {
        optionals.set(27);
      }
      if (struct.isSetManagement_experience()) {
        optionals.set(28);
      }
      if (struct.isSetGender()) {
        optionals.set(29);
      }
      if (struct.isSetPublisher()) {
        optionals.set(30);
      }
      if (struct.isSetApp_cv_config_id()) {
        optionals.set(31);
      }
      if (struct.isSetSource()) {
        optionals.set(32);
      }
      if (struct.isSetAge()) {
        optionals.set(33);
      }
      if (struct.isSetMajor_required()) {
        optionals.set(34);
      }
      if (struct.isSetWork_address()) {
        optionals.set(35);
      }
      if (struct.isSetKeyword()) {
        optionals.set(36);
      }
      if (struct.isSetReporting_to()) {
        optionals.set(37);
      }
      if (struct.isSetIs_hiring()) {
        optionals.set(38);
      }
      if (struct.isSetUnderlings()) {
        optionals.set(39);
      }
      if (struct.isSetLanguage_required()) {
        optionals.set(40);
      }
      if (struct.isSetCurrent_status()) {
        optionals.set(41);
      }
      if (struct.isSetPosition_code()) {
        optionals.set(42);
      }
      if (struct.isSetTeam_id()) {
        optionals.set(43);
      }
      if (struct.isSetCity()) {
        optionals.set(44);
      }
      if (struct.isSetExtra()) {
        optionals.set(45);
      }
      if (struct.isSetId()) {
        optionals.set(46);
      }
      if (struct.isSetRequirement()) {
        optionals.set(47);
      }
      oprot.writeBitSet(optionals, 48);
      if (struct.isSetJobnumber()) {
        oprot.writeString(struct.jobnumber);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetProvince()) {
        oprot.writeString(struct.province);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetStop_date()) {
        oprot.writeString(struct.stop_date);
      }
      if (struct.isSetAccountabilities()) {
        oprot.writeString(struct.accountabilities);
      }
      if (struct.isSetExperience()) {
        oprot.writeString(struct.experience);
      }
      if (struct.isSetSalary()) {
        oprot.writeString(struct.salary);
      }
      if (struct.isSetLanguage()) {
        oprot.writeString(struct.language);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetSource_id()) {
        oprot.writeI32(struct.source_id);
      }
      if (struct.isSetBusiness_group()) {
        oprot.writeString(struct.business_group);
      }
      if (struct.isSetEmployment_type()) {
        oprot.writeI32(struct.employment_type);
      }
      if (struct.isSetHr_email()) {
        oprot.writeString(struct.hr_email);
      }
      if (struct.isSetDegree()) {
        oprot.writeI32(struct.degree);
      }
      if (struct.isSetFeature()) {
        oprot.writeString(struct.feature);
      }
      if (struct.isSetEmail_notice()) {
        oprot.writeI32(struct.email_notice);
      }
      if (struct.isSetCandidate_source()) {
        oprot.writeI32(struct.candidate_source);
      }
      if (struct.isSetOccupation()) {
        oprot.writeString(struct.occupation);
      }
      if (struct.isSetIndustry()) {
        oprot.writeString(struct.industry);
      }
      if (struct.isSetEmail_resume_conf()) {
        oprot.writeI32(struct.email_resume_conf);
      }
      if (struct.isSetDistrict()) {
        oprot.writeString(struct.district);
      }
      if (struct.isSetCount()) {
        oprot.writeI32(struct.count);
      }
      if (struct.isSetSalary_top()) {
        oprot.writeDouble(struct.salary_top);
      }
      if (struct.isSetSalary_bottom()) {
        oprot.writeDouble(struct.salary_bottom);
      }
      if (struct.isSetExperience_above()) {
        oprot.writeI32(struct.experience_above);
      }
      if (struct.isSetDegree_above()) {
        oprot.writeI32(struct.degree_above);
      }
      if (struct.isSetManagement_experience()) {
        oprot.writeI32(struct.management_experience);
      }
      if (struct.isSetGender()) {
        oprot.writeI32(struct.gender);
      }
      if (struct.isSetPublisher()) {
        oprot.writeI32(struct.publisher);
      }
      if (struct.isSetApp_cv_config_id()) {
        oprot.writeI32(struct.app_cv_config_id);
      }
      if (struct.isSetSource()) {
        oprot.writeI32(struct.source);
      }
      if (struct.isSetAge()) {
        oprot.writeI32(struct.age);
      }
      if (struct.isSetMajor_required()) {
        oprot.writeString(struct.major_required);
      }
      if (struct.isSetWork_address()) {
        oprot.writeString(struct.work_address);
      }
      if (struct.isSetKeyword()) {
        oprot.writeString(struct.keyword);
      }
      if (struct.isSetReporting_to()) {
        oprot.writeString(struct.reporting_to);
      }
      if (struct.isSetIs_hiring()) {
        oprot.writeI32(struct.is_hiring);
      }
      if (struct.isSetUnderlings()) {
        oprot.writeI32(struct.underlings);
      }
      if (struct.isSetLanguage_required()) {
        oprot.writeI32(struct.language_required);
      }
      if (struct.isSetCurrent_status()) {
        oprot.writeI32(struct.current_status);
      }
      if (struct.isSetPosition_code()) {
        oprot.writeI64(struct.position_code);
      }
      if (struct.isSetTeam_id()) {
        oprot.writeI32(struct.team_id);
      }
      if (struct.isSetCity()) {
        {
          oprot.writeI32(struct.city.size());
          for (City _iter22 : struct.city)
          {
            _iter22.write(oprot);
          }
        }
      }
      if (struct.isSetExtra()) {
        oprot.writeString(struct.extra);
      }
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetRequirement()) {
        oprot.writeString(struct.requirement);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobPostrionObj struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(48);
      if (incoming.get(0)) {
        struct.jobnumber = iprot.readString();
        struct.setJobnumberIsSet(true);
      }
      if (incoming.get(1)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.province = iprot.readString();
        struct.setProvinceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(5)) {
        struct.stop_date = iprot.readString();
        struct.setStop_dateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.accountabilities = iprot.readString();
        struct.setAccountabilitiesIsSet(true);
      }
      if (incoming.get(7)) {
        struct.experience = iprot.readString();
        struct.setExperienceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.salary = iprot.readString();
        struct.setSalaryIsSet(true);
      }
      if (incoming.get(9)) {
        struct.language = iprot.readString();
        struct.setLanguageIsSet(true);
      }
      if (incoming.get(10)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.source_id = iprot.readI32();
        struct.setSource_idIsSet(true);
      }
      if (incoming.get(12)) {
        struct.business_group = iprot.readString();
        struct.setBusiness_groupIsSet(true);
      }
      if (incoming.get(13)) {
        struct.employment_type = iprot.readI32();
        struct.setEmployment_typeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.hr_email = iprot.readString();
        struct.setHr_emailIsSet(true);
      }
      if (incoming.get(15)) {
        struct.degree = iprot.readI32();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.feature = iprot.readString();
        struct.setFeatureIsSet(true);
      }
      if (incoming.get(17)) {
        struct.email_notice = iprot.readI32();
        struct.setEmail_noticeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.candidate_source = iprot.readI32();
        struct.setCandidate_sourceIsSet(true);
      }
      if (incoming.get(19)) {
        struct.occupation = iprot.readString();
        struct.setOccupationIsSet(true);
      }
      if (incoming.get(20)) {
        struct.industry = iprot.readString();
        struct.setIndustryIsSet(true);
      }
      if (incoming.get(21)) {
        struct.email_resume_conf = iprot.readI32();
        struct.setEmail_resume_confIsSet(true);
      }
      if (incoming.get(22)) {
        struct.district = iprot.readString();
        struct.setDistrictIsSet(true);
      }
      if (incoming.get(23)) {
        struct.count = iprot.readI32();
        struct.setCountIsSet(true);
      }
      if (incoming.get(24)) {
        struct.salary_top = iprot.readDouble();
        struct.setSalary_topIsSet(true);
      }
      if (incoming.get(25)) {
        struct.salary_bottom = iprot.readDouble();
        struct.setSalary_bottomIsSet(true);
      }
      if (incoming.get(26)) {
        struct.experience_above = iprot.readI32();
        struct.setExperience_aboveIsSet(true);
      }
      if (incoming.get(27)) {
        struct.degree_above = iprot.readI32();
        struct.setDegree_aboveIsSet(true);
      }
      if (incoming.get(28)) {
        struct.management_experience = iprot.readI32();
        struct.setManagement_experienceIsSet(true);
      }
      if (incoming.get(29)) {
        struct.gender = iprot.readI32();
        struct.setGenderIsSet(true);
      }
      if (incoming.get(30)) {
        struct.publisher = iprot.readI32();
        struct.setPublisherIsSet(true);
      }
      if (incoming.get(31)) {
        struct.app_cv_config_id = iprot.readI32();
        struct.setApp_cv_config_idIsSet(true);
      }
      if (incoming.get(32)) {
        struct.source = iprot.readI32();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(33)) {
        struct.age = iprot.readI32();
        struct.setAgeIsSet(true);
      }
      if (incoming.get(34)) {
        struct.major_required = iprot.readString();
        struct.setMajor_requiredIsSet(true);
      }
      if (incoming.get(35)) {
        struct.work_address = iprot.readString();
        struct.setWork_addressIsSet(true);
      }
      if (incoming.get(36)) {
        struct.keyword = iprot.readString();
        struct.setKeywordIsSet(true);
      }
      if (incoming.get(37)) {
        struct.reporting_to = iprot.readString();
        struct.setReporting_toIsSet(true);
      }
      if (incoming.get(38)) {
        struct.is_hiring = iprot.readI32();
        struct.setIs_hiringIsSet(true);
      }
      if (incoming.get(39)) {
        struct.underlings = iprot.readI32();
        struct.setUnderlingsIsSet(true);
      }
      if (incoming.get(40)) {
        struct.language_required = iprot.readI32();
        struct.setLanguage_requiredIsSet(true);
      }
      if (incoming.get(41)) {
        struct.current_status = iprot.readI32();
        struct.setCurrent_statusIsSet(true);
      }
      if (incoming.get(42)) {
        struct.position_code = iprot.readI64();
        struct.setPosition_codeIsSet(true);
      }
      if (incoming.get(43)) {
        struct.team_id = iprot.readI32();
        struct.setTeam_idIsSet(true);
      }
      if (incoming.get(44)) {
        {
          org.apache.thrift.protocol.TList _list23 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.city = new java.util.ArrayList<City>(_list23.size);
          City _elem24;
          for (int _i25 = 0; _i25 < _list23.size; ++_i25)
          {
            _elem24 = new City();
            _elem24.read(iprot);
            struct.city.add(_elem24);
          }
        }
        struct.setCityIsSet(true);
      }
      if (incoming.get(45)) {
        struct.extra = iprot.readString();
        struct.setExtraIsSet(true);
      }
      if (incoming.get(46)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(47)) {
        struct.requirement = iprot.readString();
        struct.setRequirementIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

