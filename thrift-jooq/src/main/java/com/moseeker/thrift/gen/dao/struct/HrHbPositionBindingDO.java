/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-04")
public class HrHbPositionBindingDO implements org.apache.thrift.TBase<HrHbPositionBindingDO, HrHbPositionBindingDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrHbPositionBindingDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrHbPositionBindingDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField HB_CONFIG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hb_config_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField TRIGGER_WAY_FIELD_DESC = new org.apache.thrift.protocol.TField("trigger_way", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField TOTAL_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("total_amount", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField TOTAL_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("total_num", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrHbPositionBindingPojoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrHbPositionBindingPojoTupleSchemeFactory();

  public int id; // optional
  public int hb_config_id; // optional
  public int position_id; // optional
  public int trigger_way; // optional
  public double total_amount; // optional
  public int total_num; // optional
  public java.lang.String create_time; // optional
  public java.lang.String update_time; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    HB_CONFIG_ID((short)2, "hb_config_id"),
    POSITION_ID((short)3, "position_id"),
    TRIGGER_WAY((short)4, "trigger_way"),
    TOTAL_AMOUNT((short)5, "total_amount"),
    TOTAL_NUM((short)6, "total_num"),
    CREATE_TIME((short)7, "create_time"),
    UPDATE_TIME((short)8, "update_time");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // HB_CONFIG_ID
          return HB_CONFIG_ID;
        case 3: // POSITION_ID
          return POSITION_ID;
        case 4: // TRIGGER_WAY
          return TRIGGER_WAY;
        case 5: // TOTAL_AMOUNT
          return TOTAL_AMOUNT;
        case 6: // TOTAL_NUM
          return TOTAL_NUM;
        case 7: // CREATE_TIME
          return CREATE_TIME;
        case 8: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __HB_CONFIG_ID_ISSET_ID = 1;
  private static final int __POSITION_ID_ISSET_ID = 2;
  private static final int __TRIGGER_WAY_ISSET_ID = 3;
  private static final int __TOTAL_AMOUNT_ISSET_ID = 4;
  private static final int __TOTAL_NUM_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.HB_CONFIG_ID,_Fields.POSITION_ID,_Fields.TRIGGER_WAY,_Fields.TOTAL_AMOUNT,_Fields.TOTAL_NUM,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HB_CONFIG_ID, new org.apache.thrift.meta_data.FieldMetaData("hb_config_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TRIGGER_WAY, new org.apache.thrift.meta_data.FieldMetaData("trigger_way", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TOTAL_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("total_amount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_NUM, new org.apache.thrift.meta_data.FieldMetaData("total_num", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrHbPositionBindingDO.class, metaDataMap);
  }

  public HrHbPositionBindingDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrHbPositionBindingDO(HrHbPositionBindingDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.hb_config_id = other.hb_config_id;
    this.position_id = other.position_id;
    this.trigger_way = other.trigger_way;
    this.total_amount = other.total_amount;
    this.total_num = other.total_num;
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
  }

  public HrHbPositionBindingDO deepCopy() {
    return new HrHbPositionBindingDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setHb_config_idIsSet(false);
    this.hb_config_id = 0;
    setPosition_idIsSet(false);
    this.position_id = 0;
    setTrigger_wayIsSet(false);
    this.trigger_way = 0;
    setTotal_amountIsSet(false);
    this.total_amount = 0.0;
    setTotal_numIsSet(false);
    this.total_num = 0;
    this.create_time = null;
    this.update_time = null;
  }

  public int getId() {
    return this.id;
  }

  public HrHbPositionBindingDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getHb_config_id() {
    return this.hb_config_id;
  }

  public HrHbPositionBindingDO setHb_config_id(int hb_config_id) {
    this.hb_config_id = hb_config_id;
    setHb_config_idIsSet(true);
    return this;
  }

  public void unsetHb_config_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HB_CONFIG_ID_ISSET_ID);
  }

  /** Returns true if field hb_config_id is set (has been assigned a value) and false otherwise */
  public boolean isSetHb_config_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HB_CONFIG_ID_ISSET_ID);
  }

  public void setHb_config_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HB_CONFIG_ID_ISSET_ID, value);
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public HrHbPositionBindingDO setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public int getTrigger_way() {
    return this.trigger_way;
  }

  public HrHbPositionBindingDO setTrigger_way(int trigger_way) {
    this.trigger_way = trigger_way;
    setTrigger_wayIsSet(true);
    return this;
  }

  public void unsetTrigger_way() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIGGER_WAY_ISSET_ID);
  }

  /** Returns true if field trigger_way is set (has been assigned a value) and false otherwise */
  public boolean isSetTrigger_way() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIGGER_WAY_ISSET_ID);
  }

  public void setTrigger_wayIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIGGER_WAY_ISSET_ID, value);
  }

  public double getTotal_amount() {
    return this.total_amount;
  }

  public HrHbPositionBindingDO setTotal_amount(double total_amount) {
    this.total_amount = total_amount;
    setTotal_amountIsSet(true);
    return this;
  }

  public void unsetTotal_amount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTAL_AMOUNT_ISSET_ID);
  }

  /** Returns true if field total_amount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotal_amount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTAL_AMOUNT_ISSET_ID);
  }

  public void setTotal_amountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTAL_AMOUNT_ISSET_ID, value);
  }

  public int getTotal_num() {
    return this.total_num;
  }

  public HrHbPositionBindingDO setTotal_num(int total_num) {
    this.total_num = total_num;
    setTotal_numIsSet(true);
    return this;
  }

  public void unsetTotal_num() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTAL_NUM_ISSET_ID);
  }

  /** Returns true if field total_num is set (has been assigned a value) and false otherwise */
  public boolean isSetTotal_num() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTAL_NUM_ISSET_ID);
  }

  public void setTotal_numIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTAL_NUM_ISSET_ID, value);
  }

  public java.lang.String getCreate_time() {
    return this.create_time;
  }

  public HrHbPositionBindingDO setCreate_time(java.lang.String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public java.lang.String getUpdate_time() {
    return this.update_time;
  }

  public HrHbPositionBindingDO setUpdate_time(java.lang.String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case HB_CONFIG_ID:
      if (value == null) {
        unsetHb_config_id();
      } else {
        setHb_config_id((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((java.lang.Integer)value);
      }
      break;

    case TRIGGER_WAY:
      if (value == null) {
        unsetTrigger_way();
      } else {
        setTrigger_way((java.lang.Integer)value);
      }
      break;

    case TOTAL_AMOUNT:
      if (value == null) {
        unsetTotal_amount();
      } else {
        setTotal_amount((java.lang.Double)value);
      }
      break;

    case TOTAL_NUM:
      if (value == null) {
        unsetTotal_num();
      } else {
        setTotal_num((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case HB_CONFIG_ID:
      return getHb_config_id();

    case POSITION_ID:
      return getPosition_id();

    case TRIGGER_WAY:
      return getTrigger_way();

    case TOTAL_AMOUNT:
      return getTotal_amount();

    case TOTAL_NUM:
      return getTotal_num();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case HB_CONFIG_ID:
      return isSetHb_config_id();
    case POSITION_ID:
      return isSetPosition_id();
    case TRIGGER_WAY:
      return isSetTrigger_way();
    case TOTAL_AMOUNT:
      return isSetTotal_amount();
    case TOTAL_NUM:
      return isSetTotal_num();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrHbPositionBindingDO)
      return this.equals((HrHbPositionBindingDO)that);
    return false;
  }

  public boolean equals(HrHbPositionBindingDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_hb_config_id = true && this.isSetHb_config_id();
    boolean that_present_hb_config_id = true && that.isSetHb_config_id();
    if (this_present_hb_config_id || that_present_hb_config_id) {
      if (!(this_present_hb_config_id && that_present_hb_config_id))
        return false;
      if (this.hb_config_id != that.hb_config_id)
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_trigger_way = true && this.isSetTrigger_way();
    boolean that_present_trigger_way = true && that.isSetTrigger_way();
    if (this_present_trigger_way || that_present_trigger_way) {
      if (!(this_present_trigger_way && that_present_trigger_way))
        return false;
      if (this.trigger_way != that.trigger_way)
        return false;
    }

    boolean this_present_total_amount = true && this.isSetTotal_amount();
    boolean that_present_total_amount = true && that.isSetTotal_amount();
    if (this_present_total_amount || that_present_total_amount) {
      if (!(this_present_total_amount && that_present_total_amount))
        return false;
      if (this.total_amount != that.total_amount)
        return false;
    }

    boolean this_present_total_num = true && this.isSetTotal_num();
    boolean that_present_total_num = true && that.isSetTotal_num();
    if (this_present_total_num || that_present_total_num) {
      if (!(this_present_total_num && that_present_total_num))
        return false;
      if (this.total_num != that.total_num)
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetHb_config_id()) ? 131071 : 524287);
    if (isSetHb_config_id())
      hashCode = hashCode * 8191 + hb_config_id;

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + position_id;

    hashCode = hashCode * 8191 + ((isSetTrigger_way()) ? 131071 : 524287);
    if (isSetTrigger_way())
      hashCode = hashCode * 8191 + trigger_way;

    hashCode = hashCode * 8191 + ((isSetTotal_amount()) ? 131071 : 524287);
    if (isSetTotal_amount())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(total_amount);

    hashCode = hashCode * 8191 + ((isSetTotal_num()) ? 131071 : 524287);
    if (isSetTotal_num())
      hashCode = hashCode * 8191 + total_num;

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrHbPositionBindingDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHb_config_id()).compareTo(other.isSetHb_config_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHb_config_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hb_config_id, other.hb_config_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrigger_way()).compareTo(other.isSetTrigger_way());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrigger_way()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trigger_way, other.trigger_way);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTotal_amount()).compareTo(other.isSetTotal_amount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotal_amount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.total_amount, other.total_amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTotal_num()).compareTo(other.isSetTotal_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotal_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.total_num, other.total_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrHbPositionBindingDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetHb_config_id()) {
      if (!first) sb.append(", ");
      sb.append("hb_config_id:");
      sb.append(this.hb_config_id);
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetTrigger_way()) {
      if (!first) sb.append(", ");
      sb.append("trigger_way:");
      sb.append(this.trigger_way);
      first = false;
    }
    if (isSetTotal_amount()) {
      if (!first) sb.append(", ");
      sb.append("total_amount:");
      sb.append(this.total_amount);
      first = false;
    }
    if (isSetTotal_num()) {
      if (!first) sb.append(", ");
      sb.append("total_num:");
      sb.append(this.total_num);
      first = false;
    }
    if (isSetCreate_time()) {
      if (!first) sb.append(", ");
      sb.append("create_time:");
      if (this.create_time == null) {
        sb.append("null");
      } else {
        sb.append(this.create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrHbPositionBindingPojoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrHbPositionBindingPojoStandardScheme getScheme() {
      return new HrHbPositionBindingPojoStandardScheme();
    }
  }

  private static class HrHbPositionBindingPojoStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrHbPositionBindingDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrHbPositionBindingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HB_CONFIG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hb_config_id = iprot.readI32();
              struct.setHb_config_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TRIGGER_WAY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.trigger_way = iprot.readI32();
              struct.setTrigger_wayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TOTAL_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.total_amount = iprot.readDouble();
              struct.setTotal_amountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TOTAL_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.total_num = iprot.readI32();
              struct.setTotal_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrHbPositionBindingDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHb_config_id()) {
        oprot.writeFieldBegin(HB_CONFIG_ID_FIELD_DESC);
        oprot.writeI32(struct.hb_config_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTrigger_way()) {
        oprot.writeFieldBegin(TRIGGER_WAY_FIELD_DESC);
        oprot.writeI32(struct.trigger_way);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTotal_amount()) {
        oprot.writeFieldBegin(TOTAL_AMOUNT_FIELD_DESC);
        oprot.writeDouble(struct.total_amount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTotal_num()) {
        oprot.writeFieldBegin(TOTAL_NUM_FIELD_DESC);
        oprot.writeI32(struct.total_num);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        if (struct.isSetCreate_time()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrHbPositionBindingPojoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrHbPositionBindingPojoTupleScheme getScheme() {
      return new HrHbPositionBindingPojoTupleScheme();
    }
  }

  private static class HrHbPositionBindingPojoTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrHbPositionBindingDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrHbPositionBindingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetHb_config_id()) {
        optionals.set(1);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(2);
      }
      if (struct.isSetTrigger_way()) {
        optionals.set(3);
      }
      if (struct.isSetTotal_amount()) {
        optionals.set(4);
      }
      if (struct.isSetTotal_num()) {
        optionals.set(5);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(6);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetHb_config_id()) {
        oprot.writeI32(struct.hb_config_id);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetTrigger_way()) {
        oprot.writeI32(struct.trigger_way);
      }
      if (struct.isSetTotal_amount()) {
        oprot.writeDouble(struct.total_amount);
      }
      if (struct.isSetTotal_num()) {
        oprot.writeI32(struct.total_num);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrHbPositionBindingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.hb_config_id = iprot.readI32();
        struct.setHb_config_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.trigger_way = iprot.readI32();
        struct.setTrigger_wayIsSet(true);
      }
      if (incoming.get(4)) {
        struct.total_amount = iprot.readDouble();
        struct.setTotal_amountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.total_num = iprot.readI32();
        struct.setTotal_numIsSet(true);
      }
      if (incoming.get(6)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

