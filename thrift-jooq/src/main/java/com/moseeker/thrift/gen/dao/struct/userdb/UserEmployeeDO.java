/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.userdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-04")
public class UserEmployeeDO implements org.apache.thrift.TBase<UserEmployeeDO, UserEmployeeDO._Fields>, java.io.Serializable, Cloneable, Comparable<UserEmployeeDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEmployeeDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEEID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roleId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wxuserId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SEX_FIELD_DESC = new org.apache.thrift.protocol.TField("sex", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField ENAME_FIELD_DESC = new org.apache.thrift.protocol.TField("ename", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField EFNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("efname", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cname", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CFNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cfname", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField IS_ADMIN_FIELD_DESC = new org.apache.thrift.protocol.TField("isAdmin", org.apache.thrift.protocol.TType.BYTE, (short)12);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField COMPANYBODY_FIELD_DESC = new org.apache.thrift.protocol.TField("companybody", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DEPARTMENTNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("departmentname", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField GROUPNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("groupname", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField EMPLOYDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("employdate", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField MANAGERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("managername", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField BIRTHDAY_FIELD_DESC = new org.apache.thrift.protocol.TField("birthday", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField RETIREDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("retiredate", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField EDUCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("education", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField IDCARD_FIELD_DESC = new org.apache.thrift.protocol.TField("idcard", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField AWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("award", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField BINDING_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("bindingTime", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField ACTIVATION_FIELD_DESC = new org.apache.thrift.protocol.TField("activation", org.apache.thrift.protocol.TType.DOUBLE, (short)30);
  private static final org.apache.thrift.protocol.TField ACTIVATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("activationCode", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.DOUBLE, (short)32);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField AUTH_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("authLevel", org.apache.thrift.protocol.TType.DOUBLE, (short)35);
  private static final org.apache.thrift.protocol.TField REGISTER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("registerTime", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField REGISTER_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("registerIp", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTime", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginIp", org.apache.thrift.protocol.TType.STRING, (short)39);
  private static final org.apache.thrift.protocol.TField LOGIN_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("loginCount", org.apache.thrift.protocol.TType.DOUBLE, (short)40);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.DOUBLE, (short)41);
  private static final org.apache.thrift.protocol.TField DOWNLOAD_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("downloadToken", org.apache.thrift.protocol.TType.STRING, (short)42);
  private static final org.apache.thrift.protocol.TField HR_WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hrWxuserId", org.apache.thrift.protocol.TType.I32, (short)43);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField("customField", org.apache.thrift.protocol.TType.STRING, (short)44);
  private static final org.apache.thrift.protocol.TField IS_RP_SENT_FIELD_DESC = new org.apache.thrift.protocol.TField("isRpSent", org.apache.thrift.protocol.TType.BYTE, (short)45);
  private static final org.apache.thrift.protocol.TField SYSUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sysuserId", org.apache.thrift.protocol.TType.I32, (short)46);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)47);
  private static final org.apache.thrift.protocol.TField SECTION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sectionId", org.apache.thrift.protocol.TType.I32, (short)48);
  private static final org.apache.thrift.protocol.TField EMAIL_ISVALID_FIELD_DESC = new org.apache.thrift.protocol.TField("emailIsvalid", org.apache.thrift.protocol.TType.BYTE, (short)49);
  private static final org.apache.thrift.protocol.TField AUTH_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("authMethod", org.apache.thrift.protocol.TType.BYTE, (short)50);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("customFieldValues", org.apache.thrift.protocol.TType.STRING, (short)51);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserEmployeeDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserEmployeeDOTupleSchemeFactory();

  public int id; // optional
  public String employeeid; // optional
  public int companyId; // optional
  public int roleId; // optional
  public int wxuserId; // optional
  public double sex; // optional
  public String ename; // optional
  public String efname; // optional
  public String cname; // optional
  public String cfname; // optional
  public String password; // optional
  public byte isAdmin; // optional
  public int status; // optional
  public String companybody; // optional
  public String departmentname; // optional
  public String groupname; // optional
  public String position; // optional
  public String employdate; // optional
  public String managername; // optional
  public String city; // optional
  public String birthday; // optional
  public String retiredate; // optional
  public String education; // optional
  public String address; // optional
  public String idcard; // optional
  public String mobile; // optional
  public int award; // optional
  public String bindingTime; // optional
  public String email; // optional
  public double activation; // optional
  public String activationCode; // optional
  public double disable; // optional
  public String createTime; // optional
  public String updateTime; // optional
  public double authLevel; // optional
  public String registerTime; // optional
  public String registerIp; // optional
  public String lastLoginTime; // optional
  public String lastLoginIp; // optional
  public double loginCount; // optional
  public double source; // optional
  public String downloadToken; // optional
  public int hrWxuserId; // optional
  public String customField; // optional
  public byte isRpSent; // optional
  public int sysuserId; // optional
  public int positionId; // optional
  public int sectionId; // optional
  public byte emailIsvalid; // optional
  public byte authMethod; // optional
  public String customFieldValues; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    EMPLOYEEID((short)2, "employeeid"),
    COMPANY_ID((short)3, "companyId"),
    ROLE_ID((short)4, "roleId"),
    WXUSER_ID((short)5, "wxuserId"),
    SEX((short)6, "sex"),
    ENAME((short)7, "ename"),
    EFNAME((short)8, "efname"),
    CNAME((short)9, "cname"),
    CFNAME((short)10, "cfname"),
    PASSWORD((short)11, "password"),
    IS_ADMIN((short)12, "isAdmin"),
    STATUS((short)13, "status"),
    COMPANYBODY((short)14, "companybody"),
    DEPARTMENTNAME((short)15, "departmentname"),
    GROUPNAME((short)16, "groupname"),
    POSITION((short)17, "position"),
    EMPLOYDATE((short)18, "employdate"),
    MANAGERNAME((short)19, "managername"),
    CITY((short)20, "city"),
    BIRTHDAY((short)21, "birthday"),
    RETIREDATE((short)22, "retiredate"),
    EDUCATION((short)23, "education"),
    ADDRESS((short)24, "address"),
    IDCARD((short)25, "idcard"),
    MOBILE((short)26, "mobile"),
    AWARD((short)27, "award"),
    BINDING_TIME((short)28, "bindingTime"),
    EMAIL((short)29, "email"),
    ACTIVATION((short)30, "activation"),
    ACTIVATION_CODE((short)31, "activationCode"),
    DISABLE((short)32, "disable"),
    CREATE_TIME((short)33, "createTime"),
    UPDATE_TIME((short)34, "updateTime"),
    AUTH_LEVEL((short)35, "authLevel"),
    REGISTER_TIME((short)36, "registerTime"),
    REGISTER_IP((short)37, "registerIp"),
    LAST_LOGIN_TIME((short)38, "lastLoginTime"),
    LAST_LOGIN_IP((short)39, "lastLoginIp"),
    LOGIN_COUNT((short)40, "loginCount"),
    SOURCE((short)41, "source"),
    DOWNLOAD_TOKEN((short)42, "downloadToken"),
    HR_WXUSER_ID((short)43, "hrWxuserId"),
    CUSTOM_FIELD((short)44, "customField"),
    IS_RP_SENT((short)45, "isRpSent"),
    SYSUSER_ID((short)46, "sysuserId"),
    POSITION_ID((short)47, "positionId"),
    SECTION_ID((short)48, "sectionId"),
    EMAIL_ISVALID((short)49, "emailIsvalid"),
    AUTH_METHOD((short)50, "authMethod"),
    CUSTOM_FIELD_VALUES((short)51, "customFieldValues");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // EMPLOYEEID
          return EMPLOYEEID;
        case 3: // COMPANY_ID
          return COMPANY_ID;
        case 4: // ROLE_ID
          return ROLE_ID;
        case 5: // WXUSER_ID
          return WXUSER_ID;
        case 6: // SEX
          return SEX;
        case 7: // ENAME
          return ENAME;
        case 8: // EFNAME
          return EFNAME;
        case 9: // CNAME
          return CNAME;
        case 10: // CFNAME
          return CFNAME;
        case 11: // PASSWORD
          return PASSWORD;
        case 12: // IS_ADMIN
          return IS_ADMIN;
        case 13: // STATUS
          return STATUS;
        case 14: // COMPANYBODY
          return COMPANYBODY;
        case 15: // DEPARTMENTNAME
          return DEPARTMENTNAME;
        case 16: // GROUPNAME
          return GROUPNAME;
        case 17: // POSITION
          return POSITION;
        case 18: // EMPLOYDATE
          return EMPLOYDATE;
        case 19: // MANAGERNAME
          return MANAGERNAME;
        case 20: // CITY
          return CITY;
        case 21: // BIRTHDAY
          return BIRTHDAY;
        case 22: // RETIREDATE
          return RETIREDATE;
        case 23: // EDUCATION
          return EDUCATION;
        case 24: // ADDRESS
          return ADDRESS;
        case 25: // IDCARD
          return IDCARD;
        case 26: // MOBILE
          return MOBILE;
        case 27: // AWARD
          return AWARD;
        case 28: // BINDING_TIME
          return BINDING_TIME;
        case 29: // EMAIL
          return EMAIL;
        case 30: // ACTIVATION
          return ACTIVATION;
        case 31: // ACTIVATION_CODE
          return ACTIVATION_CODE;
        case 32: // DISABLE
          return DISABLE;
        case 33: // CREATE_TIME
          return CREATE_TIME;
        case 34: // UPDATE_TIME
          return UPDATE_TIME;
        case 35: // AUTH_LEVEL
          return AUTH_LEVEL;
        case 36: // REGISTER_TIME
          return REGISTER_TIME;
        case 37: // REGISTER_IP
          return REGISTER_IP;
        case 38: // LAST_LOGIN_TIME
          return LAST_LOGIN_TIME;
        case 39: // LAST_LOGIN_IP
          return LAST_LOGIN_IP;
        case 40: // LOGIN_COUNT
          return LOGIN_COUNT;
        case 41: // SOURCE
          return SOURCE;
        case 42: // DOWNLOAD_TOKEN
          return DOWNLOAD_TOKEN;
        case 43: // HR_WXUSER_ID
          return HR_WXUSER_ID;
        case 44: // CUSTOM_FIELD
          return CUSTOM_FIELD;
        case 45: // IS_RP_SENT
          return IS_RP_SENT;
        case 46: // SYSUSER_ID
          return SYSUSER_ID;
        case 47: // POSITION_ID
          return POSITION_ID;
        case 48: // SECTION_ID
          return SECTION_ID;
        case 49: // EMAIL_ISVALID
          return EMAIL_ISVALID;
        case 50: // AUTH_METHOD
          return AUTH_METHOD;
        case 51: // CUSTOM_FIELD_VALUES
          return CUSTOM_FIELD_VALUES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __ROLEID_ISSET_ID = 2;
  private static final int __WXUSERID_ISSET_ID = 3;
  private static final int __SEX_ISSET_ID = 4;
  private static final int __ISADMIN_ISSET_ID = 5;
  private static final int __STATUS_ISSET_ID = 6;
  private static final int __AWARD_ISSET_ID = 7;
  private static final int __ACTIVATION_ISSET_ID = 8;
  private static final int __DISABLE_ISSET_ID = 9;
  private static final int __AUTHLEVEL_ISSET_ID = 10;
  private static final int __LOGINCOUNT_ISSET_ID = 11;
  private static final int __SOURCE_ISSET_ID = 12;
  private static final int __HRWXUSERID_ISSET_ID = 13;
  private static final int __ISRPSENT_ISSET_ID = 14;
  private static final int __SYSUSERID_ISSET_ID = 15;
  private static final int __POSITIONID_ISSET_ID = 16;
  private static final int __SECTIONID_ISSET_ID = 17;
  private static final int __EMAILISVALID_ISSET_ID = 18;
  private static final int __AUTHMETHOD_ISSET_ID = 19;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.EMPLOYEEID,_Fields.COMPANY_ID,_Fields.ROLE_ID,_Fields.WXUSER_ID,_Fields.SEX,_Fields.ENAME,_Fields.EFNAME,_Fields.CNAME,_Fields.CFNAME,_Fields.PASSWORD,_Fields.IS_ADMIN,_Fields.STATUS,_Fields.COMPANYBODY,_Fields.DEPARTMENTNAME,_Fields.GROUPNAME,_Fields.POSITION,_Fields.EMPLOYDATE,_Fields.MANAGERNAME,_Fields.CITY,_Fields.BIRTHDAY,_Fields.RETIREDATE,_Fields.EDUCATION,_Fields.ADDRESS,_Fields.IDCARD,_Fields.MOBILE,_Fields.AWARD,_Fields.BINDING_TIME,_Fields.EMAIL,_Fields.ACTIVATION,_Fields.ACTIVATION_CODE,_Fields.DISABLE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.AUTH_LEVEL,_Fields.REGISTER_TIME,_Fields.REGISTER_IP,_Fields.LAST_LOGIN_TIME,_Fields.LAST_LOGIN_IP,_Fields.LOGIN_COUNT,_Fields.SOURCE,_Fields.DOWNLOAD_TOKEN,_Fields.HR_WXUSER_ID,_Fields.CUSTOM_FIELD,_Fields.IS_RP_SENT,_Fields.SYSUSER_ID,_Fields.POSITION_ID,_Fields.SECTION_ID,_Fields.EMAIL_ISVALID,_Fields.AUTH_METHOD,_Fields.CUSTOM_FIELD_VALUES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEEID, new org.apache.thrift.meta_data.FieldMetaData("employeeid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("roleId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("wxuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEX, new org.apache.thrift.meta_data.FieldMetaData("sex", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ENAME, new org.apache.thrift.meta_data.FieldMetaData("ename", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EFNAME, new org.apache.thrift.meta_data.FieldMetaData("efname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNAME, new org.apache.thrift.meta_data.FieldMetaData("cname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CFNAME, new org.apache.thrift.meta_data.FieldMetaData("cfname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ADMIN, new org.apache.thrift.meta_data.FieldMetaData("isAdmin", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANYBODY, new org.apache.thrift.meta_data.FieldMetaData("companybody", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENTNAME, new org.apache.thrift.meta_data.FieldMetaData("departmentname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GROUPNAME, new org.apache.thrift.meta_data.FieldMetaData("groupname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYDATE, new org.apache.thrift.meta_data.FieldMetaData("employdate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MANAGERNAME, new org.apache.thrift.meta_data.FieldMetaData("managername", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIRTHDAY, new org.apache.thrift.meta_data.FieldMetaData("birthday", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RETIREDATE, new org.apache.thrift.meta_data.FieldMetaData("retiredate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDUCATION, new org.apache.thrift.meta_data.FieldMetaData("education", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IDCARD, new org.apache.thrift.meta_data.FieldMetaData("idcard", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AWARD, new org.apache.thrift.meta_data.FieldMetaData("award", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BINDING_TIME, new org.apache.thrift.meta_data.FieldMetaData("bindingTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVATION, new org.apache.thrift.meta_data.FieldMetaData("activation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACTIVATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("activationCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTH_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("authLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REGISTER_TIME, new org.apache.thrift.meta_data.FieldMetaData("registerTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGISTER_IP, new org.apache.thrift.meta_data.FieldMetaData("registerIp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_IP, new org.apache.thrift.meta_data.FieldMetaData("lastLoginIp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGIN_COUNT, new org.apache.thrift.meta_data.FieldMetaData("loginCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DOWNLOAD_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("downloadToken", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("hrWxuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUSTOM_FIELD, new org.apache.thrift.meta_data.FieldMetaData("customField", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RP_SENT, new org.apache.thrift.meta_data.FieldMetaData("isRpSent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SYSUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("sysuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SECTION_ID, new org.apache.thrift.meta_data.FieldMetaData("sectionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_ISVALID, new org.apache.thrift.meta_data.FieldMetaData("emailIsvalid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.AUTH_METHOD, new org.apache.thrift.meta_data.FieldMetaData("authMethod", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CUSTOM_FIELD_VALUES, new org.apache.thrift.meta_data.FieldMetaData("customFieldValues", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEmployeeDO.class, metaDataMap);
  }

  public UserEmployeeDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEmployeeDO(UserEmployeeDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetEmployeeid()) {
      this.employeeid = other.employeeid;
    }
    this.companyId = other.companyId;
    this.roleId = other.roleId;
    this.wxuserId = other.wxuserId;
    this.sex = other.sex;
    if (other.isSetEname()) {
      this.ename = other.ename;
    }
    if (other.isSetEfname()) {
      this.efname = other.efname;
    }
    if (other.isSetCname()) {
      this.cname = other.cname;
    }
    if (other.isSetCfname()) {
      this.cfname = other.cfname;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    this.isAdmin = other.isAdmin;
    this.status = other.status;
    if (other.isSetCompanybody()) {
      this.companybody = other.companybody;
    }
    if (other.isSetDepartmentname()) {
      this.departmentname = other.departmentname;
    }
    if (other.isSetGroupname()) {
      this.groupname = other.groupname;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetEmploydate()) {
      this.employdate = other.employdate;
    }
    if (other.isSetManagername()) {
      this.managername = other.managername;
    }
    if (other.isSetCity()) {
      this.city = other.city;
    }
    if (other.isSetBirthday()) {
      this.birthday = other.birthday;
    }
    if (other.isSetRetiredate()) {
      this.retiredate = other.retiredate;
    }
    if (other.isSetEducation()) {
      this.education = other.education;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetIdcard()) {
      this.idcard = other.idcard;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    this.award = other.award;
    if (other.isSetBindingTime()) {
      this.bindingTime = other.bindingTime;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    this.activation = other.activation;
    if (other.isSetActivationCode()) {
      this.activationCode = other.activationCode;
    }
    this.disable = other.disable;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.authLevel = other.authLevel;
    if (other.isSetRegisterTime()) {
      this.registerTime = other.registerTime;
    }
    if (other.isSetRegisterIp()) {
      this.registerIp = other.registerIp;
    }
    if (other.isSetLastLoginTime()) {
      this.lastLoginTime = other.lastLoginTime;
    }
    if (other.isSetLastLoginIp()) {
      this.lastLoginIp = other.lastLoginIp;
    }
    this.loginCount = other.loginCount;
    this.source = other.source;
    if (other.isSetDownloadToken()) {
      this.downloadToken = other.downloadToken;
    }
    this.hrWxuserId = other.hrWxuserId;
    if (other.isSetCustomField()) {
      this.customField = other.customField;
    }
    this.isRpSent = other.isRpSent;
    this.sysuserId = other.sysuserId;
    this.positionId = other.positionId;
    this.sectionId = other.sectionId;
    this.emailIsvalid = other.emailIsvalid;
    this.authMethod = other.authMethod;
    if (other.isSetCustomFieldValues()) {
      this.customFieldValues = other.customFieldValues;
    }
  }

  public UserEmployeeDO deepCopy() {
    return new UserEmployeeDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.employeeid = null;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setRoleIdIsSet(false);
    this.roleId = 0;
    setWxuserIdIsSet(false);
    this.wxuserId = 0;
    setSexIsSet(false);
    this.sex = 0.0;
    this.ename = null;
    this.efname = null;
    this.cname = null;
    this.cfname = null;
    this.password = null;
    setIsAdminIsSet(false);
    this.isAdmin = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.companybody = null;
    this.departmentname = null;
    this.groupname = null;
    this.position = null;
    this.employdate = null;
    this.managername = null;
    this.city = null;
    this.birthday = null;
    this.retiredate = null;
    this.education = null;
    this.address = null;
    this.idcard = null;
    this.mobile = null;
    setAwardIsSet(false);
    this.award = 0;
    this.bindingTime = null;
    this.email = null;
    setActivationIsSet(false);
    this.activation = 0.0;
    this.activationCode = null;
    setDisableIsSet(false);
    this.disable = 0.0;
    this.createTime = null;
    this.updateTime = null;
    setAuthLevelIsSet(false);
    this.authLevel = 0.0;
    this.registerTime = null;
    this.registerIp = null;
    this.lastLoginTime = null;
    this.lastLoginIp = null;
    setLoginCountIsSet(false);
    this.loginCount = 0.0;
    setSourceIsSet(false);
    this.source = 0.0;
    this.downloadToken = null;
    setHrWxuserIdIsSet(false);
    this.hrWxuserId = 0;
    this.customField = null;
    setIsRpSentIsSet(false);
    this.isRpSent = 0;
    setSysuserIdIsSet(false);
    this.sysuserId = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setSectionIdIsSet(false);
    this.sectionId = 0;
    setEmailIsvalidIsSet(false);
    this.emailIsvalid = 0;
    setAuthMethodIsSet(false);
    this.authMethod = 0;
    this.customFieldValues = null;
  }

  public int getId() {
    return this.id;
  }

  public UserEmployeeDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getEmployeeid() {
    return this.employeeid;
  }

  public UserEmployeeDO setEmployeeid(String employeeid) {
    this.employeeid = employeeid;
    return this;
  }

  public void unsetEmployeeid() {
    this.employeeid = null;
  }

  /** Returns true if field employeeid is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeid() {
    return this.employeeid != null;
  }

  public void setEmployeeidIsSet(boolean value) {
    if (!value) {
      this.employeeid = null;
    }
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public UserEmployeeDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getRoleId() {
    return this.roleId;
  }

  public UserEmployeeDO setRoleId(int roleId) {
    this.roleId = roleId;
    setRoleIdIsSet(true);
    return this;
  }

  public void unsetRoleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROLEID_ISSET_ID);
  }

  /** Returns true if field roleId is set (has been assigned a value) and false otherwise */
  public boolean isSetRoleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROLEID_ISSET_ID);
  }

  public void setRoleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROLEID_ISSET_ID, value);
  }

  public int getWxuserId() {
    return this.wxuserId;
  }

  public UserEmployeeDO setWxuserId(int wxuserId) {
    this.wxuserId = wxuserId;
    setWxuserIdIsSet(true);
    return this;
  }

  public void unsetWxuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WXUSERID_ISSET_ID);
  }

  /** Returns true if field wxuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetWxuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WXUSERID_ISSET_ID);
  }

  public void setWxuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WXUSERID_ISSET_ID, value);
  }

  public double getSex() {
    return this.sex;
  }

  public UserEmployeeDO setSex(double sex) {
    this.sex = sex;
    setSexIsSet(true);
    return this;
  }

  public void unsetSex() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  /** Returns true if field sex is set (has been assigned a value) and false otherwise */
  public boolean isSetSex() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  public void setSexIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEX_ISSET_ID, value);
  }

  public String getEname() {
    return this.ename;
  }

  public UserEmployeeDO setEname(String ename) {
    this.ename = ename;
    return this;
  }

  public void unsetEname() {
    this.ename = null;
  }

  /** Returns true if field ename is set (has been assigned a value) and false otherwise */
  public boolean isSetEname() {
    return this.ename != null;
  }

  public void setEnameIsSet(boolean value) {
    if (!value) {
      this.ename = null;
    }
  }

  public String getEfname() {
    return this.efname;
  }

  public UserEmployeeDO setEfname(String efname) {
    this.efname = efname;
    return this;
  }

  public void unsetEfname() {
    this.efname = null;
  }

  /** Returns true if field efname is set (has been assigned a value) and false otherwise */
  public boolean isSetEfname() {
    return this.efname != null;
  }

  public void setEfnameIsSet(boolean value) {
    if (!value) {
      this.efname = null;
    }
  }

  public String getCname() {
    return this.cname;
  }

  public UserEmployeeDO setCname(String cname) {
    this.cname = cname;
    return this;
  }

  public void unsetCname() {
    this.cname = null;
  }

  /** Returns true if field cname is set (has been assigned a value) and false otherwise */
  public boolean isSetCname() {
    return this.cname != null;
  }

  public void setCnameIsSet(boolean value) {
    if (!value) {
      this.cname = null;
    }
  }

  public String getCfname() {
    return this.cfname;
  }

  public UserEmployeeDO setCfname(String cfname) {
    this.cfname = cfname;
    return this;
  }

  public void unsetCfname() {
    this.cfname = null;
  }

  /** Returns true if field cfname is set (has been assigned a value) and false otherwise */
  public boolean isSetCfname() {
    return this.cfname != null;
  }

  public void setCfnameIsSet(boolean value) {
    if (!value) {
      this.cfname = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public UserEmployeeDO setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public byte getIsAdmin() {
    return this.isAdmin;
  }

  public UserEmployeeDO setIsAdmin(byte isAdmin) {
    this.isAdmin = isAdmin;
    setIsAdminIsSet(true);
    return this;
  }

  public void unsetIsAdmin() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISADMIN_ISSET_ID);
  }

  /** Returns true if field isAdmin is set (has been assigned a value) and false otherwise */
  public boolean isSetIsAdmin() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISADMIN_ISSET_ID);
  }

  public void setIsAdminIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISADMIN_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public UserEmployeeDO setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getCompanybody() {
    return this.companybody;
  }

  public UserEmployeeDO setCompanybody(String companybody) {
    this.companybody = companybody;
    return this;
  }

  public void unsetCompanybody() {
    this.companybody = null;
  }

  /** Returns true if field companybody is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanybody() {
    return this.companybody != null;
  }

  public void setCompanybodyIsSet(boolean value) {
    if (!value) {
      this.companybody = null;
    }
  }

  public String getDepartmentname() {
    return this.departmentname;
  }

  public UserEmployeeDO setDepartmentname(String departmentname) {
    this.departmentname = departmentname;
    return this;
  }

  public void unsetDepartmentname() {
    this.departmentname = null;
  }

  /** Returns true if field departmentname is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartmentname() {
    return this.departmentname != null;
  }

  public void setDepartmentnameIsSet(boolean value) {
    if (!value) {
      this.departmentname = null;
    }
  }

  public String getGroupname() {
    return this.groupname;
  }

  public UserEmployeeDO setGroupname(String groupname) {
    this.groupname = groupname;
    return this;
  }

  public void unsetGroupname() {
    this.groupname = null;
  }

  /** Returns true if field groupname is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupname() {
    return this.groupname != null;
  }

  public void setGroupnameIsSet(boolean value) {
    if (!value) {
      this.groupname = null;
    }
  }

  public String getPosition() {
    return this.position;
  }

  public UserEmployeeDO setPosition(String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public String getEmploydate() {
    return this.employdate;
  }

  public UserEmployeeDO setEmploydate(String employdate) {
    this.employdate = employdate;
    return this;
  }

  public void unsetEmploydate() {
    this.employdate = null;
  }

  /** Returns true if field employdate is set (has been assigned a value) and false otherwise */
  public boolean isSetEmploydate() {
    return this.employdate != null;
  }

  public void setEmploydateIsSet(boolean value) {
    if (!value) {
      this.employdate = null;
    }
  }

  public String getManagername() {
    return this.managername;
  }

  public UserEmployeeDO setManagername(String managername) {
    this.managername = managername;
    return this;
  }

  public void unsetManagername() {
    this.managername = null;
  }

  /** Returns true if field managername is set (has been assigned a value) and false otherwise */
  public boolean isSetManagername() {
    return this.managername != null;
  }

  public void setManagernameIsSet(boolean value) {
    if (!value) {
      this.managername = null;
    }
  }

  public String getCity() {
    return this.city;
  }

  public UserEmployeeDO setCity(String city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public String getBirthday() {
    return this.birthday;
  }

  public UserEmployeeDO setBirthday(String birthday) {
    this.birthday = birthday;
    return this;
  }

  public void unsetBirthday() {
    this.birthday = null;
  }

  /** Returns true if field birthday is set (has been assigned a value) and false otherwise */
  public boolean isSetBirthday() {
    return this.birthday != null;
  }

  public void setBirthdayIsSet(boolean value) {
    if (!value) {
      this.birthday = null;
    }
  }

  public String getRetiredate() {
    return this.retiredate;
  }

  public UserEmployeeDO setRetiredate(String retiredate) {
    this.retiredate = retiredate;
    return this;
  }

  public void unsetRetiredate() {
    this.retiredate = null;
  }

  /** Returns true if field retiredate is set (has been assigned a value) and false otherwise */
  public boolean isSetRetiredate() {
    return this.retiredate != null;
  }

  public void setRetiredateIsSet(boolean value) {
    if (!value) {
      this.retiredate = null;
    }
  }

  public String getEducation() {
    return this.education;
  }

  public UserEmployeeDO setEducation(String education) {
    this.education = education;
    return this;
  }

  public void unsetEducation() {
    this.education = null;
  }

  /** Returns true if field education is set (has been assigned a value) and false otherwise */
  public boolean isSetEducation() {
    return this.education != null;
  }

  public void setEducationIsSet(boolean value) {
    if (!value) {
      this.education = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public UserEmployeeDO setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getIdcard() {
    return this.idcard;
  }

  public UserEmployeeDO setIdcard(String idcard) {
    this.idcard = idcard;
    return this;
  }

  public void unsetIdcard() {
    this.idcard = null;
  }

  /** Returns true if field idcard is set (has been assigned a value) and false otherwise */
  public boolean isSetIdcard() {
    return this.idcard != null;
  }

  public void setIdcardIsSet(boolean value) {
    if (!value) {
      this.idcard = null;
    }
  }

  public String getMobile() {
    return this.mobile;
  }

  public UserEmployeeDO setMobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public int getAward() {
    return this.award;
  }

  public UserEmployeeDO setAward(int award) {
    this.award = award;
    setAwardIsSet(true);
    return this;
  }

  public void unsetAward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  /** Returns true if field award is set (has been assigned a value) and false otherwise */
  public boolean isSetAward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  public void setAwardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_ISSET_ID, value);
  }

  public String getBindingTime() {
    return this.bindingTime;
  }

  public UserEmployeeDO setBindingTime(String bindingTime) {
    this.bindingTime = bindingTime;
    return this;
  }

  public void unsetBindingTime() {
    this.bindingTime = null;
  }

  /** Returns true if field bindingTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBindingTime() {
    return this.bindingTime != null;
  }

  public void setBindingTimeIsSet(boolean value) {
    if (!value) {
      this.bindingTime = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public UserEmployeeDO setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public double getActivation() {
    return this.activation;
  }

  public UserEmployeeDO setActivation(double activation) {
    this.activation = activation;
    setActivationIsSet(true);
    return this;
  }

  public void unsetActivation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACTIVATION_ISSET_ID);
  }

  /** Returns true if field activation is set (has been assigned a value) and false otherwise */
  public boolean isSetActivation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACTIVATION_ISSET_ID);
  }

  public void setActivationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACTIVATION_ISSET_ID, value);
  }

  public String getActivationCode() {
    return this.activationCode;
  }

  public UserEmployeeDO setActivationCode(String activationCode) {
    this.activationCode = activationCode;
    return this;
  }

  public void unsetActivationCode() {
    this.activationCode = null;
  }

  /** Returns true if field activationCode is set (has been assigned a value) and false otherwise */
  public boolean isSetActivationCode() {
    return this.activationCode != null;
  }

  public void setActivationCodeIsSet(boolean value) {
    if (!value) {
      this.activationCode = null;
    }
  }

  public double getDisable() {
    return this.disable;
  }

  public UserEmployeeDO setDisable(double disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public UserEmployeeDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public UserEmployeeDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public double getAuthLevel() {
    return this.authLevel;
  }

  public UserEmployeeDO setAuthLevel(double authLevel) {
    this.authLevel = authLevel;
    setAuthLevelIsSet(true);
    return this;
  }

  public void unsetAuthLevel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTHLEVEL_ISSET_ID);
  }

  /** Returns true if field authLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthLevel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTHLEVEL_ISSET_ID);
  }

  public void setAuthLevelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTHLEVEL_ISSET_ID, value);
  }

  public String getRegisterTime() {
    return this.registerTime;
  }

  public UserEmployeeDO setRegisterTime(String registerTime) {
    this.registerTime = registerTime;
    return this;
  }

  public void unsetRegisterTime() {
    this.registerTime = null;
  }

  /** Returns true if field registerTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRegisterTime() {
    return this.registerTime != null;
  }

  public void setRegisterTimeIsSet(boolean value) {
    if (!value) {
      this.registerTime = null;
    }
  }

  public String getRegisterIp() {
    return this.registerIp;
  }

  public UserEmployeeDO setRegisterIp(String registerIp) {
    this.registerIp = registerIp;
    return this;
  }

  public void unsetRegisterIp() {
    this.registerIp = null;
  }

  /** Returns true if field registerIp is set (has been assigned a value) and false otherwise */
  public boolean isSetRegisterIp() {
    return this.registerIp != null;
  }

  public void setRegisterIpIsSet(boolean value) {
    if (!value) {
      this.registerIp = null;
    }
  }

  public String getLastLoginTime() {
    return this.lastLoginTime;
  }

  public UserEmployeeDO setLastLoginTime(String lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    return this;
  }

  public void unsetLastLoginTime() {
    this.lastLoginTime = null;
  }

  /** Returns true if field lastLoginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTime() {
    return this.lastLoginTime != null;
  }

  public void setLastLoginTimeIsSet(boolean value) {
    if (!value) {
      this.lastLoginTime = null;
    }
  }

  public String getLastLoginIp() {
    return this.lastLoginIp;
  }

  public UserEmployeeDO setLastLoginIp(String lastLoginIp) {
    this.lastLoginIp = lastLoginIp;
    return this;
  }

  public void unsetLastLoginIp() {
    this.lastLoginIp = null;
  }

  /** Returns true if field lastLoginIp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginIp() {
    return this.lastLoginIp != null;
  }

  public void setLastLoginIpIsSet(boolean value) {
    if (!value) {
      this.lastLoginIp = null;
    }
  }

  public double getLoginCount() {
    return this.loginCount;
  }

  public UserEmployeeDO setLoginCount(double loginCount) {
    this.loginCount = loginCount;
    setLoginCountIsSet(true);
    return this;
  }

  public void unsetLoginCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOGINCOUNT_ISSET_ID);
  }

  /** Returns true if field loginCount is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOGINCOUNT_ISSET_ID);
  }

  public void setLoginCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOGINCOUNT_ISSET_ID, value);
  }

  public double getSource() {
    return this.source;
  }

  public UserEmployeeDO setSource(double source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
  }

  public String getDownloadToken() {
    return this.downloadToken;
  }

  public UserEmployeeDO setDownloadToken(String downloadToken) {
    this.downloadToken = downloadToken;
    return this;
  }

  public void unsetDownloadToken() {
    this.downloadToken = null;
  }

  /** Returns true if field downloadToken is set (has been assigned a value) and false otherwise */
  public boolean isSetDownloadToken() {
    return this.downloadToken != null;
  }

  public void setDownloadTokenIsSet(boolean value) {
    if (!value) {
      this.downloadToken = null;
    }
  }

  public int getHrWxuserId() {
    return this.hrWxuserId;
  }

  public UserEmployeeDO setHrWxuserId(int hrWxuserId) {
    this.hrWxuserId = hrWxuserId;
    setHrWxuserIdIsSet(true);
    return this;
  }

  public void unsetHrWxuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRWXUSERID_ISSET_ID);
  }

  /** Returns true if field hrWxuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetHrWxuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRWXUSERID_ISSET_ID);
  }

  public void setHrWxuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRWXUSERID_ISSET_ID, value);
  }

  public String getCustomField() {
    return this.customField;
  }

  public UserEmployeeDO setCustomField(String customField) {
    this.customField = customField;
    return this;
  }

  public void unsetCustomField() {
    this.customField = null;
  }

  /** Returns true if field customField is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomField() {
    return this.customField != null;
  }

  public void setCustomFieldIsSet(boolean value) {
    if (!value) {
      this.customField = null;
    }
  }

  public byte getIsRpSent() {
    return this.isRpSent;
  }

  public UserEmployeeDO setIsRpSent(byte isRpSent) {
    this.isRpSent = isRpSent;
    setIsRpSentIsSet(true);
    return this;
  }

  public void unsetIsRpSent() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISRPSENT_ISSET_ID);
  }

  /** Returns true if field isRpSent is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRpSent() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISRPSENT_ISSET_ID);
  }

  public void setIsRpSentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISRPSENT_ISSET_ID, value);
  }

  public int getSysuserId() {
    return this.sysuserId;
  }

  public UserEmployeeDO setSysuserId(int sysuserId) {
    this.sysuserId = sysuserId;
    setSysuserIdIsSet(true);
    return this;
  }

  public void unsetSysuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  /** Returns true if field sysuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetSysuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  public void setSysuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYSUSERID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public UserEmployeeDO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public int getSectionId() {
    return this.sectionId;
  }

  public UserEmployeeDO setSectionId(int sectionId) {
    this.sectionId = sectionId;
    setSectionIdIsSet(true);
    return this;
  }

  public void unsetSectionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SECTIONID_ISSET_ID);
  }

  /** Returns true if field sectionId is set (has been assigned a value) and false otherwise */
  public boolean isSetSectionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SECTIONID_ISSET_ID);
  }

  public void setSectionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SECTIONID_ISSET_ID, value);
  }

  public byte getEmailIsvalid() {
    return this.emailIsvalid;
  }

  public UserEmployeeDO setEmailIsvalid(byte emailIsvalid) {
    this.emailIsvalid = emailIsvalid;
    setEmailIsvalidIsSet(true);
    return this;
  }

  public void unsetEmailIsvalid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAILISVALID_ISSET_ID);
  }

  /** Returns true if field emailIsvalid is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailIsvalid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAILISVALID_ISSET_ID);
  }

  public void setEmailIsvalidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAILISVALID_ISSET_ID, value);
  }

  public byte getAuthMethod() {
    return this.authMethod;
  }

  public UserEmployeeDO setAuthMethod(byte authMethod) {
    this.authMethod = authMethod;
    setAuthMethodIsSet(true);
    return this;
  }

  public void unsetAuthMethod() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTHMETHOD_ISSET_ID);
  }

  /** Returns true if field authMethod is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthMethod() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTHMETHOD_ISSET_ID);
  }

  public void setAuthMethodIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTHMETHOD_ISSET_ID, value);
  }

  public String getCustomFieldValues() {
    return this.customFieldValues;
  }

  public UserEmployeeDO setCustomFieldValues(String customFieldValues) {
    this.customFieldValues = customFieldValues;
    return this;
  }

  public void unsetCustomFieldValues() {
    this.customFieldValues = null;
  }

  /** Returns true if field customFieldValues is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomFieldValues() {
    return this.customFieldValues != null;
  }

  public void setCustomFieldValuesIsSet(boolean value) {
    if (!value) {
      this.customFieldValues = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case EMPLOYEEID:
      if (value == null) {
        unsetEmployeeid();
      } else {
        setEmployeeid((String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case ROLE_ID:
      if (value == null) {
        unsetRoleId();
      } else {
        setRoleId((Integer)value);
      }
      break;

    case WXUSER_ID:
      if (value == null) {
        unsetWxuserId();
      } else {
        setWxuserId((Integer)value);
      }
      break;

    case SEX:
      if (value == null) {
        unsetSex();
      } else {
        setSex((Double)value);
      }
      break;

    case ENAME:
      if (value == null) {
        unsetEname();
      } else {
        setEname((String)value);
      }
      break;

    case EFNAME:
      if (value == null) {
        unsetEfname();
      } else {
        setEfname((String)value);
      }
      break;

    case CNAME:
      if (value == null) {
        unsetCname();
      } else {
        setCname((String)value);
      }
      break;

    case CFNAME:
      if (value == null) {
        unsetCfname();
      } else {
        setCfname((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case IS_ADMIN:
      if (value == null) {
        unsetIsAdmin();
      } else {
        setIsAdmin((Byte)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case COMPANYBODY:
      if (value == null) {
        unsetCompanybody();
      } else {
        setCompanybody((String)value);
      }
      break;

    case DEPARTMENTNAME:
      if (value == null) {
        unsetDepartmentname();
      } else {
        setDepartmentname((String)value);
      }
      break;

    case GROUPNAME:
      if (value == null) {
        unsetGroupname();
      } else {
        setGroupname((String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((String)value);
      }
      break;

    case EMPLOYDATE:
      if (value == null) {
        unsetEmploydate();
      } else {
        setEmploydate((String)value);
      }
      break;

    case MANAGERNAME:
      if (value == null) {
        unsetManagername();
      } else {
        setManagername((String)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((String)value);
      }
      break;

    case BIRTHDAY:
      if (value == null) {
        unsetBirthday();
      } else {
        setBirthday((String)value);
      }
      break;

    case RETIREDATE:
      if (value == null) {
        unsetRetiredate();
      } else {
        setRetiredate((String)value);
      }
      break;

    case EDUCATION:
      if (value == null) {
        unsetEducation();
      } else {
        setEducation((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case IDCARD:
      if (value == null) {
        unsetIdcard();
      } else {
        setIdcard((String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((String)value);
      }
      break;

    case AWARD:
      if (value == null) {
        unsetAward();
      } else {
        setAward((Integer)value);
      }
      break;

    case BINDING_TIME:
      if (value == null) {
        unsetBindingTime();
      } else {
        setBindingTime((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case ACTIVATION:
      if (value == null) {
        unsetActivation();
      } else {
        setActivation((Double)value);
      }
      break;

    case ACTIVATION_CODE:
      if (value == null) {
        unsetActivationCode();
      } else {
        setActivationCode((String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((Double)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case AUTH_LEVEL:
      if (value == null) {
        unsetAuthLevel();
      } else {
        setAuthLevel((Double)value);
      }
      break;

    case REGISTER_TIME:
      if (value == null) {
        unsetRegisterTime();
      } else {
        setRegisterTime((String)value);
      }
      break;

    case REGISTER_IP:
      if (value == null) {
        unsetRegisterIp();
      } else {
        setRegisterIp((String)value);
      }
      break;

    case LAST_LOGIN_TIME:
      if (value == null) {
        unsetLastLoginTime();
      } else {
        setLastLoginTime((String)value);
      }
      break;

    case LAST_LOGIN_IP:
      if (value == null) {
        unsetLastLoginIp();
      } else {
        setLastLoginIp((String)value);
      }
      break;

    case LOGIN_COUNT:
      if (value == null) {
        unsetLoginCount();
      } else {
        setLoginCount((Double)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((Double)value);
      }
      break;

    case DOWNLOAD_TOKEN:
      if (value == null) {
        unsetDownloadToken();
      } else {
        setDownloadToken((String)value);
      }
      break;

    case HR_WXUSER_ID:
      if (value == null) {
        unsetHrWxuserId();
      } else {
        setHrWxuserId((Integer)value);
      }
      break;

    case CUSTOM_FIELD:
      if (value == null) {
        unsetCustomField();
      } else {
        setCustomField((String)value);
      }
      break;

    case IS_RP_SENT:
      if (value == null) {
        unsetIsRpSent();
      } else {
        setIsRpSent((Byte)value);
      }
      break;

    case SYSUSER_ID:
      if (value == null) {
        unsetSysuserId();
      } else {
        setSysuserId((Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((Integer)value);
      }
      break;

    case SECTION_ID:
      if (value == null) {
        unsetSectionId();
      } else {
        setSectionId((Integer)value);
      }
      break;

    case EMAIL_ISVALID:
      if (value == null) {
        unsetEmailIsvalid();
      } else {
        setEmailIsvalid((Byte)value);
      }
      break;

    case AUTH_METHOD:
      if (value == null) {
        unsetAuthMethod();
      } else {
        setAuthMethod((Byte)value);
      }
      break;

    case CUSTOM_FIELD_VALUES:
      if (value == null) {
        unsetCustomFieldValues();
      } else {
        setCustomFieldValues((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case EMPLOYEEID:
      return getEmployeeid();

    case COMPANY_ID:
      return getCompanyId();

    case ROLE_ID:
      return getRoleId();

    case WXUSER_ID:
      return getWxuserId();

    case SEX:
      return getSex();

    case ENAME:
      return getEname();

    case EFNAME:
      return getEfname();

    case CNAME:
      return getCname();

    case CFNAME:
      return getCfname();

    case PASSWORD:
      return getPassword();

    case IS_ADMIN:
      return getIsAdmin();

    case STATUS:
      return getStatus();

    case COMPANYBODY:
      return getCompanybody();

    case DEPARTMENTNAME:
      return getDepartmentname();

    case GROUPNAME:
      return getGroupname();

    case POSITION:
      return getPosition();

    case EMPLOYDATE:
      return getEmploydate();

    case MANAGERNAME:
      return getManagername();

    case CITY:
      return getCity();

    case BIRTHDAY:
      return getBirthday();

    case RETIREDATE:
      return getRetiredate();

    case EDUCATION:
      return getEducation();

    case ADDRESS:
      return getAddress();

    case IDCARD:
      return getIdcard();

    case MOBILE:
      return getMobile();

    case AWARD:
      return getAward();

    case BINDING_TIME:
      return getBindingTime();

    case EMAIL:
      return getEmail();

    case ACTIVATION:
      return getActivation();

    case ACTIVATION_CODE:
      return getActivationCode();

    case DISABLE:
      return getDisable();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case AUTH_LEVEL:
      return getAuthLevel();

    case REGISTER_TIME:
      return getRegisterTime();

    case REGISTER_IP:
      return getRegisterIp();

    case LAST_LOGIN_TIME:
      return getLastLoginTime();

    case LAST_LOGIN_IP:
      return getLastLoginIp();

    case LOGIN_COUNT:
      return getLoginCount();

    case SOURCE:
      return getSource();

    case DOWNLOAD_TOKEN:
      return getDownloadToken();

    case HR_WXUSER_ID:
      return getHrWxuserId();

    case CUSTOM_FIELD:
      return getCustomField();

    case IS_RP_SENT:
      return getIsRpSent();

    case SYSUSER_ID:
      return getSysuserId();

    case POSITION_ID:
      return getPositionId();

    case SECTION_ID:
      return getSectionId();

    case EMAIL_ISVALID:
      return getEmailIsvalid();

    case AUTH_METHOD:
      return getAuthMethod();

    case CUSTOM_FIELD_VALUES:
      return getCustomFieldValues();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case EMPLOYEEID:
      return isSetEmployeeid();
    case COMPANY_ID:
      return isSetCompanyId();
    case ROLE_ID:
      return isSetRoleId();
    case WXUSER_ID:
      return isSetWxuserId();
    case SEX:
      return isSetSex();
    case ENAME:
      return isSetEname();
    case EFNAME:
      return isSetEfname();
    case CNAME:
      return isSetCname();
    case CFNAME:
      return isSetCfname();
    case PASSWORD:
      return isSetPassword();
    case IS_ADMIN:
      return isSetIsAdmin();
    case STATUS:
      return isSetStatus();
    case COMPANYBODY:
      return isSetCompanybody();
    case DEPARTMENTNAME:
      return isSetDepartmentname();
    case GROUPNAME:
      return isSetGroupname();
    case POSITION:
      return isSetPosition();
    case EMPLOYDATE:
      return isSetEmploydate();
    case MANAGERNAME:
      return isSetManagername();
    case CITY:
      return isSetCity();
    case BIRTHDAY:
      return isSetBirthday();
    case RETIREDATE:
      return isSetRetiredate();
    case EDUCATION:
      return isSetEducation();
    case ADDRESS:
      return isSetAddress();
    case IDCARD:
      return isSetIdcard();
    case MOBILE:
      return isSetMobile();
    case AWARD:
      return isSetAward();
    case BINDING_TIME:
      return isSetBindingTime();
    case EMAIL:
      return isSetEmail();
    case ACTIVATION:
      return isSetActivation();
    case ACTIVATION_CODE:
      return isSetActivationCode();
    case DISABLE:
      return isSetDisable();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case AUTH_LEVEL:
      return isSetAuthLevel();
    case REGISTER_TIME:
      return isSetRegisterTime();
    case REGISTER_IP:
      return isSetRegisterIp();
    case LAST_LOGIN_TIME:
      return isSetLastLoginTime();
    case LAST_LOGIN_IP:
      return isSetLastLoginIp();
    case LOGIN_COUNT:
      return isSetLoginCount();
    case SOURCE:
      return isSetSource();
    case DOWNLOAD_TOKEN:
      return isSetDownloadToken();
    case HR_WXUSER_ID:
      return isSetHrWxuserId();
    case CUSTOM_FIELD:
      return isSetCustomField();
    case IS_RP_SENT:
      return isSetIsRpSent();
    case SYSUSER_ID:
      return isSetSysuserId();
    case POSITION_ID:
      return isSetPositionId();
    case SECTION_ID:
      return isSetSectionId();
    case EMAIL_ISVALID:
      return isSetEmailIsvalid();
    case AUTH_METHOD:
      return isSetAuthMethod();
    case CUSTOM_FIELD_VALUES:
      return isSetCustomFieldValues();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEmployeeDO)
      return this.equals((UserEmployeeDO)that);
    return false;
  }

  public boolean equals(UserEmployeeDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_employeeid = true && this.isSetEmployeeid();
    boolean that_present_employeeid = true && that.isSetEmployeeid();
    if (this_present_employeeid || that_present_employeeid) {
      if (!(this_present_employeeid && that_present_employeeid))
        return false;
      if (!this.employeeid.equals(that.employeeid))
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_roleId = true && this.isSetRoleId();
    boolean that_present_roleId = true && that.isSetRoleId();
    if (this_present_roleId || that_present_roleId) {
      if (!(this_present_roleId && that_present_roleId))
        return false;
      if (this.roleId != that.roleId)
        return false;
    }

    boolean this_present_wxuserId = true && this.isSetWxuserId();
    boolean that_present_wxuserId = true && that.isSetWxuserId();
    if (this_present_wxuserId || that_present_wxuserId) {
      if (!(this_present_wxuserId && that_present_wxuserId))
        return false;
      if (this.wxuserId != that.wxuserId)
        return false;
    }

    boolean this_present_sex = true && this.isSetSex();
    boolean that_present_sex = true && that.isSetSex();
    if (this_present_sex || that_present_sex) {
      if (!(this_present_sex && that_present_sex))
        return false;
      if (this.sex != that.sex)
        return false;
    }

    boolean this_present_ename = true && this.isSetEname();
    boolean that_present_ename = true && that.isSetEname();
    if (this_present_ename || that_present_ename) {
      if (!(this_present_ename && that_present_ename))
        return false;
      if (!this.ename.equals(that.ename))
        return false;
    }

    boolean this_present_efname = true && this.isSetEfname();
    boolean that_present_efname = true && that.isSetEfname();
    if (this_present_efname || that_present_efname) {
      if (!(this_present_efname && that_present_efname))
        return false;
      if (!this.efname.equals(that.efname))
        return false;
    }

    boolean this_present_cname = true && this.isSetCname();
    boolean that_present_cname = true && that.isSetCname();
    if (this_present_cname || that_present_cname) {
      if (!(this_present_cname && that_present_cname))
        return false;
      if (!this.cname.equals(that.cname))
        return false;
    }

    boolean this_present_cfname = true && this.isSetCfname();
    boolean that_present_cfname = true && that.isSetCfname();
    if (this_present_cfname || that_present_cfname) {
      if (!(this_present_cfname && that_present_cfname))
        return false;
      if (!this.cfname.equals(that.cfname))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_isAdmin = true && this.isSetIsAdmin();
    boolean that_present_isAdmin = true && that.isSetIsAdmin();
    if (this_present_isAdmin || that_present_isAdmin) {
      if (!(this_present_isAdmin && that_present_isAdmin))
        return false;
      if (this.isAdmin != that.isAdmin)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_companybody = true && this.isSetCompanybody();
    boolean that_present_companybody = true && that.isSetCompanybody();
    if (this_present_companybody || that_present_companybody) {
      if (!(this_present_companybody && that_present_companybody))
        return false;
      if (!this.companybody.equals(that.companybody))
        return false;
    }

    boolean this_present_departmentname = true && this.isSetDepartmentname();
    boolean that_present_departmentname = true && that.isSetDepartmentname();
    if (this_present_departmentname || that_present_departmentname) {
      if (!(this_present_departmentname && that_present_departmentname))
        return false;
      if (!this.departmentname.equals(that.departmentname))
        return false;
    }

    boolean this_present_groupname = true && this.isSetGroupname();
    boolean that_present_groupname = true && that.isSetGroupname();
    if (this_present_groupname || that_present_groupname) {
      if (!(this_present_groupname && that_present_groupname))
        return false;
      if (!this.groupname.equals(that.groupname))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_employdate = true && this.isSetEmploydate();
    boolean that_present_employdate = true && that.isSetEmploydate();
    if (this_present_employdate || that_present_employdate) {
      if (!(this_present_employdate && that_present_employdate))
        return false;
      if (!this.employdate.equals(that.employdate))
        return false;
    }

    boolean this_present_managername = true && this.isSetManagername();
    boolean that_present_managername = true && that.isSetManagername();
    if (this_present_managername || that_present_managername) {
      if (!(this_present_managername && that_present_managername))
        return false;
      if (!this.managername.equals(that.managername))
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_birthday = true && this.isSetBirthday();
    boolean that_present_birthday = true && that.isSetBirthday();
    if (this_present_birthday || that_present_birthday) {
      if (!(this_present_birthday && that_present_birthday))
        return false;
      if (!this.birthday.equals(that.birthday))
        return false;
    }

    boolean this_present_retiredate = true && this.isSetRetiredate();
    boolean that_present_retiredate = true && that.isSetRetiredate();
    if (this_present_retiredate || that_present_retiredate) {
      if (!(this_present_retiredate && that_present_retiredate))
        return false;
      if (!this.retiredate.equals(that.retiredate))
        return false;
    }

    boolean this_present_education = true && this.isSetEducation();
    boolean that_present_education = true && that.isSetEducation();
    if (this_present_education || that_present_education) {
      if (!(this_present_education && that_present_education))
        return false;
      if (!this.education.equals(that.education))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_idcard = true && this.isSetIdcard();
    boolean that_present_idcard = true && that.isSetIdcard();
    if (this_present_idcard || that_present_idcard) {
      if (!(this_present_idcard && that_present_idcard))
        return false;
      if (!this.idcard.equals(that.idcard))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_award = true && this.isSetAward();
    boolean that_present_award = true && that.isSetAward();
    if (this_present_award || that_present_award) {
      if (!(this_present_award && that_present_award))
        return false;
      if (this.award != that.award)
        return false;
    }

    boolean this_present_bindingTime = true && this.isSetBindingTime();
    boolean that_present_bindingTime = true && that.isSetBindingTime();
    if (this_present_bindingTime || that_present_bindingTime) {
      if (!(this_present_bindingTime && that_present_bindingTime))
        return false;
      if (!this.bindingTime.equals(that.bindingTime))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_activation = true && this.isSetActivation();
    boolean that_present_activation = true && that.isSetActivation();
    if (this_present_activation || that_present_activation) {
      if (!(this_present_activation && that_present_activation))
        return false;
      if (this.activation != that.activation)
        return false;
    }

    boolean this_present_activationCode = true && this.isSetActivationCode();
    boolean that_present_activationCode = true && that.isSetActivationCode();
    if (this_present_activationCode || that_present_activationCode) {
      if (!(this_present_activationCode && that_present_activationCode))
        return false;
      if (!this.activationCode.equals(that.activationCode))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_authLevel = true && this.isSetAuthLevel();
    boolean that_present_authLevel = true && that.isSetAuthLevel();
    if (this_present_authLevel || that_present_authLevel) {
      if (!(this_present_authLevel && that_present_authLevel))
        return false;
      if (this.authLevel != that.authLevel)
        return false;
    }

    boolean this_present_registerTime = true && this.isSetRegisterTime();
    boolean that_present_registerTime = true && that.isSetRegisterTime();
    if (this_present_registerTime || that_present_registerTime) {
      if (!(this_present_registerTime && that_present_registerTime))
        return false;
      if (!this.registerTime.equals(that.registerTime))
        return false;
    }

    boolean this_present_registerIp = true && this.isSetRegisterIp();
    boolean that_present_registerIp = true && that.isSetRegisterIp();
    if (this_present_registerIp || that_present_registerIp) {
      if (!(this_present_registerIp && that_present_registerIp))
        return false;
      if (!this.registerIp.equals(that.registerIp))
        return false;
    }

    boolean this_present_lastLoginTime = true && this.isSetLastLoginTime();
    boolean that_present_lastLoginTime = true && that.isSetLastLoginTime();
    if (this_present_lastLoginTime || that_present_lastLoginTime) {
      if (!(this_present_lastLoginTime && that_present_lastLoginTime))
        return false;
      if (!this.lastLoginTime.equals(that.lastLoginTime))
        return false;
    }

    boolean this_present_lastLoginIp = true && this.isSetLastLoginIp();
    boolean that_present_lastLoginIp = true && that.isSetLastLoginIp();
    if (this_present_lastLoginIp || that_present_lastLoginIp) {
      if (!(this_present_lastLoginIp && that_present_lastLoginIp))
        return false;
      if (!this.lastLoginIp.equals(that.lastLoginIp))
        return false;
    }

    boolean this_present_loginCount = true && this.isSetLoginCount();
    boolean that_present_loginCount = true && that.isSetLoginCount();
    if (this_present_loginCount || that_present_loginCount) {
      if (!(this_present_loginCount && that_present_loginCount))
        return false;
      if (this.loginCount != that.loginCount)
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_downloadToken = true && this.isSetDownloadToken();
    boolean that_present_downloadToken = true && that.isSetDownloadToken();
    if (this_present_downloadToken || that_present_downloadToken) {
      if (!(this_present_downloadToken && that_present_downloadToken))
        return false;
      if (!this.downloadToken.equals(that.downloadToken))
        return false;
    }

    boolean this_present_hrWxuserId = true && this.isSetHrWxuserId();
    boolean that_present_hrWxuserId = true && that.isSetHrWxuserId();
    if (this_present_hrWxuserId || that_present_hrWxuserId) {
      if (!(this_present_hrWxuserId && that_present_hrWxuserId))
        return false;
      if (this.hrWxuserId != that.hrWxuserId)
        return false;
    }

    boolean this_present_customField = true && this.isSetCustomField();
    boolean that_present_customField = true && that.isSetCustomField();
    if (this_present_customField || that_present_customField) {
      if (!(this_present_customField && that_present_customField))
        return false;
      if (!this.customField.equals(that.customField))
        return false;
    }

    boolean this_present_isRpSent = true && this.isSetIsRpSent();
    boolean that_present_isRpSent = true && that.isSetIsRpSent();
    if (this_present_isRpSent || that_present_isRpSent) {
      if (!(this_present_isRpSent && that_present_isRpSent))
        return false;
      if (this.isRpSent != that.isRpSent)
        return false;
    }

    boolean this_present_sysuserId = true && this.isSetSysuserId();
    boolean that_present_sysuserId = true && that.isSetSysuserId();
    if (this_present_sysuserId || that_present_sysuserId) {
      if (!(this_present_sysuserId && that_present_sysuserId))
        return false;
      if (this.sysuserId != that.sysuserId)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_sectionId = true && this.isSetSectionId();
    boolean that_present_sectionId = true && that.isSetSectionId();
    if (this_present_sectionId || that_present_sectionId) {
      if (!(this_present_sectionId && that_present_sectionId))
        return false;
      if (this.sectionId != that.sectionId)
        return false;
    }

    boolean this_present_emailIsvalid = true && this.isSetEmailIsvalid();
    boolean that_present_emailIsvalid = true && that.isSetEmailIsvalid();
    if (this_present_emailIsvalid || that_present_emailIsvalid) {
      if (!(this_present_emailIsvalid && that_present_emailIsvalid))
        return false;
      if (this.emailIsvalid != that.emailIsvalid)
        return false;
    }

    boolean this_present_authMethod = true && this.isSetAuthMethod();
    boolean that_present_authMethod = true && that.isSetAuthMethod();
    if (this_present_authMethod || that_present_authMethod) {
      if (!(this_present_authMethod && that_present_authMethod))
        return false;
      if (this.authMethod != that.authMethod)
        return false;
    }

    boolean this_present_customFieldValues = true && this.isSetCustomFieldValues();
    boolean that_present_customFieldValues = true && that.isSetCustomFieldValues();
    if (this_present_customFieldValues || that_present_customFieldValues) {
      if (!(this_present_customFieldValues && that_present_customFieldValues))
        return false;
      if (!this.customFieldValues.equals(that.customFieldValues))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetEmployeeid()) ? 131071 : 524287);
    if (isSetEmployeeid())
      hashCode = hashCode * 8191 + employeeid.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetRoleId()) ? 131071 : 524287);
    if (isSetRoleId())
      hashCode = hashCode * 8191 + roleId;

    hashCode = hashCode * 8191 + ((isSetWxuserId()) ? 131071 : 524287);
    if (isSetWxuserId())
      hashCode = hashCode * 8191 + wxuserId;

    hashCode = hashCode * 8191 + ((isSetSex()) ? 131071 : 524287);
    if (isSetSex())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(sex);

    hashCode = hashCode * 8191 + ((isSetEname()) ? 131071 : 524287);
    if (isSetEname())
      hashCode = hashCode * 8191 + ename.hashCode();

    hashCode = hashCode * 8191 + ((isSetEfname()) ? 131071 : 524287);
    if (isSetEfname())
      hashCode = hashCode * 8191 + efname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCname()) ? 131071 : 524287);
    if (isSetCname())
      hashCode = hashCode * 8191 + cname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCfname()) ? 131071 : 524287);
    if (isSetCfname())
      hashCode = hashCode * 8191 + cfname.hashCode();

    hashCode = hashCode * 8191 + ((isSetPassword()) ? 131071 : 524287);
    if (isSetPassword())
      hashCode = hashCode * 8191 + password.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsAdmin()) ? 131071 : 524287);
    if (isSetIsAdmin())
      hashCode = hashCode * 8191 + (int) (isAdmin);

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + status;

    hashCode = hashCode * 8191 + ((isSetCompanybody()) ? 131071 : 524287);
    if (isSetCompanybody())
      hashCode = hashCode * 8191 + companybody.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartmentname()) ? 131071 : 524287);
    if (isSetDepartmentname())
      hashCode = hashCode * 8191 + departmentname.hashCode();

    hashCode = hashCode * 8191 + ((isSetGroupname()) ? 131071 : 524287);
    if (isSetGroupname())
      hashCode = hashCode * 8191 + groupname.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmploydate()) ? 131071 : 524287);
    if (isSetEmploydate())
      hashCode = hashCode * 8191 + employdate.hashCode();

    hashCode = hashCode * 8191 + ((isSetManagername()) ? 131071 : 524287);
    if (isSetManagername())
      hashCode = hashCode * 8191 + managername.hashCode();

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetBirthday()) ? 131071 : 524287);
    if (isSetBirthday())
      hashCode = hashCode * 8191 + birthday.hashCode();

    hashCode = hashCode * 8191 + ((isSetRetiredate()) ? 131071 : 524287);
    if (isSetRetiredate())
      hashCode = hashCode * 8191 + retiredate.hashCode();

    hashCode = hashCode * 8191 + ((isSetEducation()) ? 131071 : 524287);
    if (isSetEducation())
      hashCode = hashCode * 8191 + education.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetIdcard()) ? 131071 : 524287);
    if (isSetIdcard())
      hashCode = hashCode * 8191 + idcard.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetAward()) ? 131071 : 524287);
    if (isSetAward())
      hashCode = hashCode * 8191 + award;

    hashCode = hashCode * 8191 + ((isSetBindingTime()) ? 131071 : 524287);
    if (isSetBindingTime())
      hashCode = hashCode * 8191 + bindingTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetActivation()) ? 131071 : 524287);
    if (isSetActivation())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(activation);

    hashCode = hashCode * 8191 + ((isSetActivationCode()) ? 131071 : 524287);
    if (isSetActivationCode())
      hashCode = hashCode * 8191 + activationCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(disable);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthLevel()) ? 131071 : 524287);
    if (isSetAuthLevel())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(authLevel);

    hashCode = hashCode * 8191 + ((isSetRegisterTime()) ? 131071 : 524287);
    if (isSetRegisterTime())
      hashCode = hashCode * 8191 + registerTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetRegisterIp()) ? 131071 : 524287);
    if (isSetRegisterIp())
      hashCode = hashCode * 8191 + registerIp.hashCode();

    hashCode = hashCode * 8191 + ((isSetLastLoginTime()) ? 131071 : 524287);
    if (isSetLastLoginTime())
      hashCode = hashCode * 8191 + lastLoginTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetLastLoginIp()) ? 131071 : 524287);
    if (isSetLastLoginIp())
      hashCode = hashCode * 8191 + lastLoginIp.hashCode();

    hashCode = hashCode * 8191 + ((isSetLoginCount()) ? 131071 : 524287);
    if (isSetLoginCount())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(loginCount);

    hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
    if (isSetSource())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(source);

    hashCode = hashCode * 8191 + ((isSetDownloadToken()) ? 131071 : 524287);
    if (isSetDownloadToken())
      hashCode = hashCode * 8191 + downloadToken.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrWxuserId()) ? 131071 : 524287);
    if (isSetHrWxuserId())
      hashCode = hashCode * 8191 + hrWxuserId;

    hashCode = hashCode * 8191 + ((isSetCustomField()) ? 131071 : 524287);
    if (isSetCustomField())
      hashCode = hashCode * 8191 + customField.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsRpSent()) ? 131071 : 524287);
    if (isSetIsRpSent())
      hashCode = hashCode * 8191 + (int) (isRpSent);

    hashCode = hashCode * 8191 + ((isSetSysuserId()) ? 131071 : 524287);
    if (isSetSysuserId())
      hashCode = hashCode * 8191 + sysuserId;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetSectionId()) ? 131071 : 524287);
    if (isSetSectionId())
      hashCode = hashCode * 8191 + sectionId;

    hashCode = hashCode * 8191 + ((isSetEmailIsvalid()) ? 131071 : 524287);
    if (isSetEmailIsvalid())
      hashCode = hashCode * 8191 + (int) (emailIsvalid);

    hashCode = hashCode * 8191 + ((isSetAuthMethod()) ? 131071 : 524287);
    if (isSetAuthMethod())
      hashCode = hashCode * 8191 + (int) (authMethod);

    hashCode = hashCode * 8191 + ((isSetCustomFieldValues()) ? 131071 : 524287);
    if (isSetCustomFieldValues())
      hashCode = hashCode * 8191 + customFieldValues.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UserEmployeeDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployeeid()).compareTo(other.isSetEmployeeid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeid, other.employeeid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRoleId()).compareTo(other.isSetRoleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roleId, other.roleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWxuserId()).compareTo(other.isSetWxuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWxuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wxuserId, other.wxuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSex()).compareTo(other.isSetSex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSex()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sex, other.sex);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEname()).compareTo(other.isSetEname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ename, other.ename);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEfname()).compareTo(other.isSetEfname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEfname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.efname, other.efname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCname()).compareTo(other.isSetCname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cname, other.cname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCfname()).compareTo(other.isSetCfname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCfname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cfname, other.cfname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsAdmin()).compareTo(other.isSetIsAdmin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsAdmin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isAdmin, other.isAdmin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanybody()).compareTo(other.isSetCompanybody());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanybody()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companybody, other.companybody);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDepartmentname()).compareTo(other.isSetDepartmentname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartmentname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.departmentname, other.departmentname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupname()).compareTo(other.isSetGroupname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupname, other.groupname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmploydate()).compareTo(other.isSetEmploydate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmploydate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employdate, other.employdate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetManagername()).compareTo(other.isSetManagername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetManagername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.managername, other.managername);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirthday()).compareTo(other.isSetBirthday());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirthday()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birthday, other.birthday);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRetiredate()).compareTo(other.isSetRetiredate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRetiredate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.retiredate, other.retiredate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEducation()).compareTo(other.isSetEducation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEducation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.education, other.education);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdcard()).compareTo(other.isSetIdcard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdcard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idcard, other.idcard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAward()).compareTo(other.isSetAward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award, other.award);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBindingTime()).compareTo(other.isSetBindingTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBindingTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bindingTime, other.bindingTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivation()).compareTo(other.isSetActivation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activation, other.activation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivationCode()).compareTo(other.isSetActivationCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivationCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activationCode, other.activationCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthLevel()).compareTo(other.isSetAuthLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authLevel, other.authLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterTime()).compareTo(other.isSetRegisterTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registerTime, other.registerTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterIp()).compareTo(other.isSetRegisterIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registerIp, other.registerIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTime()).compareTo(other.isSetLastLoginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTime, other.lastLoginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginIp()).compareTo(other.isSetLastLoginIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginIp, other.lastLoginIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginCount()).compareTo(other.isSetLoginCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginCount, other.loginCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDownloadToken()).compareTo(other.isSetDownloadToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownloadToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downloadToken, other.downloadToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHrWxuserId()).compareTo(other.isSetHrWxuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrWxuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrWxuserId, other.hrWxuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomField()).compareTo(other.isSetCustomField());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomField()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customField, other.customField);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRpSent()).compareTo(other.isSetIsRpSent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRpSent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRpSent, other.isRpSent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSysuserId()).compareTo(other.isSetSysuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysuserId, other.sysuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSectionId()).compareTo(other.isSetSectionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSectionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sectionId, other.sectionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailIsvalid()).compareTo(other.isSetEmailIsvalid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailIsvalid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailIsvalid, other.emailIsvalid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthMethod()).compareTo(other.isSetAuthMethod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthMethod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authMethod, other.authMethod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomFieldValues()).compareTo(other.isSetCustomFieldValues());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomFieldValues()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customFieldValues, other.customFieldValues);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserEmployeeDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetEmployeeid()) {
      if (!first) sb.append(", ");
      sb.append("employeeid:");
      if (this.employeeid == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeid);
      }
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetRoleId()) {
      if (!first) sb.append(", ");
      sb.append("roleId:");
      sb.append(this.roleId);
      first = false;
    }
    if (isSetWxuserId()) {
      if (!first) sb.append(", ");
      sb.append("wxuserId:");
      sb.append(this.wxuserId);
      first = false;
    }
    if (isSetSex()) {
      if (!first) sb.append(", ");
      sb.append("sex:");
      sb.append(this.sex);
      first = false;
    }
    if (isSetEname()) {
      if (!first) sb.append(", ");
      sb.append("ename:");
      if (this.ename == null) {
        sb.append("null");
      } else {
        sb.append(this.ename);
      }
      first = false;
    }
    if (isSetEfname()) {
      if (!first) sb.append(", ");
      sb.append("efname:");
      if (this.efname == null) {
        sb.append("null");
      } else {
        sb.append(this.efname);
      }
      first = false;
    }
    if (isSetCname()) {
      if (!first) sb.append(", ");
      sb.append("cname:");
      if (this.cname == null) {
        sb.append("null");
      } else {
        sb.append(this.cname);
      }
      first = false;
    }
    if (isSetCfname()) {
      if (!first) sb.append(", ");
      sb.append("cfname:");
      if (this.cfname == null) {
        sb.append("null");
      } else {
        sb.append(this.cfname);
      }
      first = false;
    }
    if (isSetPassword()) {
      if (!first) sb.append(", ");
      sb.append("password:");
      if (this.password == null) {
        sb.append("null");
      } else {
        sb.append(this.password);
      }
      first = false;
    }
    if (isSetIsAdmin()) {
      if (!first) sb.append(", ");
      sb.append("isAdmin:");
      sb.append(this.isAdmin);
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCompanybody()) {
      if (!first) sb.append(", ");
      sb.append("companybody:");
      if (this.companybody == null) {
        sb.append("null");
      } else {
        sb.append(this.companybody);
      }
      first = false;
    }
    if (isSetDepartmentname()) {
      if (!first) sb.append(", ");
      sb.append("departmentname:");
      if (this.departmentname == null) {
        sb.append("null");
      } else {
        sb.append(this.departmentname);
      }
      first = false;
    }
    if (isSetGroupname()) {
      if (!first) sb.append(", ");
      sb.append("groupname:");
      if (this.groupname == null) {
        sb.append("null");
      } else {
        sb.append(this.groupname);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetEmploydate()) {
      if (!first) sb.append(", ");
      sb.append("employdate:");
      if (this.employdate == null) {
        sb.append("null");
      } else {
        sb.append(this.employdate);
      }
      first = false;
    }
    if (isSetManagername()) {
      if (!first) sb.append(", ");
      sb.append("managername:");
      if (this.managername == null) {
        sb.append("null");
      } else {
        sb.append(this.managername);
      }
      first = false;
    }
    if (isSetCity()) {
      if (!first) sb.append(", ");
      sb.append("city:");
      if (this.city == null) {
        sb.append("null");
      } else {
        sb.append(this.city);
      }
      first = false;
    }
    if (isSetBirthday()) {
      if (!first) sb.append(", ");
      sb.append("birthday:");
      if (this.birthday == null) {
        sb.append("null");
      } else {
        sb.append(this.birthday);
      }
      first = false;
    }
    if (isSetRetiredate()) {
      if (!first) sb.append(", ");
      sb.append("retiredate:");
      if (this.retiredate == null) {
        sb.append("null");
      } else {
        sb.append(this.retiredate);
      }
      first = false;
    }
    if (isSetEducation()) {
      if (!first) sb.append(", ");
      sb.append("education:");
      if (this.education == null) {
        sb.append("null");
      } else {
        sb.append(this.education);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetIdcard()) {
      if (!first) sb.append(", ");
      sb.append("idcard:");
      if (this.idcard == null) {
        sb.append("null");
      } else {
        sb.append(this.idcard);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetAward()) {
      if (!first) sb.append(", ");
      sb.append("award:");
      sb.append(this.award);
      first = false;
    }
    if (isSetBindingTime()) {
      if (!first) sb.append(", ");
      sb.append("bindingTime:");
      if (this.bindingTime == null) {
        sb.append("null");
      } else {
        sb.append(this.bindingTime);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetActivation()) {
      if (!first) sb.append(", ");
      sb.append("activation:");
      sb.append(this.activation);
      first = false;
    }
    if (isSetActivationCode()) {
      if (!first) sb.append(", ");
      sb.append("activationCode:");
      if (this.activationCode == null) {
        sb.append("null");
      } else {
        sb.append(this.activationCode);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetAuthLevel()) {
      if (!first) sb.append(", ");
      sb.append("authLevel:");
      sb.append(this.authLevel);
      first = false;
    }
    if (isSetRegisterTime()) {
      if (!first) sb.append(", ");
      sb.append("registerTime:");
      if (this.registerTime == null) {
        sb.append("null");
      } else {
        sb.append(this.registerTime);
      }
      first = false;
    }
    if (isSetRegisterIp()) {
      if (!first) sb.append(", ");
      sb.append("registerIp:");
      if (this.registerIp == null) {
        sb.append("null");
      } else {
        sb.append(this.registerIp);
      }
      first = false;
    }
    if (isSetLastLoginTime()) {
      if (!first) sb.append(", ");
      sb.append("lastLoginTime:");
      if (this.lastLoginTime == null) {
        sb.append("null");
      } else {
        sb.append(this.lastLoginTime);
      }
      first = false;
    }
    if (isSetLastLoginIp()) {
      if (!first) sb.append(", ");
      sb.append("lastLoginIp:");
      if (this.lastLoginIp == null) {
        sb.append("null");
      } else {
        sb.append(this.lastLoginIp);
      }
      first = false;
    }
    if (isSetLoginCount()) {
      if (!first) sb.append(", ");
      sb.append("loginCount:");
      sb.append(this.loginCount);
      first = false;
    }
    if (isSetSource()) {
      if (!first) sb.append(", ");
      sb.append("source:");
      sb.append(this.source);
      first = false;
    }
    if (isSetDownloadToken()) {
      if (!first) sb.append(", ");
      sb.append("downloadToken:");
      if (this.downloadToken == null) {
        sb.append("null");
      } else {
        sb.append(this.downloadToken);
      }
      first = false;
    }
    if (isSetHrWxuserId()) {
      if (!first) sb.append(", ");
      sb.append("hrWxuserId:");
      sb.append(this.hrWxuserId);
      first = false;
    }
    if (isSetCustomField()) {
      if (!first) sb.append(", ");
      sb.append("customField:");
      if (this.customField == null) {
        sb.append("null");
      } else {
        sb.append(this.customField);
      }
      first = false;
    }
    if (isSetIsRpSent()) {
      if (!first) sb.append(", ");
      sb.append("isRpSent:");
      sb.append(this.isRpSent);
      first = false;
    }
    if (isSetSysuserId()) {
      if (!first) sb.append(", ");
      sb.append("sysuserId:");
      sb.append(this.sysuserId);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetSectionId()) {
      if (!first) sb.append(", ");
      sb.append("sectionId:");
      sb.append(this.sectionId);
      first = false;
    }
    if (isSetEmailIsvalid()) {
      if (!first) sb.append(", ");
      sb.append("emailIsvalid:");
      sb.append(this.emailIsvalid);
      first = false;
    }
    if (isSetAuthMethod()) {
      if (!first) sb.append(", ");
      sb.append("authMethod:");
      sb.append(this.authMethod);
      first = false;
    }
    if (isSetCustomFieldValues()) {
      if (!first) sb.append(", ");
      sb.append("customFieldValues:");
      if (this.customFieldValues == null) {
        sb.append("null");
      } else {
        sb.append(this.customFieldValues);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEmployeeDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeDOStandardScheme getScheme() {
      return new UserEmployeeDOStandardScheme();
    }
  }

  private static class UserEmployeeDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserEmployeeDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEmployeeDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEEID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employeeid = iprot.readString();
              struct.setEmployeeidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ROLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.roleId = iprot.readI32();
              struct.setRoleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wxuserId = iprot.readI32();
              struct.setWxuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SEX
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.sex = iprot.readDouble();
              struct.setSexIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ENAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ename = iprot.readString();
              struct.setEnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // EFNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.efname = iprot.readString();
              struct.setEfnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cname = iprot.readString();
              struct.setCnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CFNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cfname = iprot.readString();
              struct.setCfnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_ADMIN
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.isAdmin = iprot.readByte();
              struct.setIsAdminIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // COMPANYBODY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companybody = iprot.readString();
              struct.setCompanybodyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DEPARTMENTNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.departmentname = iprot.readString();
              struct.setDepartmentnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // GROUPNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.groupname = iprot.readString();
              struct.setGroupnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // EMPLOYDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employdate = iprot.readString();
              struct.setEmploydateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // MANAGERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.managername = iprot.readString();
              struct.setManagernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city = iprot.readString();
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // BIRTHDAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.birthday = iprot.readString();
              struct.setBirthdayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // RETIREDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.retiredate = iprot.readString();
              struct.setRetiredateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // EDUCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.education = iprot.readString();
              struct.setEducationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // IDCARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.idcard = iprot.readString();
              struct.setIdcardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // AWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.award = iprot.readI32();
              struct.setAwardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // BINDING_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bindingTime = iprot.readString();
              struct.setBindingTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // ACTIVATION
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.activation = iprot.readDouble();
              struct.setActivationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // ACTIVATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activationCode = iprot.readString();
              struct.setActivationCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.disable = iprot.readDouble();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // AUTH_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.authLevel = iprot.readDouble();
              struct.setAuthLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // REGISTER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registerTime = iprot.readString();
              struct.setRegisterTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // REGISTER_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registerIp = iprot.readString();
              struct.setRegisterIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // LAST_LOGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastLoginTime = iprot.readString();
              struct.setLastLoginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // LAST_LOGIN_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastLoginIp = iprot.readString();
              struct.setLastLoginIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // LOGIN_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loginCount = iprot.readDouble();
              struct.setLoginCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.source = iprot.readDouble();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // DOWNLOAD_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.downloadToken = iprot.readString();
              struct.setDownloadTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // HR_WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hrWxuserId = iprot.readI32();
              struct.setHrWxuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // CUSTOM_FIELD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customField = iprot.readString();
              struct.setCustomFieldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // IS_RP_SENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.isRpSent = iprot.readByte();
              struct.setIsRpSentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // SYSUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sysuserId = iprot.readI32();
              struct.setSysuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // SECTION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sectionId = iprot.readI32();
              struct.setSectionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // EMAIL_ISVALID
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.emailIsvalid = iprot.readByte();
              struct.setEmailIsvalidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // AUTH_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.authMethod = iprot.readByte();
              struct.setAuthMethodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // CUSTOM_FIELD_VALUES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customFieldValues = iprot.readString();
              struct.setCustomFieldValuesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEmployeeDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.employeeid != null) {
        if (struct.isSetEmployeeid()) {
          oprot.writeFieldBegin(EMPLOYEEID_FIELD_DESC);
          oprot.writeString(struct.employeeid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRoleId()) {
        oprot.writeFieldBegin(ROLE_ID_FIELD_DESC);
        oprot.writeI32(struct.roleId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWxuserId()) {
        oprot.writeFieldBegin(WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.wxuserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSex()) {
        oprot.writeFieldBegin(SEX_FIELD_DESC);
        oprot.writeDouble(struct.sex);
        oprot.writeFieldEnd();
      }
      if (struct.ename != null) {
        if (struct.isSetEname()) {
          oprot.writeFieldBegin(ENAME_FIELD_DESC);
          oprot.writeString(struct.ename);
          oprot.writeFieldEnd();
        }
      }
      if (struct.efname != null) {
        if (struct.isSetEfname()) {
          oprot.writeFieldBegin(EFNAME_FIELD_DESC);
          oprot.writeString(struct.efname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cname != null) {
        if (struct.isSetCname()) {
          oprot.writeFieldBegin(CNAME_FIELD_DESC);
          oprot.writeString(struct.cname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cfname != null) {
        if (struct.isSetCfname()) {
          oprot.writeFieldBegin(CFNAME_FIELD_DESC);
          oprot.writeString(struct.cfname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.password != null) {
        if (struct.isSetPassword()) {
          oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
          oprot.writeString(struct.password);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsAdmin()) {
        oprot.writeFieldBegin(IS_ADMIN_FIELD_DESC);
        oprot.writeByte(struct.isAdmin);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.companybody != null) {
        if (struct.isSetCompanybody()) {
          oprot.writeFieldBegin(COMPANYBODY_FIELD_DESC);
          oprot.writeString(struct.companybody);
          oprot.writeFieldEnd();
        }
      }
      if (struct.departmentname != null) {
        if (struct.isSetDepartmentname()) {
          oprot.writeFieldBegin(DEPARTMENTNAME_FIELD_DESC);
          oprot.writeString(struct.departmentname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.groupname != null) {
        if (struct.isSetGroupname()) {
          oprot.writeFieldBegin(GROUPNAME_FIELD_DESC);
          oprot.writeString(struct.groupname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.employdate != null) {
        if (struct.isSetEmploydate()) {
          oprot.writeFieldBegin(EMPLOYDATE_FIELD_DESC);
          oprot.writeString(struct.employdate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.managername != null) {
        if (struct.isSetManagername()) {
          oprot.writeFieldBegin(MANAGERNAME_FIELD_DESC);
          oprot.writeString(struct.managername);
          oprot.writeFieldEnd();
        }
      }
      if (struct.city != null) {
        if (struct.isSetCity()) {
          oprot.writeFieldBegin(CITY_FIELD_DESC);
          oprot.writeString(struct.city);
          oprot.writeFieldEnd();
        }
      }
      if (struct.birthday != null) {
        if (struct.isSetBirthday()) {
          oprot.writeFieldBegin(BIRTHDAY_FIELD_DESC);
          oprot.writeString(struct.birthday);
          oprot.writeFieldEnd();
        }
      }
      if (struct.retiredate != null) {
        if (struct.isSetRetiredate()) {
          oprot.writeFieldBegin(RETIREDATE_FIELD_DESC);
          oprot.writeString(struct.retiredate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.education != null) {
        if (struct.isSetEducation()) {
          oprot.writeFieldBegin(EDUCATION_FIELD_DESC);
          oprot.writeString(struct.education);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.idcard != null) {
        if (struct.isSetIdcard()) {
          oprot.writeFieldBegin(IDCARD_FIELD_DESC);
          oprot.writeString(struct.idcard);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAward()) {
        oprot.writeFieldBegin(AWARD_FIELD_DESC);
        oprot.writeI32(struct.award);
        oprot.writeFieldEnd();
      }
      if (struct.bindingTime != null) {
        if (struct.isSetBindingTime()) {
          oprot.writeFieldBegin(BINDING_TIME_FIELD_DESC);
          oprot.writeString(struct.bindingTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetActivation()) {
        oprot.writeFieldBegin(ACTIVATION_FIELD_DESC);
        oprot.writeDouble(struct.activation);
        oprot.writeFieldEnd();
      }
      if (struct.activationCode != null) {
        if (struct.isSetActivationCode()) {
          oprot.writeFieldBegin(ACTIVATION_CODE_FIELD_DESC);
          oprot.writeString(struct.activationCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeDouble(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAuthLevel()) {
        oprot.writeFieldBegin(AUTH_LEVEL_FIELD_DESC);
        oprot.writeDouble(struct.authLevel);
        oprot.writeFieldEnd();
      }
      if (struct.registerTime != null) {
        if (struct.isSetRegisterTime()) {
          oprot.writeFieldBegin(REGISTER_TIME_FIELD_DESC);
          oprot.writeString(struct.registerTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.registerIp != null) {
        if (struct.isSetRegisterIp()) {
          oprot.writeFieldBegin(REGISTER_IP_FIELD_DESC);
          oprot.writeString(struct.registerIp);
          oprot.writeFieldEnd();
        }
      }
      if (struct.lastLoginTime != null) {
        if (struct.isSetLastLoginTime()) {
          oprot.writeFieldBegin(LAST_LOGIN_TIME_FIELD_DESC);
          oprot.writeString(struct.lastLoginTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.lastLoginIp != null) {
        if (struct.isSetLastLoginIp()) {
          oprot.writeFieldBegin(LAST_LOGIN_IP_FIELD_DESC);
          oprot.writeString(struct.lastLoginIp);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetLoginCount()) {
        oprot.writeFieldBegin(LOGIN_COUNT_FIELD_DESC);
        oprot.writeDouble(struct.loginCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSource()) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeDouble(struct.source);
        oprot.writeFieldEnd();
      }
      if (struct.downloadToken != null) {
        if (struct.isSetDownloadToken()) {
          oprot.writeFieldBegin(DOWNLOAD_TOKEN_FIELD_DESC);
          oprot.writeString(struct.downloadToken);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHrWxuserId()) {
        oprot.writeFieldBegin(HR_WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.hrWxuserId);
        oprot.writeFieldEnd();
      }
      if (struct.customField != null) {
        if (struct.isSetCustomField()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_FIELD_DESC);
          oprot.writeString(struct.customField);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsRpSent()) {
        oprot.writeFieldBegin(IS_RP_SENT_FIELD_DESC);
        oprot.writeByte(struct.isRpSent);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSysuserId()) {
        oprot.writeFieldBegin(SYSUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.sysuserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSectionId()) {
        oprot.writeFieldBegin(SECTION_ID_FIELD_DESC);
        oprot.writeI32(struct.sectionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmailIsvalid()) {
        oprot.writeFieldBegin(EMAIL_ISVALID_FIELD_DESC);
        oprot.writeByte(struct.emailIsvalid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAuthMethod()) {
        oprot.writeFieldBegin(AUTH_METHOD_FIELD_DESC);
        oprot.writeByte(struct.authMethod);
        oprot.writeFieldEnd();
      }
      if (struct.customFieldValues != null) {
        if (struct.isSetCustomFieldValues()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_VALUES_FIELD_DESC);
          oprot.writeString(struct.customFieldValues);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEmployeeDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeDOTupleScheme getScheme() {
      return new UserEmployeeDOTupleScheme();
    }
  }

  private static class UserEmployeeDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserEmployeeDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEmployeeDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetEmployeeid()) {
        optionals.set(1);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(2);
      }
      if (struct.isSetRoleId()) {
        optionals.set(3);
      }
      if (struct.isSetWxuserId()) {
        optionals.set(4);
      }
      if (struct.isSetSex()) {
        optionals.set(5);
      }
      if (struct.isSetEname()) {
        optionals.set(6);
      }
      if (struct.isSetEfname()) {
        optionals.set(7);
      }
      if (struct.isSetCname()) {
        optionals.set(8);
      }
      if (struct.isSetCfname()) {
        optionals.set(9);
      }
      if (struct.isSetPassword()) {
        optionals.set(10);
      }
      if (struct.isSetIsAdmin()) {
        optionals.set(11);
      }
      if (struct.isSetStatus()) {
        optionals.set(12);
      }
      if (struct.isSetCompanybody()) {
        optionals.set(13);
      }
      if (struct.isSetDepartmentname()) {
        optionals.set(14);
      }
      if (struct.isSetGroupname()) {
        optionals.set(15);
      }
      if (struct.isSetPosition()) {
        optionals.set(16);
      }
      if (struct.isSetEmploydate()) {
        optionals.set(17);
      }
      if (struct.isSetManagername()) {
        optionals.set(18);
      }
      if (struct.isSetCity()) {
        optionals.set(19);
      }
      if (struct.isSetBirthday()) {
        optionals.set(20);
      }
      if (struct.isSetRetiredate()) {
        optionals.set(21);
      }
      if (struct.isSetEducation()) {
        optionals.set(22);
      }
      if (struct.isSetAddress()) {
        optionals.set(23);
      }
      if (struct.isSetIdcard()) {
        optionals.set(24);
      }
      if (struct.isSetMobile()) {
        optionals.set(25);
      }
      if (struct.isSetAward()) {
        optionals.set(26);
      }
      if (struct.isSetBindingTime()) {
        optionals.set(27);
      }
      if (struct.isSetEmail()) {
        optionals.set(28);
      }
      if (struct.isSetActivation()) {
        optionals.set(29);
      }
      if (struct.isSetActivationCode()) {
        optionals.set(30);
      }
      if (struct.isSetDisable()) {
        optionals.set(31);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(32);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(33);
      }
      if (struct.isSetAuthLevel()) {
        optionals.set(34);
      }
      if (struct.isSetRegisterTime()) {
        optionals.set(35);
      }
      if (struct.isSetRegisterIp()) {
        optionals.set(36);
      }
      if (struct.isSetLastLoginTime()) {
        optionals.set(37);
      }
      if (struct.isSetLastLoginIp()) {
        optionals.set(38);
      }
      if (struct.isSetLoginCount()) {
        optionals.set(39);
      }
      if (struct.isSetSource()) {
        optionals.set(40);
      }
      if (struct.isSetDownloadToken()) {
        optionals.set(41);
      }
      if (struct.isSetHrWxuserId()) {
        optionals.set(42);
      }
      if (struct.isSetCustomField()) {
        optionals.set(43);
      }
      if (struct.isSetIsRpSent()) {
        optionals.set(44);
      }
      if (struct.isSetSysuserId()) {
        optionals.set(45);
      }
      if (struct.isSetPositionId()) {
        optionals.set(46);
      }
      if (struct.isSetSectionId()) {
        optionals.set(47);
      }
      if (struct.isSetEmailIsvalid()) {
        optionals.set(48);
      }
      if (struct.isSetAuthMethod()) {
        optionals.set(49);
      }
      if (struct.isSetCustomFieldValues()) {
        optionals.set(50);
      }
      oprot.writeBitSet(optionals, 51);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetEmployeeid()) {
        oprot.writeString(struct.employeeid);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetRoleId()) {
        oprot.writeI32(struct.roleId);
      }
      if (struct.isSetWxuserId()) {
        oprot.writeI32(struct.wxuserId);
      }
      if (struct.isSetSex()) {
        oprot.writeDouble(struct.sex);
      }
      if (struct.isSetEname()) {
        oprot.writeString(struct.ename);
      }
      if (struct.isSetEfname()) {
        oprot.writeString(struct.efname);
      }
      if (struct.isSetCname()) {
        oprot.writeString(struct.cname);
      }
      if (struct.isSetCfname()) {
        oprot.writeString(struct.cfname);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetIsAdmin()) {
        oprot.writeByte(struct.isAdmin);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetCompanybody()) {
        oprot.writeString(struct.companybody);
      }
      if (struct.isSetDepartmentname()) {
        oprot.writeString(struct.departmentname);
      }
      if (struct.isSetGroupname()) {
        oprot.writeString(struct.groupname);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetEmploydate()) {
        oprot.writeString(struct.employdate);
      }
      if (struct.isSetManagername()) {
        oprot.writeString(struct.managername);
      }
      if (struct.isSetCity()) {
        oprot.writeString(struct.city);
      }
      if (struct.isSetBirthday()) {
        oprot.writeString(struct.birthday);
      }
      if (struct.isSetRetiredate()) {
        oprot.writeString(struct.retiredate);
      }
      if (struct.isSetEducation()) {
        oprot.writeString(struct.education);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetIdcard()) {
        oprot.writeString(struct.idcard);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetAward()) {
        oprot.writeI32(struct.award);
      }
      if (struct.isSetBindingTime()) {
        oprot.writeString(struct.bindingTime);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetActivation()) {
        oprot.writeDouble(struct.activation);
      }
      if (struct.isSetActivationCode()) {
        oprot.writeString(struct.activationCode);
      }
      if (struct.isSetDisable()) {
        oprot.writeDouble(struct.disable);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetAuthLevel()) {
        oprot.writeDouble(struct.authLevel);
      }
      if (struct.isSetRegisterTime()) {
        oprot.writeString(struct.registerTime);
      }
      if (struct.isSetRegisterIp()) {
        oprot.writeString(struct.registerIp);
      }
      if (struct.isSetLastLoginTime()) {
        oprot.writeString(struct.lastLoginTime);
      }
      if (struct.isSetLastLoginIp()) {
        oprot.writeString(struct.lastLoginIp);
      }
      if (struct.isSetLoginCount()) {
        oprot.writeDouble(struct.loginCount);
      }
      if (struct.isSetSource()) {
        oprot.writeDouble(struct.source);
      }
      if (struct.isSetDownloadToken()) {
        oprot.writeString(struct.downloadToken);
      }
      if (struct.isSetHrWxuserId()) {
        oprot.writeI32(struct.hrWxuserId);
      }
      if (struct.isSetCustomField()) {
        oprot.writeString(struct.customField);
      }
      if (struct.isSetIsRpSent()) {
        oprot.writeByte(struct.isRpSent);
      }
      if (struct.isSetSysuserId()) {
        oprot.writeI32(struct.sysuserId);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetSectionId()) {
        oprot.writeI32(struct.sectionId);
      }
      if (struct.isSetEmailIsvalid()) {
        oprot.writeByte(struct.emailIsvalid);
      }
      if (struct.isSetAuthMethod()) {
        oprot.writeByte(struct.authMethod);
      }
      if (struct.isSetCustomFieldValues()) {
        oprot.writeString(struct.customFieldValues);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEmployeeDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(51);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employeeid = iprot.readString();
        struct.setEmployeeidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.roleId = iprot.readI32();
        struct.setRoleIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.wxuserId = iprot.readI32();
        struct.setWxuserIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sex = iprot.readDouble();
        struct.setSexIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ename = iprot.readString();
        struct.setEnameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.efname = iprot.readString();
        struct.setEfnameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cname = iprot.readString();
        struct.setCnameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cfname = iprot.readString();
        struct.setCfnameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isAdmin = iprot.readByte();
        struct.setIsAdminIsSet(true);
      }
      if (incoming.get(12)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(13)) {
        struct.companybody = iprot.readString();
        struct.setCompanybodyIsSet(true);
      }
      if (incoming.get(14)) {
        struct.departmentname = iprot.readString();
        struct.setDepartmentnameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.groupname = iprot.readString();
        struct.setGroupnameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(17)) {
        struct.employdate = iprot.readString();
        struct.setEmploydateIsSet(true);
      }
      if (incoming.get(18)) {
        struct.managername = iprot.readString();
        struct.setManagernameIsSet(true);
      }
      if (incoming.get(19)) {
        struct.city = iprot.readString();
        struct.setCityIsSet(true);
      }
      if (incoming.get(20)) {
        struct.birthday = iprot.readString();
        struct.setBirthdayIsSet(true);
      }
      if (incoming.get(21)) {
        struct.retiredate = iprot.readString();
        struct.setRetiredateIsSet(true);
      }
      if (incoming.get(22)) {
        struct.education = iprot.readString();
        struct.setEducationIsSet(true);
      }
      if (incoming.get(23)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(24)) {
        struct.idcard = iprot.readString();
        struct.setIdcardIsSet(true);
      }
      if (incoming.get(25)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(26)) {
        struct.award = iprot.readI32();
        struct.setAwardIsSet(true);
      }
      if (incoming.get(27)) {
        struct.bindingTime = iprot.readString();
        struct.setBindingTimeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(29)) {
        struct.activation = iprot.readDouble();
        struct.setActivationIsSet(true);
      }
      if (incoming.get(30)) {
        struct.activationCode = iprot.readString();
        struct.setActivationCodeIsSet(true);
      }
      if (incoming.get(31)) {
        struct.disable = iprot.readDouble();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(32)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(33)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(34)) {
        struct.authLevel = iprot.readDouble();
        struct.setAuthLevelIsSet(true);
      }
      if (incoming.get(35)) {
        struct.registerTime = iprot.readString();
        struct.setRegisterTimeIsSet(true);
      }
      if (incoming.get(36)) {
        struct.registerIp = iprot.readString();
        struct.setRegisterIpIsSet(true);
      }
      if (incoming.get(37)) {
        struct.lastLoginTime = iprot.readString();
        struct.setLastLoginTimeIsSet(true);
      }
      if (incoming.get(38)) {
        struct.lastLoginIp = iprot.readString();
        struct.setLastLoginIpIsSet(true);
      }
      if (incoming.get(39)) {
        struct.loginCount = iprot.readDouble();
        struct.setLoginCountIsSet(true);
      }
      if (incoming.get(40)) {
        struct.source = iprot.readDouble();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(41)) {
        struct.downloadToken = iprot.readString();
        struct.setDownloadTokenIsSet(true);
      }
      if (incoming.get(42)) {
        struct.hrWxuserId = iprot.readI32();
        struct.setHrWxuserIdIsSet(true);
      }
      if (incoming.get(43)) {
        struct.customField = iprot.readString();
        struct.setCustomFieldIsSet(true);
      }
      if (incoming.get(44)) {
        struct.isRpSent = iprot.readByte();
        struct.setIsRpSentIsSet(true);
      }
      if (incoming.get(45)) {
        struct.sysuserId = iprot.readI32();
        struct.setSysuserIdIsSet(true);
      }
      if (incoming.get(46)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(47)) {
        struct.sectionId = iprot.readI32();
        struct.setSectionIdIsSet(true);
      }
      if (incoming.get(48)) {
        struct.emailIsvalid = iprot.readByte();
        struct.setEmailIsvalidIsSet(true);
      }
      if (incoming.get(49)) {
        struct.authMethod = iprot.readByte();
        struct.setAuthMethodIsSet(true);
      }
      if (incoming.get(50)) {
        struct.customFieldValues = iprot.readString();
        struct.setCustomFieldValuesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

