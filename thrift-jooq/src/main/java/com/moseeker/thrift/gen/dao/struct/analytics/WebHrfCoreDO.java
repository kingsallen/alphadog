/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.analytics;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-15")
public class WebHrfCoreDO implements org.apache.thrift.TBase<WebHrfCoreDO, WebHrfCoreDO._Fields>, java.io.Serializable, Cloneable, Comparable<WebHrfCoreDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WebHrfCoreDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SUM_FIELD_DESC = new org.apache.thrift.protocol.TField("sum", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField SUM_ACTIVE_FIELD_DESC = new org.apache.thrift.protocol.TField("sumActive", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField DAY_ACTIVE_FIELD_DESC = new org.apache.thrift.protocol.TField("dayActive", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField NEW_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("newPosition", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField NEW_APPLICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("newApplication", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField NEW_REGISTER_FIELD_DESC = new org.apache.thrift.protocol.TField("newRegister", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField YESTERDAY_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("yesterdayPosition", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField YESTERDAY_APPLICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("yesterdayApplication", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField SUM_DOWN_FIELD_DESC = new org.apache.thrift.protocol.TField("sumDown", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField NEW_SHARED_FIELD_DESC = new org.apache.thrift.protocol.TField("newShared", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField MONTH_ACTIVE_FIELD_DESC = new org.apache.thrift.protocol.TField("monthActive", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField OAUTH3_FIELD_DESC = new org.apache.thrift.protocol.TField("oauth3", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField OAUTH4_FIELD_DESC = new org.apache.thrift.protocol.TField("oauth4", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField OAUTH5_FIELD_DESC = new org.apache.thrift.protocol.TField("oauth5", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField OAUTH_C_FIELD_DESC = new org.apache.thrift.protocol.TField("oauthC", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField CARED_FIELD_DESC = new org.apache.thrift.protocol.TField("cared", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField PHONES_FIELD_DESC = new org.apache.thrift.protocol.TField("phones", org.apache.thrift.protocol.TType.I32, (short)19);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WebHrfCoreDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WebHrfCoreDOTupleSchemeFactory();

  public int id; // optional
  public java.lang.String createTime; // optional
  public int sum; // optional
  public int sumActive; // optional
  public int dayActive; // optional
  public int newPosition; // optional
  public int newApplication; // optional
  public int newRegister; // optional
  public int yesterdayPosition; // optional
  public int yesterdayApplication; // optional
  public int sumDown; // optional
  public int newShared; // optional
  public int monthActive; // optional
  public int oauth3; // optional
  public int oauth4; // optional
  public int oauth5; // optional
  public int oauthC; // optional
  public int cared; // optional
  public int phones; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CREATE_TIME((short)2, "createTime"),
    SUM((short)3, "sum"),
    SUM_ACTIVE((short)4, "sumActive"),
    DAY_ACTIVE((short)5, "dayActive"),
    NEW_POSITION((short)6, "newPosition"),
    NEW_APPLICATION((short)7, "newApplication"),
    NEW_REGISTER((short)8, "newRegister"),
    YESTERDAY_POSITION((short)9, "yesterdayPosition"),
    YESTERDAY_APPLICATION((short)10, "yesterdayApplication"),
    SUM_DOWN((short)11, "sumDown"),
    NEW_SHARED((short)12, "newShared"),
    MONTH_ACTIVE((short)13, "monthActive"),
    OAUTH3((short)14, "oauth3"),
    OAUTH4((short)15, "oauth4"),
    OAUTH5((short)16, "oauth5"),
    OAUTH_C((short)17, "oauthC"),
    CARED((short)18, "cared"),
    PHONES((short)19, "phones");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CREATE_TIME
          return CREATE_TIME;
        case 3: // SUM
          return SUM;
        case 4: // SUM_ACTIVE
          return SUM_ACTIVE;
        case 5: // DAY_ACTIVE
          return DAY_ACTIVE;
        case 6: // NEW_POSITION
          return NEW_POSITION;
        case 7: // NEW_APPLICATION
          return NEW_APPLICATION;
        case 8: // NEW_REGISTER
          return NEW_REGISTER;
        case 9: // YESTERDAY_POSITION
          return YESTERDAY_POSITION;
        case 10: // YESTERDAY_APPLICATION
          return YESTERDAY_APPLICATION;
        case 11: // SUM_DOWN
          return SUM_DOWN;
        case 12: // NEW_SHARED
          return NEW_SHARED;
        case 13: // MONTH_ACTIVE
          return MONTH_ACTIVE;
        case 14: // OAUTH3
          return OAUTH3;
        case 15: // OAUTH4
          return OAUTH4;
        case 16: // OAUTH5
          return OAUTH5;
        case 17: // OAUTH_C
          return OAUTH_C;
        case 18: // CARED
          return CARED;
        case 19: // PHONES
          return PHONES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SUM_ISSET_ID = 1;
  private static final int __SUMACTIVE_ISSET_ID = 2;
  private static final int __DAYACTIVE_ISSET_ID = 3;
  private static final int __NEWPOSITION_ISSET_ID = 4;
  private static final int __NEWAPPLICATION_ISSET_ID = 5;
  private static final int __NEWREGISTER_ISSET_ID = 6;
  private static final int __YESTERDAYPOSITION_ISSET_ID = 7;
  private static final int __YESTERDAYAPPLICATION_ISSET_ID = 8;
  private static final int __SUMDOWN_ISSET_ID = 9;
  private static final int __NEWSHARED_ISSET_ID = 10;
  private static final int __MONTHACTIVE_ISSET_ID = 11;
  private static final int __OAUTH3_ISSET_ID = 12;
  private static final int __OAUTH4_ISSET_ID = 13;
  private static final int __OAUTH5_ISSET_ID = 14;
  private static final int __OAUTHC_ISSET_ID = 15;
  private static final int __CARED_ISSET_ID = 16;
  private static final int __PHONES_ISSET_ID = 17;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CREATE_TIME,_Fields.SUM,_Fields.SUM_ACTIVE,_Fields.DAY_ACTIVE,_Fields.NEW_POSITION,_Fields.NEW_APPLICATION,_Fields.NEW_REGISTER,_Fields.YESTERDAY_POSITION,_Fields.YESTERDAY_APPLICATION,_Fields.SUM_DOWN,_Fields.NEW_SHARED,_Fields.MONTH_ACTIVE,_Fields.OAUTH3,_Fields.OAUTH4,_Fields.OAUTH5,_Fields.OAUTH_C,_Fields.CARED,_Fields.PHONES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUM, new org.apache.thrift.meta_data.FieldMetaData("sum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUM_ACTIVE, new org.apache.thrift.meta_data.FieldMetaData("sumActive", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DAY_ACTIVE, new org.apache.thrift.meta_data.FieldMetaData("dayActive", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NEW_POSITION, new org.apache.thrift.meta_data.FieldMetaData("newPosition", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NEW_APPLICATION, new org.apache.thrift.meta_data.FieldMetaData("newApplication", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NEW_REGISTER, new org.apache.thrift.meta_data.FieldMetaData("newRegister", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.YESTERDAY_POSITION, new org.apache.thrift.meta_data.FieldMetaData("yesterdayPosition", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.YESTERDAY_APPLICATION, new org.apache.thrift.meta_data.FieldMetaData("yesterdayApplication", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUM_DOWN, new org.apache.thrift.meta_data.FieldMetaData("sumDown", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NEW_SHARED, new org.apache.thrift.meta_data.FieldMetaData("newShared", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MONTH_ACTIVE, new org.apache.thrift.meta_data.FieldMetaData("monthActive", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OAUTH3, new org.apache.thrift.meta_data.FieldMetaData("oauth3", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OAUTH4, new org.apache.thrift.meta_data.FieldMetaData("oauth4", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OAUTH5, new org.apache.thrift.meta_data.FieldMetaData("oauth5", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OAUTH_C, new org.apache.thrift.meta_data.FieldMetaData("oauthC", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CARED, new org.apache.thrift.meta_data.FieldMetaData("cared", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PHONES, new org.apache.thrift.meta_data.FieldMetaData("phones", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WebHrfCoreDO.class, metaDataMap);
  }

  public WebHrfCoreDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WebHrfCoreDO(WebHrfCoreDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.sum = other.sum;
    this.sumActive = other.sumActive;
    this.dayActive = other.dayActive;
    this.newPosition = other.newPosition;
    this.newApplication = other.newApplication;
    this.newRegister = other.newRegister;
    this.yesterdayPosition = other.yesterdayPosition;
    this.yesterdayApplication = other.yesterdayApplication;
    this.sumDown = other.sumDown;
    this.newShared = other.newShared;
    this.monthActive = other.monthActive;
    this.oauth3 = other.oauth3;
    this.oauth4 = other.oauth4;
    this.oauth5 = other.oauth5;
    this.oauthC = other.oauthC;
    this.cared = other.cared;
    this.phones = other.phones;
  }

  public WebHrfCoreDO deepCopy() {
    return new WebHrfCoreDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.createTime = null;
    setSumIsSet(false);
    this.sum = 0;
    setSumActiveIsSet(false);
    this.sumActive = 0;
    setDayActiveIsSet(false);
    this.dayActive = 0;
    setNewPositionIsSet(false);
    this.newPosition = 0;
    setNewApplicationIsSet(false);
    this.newApplication = 0;
    setNewRegisterIsSet(false);
    this.newRegister = 0;
    setYesterdayPositionIsSet(false);
    this.yesterdayPosition = 0;
    setYesterdayApplicationIsSet(false);
    this.yesterdayApplication = 0;
    setSumDownIsSet(false);
    this.sumDown = 0;
    setNewSharedIsSet(false);
    this.newShared = 0;
    setMonthActiveIsSet(false);
    this.monthActive = 0;
    setOauth3IsSet(false);
    this.oauth3 = 0;
    setOauth4IsSet(false);
    this.oauth4 = 0;
    setOauth5IsSet(false);
    this.oauth5 = 0;
    setOauthCIsSet(false);
    this.oauthC = 0;
    setCaredIsSet(false);
    this.cared = 0;
    setPhonesIsSet(false);
    this.phones = 0;
  }

  public int getId() {
    return this.id;
  }

  public WebHrfCoreDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public WebHrfCoreDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getSum() {
    return this.sum;
  }

  public WebHrfCoreDO setSum(int sum) {
    this.sum = sum;
    setSumIsSet(true);
    return this;
  }

  public void unsetSum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUM_ISSET_ID);
  }

  /** Returns true if field sum is set (has been assigned a value) and false otherwise */
  public boolean isSetSum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUM_ISSET_ID);
  }

  public void setSumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUM_ISSET_ID, value);
  }

  public int getSumActive() {
    return this.sumActive;
  }

  public WebHrfCoreDO setSumActive(int sumActive) {
    this.sumActive = sumActive;
    setSumActiveIsSet(true);
    return this;
  }

  public void unsetSumActive() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUMACTIVE_ISSET_ID);
  }

  /** Returns true if field sumActive is set (has been assigned a value) and false otherwise */
  public boolean isSetSumActive() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUMACTIVE_ISSET_ID);
  }

  public void setSumActiveIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUMACTIVE_ISSET_ID, value);
  }

  public int getDayActive() {
    return this.dayActive;
  }

  public WebHrfCoreDO setDayActive(int dayActive) {
    this.dayActive = dayActive;
    setDayActiveIsSet(true);
    return this;
  }

  public void unsetDayActive() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DAYACTIVE_ISSET_ID);
  }

  /** Returns true if field dayActive is set (has been assigned a value) and false otherwise */
  public boolean isSetDayActive() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DAYACTIVE_ISSET_ID);
  }

  public void setDayActiveIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DAYACTIVE_ISSET_ID, value);
  }

  public int getNewPosition() {
    return this.newPosition;
  }

  public WebHrfCoreDO setNewPosition(int newPosition) {
    this.newPosition = newPosition;
    setNewPositionIsSet(true);
    return this;
  }

  public void unsetNewPosition() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWPOSITION_ISSET_ID);
  }

  /** Returns true if field newPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetNewPosition() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWPOSITION_ISSET_ID);
  }

  public void setNewPositionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWPOSITION_ISSET_ID, value);
  }

  public int getNewApplication() {
    return this.newApplication;
  }

  public WebHrfCoreDO setNewApplication(int newApplication) {
    this.newApplication = newApplication;
    setNewApplicationIsSet(true);
    return this;
  }

  public void unsetNewApplication() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWAPPLICATION_ISSET_ID);
  }

  /** Returns true if field newApplication is set (has been assigned a value) and false otherwise */
  public boolean isSetNewApplication() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWAPPLICATION_ISSET_ID);
  }

  public void setNewApplicationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWAPPLICATION_ISSET_ID, value);
  }

  public int getNewRegister() {
    return this.newRegister;
  }

  public WebHrfCoreDO setNewRegister(int newRegister) {
    this.newRegister = newRegister;
    setNewRegisterIsSet(true);
    return this;
  }

  public void unsetNewRegister() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWREGISTER_ISSET_ID);
  }

  /** Returns true if field newRegister is set (has been assigned a value) and false otherwise */
  public boolean isSetNewRegister() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWREGISTER_ISSET_ID);
  }

  public void setNewRegisterIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWREGISTER_ISSET_ID, value);
  }

  public int getYesterdayPosition() {
    return this.yesterdayPosition;
  }

  public WebHrfCoreDO setYesterdayPosition(int yesterdayPosition) {
    this.yesterdayPosition = yesterdayPosition;
    setYesterdayPositionIsSet(true);
    return this;
  }

  public void unsetYesterdayPosition() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __YESTERDAYPOSITION_ISSET_ID);
  }

  /** Returns true if field yesterdayPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetYesterdayPosition() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __YESTERDAYPOSITION_ISSET_ID);
  }

  public void setYesterdayPositionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __YESTERDAYPOSITION_ISSET_ID, value);
  }

  public int getYesterdayApplication() {
    return this.yesterdayApplication;
  }

  public WebHrfCoreDO setYesterdayApplication(int yesterdayApplication) {
    this.yesterdayApplication = yesterdayApplication;
    setYesterdayApplicationIsSet(true);
    return this;
  }

  public void unsetYesterdayApplication() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __YESTERDAYAPPLICATION_ISSET_ID);
  }

  /** Returns true if field yesterdayApplication is set (has been assigned a value) and false otherwise */
  public boolean isSetYesterdayApplication() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __YESTERDAYAPPLICATION_ISSET_ID);
  }

  public void setYesterdayApplicationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __YESTERDAYAPPLICATION_ISSET_ID, value);
  }

  public int getSumDown() {
    return this.sumDown;
  }

  public WebHrfCoreDO setSumDown(int sumDown) {
    this.sumDown = sumDown;
    setSumDownIsSet(true);
    return this;
  }

  public void unsetSumDown() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUMDOWN_ISSET_ID);
  }

  /** Returns true if field sumDown is set (has been assigned a value) and false otherwise */
  public boolean isSetSumDown() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUMDOWN_ISSET_ID);
  }

  public void setSumDownIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUMDOWN_ISSET_ID, value);
  }

  public int getNewShared() {
    return this.newShared;
  }

  public WebHrfCoreDO setNewShared(int newShared) {
    this.newShared = newShared;
    setNewSharedIsSet(true);
    return this;
  }

  public void unsetNewShared() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWSHARED_ISSET_ID);
  }

  /** Returns true if field newShared is set (has been assigned a value) and false otherwise */
  public boolean isSetNewShared() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWSHARED_ISSET_ID);
  }

  public void setNewSharedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWSHARED_ISSET_ID, value);
  }

  public int getMonthActive() {
    return this.monthActive;
  }

  public WebHrfCoreDO setMonthActive(int monthActive) {
    this.monthActive = monthActive;
    setMonthActiveIsSet(true);
    return this;
  }

  public void unsetMonthActive() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MONTHACTIVE_ISSET_ID);
  }

  /** Returns true if field monthActive is set (has been assigned a value) and false otherwise */
  public boolean isSetMonthActive() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MONTHACTIVE_ISSET_ID);
  }

  public void setMonthActiveIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MONTHACTIVE_ISSET_ID, value);
  }

  public int getOauth3() {
    return this.oauth3;
  }

  public WebHrfCoreDO setOauth3(int oauth3) {
    this.oauth3 = oauth3;
    setOauth3IsSet(true);
    return this;
  }

  public void unsetOauth3() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OAUTH3_ISSET_ID);
  }

  /** Returns true if field oauth3 is set (has been assigned a value) and false otherwise */
  public boolean isSetOauth3() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OAUTH3_ISSET_ID);
  }

  public void setOauth3IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OAUTH3_ISSET_ID, value);
  }

  public int getOauth4() {
    return this.oauth4;
  }

  public WebHrfCoreDO setOauth4(int oauth4) {
    this.oauth4 = oauth4;
    setOauth4IsSet(true);
    return this;
  }

  public void unsetOauth4() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OAUTH4_ISSET_ID);
  }

  /** Returns true if field oauth4 is set (has been assigned a value) and false otherwise */
  public boolean isSetOauth4() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OAUTH4_ISSET_ID);
  }

  public void setOauth4IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OAUTH4_ISSET_ID, value);
  }

  public int getOauth5() {
    return this.oauth5;
  }

  public WebHrfCoreDO setOauth5(int oauth5) {
    this.oauth5 = oauth5;
    setOauth5IsSet(true);
    return this;
  }

  public void unsetOauth5() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OAUTH5_ISSET_ID);
  }

  /** Returns true if field oauth5 is set (has been assigned a value) and false otherwise */
  public boolean isSetOauth5() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OAUTH5_ISSET_ID);
  }

  public void setOauth5IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OAUTH5_ISSET_ID, value);
  }

  public int getOauthC() {
    return this.oauthC;
  }

  public WebHrfCoreDO setOauthC(int oauthC) {
    this.oauthC = oauthC;
    setOauthCIsSet(true);
    return this;
  }

  public void unsetOauthC() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OAUTHC_ISSET_ID);
  }

  /** Returns true if field oauthC is set (has been assigned a value) and false otherwise */
  public boolean isSetOauthC() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OAUTHC_ISSET_ID);
  }

  public void setOauthCIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OAUTHC_ISSET_ID, value);
  }

  public int getCared() {
    return this.cared;
  }

  public WebHrfCoreDO setCared(int cared) {
    this.cared = cared;
    setCaredIsSet(true);
    return this;
  }

  public void unsetCared() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CARED_ISSET_ID);
  }

  /** Returns true if field cared is set (has been assigned a value) and false otherwise */
  public boolean isSetCared() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CARED_ISSET_ID);
  }

  public void setCaredIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CARED_ISSET_ID, value);
  }

  public int getPhones() {
    return this.phones;
  }

  public WebHrfCoreDO setPhones(int phones) {
    this.phones = phones;
    setPhonesIsSet(true);
    return this;
  }

  public void unsetPhones() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PHONES_ISSET_ID);
  }

  /** Returns true if field phones is set (has been assigned a value) and false otherwise */
  public boolean isSetPhones() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PHONES_ISSET_ID);
  }

  public void setPhonesIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PHONES_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case SUM:
      if (value == null) {
        unsetSum();
      } else {
        setSum((java.lang.Integer)value);
      }
      break;

    case SUM_ACTIVE:
      if (value == null) {
        unsetSumActive();
      } else {
        setSumActive((java.lang.Integer)value);
      }
      break;

    case DAY_ACTIVE:
      if (value == null) {
        unsetDayActive();
      } else {
        setDayActive((java.lang.Integer)value);
      }
      break;

    case NEW_POSITION:
      if (value == null) {
        unsetNewPosition();
      } else {
        setNewPosition((java.lang.Integer)value);
      }
      break;

    case NEW_APPLICATION:
      if (value == null) {
        unsetNewApplication();
      } else {
        setNewApplication((java.lang.Integer)value);
      }
      break;

    case NEW_REGISTER:
      if (value == null) {
        unsetNewRegister();
      } else {
        setNewRegister((java.lang.Integer)value);
      }
      break;

    case YESTERDAY_POSITION:
      if (value == null) {
        unsetYesterdayPosition();
      } else {
        setYesterdayPosition((java.lang.Integer)value);
      }
      break;

    case YESTERDAY_APPLICATION:
      if (value == null) {
        unsetYesterdayApplication();
      } else {
        setYesterdayApplication((java.lang.Integer)value);
      }
      break;

    case SUM_DOWN:
      if (value == null) {
        unsetSumDown();
      } else {
        setSumDown((java.lang.Integer)value);
      }
      break;

    case NEW_SHARED:
      if (value == null) {
        unsetNewShared();
      } else {
        setNewShared((java.lang.Integer)value);
      }
      break;

    case MONTH_ACTIVE:
      if (value == null) {
        unsetMonthActive();
      } else {
        setMonthActive((java.lang.Integer)value);
      }
      break;

    case OAUTH3:
      if (value == null) {
        unsetOauth3();
      } else {
        setOauth3((java.lang.Integer)value);
      }
      break;

    case OAUTH4:
      if (value == null) {
        unsetOauth4();
      } else {
        setOauth4((java.lang.Integer)value);
      }
      break;

    case OAUTH5:
      if (value == null) {
        unsetOauth5();
      } else {
        setOauth5((java.lang.Integer)value);
      }
      break;

    case OAUTH_C:
      if (value == null) {
        unsetOauthC();
      } else {
        setOauthC((java.lang.Integer)value);
      }
      break;

    case CARED:
      if (value == null) {
        unsetCared();
      } else {
        setCared((java.lang.Integer)value);
      }
      break;

    case PHONES:
      if (value == null) {
        unsetPhones();
      } else {
        setPhones((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CREATE_TIME:
      return getCreateTime();

    case SUM:
      return getSum();

    case SUM_ACTIVE:
      return getSumActive();

    case DAY_ACTIVE:
      return getDayActive();

    case NEW_POSITION:
      return getNewPosition();

    case NEW_APPLICATION:
      return getNewApplication();

    case NEW_REGISTER:
      return getNewRegister();

    case YESTERDAY_POSITION:
      return getYesterdayPosition();

    case YESTERDAY_APPLICATION:
      return getYesterdayApplication();

    case SUM_DOWN:
      return getSumDown();

    case NEW_SHARED:
      return getNewShared();

    case MONTH_ACTIVE:
      return getMonthActive();

    case OAUTH3:
      return getOauth3();

    case OAUTH4:
      return getOauth4();

    case OAUTH5:
      return getOauth5();

    case OAUTH_C:
      return getOauthC();

    case CARED:
      return getCared();

    case PHONES:
      return getPhones();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case SUM:
      return isSetSum();
    case SUM_ACTIVE:
      return isSetSumActive();
    case DAY_ACTIVE:
      return isSetDayActive();
    case NEW_POSITION:
      return isSetNewPosition();
    case NEW_APPLICATION:
      return isSetNewApplication();
    case NEW_REGISTER:
      return isSetNewRegister();
    case YESTERDAY_POSITION:
      return isSetYesterdayPosition();
    case YESTERDAY_APPLICATION:
      return isSetYesterdayApplication();
    case SUM_DOWN:
      return isSetSumDown();
    case NEW_SHARED:
      return isSetNewShared();
    case MONTH_ACTIVE:
      return isSetMonthActive();
    case OAUTH3:
      return isSetOauth3();
    case OAUTH4:
      return isSetOauth4();
    case OAUTH5:
      return isSetOauth5();
    case OAUTH_C:
      return isSetOauthC();
    case CARED:
      return isSetCared();
    case PHONES:
      return isSetPhones();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WebHrfCoreDO)
      return this.equals((WebHrfCoreDO)that);
    return false;
  }

  public boolean equals(WebHrfCoreDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_sum = true && this.isSetSum();
    boolean that_present_sum = true && that.isSetSum();
    if (this_present_sum || that_present_sum) {
      if (!(this_present_sum && that_present_sum))
        return false;
      if (this.sum != that.sum)
        return false;
    }

    boolean this_present_sumActive = true && this.isSetSumActive();
    boolean that_present_sumActive = true && that.isSetSumActive();
    if (this_present_sumActive || that_present_sumActive) {
      if (!(this_present_sumActive && that_present_sumActive))
        return false;
      if (this.sumActive != that.sumActive)
        return false;
    }

    boolean this_present_dayActive = true && this.isSetDayActive();
    boolean that_present_dayActive = true && that.isSetDayActive();
    if (this_present_dayActive || that_present_dayActive) {
      if (!(this_present_dayActive && that_present_dayActive))
        return false;
      if (this.dayActive != that.dayActive)
        return false;
    }

    boolean this_present_newPosition = true && this.isSetNewPosition();
    boolean that_present_newPosition = true && that.isSetNewPosition();
    if (this_present_newPosition || that_present_newPosition) {
      if (!(this_present_newPosition && that_present_newPosition))
        return false;
      if (this.newPosition != that.newPosition)
        return false;
    }

    boolean this_present_newApplication = true && this.isSetNewApplication();
    boolean that_present_newApplication = true && that.isSetNewApplication();
    if (this_present_newApplication || that_present_newApplication) {
      if (!(this_present_newApplication && that_present_newApplication))
        return false;
      if (this.newApplication != that.newApplication)
        return false;
    }

    boolean this_present_newRegister = true && this.isSetNewRegister();
    boolean that_present_newRegister = true && that.isSetNewRegister();
    if (this_present_newRegister || that_present_newRegister) {
      if (!(this_present_newRegister && that_present_newRegister))
        return false;
      if (this.newRegister != that.newRegister)
        return false;
    }

    boolean this_present_yesterdayPosition = true && this.isSetYesterdayPosition();
    boolean that_present_yesterdayPosition = true && that.isSetYesterdayPosition();
    if (this_present_yesterdayPosition || that_present_yesterdayPosition) {
      if (!(this_present_yesterdayPosition && that_present_yesterdayPosition))
        return false;
      if (this.yesterdayPosition != that.yesterdayPosition)
        return false;
    }

    boolean this_present_yesterdayApplication = true && this.isSetYesterdayApplication();
    boolean that_present_yesterdayApplication = true && that.isSetYesterdayApplication();
    if (this_present_yesterdayApplication || that_present_yesterdayApplication) {
      if (!(this_present_yesterdayApplication && that_present_yesterdayApplication))
        return false;
      if (this.yesterdayApplication != that.yesterdayApplication)
        return false;
    }

    boolean this_present_sumDown = true && this.isSetSumDown();
    boolean that_present_sumDown = true && that.isSetSumDown();
    if (this_present_sumDown || that_present_sumDown) {
      if (!(this_present_sumDown && that_present_sumDown))
        return false;
      if (this.sumDown != that.sumDown)
        return false;
    }

    boolean this_present_newShared = true && this.isSetNewShared();
    boolean that_present_newShared = true && that.isSetNewShared();
    if (this_present_newShared || that_present_newShared) {
      if (!(this_present_newShared && that_present_newShared))
        return false;
      if (this.newShared != that.newShared)
        return false;
    }

    boolean this_present_monthActive = true && this.isSetMonthActive();
    boolean that_present_monthActive = true && that.isSetMonthActive();
    if (this_present_monthActive || that_present_monthActive) {
      if (!(this_present_monthActive && that_present_monthActive))
        return false;
      if (this.monthActive != that.monthActive)
        return false;
    }

    boolean this_present_oauth3 = true && this.isSetOauth3();
    boolean that_present_oauth3 = true && that.isSetOauth3();
    if (this_present_oauth3 || that_present_oauth3) {
      if (!(this_present_oauth3 && that_present_oauth3))
        return false;
      if (this.oauth3 != that.oauth3)
        return false;
    }

    boolean this_present_oauth4 = true && this.isSetOauth4();
    boolean that_present_oauth4 = true && that.isSetOauth4();
    if (this_present_oauth4 || that_present_oauth4) {
      if (!(this_present_oauth4 && that_present_oauth4))
        return false;
      if (this.oauth4 != that.oauth4)
        return false;
    }

    boolean this_present_oauth5 = true && this.isSetOauth5();
    boolean that_present_oauth5 = true && that.isSetOauth5();
    if (this_present_oauth5 || that_present_oauth5) {
      if (!(this_present_oauth5 && that_present_oauth5))
        return false;
      if (this.oauth5 != that.oauth5)
        return false;
    }

    boolean this_present_oauthC = true && this.isSetOauthC();
    boolean that_present_oauthC = true && that.isSetOauthC();
    if (this_present_oauthC || that_present_oauthC) {
      if (!(this_present_oauthC && that_present_oauthC))
        return false;
      if (this.oauthC != that.oauthC)
        return false;
    }

    boolean this_present_cared = true && this.isSetCared();
    boolean that_present_cared = true && that.isSetCared();
    if (this_present_cared || that_present_cared) {
      if (!(this_present_cared && that_present_cared))
        return false;
      if (this.cared != that.cared)
        return false;
    }

    boolean this_present_phones = true && this.isSetPhones();
    boolean that_present_phones = true && that.isSetPhones();
    if (this_present_phones || that_present_phones) {
      if (!(this_present_phones && that_present_phones))
        return false;
      if (this.phones != that.phones)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetSum()) ? 131071 : 524287);
    if (isSetSum())
      hashCode = hashCode * 8191 + sum;

    hashCode = hashCode * 8191 + ((isSetSumActive()) ? 131071 : 524287);
    if (isSetSumActive())
      hashCode = hashCode * 8191 + sumActive;

    hashCode = hashCode * 8191 + ((isSetDayActive()) ? 131071 : 524287);
    if (isSetDayActive())
      hashCode = hashCode * 8191 + dayActive;

    hashCode = hashCode * 8191 + ((isSetNewPosition()) ? 131071 : 524287);
    if (isSetNewPosition())
      hashCode = hashCode * 8191 + newPosition;

    hashCode = hashCode * 8191 + ((isSetNewApplication()) ? 131071 : 524287);
    if (isSetNewApplication())
      hashCode = hashCode * 8191 + newApplication;

    hashCode = hashCode * 8191 + ((isSetNewRegister()) ? 131071 : 524287);
    if (isSetNewRegister())
      hashCode = hashCode * 8191 + newRegister;

    hashCode = hashCode * 8191 + ((isSetYesterdayPosition()) ? 131071 : 524287);
    if (isSetYesterdayPosition())
      hashCode = hashCode * 8191 + yesterdayPosition;

    hashCode = hashCode * 8191 + ((isSetYesterdayApplication()) ? 131071 : 524287);
    if (isSetYesterdayApplication())
      hashCode = hashCode * 8191 + yesterdayApplication;

    hashCode = hashCode * 8191 + ((isSetSumDown()) ? 131071 : 524287);
    if (isSetSumDown())
      hashCode = hashCode * 8191 + sumDown;

    hashCode = hashCode * 8191 + ((isSetNewShared()) ? 131071 : 524287);
    if (isSetNewShared())
      hashCode = hashCode * 8191 + newShared;

    hashCode = hashCode * 8191 + ((isSetMonthActive()) ? 131071 : 524287);
    if (isSetMonthActive())
      hashCode = hashCode * 8191 + monthActive;

    hashCode = hashCode * 8191 + ((isSetOauth3()) ? 131071 : 524287);
    if (isSetOauth3())
      hashCode = hashCode * 8191 + oauth3;

    hashCode = hashCode * 8191 + ((isSetOauth4()) ? 131071 : 524287);
    if (isSetOauth4())
      hashCode = hashCode * 8191 + oauth4;

    hashCode = hashCode * 8191 + ((isSetOauth5()) ? 131071 : 524287);
    if (isSetOauth5())
      hashCode = hashCode * 8191 + oauth5;

    hashCode = hashCode * 8191 + ((isSetOauthC()) ? 131071 : 524287);
    if (isSetOauthC())
      hashCode = hashCode * 8191 + oauthC;

    hashCode = hashCode * 8191 + ((isSetCared()) ? 131071 : 524287);
    if (isSetCared())
      hashCode = hashCode * 8191 + cared;

    hashCode = hashCode * 8191 + ((isSetPhones()) ? 131071 : 524287);
    if (isSetPhones())
      hashCode = hashCode * 8191 + phones;

    return hashCode;
  }

  @Override
  public int compareTo(WebHrfCoreDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSum()).compareTo(other.isSetSum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sum, other.sum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSumActive()).compareTo(other.isSetSumActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSumActive()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sumActive, other.sumActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDayActive()).compareTo(other.isSetDayActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayActive()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dayActive, other.dayActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNewPosition()).compareTo(other.isSetNewPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newPosition, other.newPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNewApplication()).compareTo(other.isSetNewApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewApplication()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newApplication, other.newApplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNewRegister()).compareTo(other.isSetNewRegister());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewRegister()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newRegister, other.newRegister);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetYesterdayPosition()).compareTo(other.isSetYesterdayPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYesterdayPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yesterdayPosition, other.yesterdayPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetYesterdayApplication()).compareTo(other.isSetYesterdayApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYesterdayApplication()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yesterdayApplication, other.yesterdayApplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSumDown()).compareTo(other.isSetSumDown());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSumDown()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sumDown, other.sumDown);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNewShared()).compareTo(other.isSetNewShared());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewShared()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newShared, other.newShared);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMonthActive()).compareTo(other.isSetMonthActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMonthActive()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.monthActive, other.monthActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOauth3()).compareTo(other.isSetOauth3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOauth3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oauth3, other.oauth3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOauth4()).compareTo(other.isSetOauth4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOauth4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oauth4, other.oauth4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOauth5()).compareTo(other.isSetOauth5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOauth5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oauth5, other.oauth5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOauthC()).compareTo(other.isSetOauthC());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOauthC()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oauthC, other.oauthC);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCared()).compareTo(other.isSetCared());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCared()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cared, other.cared);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPhones()).compareTo(other.isSetPhones());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhones()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phones, other.phones);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WebHrfCoreDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetSum()) {
      if (!first) sb.append(", ");
      sb.append("sum:");
      sb.append(this.sum);
      first = false;
    }
    if (isSetSumActive()) {
      if (!first) sb.append(", ");
      sb.append("sumActive:");
      sb.append(this.sumActive);
      first = false;
    }
    if (isSetDayActive()) {
      if (!first) sb.append(", ");
      sb.append("dayActive:");
      sb.append(this.dayActive);
      first = false;
    }
    if (isSetNewPosition()) {
      if (!first) sb.append(", ");
      sb.append("newPosition:");
      sb.append(this.newPosition);
      first = false;
    }
    if (isSetNewApplication()) {
      if (!first) sb.append(", ");
      sb.append("newApplication:");
      sb.append(this.newApplication);
      first = false;
    }
    if (isSetNewRegister()) {
      if (!first) sb.append(", ");
      sb.append("newRegister:");
      sb.append(this.newRegister);
      first = false;
    }
    if (isSetYesterdayPosition()) {
      if (!first) sb.append(", ");
      sb.append("yesterdayPosition:");
      sb.append(this.yesterdayPosition);
      first = false;
    }
    if (isSetYesterdayApplication()) {
      if (!first) sb.append(", ");
      sb.append("yesterdayApplication:");
      sb.append(this.yesterdayApplication);
      first = false;
    }
    if (isSetSumDown()) {
      if (!first) sb.append(", ");
      sb.append("sumDown:");
      sb.append(this.sumDown);
      first = false;
    }
    if (isSetNewShared()) {
      if (!first) sb.append(", ");
      sb.append("newShared:");
      sb.append(this.newShared);
      first = false;
    }
    if (isSetMonthActive()) {
      if (!first) sb.append(", ");
      sb.append("monthActive:");
      sb.append(this.monthActive);
      first = false;
    }
    if (isSetOauth3()) {
      if (!first) sb.append(", ");
      sb.append("oauth3:");
      sb.append(this.oauth3);
      first = false;
    }
    if (isSetOauth4()) {
      if (!first) sb.append(", ");
      sb.append("oauth4:");
      sb.append(this.oauth4);
      first = false;
    }
    if (isSetOauth5()) {
      if (!first) sb.append(", ");
      sb.append("oauth5:");
      sb.append(this.oauth5);
      first = false;
    }
    if (isSetOauthC()) {
      if (!first) sb.append(", ");
      sb.append("oauthC:");
      sb.append(this.oauthC);
      first = false;
    }
    if (isSetCared()) {
      if (!first) sb.append(", ");
      sb.append("cared:");
      sb.append(this.cared);
      first = false;
    }
    if (isSetPhones()) {
      if (!first) sb.append(", ");
      sb.append("phones:");
      sb.append(this.phones);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WebHrfCoreDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebHrfCoreDOStandardScheme getScheme() {
      return new WebHrfCoreDOStandardScheme();
    }
  }

  private static class WebHrfCoreDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<WebHrfCoreDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WebHrfCoreDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sum = iprot.readI32();
              struct.setSumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SUM_ACTIVE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sumActive = iprot.readI32();
              struct.setSumActiveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DAY_ACTIVE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dayActive = iprot.readI32();
              struct.setDayActiveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NEW_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newPosition = iprot.readI32();
              struct.setNewPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NEW_APPLICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newApplication = iprot.readI32();
              struct.setNewApplicationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NEW_REGISTER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newRegister = iprot.readI32();
              struct.setNewRegisterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // YESTERDAY_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.yesterdayPosition = iprot.readI32();
              struct.setYesterdayPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // YESTERDAY_APPLICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.yesterdayApplication = iprot.readI32();
              struct.setYesterdayApplicationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SUM_DOWN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sumDown = iprot.readI32();
              struct.setSumDownIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NEW_SHARED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newShared = iprot.readI32();
              struct.setNewSharedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MONTH_ACTIVE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.monthActive = iprot.readI32();
              struct.setMonthActiveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // OAUTH3
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oauth3 = iprot.readI32();
              struct.setOauth3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // OAUTH4
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oauth4 = iprot.readI32();
              struct.setOauth4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // OAUTH5
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oauth5 = iprot.readI32();
              struct.setOauth5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // OAUTH_C
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.oauthC = iprot.readI32();
              struct.setOauthCIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CARED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cared = iprot.readI32();
              struct.setCaredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PHONES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.phones = iprot.readI32();
              struct.setPhonesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WebHrfCoreDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSum()) {
        oprot.writeFieldBegin(SUM_FIELD_DESC);
        oprot.writeI32(struct.sum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSumActive()) {
        oprot.writeFieldBegin(SUM_ACTIVE_FIELD_DESC);
        oprot.writeI32(struct.sumActive);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDayActive()) {
        oprot.writeFieldBegin(DAY_ACTIVE_FIELD_DESC);
        oprot.writeI32(struct.dayActive);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNewPosition()) {
        oprot.writeFieldBegin(NEW_POSITION_FIELD_DESC);
        oprot.writeI32(struct.newPosition);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNewApplication()) {
        oprot.writeFieldBegin(NEW_APPLICATION_FIELD_DESC);
        oprot.writeI32(struct.newApplication);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNewRegister()) {
        oprot.writeFieldBegin(NEW_REGISTER_FIELD_DESC);
        oprot.writeI32(struct.newRegister);
        oprot.writeFieldEnd();
      }
      if (struct.isSetYesterdayPosition()) {
        oprot.writeFieldBegin(YESTERDAY_POSITION_FIELD_DESC);
        oprot.writeI32(struct.yesterdayPosition);
        oprot.writeFieldEnd();
      }
      if (struct.isSetYesterdayApplication()) {
        oprot.writeFieldBegin(YESTERDAY_APPLICATION_FIELD_DESC);
        oprot.writeI32(struct.yesterdayApplication);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSumDown()) {
        oprot.writeFieldBegin(SUM_DOWN_FIELD_DESC);
        oprot.writeI32(struct.sumDown);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNewShared()) {
        oprot.writeFieldBegin(NEW_SHARED_FIELD_DESC);
        oprot.writeI32(struct.newShared);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMonthActive()) {
        oprot.writeFieldBegin(MONTH_ACTIVE_FIELD_DESC);
        oprot.writeI32(struct.monthActive);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOauth3()) {
        oprot.writeFieldBegin(OAUTH3_FIELD_DESC);
        oprot.writeI32(struct.oauth3);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOauth4()) {
        oprot.writeFieldBegin(OAUTH4_FIELD_DESC);
        oprot.writeI32(struct.oauth4);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOauth5()) {
        oprot.writeFieldBegin(OAUTH5_FIELD_DESC);
        oprot.writeI32(struct.oauth5);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOauthC()) {
        oprot.writeFieldBegin(OAUTH_C_FIELD_DESC);
        oprot.writeI32(struct.oauthC);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCared()) {
        oprot.writeFieldBegin(CARED_FIELD_DESC);
        oprot.writeI32(struct.cared);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPhones()) {
        oprot.writeFieldBegin(PHONES_FIELD_DESC);
        oprot.writeI32(struct.phones);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WebHrfCoreDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebHrfCoreDOTupleScheme getScheme() {
      return new WebHrfCoreDOTupleScheme();
    }
  }

  private static class WebHrfCoreDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<WebHrfCoreDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WebHrfCoreDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(1);
      }
      if (struct.isSetSum()) {
        optionals.set(2);
      }
      if (struct.isSetSumActive()) {
        optionals.set(3);
      }
      if (struct.isSetDayActive()) {
        optionals.set(4);
      }
      if (struct.isSetNewPosition()) {
        optionals.set(5);
      }
      if (struct.isSetNewApplication()) {
        optionals.set(6);
      }
      if (struct.isSetNewRegister()) {
        optionals.set(7);
      }
      if (struct.isSetYesterdayPosition()) {
        optionals.set(8);
      }
      if (struct.isSetYesterdayApplication()) {
        optionals.set(9);
      }
      if (struct.isSetSumDown()) {
        optionals.set(10);
      }
      if (struct.isSetNewShared()) {
        optionals.set(11);
      }
      if (struct.isSetMonthActive()) {
        optionals.set(12);
      }
      if (struct.isSetOauth3()) {
        optionals.set(13);
      }
      if (struct.isSetOauth4()) {
        optionals.set(14);
      }
      if (struct.isSetOauth5()) {
        optionals.set(15);
      }
      if (struct.isSetOauthC()) {
        optionals.set(16);
      }
      if (struct.isSetCared()) {
        optionals.set(17);
      }
      if (struct.isSetPhones()) {
        optionals.set(18);
      }
      oprot.writeBitSet(optionals, 19);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetSum()) {
        oprot.writeI32(struct.sum);
      }
      if (struct.isSetSumActive()) {
        oprot.writeI32(struct.sumActive);
      }
      if (struct.isSetDayActive()) {
        oprot.writeI32(struct.dayActive);
      }
      if (struct.isSetNewPosition()) {
        oprot.writeI32(struct.newPosition);
      }
      if (struct.isSetNewApplication()) {
        oprot.writeI32(struct.newApplication);
      }
      if (struct.isSetNewRegister()) {
        oprot.writeI32(struct.newRegister);
      }
      if (struct.isSetYesterdayPosition()) {
        oprot.writeI32(struct.yesterdayPosition);
      }
      if (struct.isSetYesterdayApplication()) {
        oprot.writeI32(struct.yesterdayApplication);
      }
      if (struct.isSetSumDown()) {
        oprot.writeI32(struct.sumDown);
      }
      if (struct.isSetNewShared()) {
        oprot.writeI32(struct.newShared);
      }
      if (struct.isSetMonthActive()) {
        oprot.writeI32(struct.monthActive);
      }
      if (struct.isSetOauth3()) {
        oprot.writeI32(struct.oauth3);
      }
      if (struct.isSetOauth4()) {
        oprot.writeI32(struct.oauth4);
      }
      if (struct.isSetOauth5()) {
        oprot.writeI32(struct.oauth5);
      }
      if (struct.isSetOauthC()) {
        oprot.writeI32(struct.oauthC);
      }
      if (struct.isSetCared()) {
        oprot.writeI32(struct.cared);
      }
      if (struct.isSetPhones()) {
        oprot.writeI32(struct.phones);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WebHrfCoreDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(19);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.sum = iprot.readI32();
        struct.setSumIsSet(true);
      }
      if (incoming.get(3)) {
        struct.sumActive = iprot.readI32();
        struct.setSumActiveIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dayActive = iprot.readI32();
        struct.setDayActiveIsSet(true);
      }
      if (incoming.get(5)) {
        struct.newPosition = iprot.readI32();
        struct.setNewPositionIsSet(true);
      }
      if (incoming.get(6)) {
        struct.newApplication = iprot.readI32();
        struct.setNewApplicationIsSet(true);
      }
      if (incoming.get(7)) {
        struct.newRegister = iprot.readI32();
        struct.setNewRegisterIsSet(true);
      }
      if (incoming.get(8)) {
        struct.yesterdayPosition = iprot.readI32();
        struct.setYesterdayPositionIsSet(true);
      }
      if (incoming.get(9)) {
        struct.yesterdayApplication = iprot.readI32();
        struct.setYesterdayApplicationIsSet(true);
      }
      if (incoming.get(10)) {
        struct.sumDown = iprot.readI32();
        struct.setSumDownIsSet(true);
      }
      if (incoming.get(11)) {
        struct.newShared = iprot.readI32();
        struct.setNewSharedIsSet(true);
      }
      if (incoming.get(12)) {
        struct.monthActive = iprot.readI32();
        struct.setMonthActiveIsSet(true);
      }
      if (incoming.get(13)) {
        struct.oauth3 = iprot.readI32();
        struct.setOauth3IsSet(true);
      }
      if (incoming.get(14)) {
        struct.oauth4 = iprot.readI32();
        struct.setOauth4IsSet(true);
      }
      if (incoming.get(15)) {
        struct.oauth5 = iprot.readI32();
        struct.setOauth5IsSet(true);
      }
      if (incoming.get(16)) {
        struct.oauthC = iprot.readI32();
        struct.setOauthCIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cared = iprot.readI32();
        struct.setCaredIsSet(true);
      }
      if (incoming.get(18)) {
        struct.phones = iprot.readI32();
        struct.setPhonesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

