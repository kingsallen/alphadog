/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.employee.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-07-20")
public class ReferralsCard implements org.apache.thrift.TBase<ReferralsCard, ReferralsCard._Fields>, java.io.Serializable, Cloneable, Comparable<ReferralsCard> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReferralsCard");

  private static final org.apache.thrift.protocol.TField IS_CLAIMED_FIELD_DESC = new org.apache.thrift.protocol.TField("isClaimed", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField JOB_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobTitle", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField FAILED_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("failedTitle", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRESENTEE_FIRST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("presenteeFirstName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RECOM_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("recomName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PRESENTEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("presenteeId", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ReferralsCardStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ReferralsCardTupleSchemeFactory();

  public int isClaimed; // optional
  public String companyName; // optional
  public java.util.List<String> jobTitle; // optional
  public String failedTitle; // optional
  public String presenteeFirstName; // optional
  public String recomName; // optional
  public int presenteeId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    IS_CLAIMED((short)1, "isClaimed"),
    COMPANY_NAME((short)2, "companyName"),
    JOB_TITLE((short)3, "jobTitle"),
    FAILED_TITLE((short)4, "failedTitle"),
    PRESENTEE_FIRST_NAME((short)5, "presenteeFirstName"),
    RECOM_NAME((short)6, "recomName"),
    PRESENTEE_ID((short)7, "presenteeId");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // IS_CLAIMED
          return IS_CLAIMED;
        case 2: // COMPANY_NAME
          return COMPANY_NAME;
        case 3: // JOB_TITLE
          return JOB_TITLE;
        case 4: // FAILED_TITLE
          return FAILED_TITLE;
        case 5: // PRESENTEE_FIRST_NAME
          return PRESENTEE_FIRST_NAME;
        case 6: // RECOM_NAME
          return RECOM_NAME;
        case 7: // PRESENTEE_ID
          return PRESENTEE_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISCLAIMED_ISSET_ID = 0;
  private static final int __PRESENTEEID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.IS_CLAIMED,_Fields.COMPANY_NAME,_Fields.JOB_TITLE,_Fields.FAILED_TITLE,_Fields.PRESENTEE_FIRST_NAME,_Fields.RECOM_NAME,_Fields.PRESENTEE_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.IS_CLAIMED, new org.apache.thrift.meta_data.FieldMetaData("isClaimed", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_TITLE, new org.apache.thrift.meta_data.FieldMetaData("jobTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FAILED_TITLE, new org.apache.thrift.meta_data.FieldMetaData("failedTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRESENTEE_FIRST_NAME, new org.apache.thrift.meta_data.FieldMetaData("presenteeFirstName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_NAME, new org.apache.thrift.meta_data.FieldMetaData("recomName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRESENTEE_ID, new org.apache.thrift.meta_data.FieldMetaData("presenteeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReferralsCard.class, metaDataMap);
  }

  public ReferralsCard() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReferralsCard(ReferralsCard other) {
    __isset_bitfield = other.__isset_bitfield;
    this.isClaimed = other.isClaimed;
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    if (other.isSetJobTitle()) {
      java.util.List<String> __this__jobTitle = new java.util.ArrayList<String>(other.jobTitle);
      this.jobTitle = __this__jobTitle;
    }
    if (other.isSetFailedTitle()) {
      this.failedTitle = other.failedTitle;
    }
    if (other.isSetPresenteeFirstName()) {
      this.presenteeFirstName = other.presenteeFirstName;
    }
    if (other.isSetRecomName()) {
      this.recomName = other.recomName;
    }
    this.presenteeId = other.presenteeId;
  }

  public ReferralsCard deepCopy() {
    return new ReferralsCard(this);
  }

  @Override
  public void clear() {
    setIsClaimedIsSet(false);
    this.isClaimed = 0;
    this.companyName = null;
    this.jobTitle = null;
    this.failedTitle = null;
    this.presenteeFirstName = null;
    this.recomName = null;
    setPresenteeIdIsSet(false);
    this.presenteeId = 0;
  }

  public int getIsClaimed() {
    return this.isClaimed;
  }

  public ReferralsCard setIsClaimed(int isClaimed) {
    this.isClaimed = isClaimed;
    setIsClaimedIsSet(true);
    return this;
  }

  public void unsetIsClaimed() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISCLAIMED_ISSET_ID);
  }

  /** Returns true if field isClaimed is set (has been assigned a value) and false otherwise */
  public boolean isSetIsClaimed() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISCLAIMED_ISSET_ID);
  }

  public void setIsClaimedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISCLAIMED_ISSET_ID, value);
  }

  public String getCompanyName() {
    return this.companyName;
  }

  public ReferralsCard setCompanyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public int getJobTitleSize() {
    return (this.jobTitle == null) ? 0 : this.jobTitle.size();
  }

  public java.util.Iterator<String> getJobTitleIterator() {
    return (this.jobTitle == null) ? null : this.jobTitle.iterator();
  }

  public void addToJobTitle(String elem) {
    if (this.jobTitle == null) {
      this.jobTitle = new java.util.ArrayList<String>();
    }
    this.jobTitle.add(elem);
  }

  public java.util.List<String> getJobTitle() {
    return this.jobTitle;
  }

  public ReferralsCard setJobTitle(java.util.List<String> jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

  public void unsetJobTitle() {
    this.jobTitle = null;
  }

  /** Returns true if field jobTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetJobTitle() {
    return this.jobTitle != null;
  }

  public void setJobTitleIsSet(boolean value) {
    if (!value) {
      this.jobTitle = null;
    }
  }

  public String getFailedTitle() {
    return this.failedTitle;
  }

  public ReferralsCard setFailedTitle(String failedTitle) {
    this.failedTitle = failedTitle;
    return this;
  }

  public void unsetFailedTitle() {
    this.failedTitle = null;
  }

  /** Returns true if field failedTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetFailedTitle() {
    return this.failedTitle != null;
  }

  public void setFailedTitleIsSet(boolean value) {
    if (!value) {
      this.failedTitle = null;
    }
  }

  public String getPresenteeFirstName() {
    return this.presenteeFirstName;
  }

  public ReferralsCard setPresenteeFirstName(String presenteeFirstName) {
    this.presenteeFirstName = presenteeFirstName;
    return this;
  }

  public void unsetPresenteeFirstName() {
    this.presenteeFirstName = null;
  }

  /** Returns true if field presenteeFirstName is set (has been assigned a value) and false otherwise */
  public boolean isSetPresenteeFirstName() {
    return this.presenteeFirstName != null;
  }

  public void setPresenteeFirstNameIsSet(boolean value) {
    if (!value) {
      this.presenteeFirstName = null;
    }
  }

  public String getRecomName() {
    return this.recomName;
  }

  public ReferralsCard setRecomName(String recomName) {
    this.recomName = recomName;
    return this;
  }

  public void unsetRecomName() {
    this.recomName = null;
  }

  /** Returns true if field recomName is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomName() {
    return this.recomName != null;
  }

  public void setRecomNameIsSet(boolean value) {
    if (!value) {
      this.recomName = null;
    }
  }

  public int getPresenteeId() {
    return this.presenteeId;
  }

  public ReferralsCard setPresenteeId(int presenteeId) {
    this.presenteeId = presenteeId;
    setPresenteeIdIsSet(true);
    return this;
  }

  public void unsetPresenteeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRESENTEEID_ISSET_ID);
  }

  /** Returns true if field presenteeId is set (has been assigned a value) and false otherwise */
  public boolean isSetPresenteeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRESENTEEID_ISSET_ID);
  }

  public void setPresenteeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRESENTEEID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case IS_CLAIMED:
      if (value == null) {
        unsetIsClaimed();
      } else {
        setIsClaimed((Integer)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((String)value);
      }
      break;

    case JOB_TITLE:
      if (value == null) {
        unsetJobTitle();
      } else {
        setJobTitle((java.util.List<String>)value);
      }
      break;

    case FAILED_TITLE:
      if (value == null) {
        unsetFailedTitle();
      } else {
        setFailedTitle((String)value);
      }
      break;

    case PRESENTEE_FIRST_NAME:
      if (value == null) {
        unsetPresenteeFirstName();
      } else {
        setPresenteeFirstName((String)value);
      }
      break;

    case RECOM_NAME:
      if (value == null) {
        unsetRecomName();
      } else {
        setRecomName((String)value);
      }
      break;

    case PRESENTEE_ID:
      if (value == null) {
        unsetPresenteeId();
      } else {
        setPresenteeId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case IS_CLAIMED:
      return getIsClaimed();

    case COMPANY_NAME:
      return getCompanyName();

    case JOB_TITLE:
      return getJobTitle();

    case FAILED_TITLE:
      return getFailedTitle();

    case PRESENTEE_FIRST_NAME:
      return getPresenteeFirstName();

    case RECOM_NAME:
      return getRecomName();

    case PRESENTEE_ID:
      return getPresenteeId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case IS_CLAIMED:
      return isSetIsClaimed();
    case COMPANY_NAME:
      return isSetCompanyName();
    case JOB_TITLE:
      return isSetJobTitle();
    case FAILED_TITLE:
      return isSetFailedTitle();
    case PRESENTEE_FIRST_NAME:
      return isSetPresenteeFirstName();
    case RECOM_NAME:
      return isSetRecomName();
    case PRESENTEE_ID:
      return isSetPresenteeId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReferralsCard)
      return this.equals((ReferralsCard)that);
    return false;
  }

  public boolean equals(ReferralsCard that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_isClaimed = true && this.isSetIsClaimed();
    boolean that_present_isClaimed = true && that.isSetIsClaimed();
    if (this_present_isClaimed || that_present_isClaimed) {
      if (!(this_present_isClaimed && that_present_isClaimed))
        return false;
      if (this.isClaimed != that.isClaimed)
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_jobTitle = true && this.isSetJobTitle();
    boolean that_present_jobTitle = true && that.isSetJobTitle();
    if (this_present_jobTitle || that_present_jobTitle) {
      if (!(this_present_jobTitle && that_present_jobTitle))
        return false;
      if (!this.jobTitle.equals(that.jobTitle))
        return false;
    }

    boolean this_present_failedTitle = true && this.isSetFailedTitle();
    boolean that_present_failedTitle = true && that.isSetFailedTitle();
    if (this_present_failedTitle || that_present_failedTitle) {
      if (!(this_present_failedTitle && that_present_failedTitle))
        return false;
      if (!this.failedTitle.equals(that.failedTitle))
        return false;
    }

    boolean this_present_presenteeFirstName = true && this.isSetPresenteeFirstName();
    boolean that_present_presenteeFirstName = true && that.isSetPresenteeFirstName();
    if (this_present_presenteeFirstName || that_present_presenteeFirstName) {
      if (!(this_present_presenteeFirstName && that_present_presenteeFirstName))
        return false;
      if (!this.presenteeFirstName.equals(that.presenteeFirstName))
        return false;
    }

    boolean this_present_recomName = true && this.isSetRecomName();
    boolean that_present_recomName = true && that.isSetRecomName();
    if (this_present_recomName || that_present_recomName) {
      if (!(this_present_recomName && that_present_recomName))
        return false;
      if (!this.recomName.equals(that.recomName))
        return false;
    }

    boolean this_present_presenteeId = true && this.isSetPresenteeId();
    boolean that_present_presenteeId = true && that.isSetPresenteeId();
    if (this_present_presenteeId || that_present_presenteeId) {
      if (!(this_present_presenteeId && that_present_presenteeId))
        return false;
      if (this.presenteeId != that.presenteeId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetIsClaimed()) ? 131071 : 524287);
    if (isSetIsClaimed())
      hashCode = hashCode * 8191 + isClaimed;

    hashCode = hashCode * 8191 + ((isSetCompanyName()) ? 131071 : 524287);
    if (isSetCompanyName())
      hashCode = hashCode * 8191 + companyName.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobTitle()) ? 131071 : 524287);
    if (isSetJobTitle())
      hashCode = hashCode * 8191 + jobTitle.hashCode();

    hashCode = hashCode * 8191 + ((isSetFailedTitle()) ? 131071 : 524287);
    if (isSetFailedTitle())
      hashCode = hashCode * 8191 + failedTitle.hashCode();

    hashCode = hashCode * 8191 + ((isSetPresenteeFirstName()) ? 131071 : 524287);
    if (isSetPresenteeFirstName())
      hashCode = hashCode * 8191 + presenteeFirstName.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecomName()) ? 131071 : 524287);
    if (isSetRecomName())
      hashCode = hashCode * 8191 + recomName.hashCode();

    hashCode = hashCode * 8191 + ((isSetPresenteeId()) ? 131071 : 524287);
    if (isSetPresenteeId())
      hashCode = hashCode * 8191 + presenteeId;

    return hashCode;
  }

  @Override
  public int compareTo(ReferralsCard other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetIsClaimed()).compareTo(other.isSetIsClaimed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsClaimed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isClaimed, other.isClaimed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobTitle()).compareTo(other.isSetJobTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobTitle, other.jobTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFailedTitle()).compareTo(other.isSetFailedTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailedTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.failedTitle, other.failedTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPresenteeFirstName()).compareTo(other.isSetPresenteeFirstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPresenteeFirstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.presenteeFirstName, other.presenteeFirstName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecomName()).compareTo(other.isSetRecomName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomName, other.recomName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPresenteeId()).compareTo(other.isSetPresenteeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPresenteeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.presenteeId, other.presenteeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReferralsCard(");
    boolean first = true;

    if (isSetIsClaimed()) {
      sb.append("isClaimed:");
      sb.append(this.isClaimed);
      first = false;
    }
    if (isSetCompanyName()) {
      if (!first) sb.append(", ");
      sb.append("companyName:");
      if (this.companyName == null) {
        sb.append("null");
      } else {
        sb.append(this.companyName);
      }
      first = false;
    }
    if (isSetJobTitle()) {
      if (!first) sb.append(", ");
      sb.append("jobTitle:");
      if (this.jobTitle == null) {
        sb.append("null");
      } else {
        sb.append(this.jobTitle);
      }
      first = false;
    }
    if (isSetFailedTitle()) {
      if (!first) sb.append(", ");
      sb.append("failedTitle:");
      if (this.failedTitle == null) {
        sb.append("null");
      } else {
        sb.append(this.failedTitle);
      }
      first = false;
    }
    if (isSetPresenteeFirstName()) {
      if (!first) sb.append(", ");
      sb.append("presenteeFirstName:");
      if (this.presenteeFirstName == null) {
        sb.append("null");
      } else {
        sb.append(this.presenteeFirstName);
      }
      first = false;
    }
    if (isSetRecomName()) {
      if (!first) sb.append(", ");
      sb.append("recomName:");
      if (this.recomName == null) {
        sb.append("null");
      } else {
        sb.append(this.recomName);
      }
      first = false;
    }
    if (isSetPresenteeId()) {
      if (!first) sb.append(", ");
      sb.append("presenteeId:");
      sb.append(this.presenteeId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReferralsCardStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReferralsCardStandardScheme getScheme() {
      return new ReferralsCardStandardScheme();
    }
  }

  private static class ReferralsCardStandardScheme extends org.apache.thrift.scheme.StandardScheme<ReferralsCard> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReferralsCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // IS_CLAIMED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isClaimed = iprot.readI32();
              struct.setIsClaimedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JOB_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list84 = iprot.readListBegin();
                struct.jobTitle = new java.util.ArrayList<String>(_list84.size);
                String _elem85;
                for (int _i86 = 0; _i86 < _list84.size; ++_i86)
                {
                  _elem85 = iprot.readString();
                  struct.jobTitle.add(_elem85);
                }
                iprot.readListEnd();
              }
              struct.setJobTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FAILED_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.failedTitle = iprot.readString();
              struct.setFailedTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRESENTEE_FIRST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.presenteeFirstName = iprot.readString();
              struct.setPresenteeFirstNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RECOM_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomName = iprot.readString();
              struct.setRecomNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PRESENTEE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.presenteeId = iprot.readI32();
              struct.setPresenteeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReferralsCard struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetIsClaimed()) {
        oprot.writeFieldBegin(IS_CLAIMED_FIELD_DESC);
        oprot.writeI32(struct.isClaimed);
        oprot.writeFieldEnd();
      }
      if (struct.companyName != null) {
        if (struct.isSetCompanyName()) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.companyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobTitle != null) {
        if (struct.isSetJobTitle()) {
          oprot.writeFieldBegin(JOB_TITLE_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.jobTitle.size()));
            for (String _iter87 : struct.jobTitle)
            {
              oprot.writeString(_iter87);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.failedTitle != null) {
        if (struct.isSetFailedTitle()) {
          oprot.writeFieldBegin(FAILED_TITLE_FIELD_DESC);
          oprot.writeString(struct.failedTitle);
          oprot.writeFieldEnd();
        }
      }
      if (struct.presenteeFirstName != null) {
        if (struct.isSetPresenteeFirstName()) {
          oprot.writeFieldBegin(PRESENTEE_FIRST_NAME_FIELD_DESC);
          oprot.writeString(struct.presenteeFirstName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recomName != null) {
        if (struct.isSetRecomName()) {
          oprot.writeFieldBegin(RECOM_NAME_FIELD_DESC);
          oprot.writeString(struct.recomName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPresenteeId()) {
        oprot.writeFieldBegin(PRESENTEE_ID_FIELD_DESC);
        oprot.writeI32(struct.presenteeId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReferralsCardTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReferralsCardTupleScheme getScheme() {
      return new ReferralsCardTupleScheme();
    }
  }

  private static class ReferralsCardTupleScheme extends org.apache.thrift.scheme.TupleScheme<ReferralsCard> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReferralsCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIsClaimed()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(1);
      }
      if (struct.isSetJobTitle()) {
        optionals.set(2);
      }
      if (struct.isSetFailedTitle()) {
        optionals.set(3);
      }
      if (struct.isSetPresenteeFirstName()) {
        optionals.set(4);
      }
      if (struct.isSetRecomName()) {
        optionals.set(5);
      }
      if (struct.isSetPresenteeId()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetIsClaimed()) {
        oprot.writeI32(struct.isClaimed);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetJobTitle()) {
        {
          oprot.writeI32(struct.jobTitle.size());
          for (String _iter88 : struct.jobTitle)
          {
            oprot.writeString(_iter88);
          }
        }
      }
      if (struct.isSetFailedTitle()) {
        oprot.writeString(struct.failedTitle);
      }
      if (struct.isSetPresenteeFirstName()) {
        oprot.writeString(struct.presenteeFirstName);
      }
      if (struct.isSetRecomName()) {
        oprot.writeString(struct.recomName);
      }
      if (struct.isSetPresenteeId()) {
        oprot.writeI32(struct.presenteeId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReferralsCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.isClaimed = iprot.readI32();
        struct.setIsClaimedIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list89 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.jobTitle = new java.util.ArrayList<String>(_list89.size);
          String _elem90;
          for (int _i91 = 0; _i91 < _list89.size; ++_i91)
          {
            _elem90 = iprot.readString();
            struct.jobTitle.add(_elem90);
          }
        }
        struct.setJobTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.failedTitle = iprot.readString();
        struct.setFailedTitleIsSet(true);
      }
      if (incoming.get(4)) {
        struct.presenteeFirstName = iprot.readString();
        struct.setPresenteeFirstNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.recomName = iprot.readString();
        struct.setRecomNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.presenteeId = iprot.readI32();
        struct.setPresenteeIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

