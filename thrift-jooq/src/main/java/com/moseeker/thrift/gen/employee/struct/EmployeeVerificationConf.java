/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.employee.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-06")
public class EmployeeVerificationConf implements org.apache.thrift.TBase<EmployeeVerificationConf, EmployeeVerificationConf._Fields>, java.io.Serializable, Cloneable, Comparable<EmployeeVerificationConf> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EmployeeVerificationConf");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMAIL_SUFFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("emailSuffix", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField AUTH_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("authMode", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField AUTH_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("authCode", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField QUESTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("questions", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField CUSTOM_HINT_FIELD_DESC = new org.apache.thrift.protocol.TField("customHint", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EmployeeVerificationConfStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EmployeeVerificationConfTupleSchemeFactory();

  public int companyId; // required
  public java.util.List<java.lang.String> emailSuffix; // optional
  public short authMode; // required
  public java.lang.String authCode; // optional
  public java.lang.String custom; // optional
  public java.util.List<java.util.Map<java.lang.String,java.lang.String>> questions; // optional
  public java.lang.String customHint; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "companyId"),
    EMAIL_SUFFIX((short)2, "emailSuffix"),
    AUTH_MODE((short)3, "authMode"),
    AUTH_CODE((short)4, "authCode"),
    CUSTOM((short)5, "custom"),
    QUESTIONS((short)6, "questions"),
    CUSTOM_HINT((short)7, "customHint");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // EMAIL_SUFFIX
          return EMAIL_SUFFIX;
        case 3: // AUTH_MODE
          return AUTH_MODE;
        case 4: // AUTH_CODE
          return AUTH_CODE;
        case 5: // CUSTOM
          return CUSTOM;
        case 6: // QUESTIONS
          return QUESTIONS;
        case 7: // CUSTOM_HINT
          return CUSTOM_HINT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANYID_ISSET_ID = 0;
  private static final int __AUTHMODE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.EMAIL_SUFFIX,_Fields.AUTH_CODE,_Fields.CUSTOM,_Fields.QUESTIONS,_Fields.CUSTOM_HINT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_SUFFIX, new org.apache.thrift.meta_data.FieldMetaData("emailSuffix", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.AUTH_MODE, new org.apache.thrift.meta_data.FieldMetaData("authMode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.AUTH_CODE, new org.apache.thrift.meta_data.FieldMetaData("authCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUESTIONS, new org.apache.thrift.meta_data.FieldMetaData("questions", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.MAP            , "Question"))));
    tmpMap.put(_Fields.CUSTOM_HINT, new org.apache.thrift.meta_data.FieldMetaData("customHint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EmployeeVerificationConf.class, metaDataMap);
  }

  public EmployeeVerificationConf() {
  }

  public EmployeeVerificationConf(
    int companyId,
    short authMode)
  {
    this();
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    this.authMode = authMode;
    setAuthModeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EmployeeVerificationConf(EmployeeVerificationConf other) {
    __isset_bitfield = other.__isset_bitfield;
    this.companyId = other.companyId;
    if (other.isSetEmailSuffix()) {
      java.util.List<java.lang.String> __this__emailSuffix = new java.util.ArrayList<java.lang.String>(other.emailSuffix);
      this.emailSuffix = __this__emailSuffix;
    }
    this.authMode = other.authMode;
    if (other.isSetAuthCode()) {
      this.authCode = other.authCode;
    }
    if (other.isSetCustom()) {
      this.custom = other.custom;
    }
    if (other.isSetQuestions()) {
      java.util.List<java.util.Map<java.lang.String,java.lang.String>> __this__questions = new java.util.ArrayList<java.util.Map<java.lang.String,java.lang.String>>(other.questions.size());
      for (java.util.Map<java.lang.String,java.lang.String> other_element : other.questions) {
        __this__questions.add(other_element);
      }
      this.questions = __this__questions;
    }
    if (other.isSetCustomHint()) {
      this.customHint = other.customHint;
    }
  }

  public EmployeeVerificationConf deepCopy() {
    return new EmployeeVerificationConf(this);
  }

  @Override
  public void clear() {
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.emailSuffix = null;
    setAuthModeIsSet(false);
    this.authMode = 0;
    this.authCode = null;
    this.custom = null;
    this.questions = null;
    this.customHint = null;
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public EmployeeVerificationConf setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getEmailSuffixSize() {
    return (this.emailSuffix == null) ? 0 : this.emailSuffix.size();
  }

  public java.util.Iterator<java.lang.String> getEmailSuffixIterator() {
    return (this.emailSuffix == null) ? null : this.emailSuffix.iterator();
  }

  public void addToEmailSuffix(java.lang.String elem) {
    if (this.emailSuffix == null) {
      this.emailSuffix = new java.util.ArrayList<java.lang.String>();
    }
    this.emailSuffix.add(elem);
  }

  public java.util.List<java.lang.String> getEmailSuffix() {
    return this.emailSuffix;
  }

  public EmployeeVerificationConf setEmailSuffix(java.util.List<java.lang.String> emailSuffix) {
    this.emailSuffix = emailSuffix;
    return this;
  }

  public void unsetEmailSuffix() {
    this.emailSuffix = null;
  }

  /** Returns true if field emailSuffix is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailSuffix() {
    return this.emailSuffix != null;
  }

  public void setEmailSuffixIsSet(boolean value) {
    if (!value) {
      this.emailSuffix = null;
    }
  }

  public short getAuthMode() {
    return this.authMode;
  }

  public EmployeeVerificationConf setAuthMode(short authMode) {
    this.authMode = authMode;
    setAuthModeIsSet(true);
    return this;
  }

  public void unsetAuthMode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTHMODE_ISSET_ID);
  }

  /** Returns true if field authMode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthMode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTHMODE_ISSET_ID);
  }

  public void setAuthModeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTHMODE_ISSET_ID, value);
  }

  public java.lang.String getAuthCode() {
    return this.authCode;
  }

  public EmployeeVerificationConf setAuthCode(java.lang.String authCode) {
    this.authCode = authCode;
    return this;
  }

  public void unsetAuthCode() {
    this.authCode = null;
  }

  /** Returns true if field authCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthCode() {
    return this.authCode != null;
  }

  public void setAuthCodeIsSet(boolean value) {
    if (!value) {
      this.authCode = null;
    }
  }

  public java.lang.String getCustom() {
    return this.custom;
  }

  public EmployeeVerificationConf setCustom(java.lang.String custom) {
    this.custom = custom;
    return this;
  }

  public void unsetCustom() {
    this.custom = null;
  }

  /** Returns true if field custom is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom() {
    return this.custom != null;
  }

  public void setCustomIsSet(boolean value) {
    if (!value) {
      this.custom = null;
    }
  }

  public int getQuestionsSize() {
    return (this.questions == null) ? 0 : this.questions.size();
  }

  public java.util.Iterator<java.util.Map<java.lang.String,java.lang.String>> getQuestionsIterator() {
    return (this.questions == null) ? null : this.questions.iterator();
  }

  public void addToQuestions(java.util.Map<java.lang.String,java.lang.String> elem) {
    if (this.questions == null) {
      this.questions = new java.util.ArrayList<java.util.Map<java.lang.String,java.lang.String>>();
    }
    this.questions.add(elem);
  }

  public java.util.List<java.util.Map<java.lang.String,java.lang.String>> getQuestions() {
    return this.questions;
  }

  public EmployeeVerificationConf setQuestions(java.util.List<java.util.Map<java.lang.String,java.lang.String>> questions) {
    this.questions = questions;
    return this;
  }

  public void unsetQuestions() {
    this.questions = null;
  }

  /** Returns true if field questions is set (has been assigned a value) and false otherwise */
  public boolean isSetQuestions() {
    return this.questions != null;
  }

  public void setQuestionsIsSet(boolean value) {
    if (!value) {
      this.questions = null;
    }
  }

  public java.lang.String getCustomHint() {
    return this.customHint;
  }

  public EmployeeVerificationConf setCustomHint(java.lang.String customHint) {
    this.customHint = customHint;
    return this;
  }

  public void unsetCustomHint() {
    this.customHint = null;
  }

  /** Returns true if field customHint is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomHint() {
    return this.customHint != null;
  }

  public void setCustomHintIsSet(boolean value) {
    if (!value) {
      this.customHint = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case EMAIL_SUFFIX:
      if (value == null) {
        unsetEmailSuffix();
      } else {
        setEmailSuffix((java.util.List<java.lang.String>)value);
      }
      break;

    case AUTH_MODE:
      if (value == null) {
        unsetAuthMode();
      } else {
        setAuthMode((java.lang.Short)value);
      }
      break;

    case AUTH_CODE:
      if (value == null) {
        unsetAuthCode();
      } else {
        setAuthCode((java.lang.String)value);
      }
      break;

    case CUSTOM:
      if (value == null) {
        unsetCustom();
      } else {
        setCustom((java.lang.String)value);
      }
      break;

    case QUESTIONS:
      if (value == null) {
        unsetQuestions();
      } else {
        setQuestions((java.util.List<java.util.Map<java.lang.String,java.lang.String>>)value);
      }
      break;

    case CUSTOM_HINT:
      if (value == null) {
        unsetCustomHint();
      } else {
        setCustomHint((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return getCompanyId();

    case EMAIL_SUFFIX:
      return getEmailSuffix();

    case AUTH_MODE:
      return getAuthMode();

    case AUTH_CODE:
      return getAuthCode();

    case CUSTOM:
      return getCustom();

    case QUESTIONS:
      return getQuestions();

    case CUSTOM_HINT:
      return getCustomHint();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompanyId();
    case EMAIL_SUFFIX:
      return isSetEmailSuffix();
    case AUTH_MODE:
      return isSetAuthMode();
    case AUTH_CODE:
      return isSetAuthCode();
    case CUSTOM:
      return isSetCustom();
    case QUESTIONS:
      return isSetQuestions();
    case CUSTOM_HINT:
      return isSetCustomHint();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof EmployeeVerificationConf)
      return this.equals((EmployeeVerificationConf)that);
    return false;
  }

  public boolean equals(EmployeeVerificationConf that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_companyId = true;
    boolean that_present_companyId = true;
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_emailSuffix = true && this.isSetEmailSuffix();
    boolean that_present_emailSuffix = true && that.isSetEmailSuffix();
    if (this_present_emailSuffix || that_present_emailSuffix) {
      if (!(this_present_emailSuffix && that_present_emailSuffix))
        return false;
      if (!this.emailSuffix.equals(that.emailSuffix))
        return false;
    }

    boolean this_present_authMode = true;
    boolean that_present_authMode = true;
    if (this_present_authMode || that_present_authMode) {
      if (!(this_present_authMode && that_present_authMode))
        return false;
      if (this.authMode != that.authMode)
        return false;
    }

    boolean this_present_authCode = true && this.isSetAuthCode();
    boolean that_present_authCode = true && that.isSetAuthCode();
    if (this_present_authCode || that_present_authCode) {
      if (!(this_present_authCode && that_present_authCode))
        return false;
      if (!this.authCode.equals(that.authCode))
        return false;
    }

    boolean this_present_custom = true && this.isSetCustom();
    boolean that_present_custom = true && that.isSetCustom();
    if (this_present_custom || that_present_custom) {
      if (!(this_present_custom && that_present_custom))
        return false;
      if (!this.custom.equals(that.custom))
        return false;
    }

    boolean this_present_questions = true && this.isSetQuestions();
    boolean that_present_questions = true && that.isSetQuestions();
    if (this_present_questions || that_present_questions) {
      if (!(this_present_questions && that_present_questions))
        return false;
      if (!this.questions.equals(that.questions))
        return false;
    }

    boolean this_present_customHint = true && this.isSetCustomHint();
    boolean that_present_customHint = true && that.isSetCustomHint();
    if (this_present_customHint || that_present_customHint) {
      if (!(this_present_customHint && that_present_customHint))
        return false;
      if (!this.customHint.equals(that.customHint))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetEmailSuffix()) ? 131071 : 524287);
    if (isSetEmailSuffix())
      hashCode = hashCode * 8191 + emailSuffix.hashCode();

    hashCode = hashCode * 8191 + authMode;

    hashCode = hashCode * 8191 + ((isSetAuthCode()) ? 131071 : 524287);
    if (isSetAuthCode())
      hashCode = hashCode * 8191 + authCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
    if (isSetCustom())
      hashCode = hashCode * 8191 + custom.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuestions()) ? 131071 : 524287);
    if (isSetQuestions())
      hashCode = hashCode * 8191 + questions.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustomHint()) ? 131071 : 524287);
    if (isSetCustomHint())
      hashCode = hashCode * 8191 + customHint.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(EmployeeVerificationConf other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmailSuffix()).compareTo(other.isSetEmailSuffix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailSuffix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailSuffix, other.emailSuffix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthMode()).compareTo(other.isSetAuthMode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthMode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authMode, other.authMode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthCode()).compareTo(other.isSetAuthCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authCode, other.authCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetQuestions()).compareTo(other.isSetQuestions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuestions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.questions, other.questions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustomHint()).compareTo(other.isSetCustomHint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomHint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customHint, other.customHint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("EmployeeVerificationConf(");
    boolean first = true;

    sb.append("companyId:");
    sb.append(this.companyId);
    first = false;
    if (isSetEmailSuffix()) {
      if (!first) sb.append(", ");
      sb.append("emailSuffix:");
      if (this.emailSuffix == null) {
        sb.append("null");
      } else {
        sb.append(this.emailSuffix);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("authMode:");
    sb.append(this.authMode);
    first = false;
    if (isSetAuthCode()) {
      if (!first) sb.append(", ");
      sb.append("authCode:");
      if (this.authCode == null) {
        sb.append("null");
      } else {
        sb.append(this.authCode);
      }
      first = false;
    }
    if (isSetCustom()) {
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
    }
    if (isSetQuestions()) {
      if (!first) sb.append(", ");
      sb.append("questions:");
      if (this.questions == null) {
        sb.append("null");
      } else {
        sb.append(this.questions);
      }
      first = false;
    }
    if (isSetCustomHint()) {
      if (!first) sb.append(", ");
      sb.append("customHint:");
      if (this.customHint == null) {
        sb.append("null");
      } else {
        sb.append(this.customHint);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'companyId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'authMode' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EmployeeVerificationConfStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public EmployeeVerificationConfStandardScheme getScheme() {
      return new EmployeeVerificationConfStandardScheme();
    }
  }

  private static class EmployeeVerificationConfStandardScheme extends org.apache.thrift.scheme.StandardScheme<EmployeeVerificationConf> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EmployeeVerificationConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMAIL_SUFFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.emailSuffix = new java.util.ArrayList<java.lang.String>(_list0.size);
                java.lang.String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.emailSuffix.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setEmailSuffixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // AUTH_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.authMode = iprot.readI16();
              struct.setAuthModeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUTH_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.authCode = iprot.readString();
              struct.setAuthCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CUSTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom = iprot.readString();
              struct.setCustomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // QUESTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.questions = new java.util.ArrayList<java.util.Map<java.lang.String,java.lang.String>>(_list3.size);
                java.util.Map<java.lang.String,java.lang.String> _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  {
                    org.apache.thrift.protocol.TMap _map6 = iprot.readMapBegin();
                    _elem4 = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map6.size);
                    java.lang.String _key7;
                    java.lang.String _val8;
                    for (int _i9 = 0; _i9 < _map6.size; ++_i9)
                    {
                      _key7 = iprot.readString();
                      _val8 = iprot.readString();
                      _elem4.put(_key7, _val8);
                    }
                    iprot.readMapEnd();
                  }
                  struct.questions.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setQuestionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CUSTOM_HINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customHint = iprot.readString();
              struct.setCustomHintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetCompanyId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'companyId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAuthMode()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'authMode' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EmployeeVerificationConf struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
      oprot.writeI32(struct.companyId);
      oprot.writeFieldEnd();
      if (struct.emailSuffix != null) {
        if (struct.isSetEmailSuffix()) {
          oprot.writeFieldBegin(EMAIL_SUFFIX_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.emailSuffix.size()));
            for (java.lang.String _iter10 : struct.emailSuffix)
            {
              oprot.writeString(_iter10);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(AUTH_MODE_FIELD_DESC);
      oprot.writeI16(struct.authMode);
      oprot.writeFieldEnd();
      if (struct.authCode != null) {
        if (struct.isSetAuthCode()) {
          oprot.writeFieldBegin(AUTH_CODE_FIELD_DESC);
          oprot.writeString(struct.authCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.custom != null) {
        if (struct.isSetCustom()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
      }
      if (struct.questions != null) {
        if (struct.isSetQuestions()) {
          oprot.writeFieldBegin(QUESTIONS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, struct.questions.size()));
            for (java.util.Map<java.lang.String,java.lang.String> _iter11 : struct.questions)
            {
              {
                oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, _iter11.size()));
                for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter12 : _iter11.entrySet())
                {
                  oprot.writeString(_iter12.getKey());
                  oprot.writeString(_iter12.getValue());
                }
                oprot.writeMapEnd();
              }
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.customHint != null) {
        if (struct.isSetCustomHint()) {
          oprot.writeFieldBegin(CUSTOM_HINT_FIELD_DESC);
          oprot.writeString(struct.customHint);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EmployeeVerificationConfTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public EmployeeVerificationConfTupleScheme getScheme() {
      return new EmployeeVerificationConfTupleScheme();
    }
  }

  private static class EmployeeVerificationConfTupleScheme extends org.apache.thrift.scheme.TupleScheme<EmployeeVerificationConf> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EmployeeVerificationConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.companyId);
      oprot.writeI16(struct.authMode);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetEmailSuffix()) {
        optionals.set(0);
      }
      if (struct.isSetAuthCode()) {
        optionals.set(1);
      }
      if (struct.isSetCustom()) {
        optionals.set(2);
      }
      if (struct.isSetQuestions()) {
        optionals.set(3);
      }
      if (struct.isSetCustomHint()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetEmailSuffix()) {
        {
          oprot.writeI32(struct.emailSuffix.size());
          for (java.lang.String _iter13 : struct.emailSuffix)
          {
            oprot.writeString(_iter13);
          }
        }
      }
      if (struct.isSetAuthCode()) {
        oprot.writeString(struct.authCode);
      }
      if (struct.isSetCustom()) {
        oprot.writeString(struct.custom);
      }
      if (struct.isSetQuestions()) {
        {
          oprot.writeI32(struct.questions.size());
          for (java.util.Map<java.lang.String,java.lang.String> _iter14 : struct.questions)
          {
            {
              oprot.writeI32(_iter14.size());
              for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter15 : _iter14.entrySet())
              {
                oprot.writeString(_iter15.getKey());
                oprot.writeString(_iter15.getValue());
              }
            }
          }
        }
      }
      if (struct.isSetCustomHint()) {
        oprot.writeString(struct.customHint);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EmployeeVerificationConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.companyId = iprot.readI32();
      struct.setCompanyIdIsSet(true);
      struct.authMode = iprot.readI16();
      struct.setAuthModeIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list16 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.emailSuffix = new java.util.ArrayList<java.lang.String>(_list16.size);
          java.lang.String _elem17;
          for (int _i18 = 0; _i18 < _list16.size; ++_i18)
          {
            _elem17 = iprot.readString();
            struct.emailSuffix.add(_elem17);
          }
        }
        struct.setEmailSuffixIsSet(true);
      }
      if (incoming.get(1)) {
        struct.authCode = iprot.readString();
        struct.setAuthCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.custom = iprot.readString();
        struct.setCustomIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list19 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.questions = new java.util.ArrayList<java.util.Map<java.lang.String,java.lang.String>>(_list19.size);
          java.util.Map<java.lang.String,java.lang.String> _elem20;
          for (int _i21 = 0; _i21 < _list19.size; ++_i21)
          {
            {
              org.apache.thrift.protocol.TMap _map22 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _elem20 = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map22.size);
              java.lang.String _key23;
              java.lang.String _val24;
              for (int _i25 = 0; _i25 < _map22.size; ++_i25)
              {
                _key23 = iprot.readString();
                _val24 = iprot.readString();
                _elem20.put(_key23, _val24);
              }
            }
            struct.questions.add(_elem20);
          }
        }
        struct.setQuestionsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.customHint = iprot.readString();
        struct.setCustomHintIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

