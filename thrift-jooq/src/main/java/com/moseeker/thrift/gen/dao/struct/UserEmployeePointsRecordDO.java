/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-21")
public class UserEmployeePointsRecordDO implements org.apache.thrift.TBase<UserEmployeePointsRecordDO, UserEmployeePointsRecordDO._Fields>, java.io.Serializable, Cloneable, Comparable<UserEmployeePointsRecordDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEmployeePointsRecordDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_IDK_FIELD_DESC = new org.apache.thrift.protocol.TField("employee_idk", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("reason", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("award", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField _CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_create_time", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField APPLICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("application_id", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField RECOM_WXUSER_FIELD_DESC = new org.apache.thrift.protocol.TField("recom_wxuser", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField BERECOM_WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("berecom_wxuser_id", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField AWARD_CONFIG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("award_config_id", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField RECOM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recom_user_id", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField BERECOM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("berecom_user_id", org.apache.thrift.protocol.TType.I32, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserEmployeePointsRecordDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserEmployeePointsRecordDOTupleSchemeFactory();

  public int id; // optional
  public int employee_idk; // optional
  public java.lang.String reason; // optional
  public int award; // optional
  public java.lang.String _create_time; // optional
  public int application_id; // optional
  public int recom_wxuser; // optional
  public java.lang.String update_time; // optional
  public int position_id; // optional
  public int berecom_wxuser_id; // optional
  public int award_config_id; // optional
  public int recom_user_id; // optional
  public int berecom_user_id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    EMPLOYEE_IDK((short)2, "employee_idk"),
    REASON((short)3, "reason"),
    AWARD((short)4, "award"),
    _CREATE_TIME((short)5, "_create_time"),
    APPLICATION_ID((short)6, "application_id"),
    RECOM_WXUSER((short)7, "recom_wxuser"),
    UPDATE_TIME((short)8, "update_time"),
    POSITION_ID((short)9, "position_id"),
    BERECOM_WXUSER_ID((short)10, "berecom_wxuser_id"),
    AWARD_CONFIG_ID((short)11, "award_config_id"),
    RECOM_USER_ID((short)12, "recom_user_id"),
    BERECOM_USER_ID((short)13, "berecom_user_id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // EMPLOYEE_IDK
          return EMPLOYEE_IDK;
        case 3: // REASON
          return REASON;
        case 4: // AWARD
          return AWARD;
        case 5: // _CREATE_TIME
          return _CREATE_TIME;
        case 6: // APPLICATION_ID
          return APPLICATION_ID;
        case 7: // RECOM_WXUSER
          return RECOM_WXUSER;
        case 8: // UPDATE_TIME
          return UPDATE_TIME;
        case 9: // POSITION_ID
          return POSITION_ID;
        case 10: // BERECOM_WXUSER_ID
          return BERECOM_WXUSER_ID;
        case 11: // AWARD_CONFIG_ID
          return AWARD_CONFIG_ID;
        case 12: // RECOM_USER_ID
          return RECOM_USER_ID;
        case 13: // BERECOM_USER_ID
          return BERECOM_USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __EMPLOYEE_IDK_ISSET_ID = 1;
  private static final int __AWARD_ISSET_ID = 2;
  private static final int __APPLICATION_ID_ISSET_ID = 3;
  private static final int __RECOM_WXUSER_ISSET_ID = 4;
  private static final int __POSITION_ID_ISSET_ID = 5;
  private static final int __BERECOM_WXUSER_ID_ISSET_ID = 6;
  private static final int __AWARD_CONFIG_ID_ISSET_ID = 7;
  private static final int __RECOM_USER_ID_ISSET_ID = 8;
  private static final int __BERECOM_USER_ID_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.EMPLOYEE_IDK,_Fields.REASON,_Fields.AWARD,_Fields._CREATE_TIME,_Fields.APPLICATION_ID,_Fields.RECOM_WXUSER,_Fields.UPDATE_TIME,_Fields.POSITION_ID,_Fields.BERECOM_WXUSER_ID,_Fields.AWARD_CONFIG_ID,_Fields.RECOM_USER_ID,_Fields.BERECOM_USER_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_IDK, new org.apache.thrift.meta_data.FieldMetaData("employee_idk", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REASON, new org.apache.thrift.meta_data.FieldMetaData("reason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AWARD, new org.apache.thrift.meta_data.FieldMetaData("award", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("application_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_WXUSER, new org.apache.thrift.meta_data.FieldMetaData("recom_wxuser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BERECOM_WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("berecom_wxuser_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AWARD_CONFIG_ID, new org.apache.thrift.meta_data.FieldMetaData("award_config_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("recom_user_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BERECOM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("berecom_user_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEmployeePointsRecordDO.class, metaDataMap);
  }

  public UserEmployeePointsRecordDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEmployeePointsRecordDO(UserEmployeePointsRecordDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.employee_idk = other.employee_idk;
    if (other.isSetReason()) {
      this.reason = other.reason;
    }
    this.award = other.award;
    if (other.isSet_create_time()) {
      this._create_time = other._create_time;
    }
    this.application_id = other.application_id;
    this.recom_wxuser = other.recom_wxuser;
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    this.position_id = other.position_id;
    this.berecom_wxuser_id = other.berecom_wxuser_id;
    this.award_config_id = other.award_config_id;
    this.recom_user_id = other.recom_user_id;
    this.berecom_user_id = other.berecom_user_id;
  }

  public UserEmployeePointsRecordDO deepCopy() {
    return new UserEmployeePointsRecordDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setEmployee_idkIsSet(false);
    this.employee_idk = 0;
    this.reason = null;
    setAwardIsSet(false);
    this.award = 0;
    this._create_time = null;
    setApplication_idIsSet(false);
    this.application_id = 0;
    setRecom_wxuserIsSet(false);
    this.recom_wxuser = 0;
    this.update_time = null;
    setPosition_idIsSet(false);
    this.position_id = 0;
    setBerecom_wxuser_idIsSet(false);
    this.berecom_wxuser_id = 0;
    setAward_config_idIsSet(false);
    this.award_config_id = 0;
    setRecom_user_idIsSet(false);
    this.recom_user_id = 0;
    setBerecom_user_idIsSet(false);
    this.berecom_user_id = 0;
  }

  public int getId() {
    return this.id;
  }

  public UserEmployeePointsRecordDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getEmployee_idk() {
    return this.employee_idk;
  }

  public UserEmployeePointsRecordDO setEmployee_idk(int employee_idk) {
    this.employee_idk = employee_idk;
    setEmployee_idkIsSet(true);
    return this;
  }

  public void unsetEmployee_idk() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEE_IDK_ISSET_ID);
  }

  /** Returns true if field employee_idk is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployee_idk() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEE_IDK_ISSET_ID);
  }

  public void setEmployee_idkIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEE_IDK_ISSET_ID, value);
  }

  public java.lang.String getReason() {
    return this.reason;
  }

  public UserEmployeePointsRecordDO setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  public void unsetReason() {
    this.reason = null;
  }

  /** Returns true if field reason is set (has been assigned a value) and false otherwise */
  public boolean isSetReason() {
    return this.reason != null;
  }

  public void setReasonIsSet(boolean value) {
    if (!value) {
      this.reason = null;
    }
  }

  public int getAward() {
    return this.award;
  }

  public UserEmployeePointsRecordDO setAward(int award) {
    this.award = award;
    setAwardIsSet(true);
    return this;
  }

  public void unsetAward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  /** Returns true if field award is set (has been assigned a value) and false otherwise */
  public boolean isSetAward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  public void setAwardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_ISSET_ID, value);
  }

  public java.lang.String get_create_time() {
    return this._create_time;
  }

  public UserEmployeePointsRecordDO set_create_time(java.lang.String _create_time) {
    this._create_time = _create_time;
    return this;
  }

  public void unset_create_time() {
    this._create_time = null;
  }

  /** Returns true if field _create_time is set (has been assigned a value) and false otherwise */
  public boolean isSet_create_time() {
    return this._create_time != null;
  }

  public void set_create_timeIsSet(boolean value) {
    if (!value) {
      this._create_time = null;
    }
  }

  public int getApplication_id() {
    return this.application_id;
  }

  public UserEmployeePointsRecordDO setApplication_id(int application_id) {
    this.application_id = application_id;
    setApplication_idIsSet(true);
    return this;
  }

  public void unsetApplication_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATION_ID_ISSET_ID);
  }

  /** Returns true if field application_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApplication_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATION_ID_ISSET_ID);
  }

  public void setApplication_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATION_ID_ISSET_ID, value);
  }

  public int getRecom_wxuser() {
    return this.recom_wxuser;
  }

  public UserEmployeePointsRecordDO setRecom_wxuser(int recom_wxuser) {
    this.recom_wxuser = recom_wxuser;
    setRecom_wxuserIsSet(true);
    return this;
  }

  public void unsetRecom_wxuser() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOM_WXUSER_ISSET_ID);
  }

  /** Returns true if field recom_wxuser is set (has been assigned a value) and false otherwise */
  public boolean isSetRecom_wxuser() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOM_WXUSER_ISSET_ID);
  }

  public void setRecom_wxuserIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOM_WXUSER_ISSET_ID, value);
  }

  public java.lang.String getUpdate_time() {
    return this.update_time;
  }

  public UserEmployeePointsRecordDO setUpdate_time(java.lang.String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public UserEmployeePointsRecordDO setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public int getBerecom_wxuser_id() {
    return this.berecom_wxuser_id;
  }

  public UserEmployeePointsRecordDO setBerecom_wxuser_id(int berecom_wxuser_id) {
    this.berecom_wxuser_id = berecom_wxuser_id;
    setBerecom_wxuser_idIsSet(true);
    return this;
  }

  public void unsetBerecom_wxuser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BERECOM_WXUSER_ID_ISSET_ID);
  }

  /** Returns true if field berecom_wxuser_id is set (has been assigned a value) and false otherwise */
  public boolean isSetBerecom_wxuser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BERECOM_WXUSER_ID_ISSET_ID);
  }

  public void setBerecom_wxuser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BERECOM_WXUSER_ID_ISSET_ID, value);
  }

  public int getAward_config_id() {
    return this.award_config_id;
  }

  public UserEmployeePointsRecordDO setAward_config_id(int award_config_id) {
    this.award_config_id = award_config_id;
    setAward_config_idIsSet(true);
    return this;
  }

  public void unsetAward_config_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_CONFIG_ID_ISSET_ID);
  }

  /** Returns true if field award_config_id is set (has been assigned a value) and false otherwise */
  public boolean isSetAward_config_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_CONFIG_ID_ISSET_ID);
  }

  public void setAward_config_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_CONFIG_ID_ISSET_ID, value);
  }

  public int getRecom_user_id() {
    return this.recom_user_id;
  }

  public UserEmployeePointsRecordDO setRecom_user_id(int recom_user_id) {
    this.recom_user_id = recom_user_id;
    setRecom_user_idIsSet(true);
    return this;
  }

  public void unsetRecom_user_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOM_USER_ID_ISSET_ID);
  }

  /** Returns true if field recom_user_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRecom_user_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOM_USER_ID_ISSET_ID);
  }

  public void setRecom_user_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOM_USER_ID_ISSET_ID, value);
  }

  public int getBerecom_user_id() {
    return this.berecom_user_id;
  }

  public UserEmployeePointsRecordDO setBerecom_user_id(int berecom_user_id) {
    this.berecom_user_id = berecom_user_id;
    setBerecom_user_idIsSet(true);
    return this;
  }

  public void unsetBerecom_user_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BERECOM_USER_ID_ISSET_ID);
  }

  /** Returns true if field berecom_user_id is set (has been assigned a value) and false otherwise */
  public boolean isSetBerecom_user_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BERECOM_USER_ID_ISSET_ID);
  }

  public void setBerecom_user_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BERECOM_USER_ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_IDK:
      if (value == null) {
        unsetEmployee_idk();
      } else {
        setEmployee_idk((java.lang.Integer)value);
      }
      break;

    case REASON:
      if (value == null) {
        unsetReason();
      } else {
        setReason((java.lang.String)value);
      }
      break;

    case AWARD:
      if (value == null) {
        unsetAward();
      } else {
        setAward((java.lang.Integer)value);
      }
      break;

    case _CREATE_TIME:
      if (value == null) {
        unset_create_time();
      } else {
        set_create_time((java.lang.String)value);
      }
      break;

    case APPLICATION_ID:
      if (value == null) {
        unsetApplication_id();
      } else {
        setApplication_id((java.lang.Integer)value);
      }
      break;

    case RECOM_WXUSER:
      if (value == null) {
        unsetRecom_wxuser();
      } else {
        setRecom_wxuser((java.lang.Integer)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((java.lang.String)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((java.lang.Integer)value);
      }
      break;

    case BERECOM_WXUSER_ID:
      if (value == null) {
        unsetBerecom_wxuser_id();
      } else {
        setBerecom_wxuser_id((java.lang.Integer)value);
      }
      break;

    case AWARD_CONFIG_ID:
      if (value == null) {
        unsetAward_config_id();
      } else {
        setAward_config_id((java.lang.Integer)value);
      }
      break;

    case RECOM_USER_ID:
      if (value == null) {
        unsetRecom_user_id();
      } else {
        setRecom_user_id((java.lang.Integer)value);
      }
      break;

    case BERECOM_USER_ID:
      if (value == null) {
        unsetBerecom_user_id();
      } else {
        setBerecom_user_id((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case EMPLOYEE_IDK:
      return getEmployee_idk();

    case REASON:
      return getReason();

    case AWARD:
      return getAward();

    case _CREATE_TIME:
      return get_create_time();

    case APPLICATION_ID:
      return getApplication_id();

    case RECOM_WXUSER:
      return getRecom_wxuser();

    case UPDATE_TIME:
      return getUpdate_time();

    case POSITION_ID:
      return getPosition_id();

    case BERECOM_WXUSER_ID:
      return getBerecom_wxuser_id();

    case AWARD_CONFIG_ID:
      return getAward_config_id();

    case RECOM_USER_ID:
      return getRecom_user_id();

    case BERECOM_USER_ID:
      return getBerecom_user_id();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case EMPLOYEE_IDK:
      return isSetEmployee_idk();
    case REASON:
      return isSetReason();
    case AWARD:
      return isSetAward();
    case _CREATE_TIME:
      return isSet_create_time();
    case APPLICATION_ID:
      return isSetApplication_id();
    case RECOM_WXUSER:
      return isSetRecom_wxuser();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case POSITION_ID:
      return isSetPosition_id();
    case BERECOM_WXUSER_ID:
      return isSetBerecom_wxuser_id();
    case AWARD_CONFIG_ID:
      return isSetAward_config_id();
    case RECOM_USER_ID:
      return isSetRecom_user_id();
    case BERECOM_USER_ID:
      return isSetBerecom_user_id();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEmployeePointsRecordDO)
      return this.equals((UserEmployeePointsRecordDO)that);
    return false;
  }

  public boolean equals(UserEmployeePointsRecordDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_employee_idk = true && this.isSetEmployee_idk();
    boolean that_present_employee_idk = true && that.isSetEmployee_idk();
    if (this_present_employee_idk || that_present_employee_idk) {
      if (!(this_present_employee_idk && that_present_employee_idk))
        return false;
      if (this.employee_idk != that.employee_idk)
        return false;
    }

    boolean this_present_reason = true && this.isSetReason();
    boolean that_present_reason = true && that.isSetReason();
    if (this_present_reason || that_present_reason) {
      if (!(this_present_reason && that_present_reason))
        return false;
      if (!this.reason.equals(that.reason))
        return false;
    }

    boolean this_present_award = true && this.isSetAward();
    boolean that_present_award = true && that.isSetAward();
    if (this_present_award || that_present_award) {
      if (!(this_present_award && that_present_award))
        return false;
      if (this.award != that.award)
        return false;
    }

    boolean this_present__create_time = true && this.isSet_create_time();
    boolean that_present__create_time = true && that.isSet_create_time();
    if (this_present__create_time || that_present__create_time) {
      if (!(this_present__create_time && that_present__create_time))
        return false;
      if (!this._create_time.equals(that._create_time))
        return false;
    }

    boolean this_present_application_id = true && this.isSetApplication_id();
    boolean that_present_application_id = true && that.isSetApplication_id();
    if (this_present_application_id || that_present_application_id) {
      if (!(this_present_application_id && that_present_application_id))
        return false;
      if (this.application_id != that.application_id)
        return false;
    }

    boolean this_present_recom_wxuser = true && this.isSetRecom_wxuser();
    boolean that_present_recom_wxuser = true && that.isSetRecom_wxuser();
    if (this_present_recom_wxuser || that_present_recom_wxuser) {
      if (!(this_present_recom_wxuser && that_present_recom_wxuser))
        return false;
      if (this.recom_wxuser != that.recom_wxuser)
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_berecom_wxuser_id = true && this.isSetBerecom_wxuser_id();
    boolean that_present_berecom_wxuser_id = true && that.isSetBerecom_wxuser_id();
    if (this_present_berecom_wxuser_id || that_present_berecom_wxuser_id) {
      if (!(this_present_berecom_wxuser_id && that_present_berecom_wxuser_id))
        return false;
      if (this.berecom_wxuser_id != that.berecom_wxuser_id)
        return false;
    }

    boolean this_present_award_config_id = true && this.isSetAward_config_id();
    boolean that_present_award_config_id = true && that.isSetAward_config_id();
    if (this_present_award_config_id || that_present_award_config_id) {
      if (!(this_present_award_config_id && that_present_award_config_id))
        return false;
      if (this.award_config_id != that.award_config_id)
        return false;
    }

    boolean this_present_recom_user_id = true && this.isSetRecom_user_id();
    boolean that_present_recom_user_id = true && that.isSetRecom_user_id();
    if (this_present_recom_user_id || that_present_recom_user_id) {
      if (!(this_present_recom_user_id && that_present_recom_user_id))
        return false;
      if (this.recom_user_id != that.recom_user_id)
        return false;
    }

    boolean this_present_berecom_user_id = true && this.isSetBerecom_user_id();
    boolean that_present_berecom_user_id = true && that.isSetBerecom_user_id();
    if (this_present_berecom_user_id || that_present_berecom_user_id) {
      if (!(this_present_berecom_user_id && that_present_berecom_user_id))
        return false;
      if (this.berecom_user_id != that.berecom_user_id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetEmployee_idk()) ? 131071 : 524287);
    if (isSetEmployee_idk())
      hashCode = hashCode * 8191 + employee_idk;

    hashCode = hashCode * 8191 + ((isSetReason()) ? 131071 : 524287);
    if (isSetReason())
      hashCode = hashCode * 8191 + reason.hashCode();

    hashCode = hashCode * 8191 + ((isSetAward()) ? 131071 : 524287);
    if (isSetAward())
      hashCode = hashCode * 8191 + award;

    hashCode = hashCode * 8191 + ((isSet_create_time()) ? 131071 : 524287);
    if (isSet_create_time())
      hashCode = hashCode * 8191 + _create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplication_id()) ? 131071 : 524287);
    if (isSetApplication_id())
      hashCode = hashCode * 8191 + application_id;

    hashCode = hashCode * 8191 + ((isSetRecom_wxuser()) ? 131071 : 524287);
    if (isSetRecom_wxuser())
      hashCode = hashCode * 8191 + recom_wxuser;

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + position_id;

    hashCode = hashCode * 8191 + ((isSetBerecom_wxuser_id()) ? 131071 : 524287);
    if (isSetBerecom_wxuser_id())
      hashCode = hashCode * 8191 + berecom_wxuser_id;

    hashCode = hashCode * 8191 + ((isSetAward_config_id()) ? 131071 : 524287);
    if (isSetAward_config_id())
      hashCode = hashCode * 8191 + award_config_id;

    hashCode = hashCode * 8191 + ((isSetRecom_user_id()) ? 131071 : 524287);
    if (isSetRecom_user_id())
      hashCode = hashCode * 8191 + recom_user_id;

    hashCode = hashCode * 8191 + ((isSetBerecom_user_id()) ? 131071 : 524287);
    if (isSetBerecom_user_id())
      hashCode = hashCode * 8191 + berecom_user_id;

    return hashCode;
  }

  @Override
  public int compareTo(UserEmployeePointsRecordDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployee_idk()).compareTo(other.isSetEmployee_idk());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployee_idk()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employee_idk, other.employee_idk);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReason()).compareTo(other.isSetReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reason, other.reason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAward()).compareTo(other.isSetAward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award, other.award);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_create_time()).compareTo(other.isSet_create_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_create_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._create_time, other._create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplication_id()).compareTo(other.isSetApplication_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplication_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.application_id, other.application_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecom_wxuser()).compareTo(other.isSetRecom_wxuser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecom_wxuser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recom_wxuser, other.recom_wxuser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBerecom_wxuser_id()).compareTo(other.isSetBerecom_wxuser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBerecom_wxuser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.berecom_wxuser_id, other.berecom_wxuser_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAward_config_id()).compareTo(other.isSetAward_config_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward_config_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award_config_id, other.award_config_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecom_user_id()).compareTo(other.isSetRecom_user_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecom_user_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recom_user_id, other.recom_user_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBerecom_user_id()).compareTo(other.isSetBerecom_user_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBerecom_user_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.berecom_user_id, other.berecom_user_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserEmployeePointsRecordDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetEmployee_idk()) {
      if (!first) sb.append(", ");
      sb.append("employee_idk:");
      sb.append(this.employee_idk);
      first = false;
    }
    if (isSetReason()) {
      if (!first) sb.append(", ");
      sb.append("reason:");
      if (this.reason == null) {
        sb.append("null");
      } else {
        sb.append(this.reason);
      }
      first = false;
    }
    if (isSetAward()) {
      if (!first) sb.append(", ");
      sb.append("award:");
      sb.append(this.award);
      first = false;
    }
    if (isSet_create_time()) {
      if (!first) sb.append(", ");
      sb.append("_create_time:");
      if (this._create_time == null) {
        sb.append("null");
      } else {
        sb.append(this._create_time);
      }
      first = false;
    }
    if (isSetApplication_id()) {
      if (!first) sb.append(", ");
      sb.append("application_id:");
      sb.append(this.application_id);
      first = false;
    }
    if (isSetRecom_wxuser()) {
      if (!first) sb.append(", ");
      sb.append("recom_wxuser:");
      sb.append(this.recom_wxuser);
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetBerecom_wxuser_id()) {
      if (!first) sb.append(", ");
      sb.append("berecom_wxuser_id:");
      sb.append(this.berecom_wxuser_id);
      first = false;
    }
    if (isSetAward_config_id()) {
      if (!first) sb.append(", ");
      sb.append("award_config_id:");
      sb.append(this.award_config_id);
      first = false;
    }
    if (isSetRecom_user_id()) {
      if (!first) sb.append(", ");
      sb.append("recom_user_id:");
      sb.append(this.recom_user_id);
      first = false;
    }
    if (isSetBerecom_user_id()) {
      if (!first) sb.append(", ");
      sb.append("berecom_user_id:");
      sb.append(this.berecom_user_id);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEmployeePointsRecordDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeePointsRecordDOStandardScheme getScheme() {
      return new UserEmployeePointsRecordDOStandardScheme();
    }
  }

  private static class UserEmployeePointsRecordDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserEmployeePointsRecordDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEE_IDK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employee_idk = iprot.readI32();
              struct.setEmployee_idkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reason = iprot.readString();
              struct.setReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.award = iprot.readI32();
              struct.setAwardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._create_time = iprot.readString();
              struct.set_create_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // APPLICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.application_id = iprot.readI32();
              struct.setApplication_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RECOM_WXUSER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recom_wxuser = iprot.readI32();
              struct.setRecom_wxuserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BERECOM_WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.berecom_wxuser_id = iprot.readI32();
              struct.setBerecom_wxuser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AWARD_CONFIG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.award_config_id = iprot.readI32();
              struct.setAward_config_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RECOM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recom_user_id = iprot.readI32();
              struct.setRecom_user_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BERECOM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.berecom_user_id = iprot.readI32();
              struct.setBerecom_user_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployee_idk()) {
        oprot.writeFieldBegin(EMPLOYEE_IDK_FIELD_DESC);
        oprot.writeI32(struct.employee_idk);
        oprot.writeFieldEnd();
      }
      if (struct.reason != null) {
        if (struct.isSetReason()) {
          oprot.writeFieldBegin(REASON_FIELD_DESC);
          oprot.writeString(struct.reason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAward()) {
        oprot.writeFieldBegin(AWARD_FIELD_DESC);
        oprot.writeI32(struct.award);
        oprot.writeFieldEnd();
      }
      if (struct._create_time != null) {
        if (struct.isSet_create_time()) {
          oprot.writeFieldBegin(_CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct._create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApplication_id()) {
        oprot.writeFieldBegin(APPLICATION_ID_FIELD_DESC);
        oprot.writeI32(struct.application_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecom_wxuser()) {
        oprot.writeFieldBegin(RECOM_WXUSER_FIELD_DESC);
        oprot.writeI32(struct.recom_wxuser);
        oprot.writeFieldEnd();
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBerecom_wxuser_id()) {
        oprot.writeFieldBegin(BERECOM_WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.berecom_wxuser_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAward_config_id()) {
        oprot.writeFieldBegin(AWARD_CONFIG_ID_FIELD_DESC);
        oprot.writeI32(struct.award_config_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecom_user_id()) {
        oprot.writeFieldBegin(RECOM_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.recom_user_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBerecom_user_id()) {
        oprot.writeFieldBegin(BERECOM_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.berecom_user_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEmployeePointsRecordDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeePointsRecordDOTupleScheme getScheme() {
      return new UserEmployeePointsRecordDOTupleScheme();
    }
  }

  private static class UserEmployeePointsRecordDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserEmployeePointsRecordDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetEmployee_idk()) {
        optionals.set(1);
      }
      if (struct.isSetReason()) {
        optionals.set(2);
      }
      if (struct.isSetAward()) {
        optionals.set(3);
      }
      if (struct.isSet_create_time()) {
        optionals.set(4);
      }
      if (struct.isSetApplication_id()) {
        optionals.set(5);
      }
      if (struct.isSetRecom_wxuser()) {
        optionals.set(6);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(7);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(8);
      }
      if (struct.isSetBerecom_wxuser_id()) {
        optionals.set(9);
      }
      if (struct.isSetAward_config_id()) {
        optionals.set(10);
      }
      if (struct.isSetRecom_user_id()) {
        optionals.set(11);
      }
      if (struct.isSetBerecom_user_id()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetEmployee_idk()) {
        oprot.writeI32(struct.employee_idk);
      }
      if (struct.isSetReason()) {
        oprot.writeString(struct.reason);
      }
      if (struct.isSetAward()) {
        oprot.writeI32(struct.award);
      }
      if (struct.isSet_create_time()) {
        oprot.writeString(struct._create_time);
      }
      if (struct.isSetApplication_id()) {
        oprot.writeI32(struct.application_id);
      }
      if (struct.isSetRecom_wxuser()) {
        oprot.writeI32(struct.recom_wxuser);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetBerecom_wxuser_id()) {
        oprot.writeI32(struct.berecom_wxuser_id);
      }
      if (struct.isSetAward_config_id()) {
        oprot.writeI32(struct.award_config_id);
      }
      if (struct.isSetRecom_user_id()) {
        oprot.writeI32(struct.recom_user_id);
      }
      if (struct.isSetBerecom_user_id()) {
        oprot.writeI32(struct.berecom_user_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employee_idk = iprot.readI32();
        struct.setEmployee_idkIsSet(true);
      }
      if (incoming.get(2)) {
        struct.reason = iprot.readString();
        struct.setReasonIsSet(true);
      }
      if (incoming.get(3)) {
        struct.award = iprot.readI32();
        struct.setAwardIsSet(true);
      }
      if (incoming.get(4)) {
        struct._create_time = iprot.readString();
        struct.set_create_timeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.application_id = iprot.readI32();
        struct.setApplication_idIsSet(true);
      }
      if (incoming.get(6)) {
        struct.recom_wxuser = iprot.readI32();
        struct.setRecom_wxuserIsSet(true);
      }
      if (incoming.get(7)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.berecom_wxuser_id = iprot.readI32();
        struct.setBerecom_wxuser_idIsSet(true);
      }
      if (incoming.get(10)) {
        struct.award_config_id = iprot.readI32();
        struct.setAward_config_idIsSet(true);
      }
      if (incoming.get(11)) {
        struct.recom_user_id = iprot.readI32();
        struct.setRecom_user_idIsSet(true);
      }
      if (incoming.get(12)) {
        struct.berecom_user_id = iprot.readI32();
        struct.setBerecom_user_idIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

