/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.apps.positionbs.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-22")
public class PositionBS {

  /**
   * TODO:list what notation this dateTime represents. eg ISO-8601
   * or if its in the format like YYYY-mm-DD you mentioned.
   */
  public interface Iface {

    public com.moseeker.thrift.gen.common.struct.Response synchronizePositionToThirdPartyPlatform(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response refreshPositionToThirdPartyPlatform(int positionId, int channel) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response refreshPositionQXPlatform(java.util.List<java.lang.Integer> positionIds) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void synchronizePositionToThirdPartyPlatform(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void refreshPositionToThirdPartyPlatform(int positionId, int channel, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void refreshPositionQXPlatform(java.util.List<java.lang.Integer> positionIds, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.moseeker.thrift.gen.common.struct.Response synchronizePositionToThirdPartyPlatform(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position) throws org.apache.thrift.TException
    {
      send_synchronizePositionToThirdPartyPlatform(position);
      return recv_synchronizePositionToThirdPartyPlatform();
    }

    public void send_synchronizePositionToThirdPartyPlatform(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position) throws org.apache.thrift.TException
    {
      synchronizePositionToThirdPartyPlatform_args args = new synchronizePositionToThirdPartyPlatform_args();
      args.setPosition(position);
      sendBase("synchronizePositionToThirdPartyPlatform", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_synchronizePositionToThirdPartyPlatform() throws org.apache.thrift.TException
    {
      synchronizePositionToThirdPartyPlatform_result result = new synchronizePositionToThirdPartyPlatform_result();
      receiveBase(result, "synchronizePositionToThirdPartyPlatform");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "synchronizePositionToThirdPartyPlatform failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response refreshPositionToThirdPartyPlatform(int positionId, int channel) throws org.apache.thrift.TException
    {
      send_refreshPositionToThirdPartyPlatform(positionId, channel);
      return recv_refreshPositionToThirdPartyPlatform();
    }

    public void send_refreshPositionToThirdPartyPlatform(int positionId, int channel) throws org.apache.thrift.TException
    {
      refreshPositionToThirdPartyPlatform_args args = new refreshPositionToThirdPartyPlatform_args();
      args.setPositionId(positionId);
      args.setChannel(channel);
      sendBase("refreshPositionToThirdPartyPlatform", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_refreshPositionToThirdPartyPlatform() throws org.apache.thrift.TException
    {
      refreshPositionToThirdPartyPlatform_result result = new refreshPositionToThirdPartyPlatform_result();
      receiveBase(result, "refreshPositionToThirdPartyPlatform");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "refreshPositionToThirdPartyPlatform failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response refreshPositionQXPlatform(java.util.List<java.lang.Integer> positionIds) throws org.apache.thrift.TException
    {
      send_refreshPositionQXPlatform(positionIds);
      return recv_refreshPositionQXPlatform();
    }

    public void send_refreshPositionQXPlatform(java.util.List<java.lang.Integer> positionIds) throws org.apache.thrift.TException
    {
      refreshPositionQXPlatform_args args = new refreshPositionQXPlatform_args();
      args.setPositionIds(positionIds);
      sendBase("refreshPositionQXPlatform", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_refreshPositionQXPlatform() throws org.apache.thrift.TException
    {
      refreshPositionQXPlatform_result result = new refreshPositionQXPlatform_result();
      receiveBase(result, "refreshPositionQXPlatform");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "refreshPositionQXPlatform failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void synchronizePositionToThirdPartyPlatform(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      synchronizePositionToThirdPartyPlatform_call method_call = new synchronizePositionToThirdPartyPlatform_call(position, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class synchronizePositionToThirdPartyPlatform_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position;
      public synchronizePositionToThirdPartyPlatform_call(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.position = position;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("synchronizePositionToThirdPartyPlatform", org.apache.thrift.protocol.TMessageType.CALL, 0));
        synchronizePositionToThirdPartyPlatform_args args = new synchronizePositionToThirdPartyPlatform_args();
        args.setPosition(position);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_synchronizePositionToThirdPartyPlatform();
      }
    }

    public void refreshPositionToThirdPartyPlatform(int positionId, int channel, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      refreshPositionToThirdPartyPlatform_call method_call = new refreshPositionToThirdPartyPlatform_call(positionId, channel, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class refreshPositionToThirdPartyPlatform_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private int positionId;
      private int channel;
      public refreshPositionToThirdPartyPlatform_call(int positionId, int channel, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.positionId = positionId;
        this.channel = channel;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("refreshPositionToThirdPartyPlatform", org.apache.thrift.protocol.TMessageType.CALL, 0));
        refreshPositionToThirdPartyPlatform_args args = new refreshPositionToThirdPartyPlatform_args();
        args.setPositionId(positionId);
        args.setChannel(channel);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_refreshPositionToThirdPartyPlatform();
      }
    }

    public void refreshPositionQXPlatform(java.util.List<java.lang.Integer> positionIds, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      refreshPositionQXPlatform_call method_call = new refreshPositionQXPlatform_call(positionIds, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class refreshPositionQXPlatform_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<java.lang.Integer> positionIds;
      public refreshPositionQXPlatform_call(java.util.List<java.lang.Integer> positionIds, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.positionIds = positionIds;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("refreshPositionQXPlatform", org.apache.thrift.protocol.TMessageType.CALL, 0));
        refreshPositionQXPlatform_args args = new refreshPositionQXPlatform_args();
        args.setPositionIds(positionIds);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_refreshPositionQXPlatform();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("synchronizePositionToThirdPartyPlatform", new synchronizePositionToThirdPartyPlatform());
      processMap.put("refreshPositionToThirdPartyPlatform", new refreshPositionToThirdPartyPlatform());
      processMap.put("refreshPositionQXPlatform", new refreshPositionQXPlatform());
      return processMap;
    }

    public static class synchronizePositionToThirdPartyPlatform<I extends Iface> extends org.apache.thrift.ProcessFunction<I, synchronizePositionToThirdPartyPlatform_args> {
      public synchronizePositionToThirdPartyPlatform() {
        super("synchronizePositionToThirdPartyPlatform");
      }

      public synchronizePositionToThirdPartyPlatform_args getEmptyArgsInstance() {
        return new synchronizePositionToThirdPartyPlatform_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public synchronizePositionToThirdPartyPlatform_result getResult(I iface, synchronizePositionToThirdPartyPlatform_args args) throws org.apache.thrift.TException {
        synchronizePositionToThirdPartyPlatform_result result = new synchronizePositionToThirdPartyPlatform_result();
        result.success = iface.synchronizePositionToThirdPartyPlatform(args.position);
        return result;
      }
    }

    public static class refreshPositionToThirdPartyPlatform<I extends Iface> extends org.apache.thrift.ProcessFunction<I, refreshPositionToThirdPartyPlatform_args> {
      public refreshPositionToThirdPartyPlatform() {
        super("refreshPositionToThirdPartyPlatform");
      }

      public refreshPositionToThirdPartyPlatform_args getEmptyArgsInstance() {
        return new refreshPositionToThirdPartyPlatform_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public refreshPositionToThirdPartyPlatform_result getResult(I iface, refreshPositionToThirdPartyPlatform_args args) throws org.apache.thrift.TException {
        refreshPositionToThirdPartyPlatform_result result = new refreshPositionToThirdPartyPlatform_result();
        result.success = iface.refreshPositionToThirdPartyPlatform(args.positionId, args.channel);
        return result;
      }
    }

    public static class refreshPositionQXPlatform<I extends Iface> extends org.apache.thrift.ProcessFunction<I, refreshPositionQXPlatform_args> {
      public refreshPositionQXPlatform() {
        super("refreshPositionQXPlatform");
      }

      public refreshPositionQXPlatform_args getEmptyArgsInstance() {
        return new refreshPositionQXPlatform_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public refreshPositionQXPlatform_result getResult(I iface, refreshPositionQXPlatform_args args) throws org.apache.thrift.TException {
        refreshPositionQXPlatform_result result = new refreshPositionQXPlatform_result();
        result.success = iface.refreshPositionQXPlatform(args.positionIds);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("synchronizePositionToThirdPartyPlatform", new synchronizePositionToThirdPartyPlatform());
      processMap.put("refreshPositionToThirdPartyPlatform", new refreshPositionToThirdPartyPlatform());
      processMap.put("refreshPositionQXPlatform", new refreshPositionQXPlatform());
      return processMap;
    }

    public static class synchronizePositionToThirdPartyPlatform<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, synchronizePositionToThirdPartyPlatform_args, com.moseeker.thrift.gen.common.struct.Response> {
      public synchronizePositionToThirdPartyPlatform() {
        super("synchronizePositionToThirdPartyPlatform");
      }

      public synchronizePositionToThirdPartyPlatform_args getEmptyArgsInstance() {
        return new synchronizePositionToThirdPartyPlatform_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            synchronizePositionToThirdPartyPlatform_result result = new synchronizePositionToThirdPartyPlatform_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            synchronizePositionToThirdPartyPlatform_result result = new synchronizePositionToThirdPartyPlatform_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, synchronizePositionToThirdPartyPlatform_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.synchronizePositionToThirdPartyPlatform(args.position,resultHandler);
      }
    }

    public static class refreshPositionToThirdPartyPlatform<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, refreshPositionToThirdPartyPlatform_args, com.moseeker.thrift.gen.common.struct.Response> {
      public refreshPositionToThirdPartyPlatform() {
        super("refreshPositionToThirdPartyPlatform");
      }

      public refreshPositionToThirdPartyPlatform_args getEmptyArgsInstance() {
        return new refreshPositionToThirdPartyPlatform_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            refreshPositionToThirdPartyPlatform_result result = new refreshPositionToThirdPartyPlatform_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            refreshPositionToThirdPartyPlatform_result result = new refreshPositionToThirdPartyPlatform_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, refreshPositionToThirdPartyPlatform_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.refreshPositionToThirdPartyPlatform(args.positionId, args.channel,resultHandler);
      }
    }

    public static class refreshPositionQXPlatform<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, refreshPositionQXPlatform_args, com.moseeker.thrift.gen.common.struct.Response> {
      public refreshPositionQXPlatform() {
        super("refreshPositionQXPlatform");
      }

      public refreshPositionQXPlatform_args getEmptyArgsInstance() {
        return new refreshPositionQXPlatform_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            refreshPositionQXPlatform_result result = new refreshPositionQXPlatform_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            refreshPositionQXPlatform_result result = new refreshPositionQXPlatform_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, refreshPositionQXPlatform_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.refreshPositionQXPlatform(args.positionIds,resultHandler);
      }
    }

  }

  public static class synchronizePositionToThirdPartyPlatform_args implements org.apache.thrift.TBase<synchronizePositionToThirdPartyPlatform_args, synchronizePositionToThirdPartyPlatform_args._Fields>, java.io.Serializable, Cloneable, Comparable<synchronizePositionToThirdPartyPlatform_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("synchronizePositionToThirdPartyPlatform_args");

    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new synchronizePositionToThirdPartyPlatform_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new synchronizePositionToThirdPartyPlatform_argsTupleSchemeFactory();

    public com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      POSITION((short)1, "position");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // POSITION
            return POSITION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(synchronizePositionToThirdPartyPlatform_args.class, metaDataMap);
    }

    public synchronizePositionToThirdPartyPlatform_args() {
    }

    public synchronizePositionToThirdPartyPlatform_args(
      com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position)
    {
      this();
      this.position = position;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public synchronizePositionToThirdPartyPlatform_args(synchronizePositionToThirdPartyPlatform_args other) {
      if (other.isSetPosition()) {
        this.position = new com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm(other.position);
      }
    }

    public synchronizePositionToThirdPartyPlatform_args deepCopy() {
      return new synchronizePositionToThirdPartyPlatform_args(this);
    }

    @Override
    public void clear() {
      this.position = null;
    }

    public com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm getPosition() {
      return this.position;
    }

    public synchronizePositionToThirdPartyPlatform_args setPosition(com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case POSITION:
        if (value == null) {
          unsetPosition();
        } else {
          setPosition((com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case POSITION:
        return getPosition();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case POSITION:
        return isSetPosition();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof synchronizePositionToThirdPartyPlatform_args)
        return this.equals((synchronizePositionToThirdPartyPlatform_args)that);
      return false;
    }

    public boolean equals(synchronizePositionToThirdPartyPlatform_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(synchronizePositionToThirdPartyPlatform_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("synchronizePositionToThirdPartyPlatform_args(");
      boolean first = true;

      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (position != null) {
        position.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public synchronizePositionToThirdPartyPlatform_argsStandardScheme getScheme() {
        return new synchronizePositionToThirdPartyPlatform_argsStandardScheme();
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<synchronizePositionToThirdPartyPlatform_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, synchronizePositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.position = new com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm();
                struct.position.read(iprot);
                struct.setPositionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, synchronizePositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          struct.position.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class synchronizePositionToThirdPartyPlatform_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public synchronizePositionToThirdPartyPlatform_argsTupleScheme getScheme() {
        return new synchronizePositionToThirdPartyPlatform_argsTupleScheme();
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<synchronizePositionToThirdPartyPlatform_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, synchronizePositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPosition()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetPosition()) {
          struct.position.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, synchronizePositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.position = new com.moseeker.thrift.gen.apps.positionbs.struct.ThirdPartyPositionForm();
          struct.position.read(iprot);
          struct.setPositionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class synchronizePositionToThirdPartyPlatform_result implements org.apache.thrift.TBase<synchronizePositionToThirdPartyPlatform_result, synchronizePositionToThirdPartyPlatform_result._Fields>, java.io.Serializable, Cloneable, Comparable<synchronizePositionToThirdPartyPlatform_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("synchronizePositionToThirdPartyPlatform_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new synchronizePositionToThirdPartyPlatform_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new synchronizePositionToThirdPartyPlatform_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(synchronizePositionToThirdPartyPlatform_result.class, metaDataMap);
    }

    public synchronizePositionToThirdPartyPlatform_result() {
    }

    public synchronizePositionToThirdPartyPlatform_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public synchronizePositionToThirdPartyPlatform_result(synchronizePositionToThirdPartyPlatform_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public synchronizePositionToThirdPartyPlatform_result deepCopy() {
      return new synchronizePositionToThirdPartyPlatform_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public synchronizePositionToThirdPartyPlatform_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof synchronizePositionToThirdPartyPlatform_result)
        return this.equals((synchronizePositionToThirdPartyPlatform_result)that);
      return false;
    }

    public boolean equals(synchronizePositionToThirdPartyPlatform_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(synchronizePositionToThirdPartyPlatform_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("synchronizePositionToThirdPartyPlatform_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public synchronizePositionToThirdPartyPlatform_resultStandardScheme getScheme() {
        return new synchronizePositionToThirdPartyPlatform_resultStandardScheme();
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<synchronizePositionToThirdPartyPlatform_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, synchronizePositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, synchronizePositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class synchronizePositionToThirdPartyPlatform_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public synchronizePositionToThirdPartyPlatform_resultTupleScheme getScheme() {
        return new synchronizePositionToThirdPartyPlatform_resultTupleScheme();
      }
    }

    private static class synchronizePositionToThirdPartyPlatform_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<synchronizePositionToThirdPartyPlatform_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, synchronizePositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, synchronizePositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class refreshPositionToThirdPartyPlatform_args implements org.apache.thrift.TBase<refreshPositionToThirdPartyPlatform_args, refreshPositionToThirdPartyPlatform_args._Fields>, java.io.Serializable, Cloneable, Comparable<refreshPositionToThirdPartyPlatform_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("refreshPositionToThirdPartyPlatform_args");

    private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new refreshPositionToThirdPartyPlatform_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new refreshPositionToThirdPartyPlatform_argsTupleSchemeFactory();

    public int positionId; // required
    public int channel; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      POSITION_ID((short)1, "positionId"),
      CHANNEL((short)2, "channel");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // POSITION_ID
            return POSITION_ID;
          case 2: // CHANNEL
            return CHANNEL;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __POSITIONID_ISSET_ID = 0;
    private static final int __CHANNEL_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(refreshPositionToThirdPartyPlatform_args.class, metaDataMap);
    }

    public refreshPositionToThirdPartyPlatform_args() {
    }

    public refreshPositionToThirdPartyPlatform_args(
      int positionId,
      int channel)
    {
      this();
      this.positionId = positionId;
      setPositionIdIsSet(true);
      this.channel = channel;
      setChannelIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public refreshPositionToThirdPartyPlatform_args(refreshPositionToThirdPartyPlatform_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.positionId = other.positionId;
      this.channel = other.channel;
    }

    public refreshPositionToThirdPartyPlatform_args deepCopy() {
      return new refreshPositionToThirdPartyPlatform_args(this);
    }

    @Override
    public void clear() {
      setPositionIdIsSet(false);
      this.positionId = 0;
      setChannelIsSet(false);
      this.channel = 0;
    }

    public int getPositionId() {
      return this.positionId;
    }

    public refreshPositionToThirdPartyPlatform_args setPositionId(int positionId) {
      this.positionId = positionId;
      setPositionIdIsSet(true);
      return this;
    }

    public void unsetPositionId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
    }

    /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
    public boolean isSetPositionId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
    }

    public void setPositionIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
    }

    public int getChannel() {
      return this.channel;
    }

    public refreshPositionToThirdPartyPlatform_args setChannel(int channel) {
      this.channel = channel;
      setChannelIsSet(true);
      return this;
    }

    public void unsetChannel() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
    }

    /** Returns true if field channel is set (has been assigned a value) and false otherwise */
    public boolean isSetChannel() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
    }

    public void setChannelIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case POSITION_ID:
        if (value == null) {
          unsetPositionId();
        } else {
          setPositionId((java.lang.Integer)value);
        }
        break;

      case CHANNEL:
        if (value == null) {
          unsetChannel();
        } else {
          setChannel((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case POSITION_ID:
        return getPositionId();

      case CHANNEL:
        return getChannel();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case POSITION_ID:
        return isSetPositionId();
      case CHANNEL:
        return isSetChannel();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof refreshPositionToThirdPartyPlatform_args)
        return this.equals((refreshPositionToThirdPartyPlatform_args)that);
      return false;
    }

    public boolean equals(refreshPositionToThirdPartyPlatform_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_positionId = true;
      boolean that_present_positionId = true;
      if (this_present_positionId || that_present_positionId) {
        if (!(this_present_positionId && that_present_positionId))
          return false;
        if (this.positionId != that.positionId)
          return false;
      }

      boolean this_present_channel = true;
      boolean that_present_channel = true;
      if (this_present_channel || that_present_channel) {
        if (!(this_present_channel && that_present_channel))
          return false;
        if (this.channel != that.channel)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + positionId;

      hashCode = hashCode * 8191 + channel;

      return hashCode;
    }

    @Override
    public int compareTo(refreshPositionToThirdPartyPlatform_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPositionId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetChannel()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("refreshPositionToThirdPartyPlatform_args(");
      boolean first = true;

      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("channel:");
      sb.append(this.channel);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class refreshPositionToThirdPartyPlatform_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionToThirdPartyPlatform_argsStandardScheme getScheme() {
        return new refreshPositionToThirdPartyPlatform_argsStandardScheme();
      }
    }

    private static class refreshPositionToThirdPartyPlatform_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<refreshPositionToThirdPartyPlatform_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, refreshPositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // POSITION_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.positionId = iprot.readI32();
                struct.setPositionIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CHANNEL
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.channel = iprot.readI32();
                struct.setChannelIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, refreshPositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
        oprot.writeI32(struct.channel);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class refreshPositionToThirdPartyPlatform_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionToThirdPartyPlatform_argsTupleScheme getScheme() {
        return new refreshPositionToThirdPartyPlatform_argsTupleScheme();
      }
    }

    private static class refreshPositionToThirdPartyPlatform_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<refreshPositionToThirdPartyPlatform_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, refreshPositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPositionId()) {
          optionals.set(0);
        }
        if (struct.isSetChannel()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPositionId()) {
          oprot.writeI32(struct.positionId);
        }
        if (struct.isSetChannel()) {
          oprot.writeI32(struct.channel);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, refreshPositionToThirdPartyPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.positionId = iprot.readI32();
          struct.setPositionIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.channel = iprot.readI32();
          struct.setChannelIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class refreshPositionToThirdPartyPlatform_result implements org.apache.thrift.TBase<refreshPositionToThirdPartyPlatform_result, refreshPositionToThirdPartyPlatform_result._Fields>, java.io.Serializable, Cloneable, Comparable<refreshPositionToThirdPartyPlatform_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("refreshPositionToThirdPartyPlatform_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new refreshPositionToThirdPartyPlatform_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new refreshPositionToThirdPartyPlatform_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(refreshPositionToThirdPartyPlatform_result.class, metaDataMap);
    }

    public refreshPositionToThirdPartyPlatform_result() {
    }

    public refreshPositionToThirdPartyPlatform_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public refreshPositionToThirdPartyPlatform_result(refreshPositionToThirdPartyPlatform_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public refreshPositionToThirdPartyPlatform_result deepCopy() {
      return new refreshPositionToThirdPartyPlatform_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public refreshPositionToThirdPartyPlatform_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof refreshPositionToThirdPartyPlatform_result)
        return this.equals((refreshPositionToThirdPartyPlatform_result)that);
      return false;
    }

    public boolean equals(refreshPositionToThirdPartyPlatform_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(refreshPositionToThirdPartyPlatform_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("refreshPositionToThirdPartyPlatform_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class refreshPositionToThirdPartyPlatform_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionToThirdPartyPlatform_resultStandardScheme getScheme() {
        return new refreshPositionToThirdPartyPlatform_resultStandardScheme();
      }
    }

    private static class refreshPositionToThirdPartyPlatform_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<refreshPositionToThirdPartyPlatform_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, refreshPositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, refreshPositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class refreshPositionToThirdPartyPlatform_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionToThirdPartyPlatform_resultTupleScheme getScheme() {
        return new refreshPositionToThirdPartyPlatform_resultTupleScheme();
      }
    }

    private static class refreshPositionToThirdPartyPlatform_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<refreshPositionToThirdPartyPlatform_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, refreshPositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, refreshPositionToThirdPartyPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class refreshPositionQXPlatform_args implements org.apache.thrift.TBase<refreshPositionQXPlatform_args, refreshPositionQXPlatform_args._Fields>, java.io.Serializable, Cloneable, Comparable<refreshPositionQXPlatform_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("refreshPositionQXPlatform_args");

    private static final org.apache.thrift.protocol.TField POSITION_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("positionIds", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new refreshPositionQXPlatform_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new refreshPositionQXPlatform_argsTupleSchemeFactory();

    public java.util.List<java.lang.Integer> positionIds; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      POSITION_IDS((short)1, "positionIds");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // POSITION_IDS
            return POSITION_IDS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.POSITION_IDS, new org.apache.thrift.meta_data.FieldMetaData("positionIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(refreshPositionQXPlatform_args.class, metaDataMap);
    }

    public refreshPositionQXPlatform_args() {
    }

    public refreshPositionQXPlatform_args(
      java.util.List<java.lang.Integer> positionIds)
    {
      this();
      this.positionIds = positionIds;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public refreshPositionQXPlatform_args(refreshPositionQXPlatform_args other) {
      if (other.isSetPositionIds()) {
        java.util.List<java.lang.Integer> __this__positionIds = new java.util.ArrayList<java.lang.Integer>(other.positionIds);
        this.positionIds = __this__positionIds;
      }
    }

    public refreshPositionQXPlatform_args deepCopy() {
      return new refreshPositionQXPlatform_args(this);
    }

    @Override
    public void clear() {
      this.positionIds = null;
    }

    public int getPositionIdsSize() {
      return (this.positionIds == null) ? 0 : this.positionIds.size();
    }

    public java.util.Iterator<java.lang.Integer> getPositionIdsIterator() {
      return (this.positionIds == null) ? null : this.positionIds.iterator();
    }

    public void addToPositionIds(int elem) {
      if (this.positionIds == null) {
        this.positionIds = new java.util.ArrayList<java.lang.Integer>();
      }
      this.positionIds.add(elem);
    }

    public java.util.List<java.lang.Integer> getPositionIds() {
      return this.positionIds;
    }

    public refreshPositionQXPlatform_args setPositionIds(java.util.List<java.lang.Integer> positionIds) {
      this.positionIds = positionIds;
      return this;
    }

    public void unsetPositionIds() {
      this.positionIds = null;
    }

    /** Returns true if field positionIds is set (has been assigned a value) and false otherwise */
    public boolean isSetPositionIds() {
      return this.positionIds != null;
    }

    public void setPositionIdsIsSet(boolean value) {
      if (!value) {
        this.positionIds = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case POSITION_IDS:
        if (value == null) {
          unsetPositionIds();
        } else {
          setPositionIds((java.util.List<java.lang.Integer>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case POSITION_IDS:
        return getPositionIds();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case POSITION_IDS:
        return isSetPositionIds();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof refreshPositionQXPlatform_args)
        return this.equals((refreshPositionQXPlatform_args)that);
      return false;
    }

    public boolean equals(refreshPositionQXPlatform_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_positionIds = true && this.isSetPositionIds();
      boolean that_present_positionIds = true && that.isSetPositionIds();
      if (this_present_positionIds || that_present_positionIds) {
        if (!(this_present_positionIds && that_present_positionIds))
          return false;
        if (!this.positionIds.equals(that.positionIds))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPositionIds()) ? 131071 : 524287);
      if (isSetPositionIds())
        hashCode = hashCode * 8191 + positionIds.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(refreshPositionQXPlatform_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetPositionIds()).compareTo(other.isSetPositionIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPositionIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionIds, other.positionIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("refreshPositionQXPlatform_args(");
      boolean first = true;

      sb.append("positionIds:");
      if (this.positionIds == null) {
        sb.append("null");
      } else {
        sb.append(this.positionIds);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class refreshPositionQXPlatform_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionQXPlatform_argsStandardScheme getScheme() {
        return new refreshPositionQXPlatform_argsStandardScheme();
      }
    }

    private static class refreshPositionQXPlatform_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<refreshPositionQXPlatform_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, refreshPositionQXPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // POSITION_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.positionIds = new java.util.ArrayList<java.lang.Integer>(_list0.size);
                  int _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = iprot.readI32();
                    struct.positionIds.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setPositionIdsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, refreshPositionQXPlatform_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.positionIds != null) {
          oprot.writeFieldBegin(POSITION_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.positionIds.size()));
            for (int _iter3 : struct.positionIds)
            {
              oprot.writeI32(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class refreshPositionQXPlatform_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionQXPlatform_argsTupleScheme getScheme() {
        return new refreshPositionQXPlatform_argsTupleScheme();
      }
    }

    private static class refreshPositionQXPlatform_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<refreshPositionQXPlatform_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, refreshPositionQXPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPositionIds()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetPositionIds()) {
          {
            oprot.writeI32(struct.positionIds.size());
            for (int _iter4 : struct.positionIds)
            {
              oprot.writeI32(_iter4);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, refreshPositionQXPlatform_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.positionIds = new java.util.ArrayList<java.lang.Integer>(_list5.size);
            int _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = iprot.readI32();
              struct.positionIds.add(_elem6);
            }
          }
          struct.setPositionIdsIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class refreshPositionQXPlatform_result implements org.apache.thrift.TBase<refreshPositionQXPlatform_result, refreshPositionQXPlatform_result._Fields>, java.io.Serializable, Cloneable, Comparable<refreshPositionQXPlatform_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("refreshPositionQXPlatform_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new refreshPositionQXPlatform_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new refreshPositionQXPlatform_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(refreshPositionQXPlatform_result.class, metaDataMap);
    }

    public refreshPositionQXPlatform_result() {
    }

    public refreshPositionQXPlatform_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public refreshPositionQXPlatform_result(refreshPositionQXPlatform_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public refreshPositionQXPlatform_result deepCopy() {
      return new refreshPositionQXPlatform_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public refreshPositionQXPlatform_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof refreshPositionQXPlatform_result)
        return this.equals((refreshPositionQXPlatform_result)that);
      return false;
    }

    public boolean equals(refreshPositionQXPlatform_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(refreshPositionQXPlatform_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("refreshPositionQXPlatform_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class refreshPositionQXPlatform_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionQXPlatform_resultStandardScheme getScheme() {
        return new refreshPositionQXPlatform_resultStandardScheme();
      }
    }

    private static class refreshPositionQXPlatform_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<refreshPositionQXPlatform_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, refreshPositionQXPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, refreshPositionQXPlatform_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class refreshPositionQXPlatform_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public refreshPositionQXPlatform_resultTupleScheme getScheme() {
        return new refreshPositionQXPlatform_resultTupleScheme();
      }
    }

    private static class refreshPositionQXPlatform_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<refreshPositionQXPlatform_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, refreshPositionQXPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, refreshPositionQXPlatform_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
