/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.employee.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-07-31")
public class RewardVO implements org.apache.thrift.TBase<RewardVO, RewardVO._Fields>, java.io.Serializable, Cloneable, Comparable<RewardVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RewardVO");

  private static final org.apache.thrift.protocol.TField REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("reason", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField POINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("points", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField POSITION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("positionName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PUBLISHER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("publisherId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PUBLISHER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("publisherName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EMPLOYE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField EMPLOYE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("employeName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField RECOMMEND_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendId", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField RECOMMEND_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField BERECOM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("berecomId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField BERECOM_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("berecomName", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RewardVOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RewardVOTupleSchemeFactory();

  public String reason; // optional
  public int points; // optional
  public String updateTime; // optional
  public int type; // optional
  public int positionId; // optional
  public String positionName; // optional
  public int publisherId; // optional
  public String publisherName; // optional
  public int employeId; // optional
  public String employeName; // optional
  public int recommendId; // optional
  public String recommendName; // optional
  public int berecomId; // optional
  public String berecomName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    REASON((short)1, "reason"),
    POINTS((short)2, "points"),
    UPDATE_TIME((short)3, "updateTime"),
    TYPE((short)4, "type"),
    POSITION_ID((short)5, "positionId"),
    POSITION_NAME((short)6, "positionName"),
    PUBLISHER_ID((short)7, "publisherId"),
    PUBLISHER_NAME((short)8, "publisherName"),
    EMPLOYE_ID((short)9, "employeId"),
    EMPLOYE_NAME((short)10, "employeName"),
    RECOMMEND_ID((short)11, "recommendId"),
    RECOMMEND_NAME((short)12, "recommendName"),
    BERECOM_ID((short)13, "berecomId"),
    BERECOM_NAME((short)14, "berecomName");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REASON
          return REASON;
        case 2: // POINTS
          return POINTS;
        case 3: // UPDATE_TIME
          return UPDATE_TIME;
        case 4: // TYPE
          return TYPE;
        case 5: // POSITION_ID
          return POSITION_ID;
        case 6: // POSITION_NAME
          return POSITION_NAME;
        case 7: // PUBLISHER_ID
          return PUBLISHER_ID;
        case 8: // PUBLISHER_NAME
          return PUBLISHER_NAME;
        case 9: // EMPLOYE_ID
          return EMPLOYE_ID;
        case 10: // EMPLOYE_NAME
          return EMPLOYE_NAME;
        case 11: // RECOMMEND_ID
          return RECOMMEND_ID;
        case 12: // RECOMMEND_NAME
          return RECOMMEND_NAME;
        case 13: // BERECOM_ID
          return BERECOM_ID;
        case 14: // BERECOM_NAME
          return BERECOM_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __POINTS_ISSET_ID = 0;
  private static final int __TYPE_ISSET_ID = 1;
  private static final int __POSITIONID_ISSET_ID = 2;
  private static final int __PUBLISHERID_ISSET_ID = 3;
  private static final int __EMPLOYEID_ISSET_ID = 4;
  private static final int __RECOMMENDID_ISSET_ID = 5;
  private static final int __BERECOMID_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.REASON,_Fields.POINTS,_Fields.UPDATE_TIME,_Fields.TYPE,_Fields.POSITION_ID,_Fields.POSITION_NAME,_Fields.PUBLISHER_ID,_Fields.PUBLISHER_NAME,_Fields.EMPLOYE_ID,_Fields.EMPLOYE_NAME,_Fields.RECOMMEND_ID,_Fields.RECOMMEND_NAME,_Fields.BERECOM_ID,_Fields.BERECOM_NAME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REASON, new org.apache.thrift.meta_data.FieldMetaData("reason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POINTS, new org.apache.thrift.meta_data.FieldMetaData("points", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_NAME, new org.apache.thrift.meta_data.FieldMetaData("positionName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUBLISHER_ID, new org.apache.thrift.meta_data.FieldMetaData("publisherId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PUBLISHER_NAME, new org.apache.thrift.meta_data.FieldMetaData("publisherName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYE_NAME, new org.apache.thrift.meta_data.FieldMetaData("employeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_ID, new org.apache.thrift.meta_data.FieldMetaData("recommendId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOMMEND_NAME, new org.apache.thrift.meta_data.FieldMetaData("recommendName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BERECOM_ID, new org.apache.thrift.meta_data.FieldMetaData("berecomId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BERECOM_NAME, new org.apache.thrift.meta_data.FieldMetaData("berecomName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RewardVO.class, metaDataMap);
  }

  public RewardVO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RewardVO(RewardVO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetReason()) {
      this.reason = other.reason;
    }
    this.points = other.points;
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.type = other.type;
    this.positionId = other.positionId;
    if (other.isSetPositionName()) {
      this.positionName = other.positionName;
    }
    this.publisherId = other.publisherId;
    if (other.isSetPublisherName()) {
      this.publisherName = other.publisherName;
    }
    this.employeId = other.employeId;
    if (other.isSetEmployeName()) {
      this.employeName = other.employeName;
    }
    this.recommendId = other.recommendId;
    if (other.isSetRecommendName()) {
      this.recommendName = other.recommendName;
    }
    this.berecomId = other.berecomId;
    if (other.isSetBerecomName()) {
      this.berecomName = other.berecomName;
    }
  }

  public RewardVO deepCopy() {
    return new RewardVO(this);
  }

  @Override
  public void clear() {
    this.reason = null;
    setPointsIsSet(false);
    this.points = 0;
    this.updateTime = null;
    setTypeIsSet(false);
    this.type = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    this.positionName = null;
    setPublisherIdIsSet(false);
    this.publisherId = 0;
    this.publisherName = null;
    setEmployeIdIsSet(false);
    this.employeId = 0;
    this.employeName = null;
    setRecommendIdIsSet(false);
    this.recommendId = 0;
    this.recommendName = null;
    setBerecomIdIsSet(false);
    this.berecomId = 0;
    this.berecomName = null;
  }

  public String getReason() {
    return this.reason;
  }

  public RewardVO setReason(String reason) {
    this.reason = reason;
    return this;
  }

  public void unsetReason() {
    this.reason = null;
  }

  /** Returns true if field reason is set (has been assigned a value) and false otherwise */
  public boolean isSetReason() {
    return this.reason != null;
  }

  public void setReasonIsSet(boolean value) {
    if (!value) {
      this.reason = null;
    }
  }

  public int getPoints() {
    return this.points;
  }

  public RewardVO setPoints(int points) {
    this.points = points;
    setPointsIsSet(true);
    return this;
  }

  public void unsetPoints() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POINTS_ISSET_ID);
  }

  /** Returns true if field points is set (has been assigned a value) and false otherwise */
  public boolean isSetPoints() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POINTS_ISSET_ID);
  }

  public void setPointsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POINTS_ISSET_ID, value);
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public RewardVO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public int getType() {
    return this.type;
  }

  public RewardVO setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public RewardVO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public String getPositionName() {
    return this.positionName;
  }

  public RewardVO setPositionName(String positionName) {
    this.positionName = positionName;
    return this;
  }

  public void unsetPositionName() {
    this.positionName = null;
  }

  /** Returns true if field positionName is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionName() {
    return this.positionName != null;
  }

  public void setPositionNameIsSet(boolean value) {
    if (!value) {
      this.positionName = null;
    }
  }

  public int getPublisherId() {
    return this.publisherId;
  }

  public RewardVO setPublisherId(int publisherId) {
    this.publisherId = publisherId;
    setPublisherIdIsSet(true);
    return this;
  }

  public void unsetPublisherId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PUBLISHERID_ISSET_ID);
  }

  /** Returns true if field publisherId is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisherId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PUBLISHERID_ISSET_ID);
  }

  public void setPublisherIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PUBLISHERID_ISSET_ID, value);
  }

  public String getPublisherName() {
    return this.publisherName;
  }

  public RewardVO setPublisherName(String publisherName) {
    this.publisherName = publisherName;
    return this;
  }

  public void unsetPublisherName() {
    this.publisherName = null;
  }

  /** Returns true if field publisherName is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisherName() {
    return this.publisherName != null;
  }

  public void setPublisherNameIsSet(boolean value) {
    if (!value) {
      this.publisherName = null;
    }
  }

  public int getEmployeId() {
    return this.employeId;
  }

  public RewardVO setEmployeId(int employeId) {
    this.employeId = employeId;
    setEmployeIdIsSet(true);
    return this;
  }

  public void unsetEmployeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEID_ISSET_ID);
  }

  /** Returns true if field employeId is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEID_ISSET_ID);
  }

  public void setEmployeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEID_ISSET_ID, value);
  }

  public String getEmployeName() {
    return this.employeName;
  }

  public RewardVO setEmployeName(String employeName) {
    this.employeName = employeName;
    return this;
  }

  public void unsetEmployeName() {
    this.employeName = null;
  }

  /** Returns true if field employeName is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeName() {
    return this.employeName != null;
  }

  public void setEmployeNameIsSet(boolean value) {
    if (!value) {
      this.employeName = null;
    }
  }

  public int getRecommendId() {
    return this.recommendId;
  }

  public RewardVO setRecommendId(int recommendId) {
    this.recommendId = recommendId;
    setRecommendIdIsSet(true);
    return this;
  }

  public void unsetRecommendId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDID_ISSET_ID);
  }

  /** Returns true if field recommendId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDID_ISSET_ID);
  }

  public void setRecommendIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDID_ISSET_ID, value);
  }

  public String getRecommendName() {
    return this.recommendName;
  }

  public RewardVO setRecommendName(String recommendName) {
    this.recommendName = recommendName;
    return this;
  }

  public void unsetRecommendName() {
    this.recommendName = null;
  }

  /** Returns true if field recommendName is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendName() {
    return this.recommendName != null;
  }

  public void setRecommendNameIsSet(boolean value) {
    if (!value) {
      this.recommendName = null;
    }
  }

  public int getBerecomId() {
    return this.berecomId;
  }

  public RewardVO setBerecomId(int berecomId) {
    this.berecomId = berecomId;
    setBerecomIdIsSet(true);
    return this;
  }

  public void unsetBerecomId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BERECOMID_ISSET_ID);
  }

  /** Returns true if field berecomId is set (has been assigned a value) and false otherwise */
  public boolean isSetBerecomId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BERECOMID_ISSET_ID);
  }

  public void setBerecomIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BERECOMID_ISSET_ID, value);
  }

  public String getBerecomName() {
    return this.berecomName;
  }

  public RewardVO setBerecomName(String berecomName) {
    this.berecomName = berecomName;
    return this;
  }

  public void unsetBerecomName() {
    this.berecomName = null;
  }

  /** Returns true if field berecomName is set (has been assigned a value) and false otherwise */
  public boolean isSetBerecomName() {
    return this.berecomName != null;
  }

  public void setBerecomNameIsSet(boolean value) {
    if (!value) {
      this.berecomName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case REASON:
      if (value == null) {
        unsetReason();
      } else {
        setReason((String)value);
      }
      break;

    case POINTS:
      if (value == null) {
        unsetPoints();
      } else {
        setPoints((Integer)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((Integer)value);
      }
      break;

    case POSITION_NAME:
      if (value == null) {
        unsetPositionName();
      } else {
        setPositionName((String)value);
      }
      break;

    case PUBLISHER_ID:
      if (value == null) {
        unsetPublisherId();
      } else {
        setPublisherId((Integer)value);
      }
      break;

    case PUBLISHER_NAME:
      if (value == null) {
        unsetPublisherName();
      } else {
        setPublisherName((String)value);
      }
      break;

    case EMPLOYE_ID:
      if (value == null) {
        unsetEmployeId();
      } else {
        setEmployeId((Integer)value);
      }
      break;

    case EMPLOYE_NAME:
      if (value == null) {
        unsetEmployeName();
      } else {
        setEmployeName((String)value);
      }
      break;

    case RECOMMEND_ID:
      if (value == null) {
        unsetRecommendId();
      } else {
        setRecommendId((Integer)value);
      }
      break;

    case RECOMMEND_NAME:
      if (value == null) {
        unsetRecommendName();
      } else {
        setRecommendName((String)value);
      }
      break;

    case BERECOM_ID:
      if (value == null) {
        unsetBerecomId();
      } else {
        setBerecomId((Integer)value);
      }
      break;

    case BERECOM_NAME:
      if (value == null) {
        unsetBerecomName();
      } else {
        setBerecomName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case REASON:
      return getReason();

    case POINTS:
      return getPoints();

    case UPDATE_TIME:
      return getUpdateTime();

    case TYPE:
      return getType();

    case POSITION_ID:
      return getPositionId();

    case POSITION_NAME:
      return getPositionName();

    case PUBLISHER_ID:
      return getPublisherId();

    case PUBLISHER_NAME:
      return getPublisherName();

    case EMPLOYE_ID:
      return getEmployeId();

    case EMPLOYE_NAME:
      return getEmployeName();

    case RECOMMEND_ID:
      return getRecommendId();

    case RECOMMEND_NAME:
      return getRecommendName();

    case BERECOM_ID:
      return getBerecomId();

    case BERECOM_NAME:
      return getBerecomName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case REASON:
      return isSetReason();
    case POINTS:
      return isSetPoints();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case TYPE:
      return isSetType();
    case POSITION_ID:
      return isSetPositionId();
    case POSITION_NAME:
      return isSetPositionName();
    case PUBLISHER_ID:
      return isSetPublisherId();
    case PUBLISHER_NAME:
      return isSetPublisherName();
    case EMPLOYE_ID:
      return isSetEmployeId();
    case EMPLOYE_NAME:
      return isSetEmployeName();
    case RECOMMEND_ID:
      return isSetRecommendId();
    case RECOMMEND_NAME:
      return isSetRecommendName();
    case BERECOM_ID:
      return isSetBerecomId();
    case BERECOM_NAME:
      return isSetBerecomName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof RewardVO)
      return this.equals((RewardVO)that);
    return false;
  }

  public boolean equals(RewardVO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_reason = true && this.isSetReason();
    boolean that_present_reason = true && that.isSetReason();
    if (this_present_reason || that_present_reason) {
      if (!(this_present_reason && that_present_reason))
        return false;
      if (!this.reason.equals(that.reason))
        return false;
    }

    boolean this_present_points = true && this.isSetPoints();
    boolean that_present_points = true && that.isSetPoints();
    if (this_present_points || that_present_points) {
      if (!(this_present_points && that_present_points))
        return false;
      if (this.points != that.points)
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_positionName = true && this.isSetPositionName();
    boolean that_present_positionName = true && that.isSetPositionName();
    if (this_present_positionName || that_present_positionName) {
      if (!(this_present_positionName && that_present_positionName))
        return false;
      if (!this.positionName.equals(that.positionName))
        return false;
    }

    boolean this_present_publisherId = true && this.isSetPublisherId();
    boolean that_present_publisherId = true && that.isSetPublisherId();
    if (this_present_publisherId || that_present_publisherId) {
      if (!(this_present_publisherId && that_present_publisherId))
        return false;
      if (this.publisherId != that.publisherId)
        return false;
    }

    boolean this_present_publisherName = true && this.isSetPublisherName();
    boolean that_present_publisherName = true && that.isSetPublisherName();
    if (this_present_publisherName || that_present_publisherName) {
      if (!(this_present_publisherName && that_present_publisherName))
        return false;
      if (!this.publisherName.equals(that.publisherName))
        return false;
    }

    boolean this_present_employeId = true && this.isSetEmployeId();
    boolean that_present_employeId = true && that.isSetEmployeId();
    if (this_present_employeId || that_present_employeId) {
      if (!(this_present_employeId && that_present_employeId))
        return false;
      if (this.employeId != that.employeId)
        return false;
    }

    boolean this_present_employeName = true && this.isSetEmployeName();
    boolean that_present_employeName = true && that.isSetEmployeName();
    if (this_present_employeName || that_present_employeName) {
      if (!(this_present_employeName && that_present_employeName))
        return false;
      if (!this.employeName.equals(that.employeName))
        return false;
    }

    boolean this_present_recommendId = true && this.isSetRecommendId();
    boolean that_present_recommendId = true && that.isSetRecommendId();
    if (this_present_recommendId || that_present_recommendId) {
      if (!(this_present_recommendId && that_present_recommendId))
        return false;
      if (this.recommendId != that.recommendId)
        return false;
    }

    boolean this_present_recommendName = true && this.isSetRecommendName();
    boolean that_present_recommendName = true && that.isSetRecommendName();
    if (this_present_recommendName || that_present_recommendName) {
      if (!(this_present_recommendName && that_present_recommendName))
        return false;
      if (!this.recommendName.equals(that.recommendName))
        return false;
    }

    boolean this_present_berecomId = true && this.isSetBerecomId();
    boolean that_present_berecomId = true && that.isSetBerecomId();
    if (this_present_berecomId || that_present_berecomId) {
      if (!(this_present_berecomId && that_present_berecomId))
        return false;
      if (this.berecomId != that.berecomId)
        return false;
    }

    boolean this_present_berecomName = true && this.isSetBerecomName();
    boolean that_present_berecomName = true && that.isSetBerecomName();
    if (this_present_berecomName || that_present_berecomName) {
      if (!(this_present_berecomName && that_present_berecomName))
        return false;
      if (!this.berecomName.equals(that.berecomName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetReason()) ? 131071 : 524287);
    if (isSetReason())
      hashCode = hashCode * 8191 + reason.hashCode();

    hashCode = hashCode * 8191 + ((isSetPoints()) ? 131071 : 524287);
    if (isSetPoints())
      hashCode = hashCode * 8191 + points;

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetPositionName()) ? 131071 : 524287);
    if (isSetPositionName())
      hashCode = hashCode * 8191 + positionName.hashCode();

    hashCode = hashCode * 8191 + ((isSetPublisherId()) ? 131071 : 524287);
    if (isSetPublisherId())
      hashCode = hashCode * 8191 + publisherId;

    hashCode = hashCode * 8191 + ((isSetPublisherName()) ? 131071 : 524287);
    if (isSetPublisherName())
      hashCode = hashCode * 8191 + publisherName.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmployeId()) ? 131071 : 524287);
    if (isSetEmployeId())
      hashCode = hashCode * 8191 + employeId;

    hashCode = hashCode * 8191 + ((isSetEmployeName()) ? 131071 : 524287);
    if (isSetEmployeName())
      hashCode = hashCode * 8191 + employeName.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecommendId()) ? 131071 : 524287);
    if (isSetRecommendId())
      hashCode = hashCode * 8191 + recommendId;

    hashCode = hashCode * 8191 + ((isSetRecommendName()) ? 131071 : 524287);
    if (isSetRecommendName())
      hashCode = hashCode * 8191 + recommendName.hashCode();

    hashCode = hashCode * 8191 + ((isSetBerecomId()) ? 131071 : 524287);
    if (isSetBerecomId())
      hashCode = hashCode * 8191 + berecomId;

    hashCode = hashCode * 8191 + ((isSetBerecomName()) ? 131071 : 524287);
    if (isSetBerecomName())
      hashCode = hashCode * 8191 + berecomName.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(RewardVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetReason()).compareTo(other.isSetReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reason, other.reason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPoints()).compareTo(other.isSetPoints());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoints()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.points, other.points);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionName()).compareTo(other.isSetPositionName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionName, other.positionName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublisherId()).compareTo(other.isSetPublisherId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisherId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisherId, other.publisherId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublisherName()).compareTo(other.isSetPublisherName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisherName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisherName, other.publisherName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployeId()).compareTo(other.isSetEmployeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeId, other.employeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployeName()).compareTo(other.isSetEmployeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeName, other.employeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommendId()).compareTo(other.isSetRecommendId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendId, other.recommendId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommendName()).compareTo(other.isSetRecommendName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendName, other.recommendName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBerecomId()).compareTo(other.isSetBerecomId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBerecomId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.berecomId, other.berecomId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBerecomName()).compareTo(other.isSetBerecomName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBerecomName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.berecomName, other.berecomName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("RewardVO(");
    boolean first = true;

    if (isSetReason()) {
      sb.append("reason:");
      if (this.reason == null) {
        sb.append("null");
      } else {
        sb.append(this.reason);
      }
      first = false;
    }
    if (isSetPoints()) {
      if (!first) sb.append(", ");
      sb.append("points:");
      sb.append(this.points);
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      sb.append(this.type);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetPositionName()) {
      if (!first) sb.append(", ");
      sb.append("positionName:");
      if (this.positionName == null) {
        sb.append("null");
      } else {
        sb.append(this.positionName);
      }
      first = false;
    }
    if (isSetPublisherId()) {
      if (!first) sb.append(", ");
      sb.append("publisherId:");
      sb.append(this.publisherId);
      first = false;
    }
    if (isSetPublisherName()) {
      if (!first) sb.append(", ");
      sb.append("publisherName:");
      if (this.publisherName == null) {
        sb.append("null");
      } else {
        sb.append(this.publisherName);
      }
      first = false;
    }
    if (isSetEmployeId()) {
      if (!first) sb.append(", ");
      sb.append("employeId:");
      sb.append(this.employeId);
      first = false;
    }
    if (isSetEmployeName()) {
      if (!first) sb.append(", ");
      sb.append("employeName:");
      if (this.employeName == null) {
        sb.append("null");
      } else {
        sb.append(this.employeName);
      }
      first = false;
    }
    if (isSetRecommendId()) {
      if (!first) sb.append(", ");
      sb.append("recommendId:");
      sb.append(this.recommendId);
      first = false;
    }
    if (isSetRecommendName()) {
      if (!first) sb.append(", ");
      sb.append("recommendName:");
      if (this.recommendName == null) {
        sb.append("null");
      } else {
        sb.append(this.recommendName);
      }
      first = false;
    }
    if (isSetBerecomId()) {
      if (!first) sb.append(", ");
      sb.append("berecomId:");
      sb.append(this.berecomId);
      first = false;
    }
    if (isSetBerecomName()) {
      if (!first) sb.append(", ");
      sb.append("berecomName:");
      if (this.berecomName == null) {
        sb.append("null");
      } else {
        sb.append(this.berecomName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RewardVOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RewardVOStandardScheme getScheme() {
      return new RewardVOStandardScheme();
    }
  }

  private static class RewardVOStandardScheme extends org.apache.thrift.scheme.StandardScheme<RewardVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RewardVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reason = iprot.readString();
              struct.setReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POINTS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.points = iprot.readI32();
              struct.setPointsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // POSITION_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.positionName = iprot.readString();
              struct.setPositionNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PUBLISHER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.publisherId = iprot.readI32();
              struct.setPublisherIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PUBLISHER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.publisherName = iprot.readString();
              struct.setPublisherNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EMPLOYE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employeId = iprot.readI32();
              struct.setEmployeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // EMPLOYE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employeName = iprot.readString();
              struct.setEmployeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RECOMMEND_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recommendId = iprot.readI32();
              struct.setRecommendIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RECOMMEND_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommendName = iprot.readString();
              struct.setRecommendNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BERECOM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.berecomId = iprot.readI32();
              struct.setBerecomIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BERECOM_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.berecomName = iprot.readString();
              struct.setBerecomNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RewardVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.reason != null) {
        if (struct.isSetReason()) {
          oprot.writeFieldBegin(REASON_FIELD_DESC);
          oprot.writeString(struct.reason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPoints()) {
        oprot.writeFieldBegin(POINTS_FIELD_DESC);
        oprot.writeI32(struct.points);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetType()) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.positionName != null) {
        if (struct.isSetPositionName()) {
          oprot.writeFieldBegin(POSITION_NAME_FIELD_DESC);
          oprot.writeString(struct.positionName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPublisherId()) {
        oprot.writeFieldBegin(PUBLISHER_ID_FIELD_DESC);
        oprot.writeI32(struct.publisherId);
        oprot.writeFieldEnd();
      }
      if (struct.publisherName != null) {
        if (struct.isSetPublisherName()) {
          oprot.writeFieldBegin(PUBLISHER_NAME_FIELD_DESC);
          oprot.writeString(struct.publisherName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEmployeId()) {
        oprot.writeFieldBegin(EMPLOYE_ID_FIELD_DESC);
        oprot.writeI32(struct.employeId);
        oprot.writeFieldEnd();
      }
      if (struct.employeName != null) {
        if (struct.isSetEmployeName()) {
          oprot.writeFieldBegin(EMPLOYE_NAME_FIELD_DESC);
          oprot.writeString(struct.employeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRecommendId()) {
        oprot.writeFieldBegin(RECOMMEND_ID_FIELD_DESC);
        oprot.writeI32(struct.recommendId);
        oprot.writeFieldEnd();
      }
      if (struct.recommendName != null) {
        if (struct.isSetRecommendName()) {
          oprot.writeFieldBegin(RECOMMEND_NAME_FIELD_DESC);
          oprot.writeString(struct.recommendName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBerecomId()) {
        oprot.writeFieldBegin(BERECOM_ID_FIELD_DESC);
        oprot.writeI32(struct.berecomId);
        oprot.writeFieldEnd();
      }
      if (struct.berecomName != null) {
        if (struct.isSetBerecomName()) {
          oprot.writeFieldBegin(BERECOM_NAME_FIELD_DESC);
          oprot.writeString(struct.berecomName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RewardVOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RewardVOTupleScheme getScheme() {
      return new RewardVOTupleScheme();
    }
  }

  private static class RewardVOTupleScheme extends org.apache.thrift.scheme.TupleScheme<RewardVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RewardVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetReason()) {
        optionals.set(0);
      }
      if (struct.isSetPoints()) {
        optionals.set(1);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(2);
      }
      if (struct.isSetType()) {
        optionals.set(3);
      }
      if (struct.isSetPositionId()) {
        optionals.set(4);
      }
      if (struct.isSetPositionName()) {
        optionals.set(5);
      }
      if (struct.isSetPublisherId()) {
        optionals.set(6);
      }
      if (struct.isSetPublisherName()) {
        optionals.set(7);
      }
      if (struct.isSetEmployeId()) {
        optionals.set(8);
      }
      if (struct.isSetEmployeName()) {
        optionals.set(9);
      }
      if (struct.isSetRecommendId()) {
        optionals.set(10);
      }
      if (struct.isSetRecommendName()) {
        optionals.set(11);
      }
      if (struct.isSetBerecomId()) {
        optionals.set(12);
      }
      if (struct.isSetBerecomName()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetReason()) {
        oprot.writeString(struct.reason);
      }
      if (struct.isSetPoints()) {
        oprot.writeI32(struct.points);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetPositionName()) {
        oprot.writeString(struct.positionName);
      }
      if (struct.isSetPublisherId()) {
        oprot.writeI32(struct.publisherId);
      }
      if (struct.isSetPublisherName()) {
        oprot.writeString(struct.publisherName);
      }
      if (struct.isSetEmployeId()) {
        oprot.writeI32(struct.employeId);
      }
      if (struct.isSetEmployeName()) {
        oprot.writeString(struct.employeName);
      }
      if (struct.isSetRecommendId()) {
        oprot.writeI32(struct.recommendId);
      }
      if (struct.isSetRecommendName()) {
        oprot.writeString(struct.recommendName);
      }
      if (struct.isSetBerecomId()) {
        oprot.writeI32(struct.berecomId);
      }
      if (struct.isSetBerecomName()) {
        oprot.writeString(struct.berecomName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RewardVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.reason = iprot.readString();
        struct.setReasonIsSet(true);
      }
      if (incoming.get(1)) {
        struct.points = iprot.readI32();
        struct.setPointsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.positionName = iprot.readString();
        struct.setPositionNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.publisherId = iprot.readI32();
        struct.setPublisherIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.publisherName = iprot.readString();
        struct.setPublisherNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.employeId = iprot.readI32();
        struct.setEmployeIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.employeName = iprot.readString();
        struct.setEmployeNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.recommendId = iprot.readI32();
        struct.setRecommendIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.recommendName = iprot.readString();
        struct.setRecommendNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.berecomId = iprot.readI32();
        struct.setBerecomIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.berecomName = iprot.readString();
        struct.setBerecomNameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

