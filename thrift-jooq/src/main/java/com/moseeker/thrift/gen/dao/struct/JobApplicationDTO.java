/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-13")
public class JobApplicationDTO implements org.apache.thrift.TBase<JobApplicationDTO, JobApplicationDTO._Fields>, java.io.Serializable, Cloneable, Comparable<JobApplicationDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobApplicationDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField WECHAT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wechatId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField RECOMMEND_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendUserId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField SUBMIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submitTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("statusId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField L_APPLICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("lApplicationId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField REWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("reward", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField APPLIER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applierId", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField INTERVIEW_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("interviewId", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField RESUME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("resumeId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ATS_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("atsStatus", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField APPLIER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("applierName", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField ROUTINE_FIELD_DESC = new org.apache.thrift.protocol.TField("routine", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField IS_VIEWED_FIELD_DESC = new org.apache.thrift.protocol.TField("isViewed", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField NOT_SUITABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("notSuitable", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField APP_TPL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appTplId", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField PROXY_FIELD_DESC = new org.apache.thrift.protocol.TField("proxy", org.apache.thrift.protocol.TType.BYTE, (short)23);
  private static final org.apache.thrift.protocol.TField APPLY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("applyType", org.apache.thrift.protocol.TType.BYTE, (short)24);
  private static final org.apache.thrift.protocol.TField EMAIL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("emailStatus", org.apache.thrift.protocol.TType.BYTE, (short)25);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("viewCount", org.apache.thrift.protocol.TType.I32, (short)26);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobApplicationDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobApplicationDTOTupleSchemeFactory();

  public int id; // optional
  public int wechatId; // optional
  public int positionId; // optional
  public int recommendUserId; // optional
  public java.lang.String submitTime; // optional
  public int statusId; // optional
  public int lApplicationId; // optional
  public int reward; // optional
  public int sourceId; // optional
  public java.lang.String createTime; // optional
  public int applierId; // optional
  public int interviewId; // optional
  public java.lang.String resumeId; // optional
  public int atsStatus; // optional
  public java.lang.String applierName; // optional
  public int disable; // optional
  public int routine; // optional
  public int isViewed; // optional
  public int notSuitable; // optional
  public int companyId; // optional
  public java.lang.String updateTime; // optional
  public int appTplId; // optional
  public byte proxy; // optional
  public byte applyType; // optional
  public byte emailStatus; // optional
  public int viewCount; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    WECHAT_ID((short)2, "wechatId"),
    POSITION_ID((short)3, "positionId"),
    RECOMMEND_USER_ID((short)4, "recommendUserId"),
    SUBMIT_TIME((short)5, "submitTime"),
    STATUS_ID((short)6, "statusId"),
    L_APPLICATION_ID((short)7, "lApplicationId"),
    REWARD((short)8, "reward"),
    SOURCE_ID((short)9, "sourceId"),
    CREATE_TIME((short)10, "createTime"),
    APPLIER_ID((short)11, "applierId"),
    INTERVIEW_ID((short)12, "interviewId"),
    RESUME_ID((short)13, "resumeId"),
    ATS_STATUS((short)14, "atsStatus"),
    APPLIER_NAME((short)15, "applierName"),
    DISABLE((short)16, "disable"),
    ROUTINE((short)17, "routine"),
    IS_VIEWED((short)18, "isViewed"),
    NOT_SUITABLE((short)19, "notSuitable"),
    COMPANY_ID((short)20, "companyId"),
    UPDATE_TIME((short)21, "updateTime"),
    APP_TPL_ID((short)22, "appTplId"),
    PROXY((short)23, "proxy"),
    APPLY_TYPE((short)24, "applyType"),
    EMAIL_STATUS((short)25, "emailStatus"),
    VIEW_COUNT((short)26, "viewCount");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // WECHAT_ID
          return WECHAT_ID;
        case 3: // POSITION_ID
          return POSITION_ID;
        case 4: // RECOMMEND_USER_ID
          return RECOMMEND_USER_ID;
        case 5: // SUBMIT_TIME
          return SUBMIT_TIME;
        case 6: // STATUS_ID
          return STATUS_ID;
        case 7: // L_APPLICATION_ID
          return L_APPLICATION_ID;
        case 8: // REWARD
          return REWARD;
        case 9: // SOURCE_ID
          return SOURCE_ID;
        case 10: // CREATE_TIME
          return CREATE_TIME;
        case 11: // APPLIER_ID
          return APPLIER_ID;
        case 12: // INTERVIEW_ID
          return INTERVIEW_ID;
        case 13: // RESUME_ID
          return RESUME_ID;
        case 14: // ATS_STATUS
          return ATS_STATUS;
        case 15: // APPLIER_NAME
          return APPLIER_NAME;
        case 16: // DISABLE
          return DISABLE;
        case 17: // ROUTINE
          return ROUTINE;
        case 18: // IS_VIEWED
          return IS_VIEWED;
        case 19: // NOT_SUITABLE
          return NOT_SUITABLE;
        case 20: // COMPANY_ID
          return COMPANY_ID;
        case 21: // UPDATE_TIME
          return UPDATE_TIME;
        case 22: // APP_TPL_ID
          return APP_TPL_ID;
        case 23: // PROXY
          return PROXY;
        case 24: // APPLY_TYPE
          return APPLY_TYPE;
        case 25: // EMAIL_STATUS
          return EMAIL_STATUS;
        case 26: // VIEW_COUNT
          return VIEW_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __WECHATID_ISSET_ID = 1;
  private static final int __POSITIONID_ISSET_ID = 2;
  private static final int __RECOMMENDUSERID_ISSET_ID = 3;
  private static final int __STATUSID_ISSET_ID = 4;
  private static final int __LAPPLICATIONID_ISSET_ID = 5;
  private static final int __REWARD_ISSET_ID = 6;
  private static final int __SOURCEID_ISSET_ID = 7;
  private static final int __APPLIERID_ISSET_ID = 8;
  private static final int __INTERVIEWID_ISSET_ID = 9;
  private static final int __ATSSTATUS_ISSET_ID = 10;
  private static final int __DISABLE_ISSET_ID = 11;
  private static final int __ROUTINE_ISSET_ID = 12;
  private static final int __ISVIEWED_ISSET_ID = 13;
  private static final int __NOTSUITABLE_ISSET_ID = 14;
  private static final int __COMPANYID_ISSET_ID = 15;
  private static final int __APPTPLID_ISSET_ID = 16;
  private static final int __PROXY_ISSET_ID = 17;
  private static final int __APPLYTYPE_ISSET_ID = 18;
  private static final int __EMAILSTATUS_ISSET_ID = 19;
  private static final int __VIEWCOUNT_ISSET_ID = 20;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.WECHAT_ID,_Fields.POSITION_ID,_Fields.RECOMMEND_USER_ID,_Fields.SUBMIT_TIME,_Fields.STATUS_ID,_Fields.L_APPLICATION_ID,_Fields.REWARD,_Fields.SOURCE_ID,_Fields.CREATE_TIME,_Fields.APPLIER_ID,_Fields.INTERVIEW_ID,_Fields.RESUME_ID,_Fields.ATS_STATUS,_Fields.APPLIER_NAME,_Fields.DISABLE,_Fields.ROUTINE,_Fields.IS_VIEWED,_Fields.NOT_SUITABLE,_Fields.COMPANY_ID,_Fields.UPDATE_TIME,_Fields.APP_TPL_ID,_Fields.PROXY,_Fields.APPLY_TYPE,_Fields.EMAIL_STATUS,_Fields.VIEW_COUNT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WECHAT_ID, new org.apache.thrift.meta_data.FieldMetaData("wechatId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOMMEND_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("recommendUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUBMIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("submitTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.STATUS_ID, new org.apache.thrift.meta_data.FieldMetaData("statusId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.L_APPLICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("lApplicationId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REWARD, new org.apache.thrift.meta_data.FieldMetaData("reward", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("sourceId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.APPLIER_ID, new org.apache.thrift.meta_data.FieldMetaData("applierId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INTERVIEW_ID, new org.apache.thrift.meta_data.FieldMetaData("interviewId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RESUME_ID, new org.apache.thrift.meta_data.FieldMetaData("resumeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ATS_STATUS, new org.apache.thrift.meta_data.FieldMetaData("atsStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLIER_NAME, new org.apache.thrift.meta_data.FieldMetaData("applierName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROUTINE, new org.apache.thrift.meta_data.FieldMetaData("routine", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_VIEWED, new org.apache.thrift.meta_data.FieldMetaData("isViewed", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOT_SUITABLE, new org.apache.thrift.meta_data.FieldMetaData("notSuitable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.APP_TPL_ID, new org.apache.thrift.meta_data.FieldMetaData("appTplId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROXY, new org.apache.thrift.meta_data.FieldMetaData("proxy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.APPLY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("applyType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.EMAIL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("emailStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("viewCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobApplicationDTO.class, metaDataMap);
  }

  public JobApplicationDTO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobApplicationDTO(JobApplicationDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.wechatId = other.wechatId;
    this.positionId = other.positionId;
    this.recommendUserId = other.recommendUserId;
    if (other.isSetSubmitTime()) {
      this.submitTime = other.submitTime;
    }
    this.statusId = other.statusId;
    this.lApplicationId = other.lApplicationId;
    this.reward = other.reward;
    this.sourceId = other.sourceId;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.applierId = other.applierId;
    this.interviewId = other.interviewId;
    if (other.isSetResumeId()) {
      this.resumeId = other.resumeId;
    }
    this.atsStatus = other.atsStatus;
    if (other.isSetApplierName()) {
      this.applierName = other.applierName;
    }
    this.disable = other.disable;
    this.routine = other.routine;
    this.isViewed = other.isViewed;
    this.notSuitable = other.notSuitable;
    this.companyId = other.companyId;
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.appTplId = other.appTplId;
    this.proxy = other.proxy;
    this.applyType = other.applyType;
    this.emailStatus = other.emailStatus;
    this.viewCount = other.viewCount;
  }

  public JobApplicationDTO deepCopy() {
    return new JobApplicationDTO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setWechatIdIsSet(false);
    this.wechatId = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setRecommendUserIdIsSet(false);
    this.recommendUserId = 0;
    this.submitTime = null;
    setStatusIdIsSet(false);
    this.statusId = 0;
    setLApplicationIdIsSet(false);
    this.lApplicationId = 0;
    setRewardIsSet(false);
    this.reward = 0;
    setSourceIdIsSet(false);
    this.sourceId = 0;
    this.createTime = null;
    setApplierIdIsSet(false);
    this.applierId = 0;
    setInterviewIdIsSet(false);
    this.interviewId = 0;
    this.resumeId = null;
    setAtsStatusIsSet(false);
    this.atsStatus = 0;
    this.applierName = null;
    setDisableIsSet(false);
    this.disable = 0;
    setRoutineIsSet(false);
    this.routine = 0;
    setIsViewedIsSet(false);
    this.isViewed = 0;
    setNotSuitableIsSet(false);
    this.notSuitable = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.updateTime = null;
    setAppTplIdIsSet(false);
    this.appTplId = 0;
    setProxyIsSet(false);
    this.proxy = 0;
    setApplyTypeIsSet(false);
    this.applyType = 0;
    setEmailStatusIsSet(false);
    this.emailStatus = 0;
    setViewCountIsSet(false);
    this.viewCount = 0;
  }

  public int getId() {
    return this.id;
  }

  public JobApplicationDTO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getWechatId() {
    return this.wechatId;
  }

  public JobApplicationDTO setWechatId(int wechatId) {
    this.wechatId = wechatId;
    setWechatIdIsSet(true);
    return this;
  }

  public void unsetWechatId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WECHATID_ISSET_ID);
  }

  /** Returns true if field wechatId is set (has been assigned a value) and false otherwise */
  public boolean isSetWechatId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WECHATID_ISSET_ID);
  }

  public void setWechatIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WECHATID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public JobApplicationDTO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public int getRecommendUserId() {
    return this.recommendUserId;
  }

  public JobApplicationDTO setRecommendUserId(int recommendUserId) {
    this.recommendUserId = recommendUserId;
    setRecommendUserIdIsSet(true);
    return this;
  }

  public void unsetRecommendUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDUSERID_ISSET_ID);
  }

  /** Returns true if field recommendUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDUSERID_ISSET_ID);
  }

  public void setRecommendUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDUSERID_ISSET_ID, value);
  }

  public java.lang.String getSubmitTime() {
    return this.submitTime;
  }

  public JobApplicationDTO setSubmitTime(java.lang.String submitTime) {
    this.submitTime = submitTime;
    return this;
  }

  public void unsetSubmitTime() {
    this.submitTime = null;
  }

  /** Returns true if field submitTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSubmitTime() {
    return this.submitTime != null;
  }

  public void setSubmitTimeIsSet(boolean value) {
    if (!value) {
      this.submitTime = null;
    }
  }

  public int getStatusId() {
    return this.statusId;
  }

  public JobApplicationDTO setStatusId(int statusId) {
    this.statusId = statusId;
    setStatusIdIsSet(true);
    return this;
  }

  public void unsetStatusId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUSID_ISSET_ID);
  }

  /** Returns true if field statusId is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUSID_ISSET_ID);
  }

  public void setStatusIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUSID_ISSET_ID, value);
  }

  public int getLApplicationId() {
    return this.lApplicationId;
  }

  public JobApplicationDTO setLApplicationId(int lApplicationId) {
    this.lApplicationId = lApplicationId;
    setLApplicationIdIsSet(true);
    return this;
  }

  public void unsetLApplicationId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LAPPLICATIONID_ISSET_ID);
  }

  /** Returns true if field lApplicationId is set (has been assigned a value) and false otherwise */
  public boolean isSetLApplicationId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LAPPLICATIONID_ISSET_ID);
  }

  public void setLApplicationIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LAPPLICATIONID_ISSET_ID, value);
  }

  public int getReward() {
    return this.reward;
  }

  public JobApplicationDTO setReward(int reward) {
    this.reward = reward;
    setRewardIsSet(true);
    return this;
  }

  public void unsetReward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  /** Returns true if field reward is set (has been assigned a value) and false otherwise */
  public boolean isSetReward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  public void setRewardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REWARD_ISSET_ID, value);
  }

  public int getSourceId() {
    return this.sourceId;
  }

  public JobApplicationDTO setSourceId(int sourceId) {
    this.sourceId = sourceId;
    setSourceIdIsSet(true);
    return this;
  }

  public void unsetSourceId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  /** Returns true if field sourceId is set (has been assigned a value) and false otherwise */
  public boolean isSetSourceId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCEID_ISSET_ID);
  }

  public void setSourceIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCEID_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public JobApplicationDTO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getApplierId() {
    return this.applierId;
  }

  public JobApplicationDTO setApplierId(int applierId) {
    this.applierId = applierId;
    setApplierIdIsSet(true);
    return this;
  }

  public void unsetApplierId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLIERID_ISSET_ID);
  }

  /** Returns true if field applierId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLIERID_ISSET_ID);
  }

  public void setApplierIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLIERID_ISSET_ID, value);
  }

  public int getInterviewId() {
    return this.interviewId;
  }

  public JobApplicationDTO setInterviewId(int interviewId) {
    this.interviewId = interviewId;
    setInterviewIdIsSet(true);
    return this;
  }

  public void unsetInterviewId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INTERVIEWID_ISSET_ID);
  }

  /** Returns true if field interviewId is set (has been assigned a value) and false otherwise */
  public boolean isSetInterviewId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INTERVIEWID_ISSET_ID);
  }

  public void setInterviewIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INTERVIEWID_ISSET_ID, value);
  }

  public java.lang.String getResumeId() {
    return this.resumeId;
  }

  public JobApplicationDTO setResumeId(java.lang.String resumeId) {
    this.resumeId = resumeId;
    return this;
  }

  public void unsetResumeId() {
    this.resumeId = null;
  }

  /** Returns true if field resumeId is set (has been assigned a value) and false otherwise */
  public boolean isSetResumeId() {
    return this.resumeId != null;
  }

  public void setResumeIdIsSet(boolean value) {
    if (!value) {
      this.resumeId = null;
    }
  }

  public int getAtsStatus() {
    return this.atsStatus;
  }

  public JobApplicationDTO setAtsStatus(int atsStatus) {
    this.atsStatus = atsStatus;
    setAtsStatusIsSet(true);
    return this;
  }

  public void unsetAtsStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATSSTATUS_ISSET_ID);
  }

  /** Returns true if field atsStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAtsStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATSSTATUS_ISSET_ID);
  }

  public void setAtsStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATSSTATUS_ISSET_ID, value);
  }

  public java.lang.String getApplierName() {
    return this.applierName;
  }

  public JobApplicationDTO setApplierName(java.lang.String applierName) {
    this.applierName = applierName;
    return this;
  }

  public void unsetApplierName() {
    this.applierName = null;
  }

  /** Returns true if field applierName is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierName() {
    return this.applierName != null;
  }

  public void setApplierNameIsSet(boolean value) {
    if (!value) {
      this.applierName = null;
    }
  }

  public int getDisable() {
    return this.disable;
  }

  public JobApplicationDTO setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public int getRoutine() {
    return this.routine;
  }

  public JobApplicationDTO setRoutine(int routine) {
    this.routine = routine;
    setRoutineIsSet(true);
    return this;
  }

  public void unsetRoutine() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROUTINE_ISSET_ID);
  }

  /** Returns true if field routine is set (has been assigned a value) and false otherwise */
  public boolean isSetRoutine() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROUTINE_ISSET_ID);
  }

  public void setRoutineIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROUTINE_ISSET_ID, value);
  }

  public int getIsViewed() {
    return this.isViewed;
  }

  public JobApplicationDTO setIsViewed(int isViewed) {
    this.isViewed = isViewed;
    setIsViewedIsSet(true);
    return this;
  }

  public void unsetIsViewed() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISVIEWED_ISSET_ID);
  }

  /** Returns true if field isViewed is set (has been assigned a value) and false otherwise */
  public boolean isSetIsViewed() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISVIEWED_ISSET_ID);
  }

  public void setIsViewedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISVIEWED_ISSET_ID, value);
  }

  public int getNotSuitable() {
    return this.notSuitable;
  }

  public JobApplicationDTO setNotSuitable(int notSuitable) {
    this.notSuitable = notSuitable;
    setNotSuitableIsSet(true);
    return this;
  }

  public void unsetNotSuitable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NOTSUITABLE_ISSET_ID);
  }

  /** Returns true if field notSuitable is set (has been assigned a value) and false otherwise */
  public boolean isSetNotSuitable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NOTSUITABLE_ISSET_ID);
  }

  public void setNotSuitableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NOTSUITABLE_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public JobApplicationDTO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public JobApplicationDTO setUpdateTime(java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public int getAppTplId() {
    return this.appTplId;
  }

  public JobApplicationDTO setAppTplId(int appTplId) {
    this.appTplId = appTplId;
    setAppTplIdIsSet(true);
    return this;
  }

  public void unsetAppTplId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPTPLID_ISSET_ID);
  }

  /** Returns true if field appTplId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppTplId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPTPLID_ISSET_ID);
  }

  public void setAppTplIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPTPLID_ISSET_ID, value);
  }

  public byte getProxy() {
    return this.proxy;
  }

  public JobApplicationDTO setProxy(byte proxy) {
    this.proxy = proxy;
    setProxyIsSet(true);
    return this;
  }

  public void unsetProxy() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROXY_ISSET_ID);
  }

  /** Returns true if field proxy is set (has been assigned a value) and false otherwise */
  public boolean isSetProxy() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROXY_ISSET_ID);
  }

  public void setProxyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROXY_ISSET_ID, value);
  }

  public byte getApplyType() {
    return this.applyType;
  }

  public JobApplicationDTO setApplyType(byte applyType) {
    this.applyType = applyType;
    setApplyTypeIsSet(true);
    return this;
  }

  public void unsetApplyType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLYTYPE_ISSET_ID);
  }

  /** Returns true if field applyType is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLYTYPE_ISSET_ID);
  }

  public void setApplyTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLYTYPE_ISSET_ID, value);
  }

  public byte getEmailStatus() {
    return this.emailStatus;
  }

  public JobApplicationDTO setEmailStatus(byte emailStatus) {
    this.emailStatus = emailStatus;
    setEmailStatusIsSet(true);
    return this;
  }

  public void unsetEmailStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAILSTATUS_ISSET_ID);
  }

  /** Returns true if field emailStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAILSTATUS_ISSET_ID);
  }

  public void setEmailStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAILSTATUS_ISSET_ID, value);
  }

  public int getViewCount() {
    return this.viewCount;
  }

  public JobApplicationDTO setViewCount(int viewCount) {
    this.viewCount = viewCount;
    setViewCountIsSet(true);
    return this;
  }

  public void unsetViewCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  /** Returns true if field viewCount is set (has been assigned a value) and false otherwise */
  public boolean isSetViewCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID);
  }

  public void setViewCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VIEWCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case WECHAT_ID:
      if (value == null) {
        unsetWechatId();
      } else {
        setWechatId((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Integer)value);
      }
      break;

    case RECOMMEND_USER_ID:
      if (value == null) {
        unsetRecommendUserId();
      } else {
        setRecommendUserId((java.lang.Integer)value);
      }
      break;

    case SUBMIT_TIME:
      if (value == null) {
        unsetSubmitTime();
      } else {
        setSubmitTime((java.lang.String)value);
      }
      break;

    case STATUS_ID:
      if (value == null) {
        unsetStatusId();
      } else {
        setStatusId((java.lang.Integer)value);
      }
      break;

    case L_APPLICATION_ID:
      if (value == null) {
        unsetLApplicationId();
      } else {
        setLApplicationId((java.lang.Integer)value);
      }
      break;

    case REWARD:
      if (value == null) {
        unsetReward();
      } else {
        setReward((java.lang.Integer)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSourceId();
      } else {
        setSourceId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case APPLIER_ID:
      if (value == null) {
        unsetApplierId();
      } else {
        setApplierId((java.lang.Integer)value);
      }
      break;

    case INTERVIEW_ID:
      if (value == null) {
        unsetInterviewId();
      } else {
        setInterviewId((java.lang.Integer)value);
      }
      break;

    case RESUME_ID:
      if (value == null) {
        unsetResumeId();
      } else {
        setResumeId((java.lang.String)value);
      }
      break;

    case ATS_STATUS:
      if (value == null) {
        unsetAtsStatus();
      } else {
        setAtsStatus((java.lang.Integer)value);
      }
      break;

    case APPLIER_NAME:
      if (value == null) {
        unsetApplierName();
      } else {
        setApplierName((java.lang.String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((java.lang.Integer)value);
      }
      break;

    case ROUTINE:
      if (value == null) {
        unsetRoutine();
      } else {
        setRoutine((java.lang.Integer)value);
      }
      break;

    case IS_VIEWED:
      if (value == null) {
        unsetIsViewed();
      } else {
        setIsViewed((java.lang.Integer)value);
      }
      break;

    case NOT_SUITABLE:
      if (value == null) {
        unsetNotSuitable();
      } else {
        setNotSuitable((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    case APP_TPL_ID:
      if (value == null) {
        unsetAppTplId();
      } else {
        setAppTplId((java.lang.Integer)value);
      }
      break;

    case PROXY:
      if (value == null) {
        unsetProxy();
      } else {
        setProxy((java.lang.Byte)value);
      }
      break;

    case APPLY_TYPE:
      if (value == null) {
        unsetApplyType();
      } else {
        setApplyType((java.lang.Byte)value);
      }
      break;

    case EMAIL_STATUS:
      if (value == null) {
        unsetEmailStatus();
      } else {
        setEmailStatus((java.lang.Byte)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetViewCount();
      } else {
        setViewCount((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case WECHAT_ID:
      return getWechatId();

    case POSITION_ID:
      return getPositionId();

    case RECOMMEND_USER_ID:
      return getRecommendUserId();

    case SUBMIT_TIME:
      return getSubmitTime();

    case STATUS_ID:
      return getStatusId();

    case L_APPLICATION_ID:
      return getLApplicationId();

    case REWARD:
      return getReward();

    case SOURCE_ID:
      return getSourceId();

    case CREATE_TIME:
      return getCreateTime();

    case APPLIER_ID:
      return getApplierId();

    case INTERVIEW_ID:
      return getInterviewId();

    case RESUME_ID:
      return getResumeId();

    case ATS_STATUS:
      return getAtsStatus();

    case APPLIER_NAME:
      return getApplierName();

    case DISABLE:
      return getDisable();

    case ROUTINE:
      return getRoutine();

    case IS_VIEWED:
      return getIsViewed();

    case NOT_SUITABLE:
      return getNotSuitable();

    case COMPANY_ID:
      return getCompanyId();

    case UPDATE_TIME:
      return getUpdateTime();

    case APP_TPL_ID:
      return getAppTplId();

    case PROXY:
      return getProxy();

    case APPLY_TYPE:
      return getApplyType();

    case EMAIL_STATUS:
      return getEmailStatus();

    case VIEW_COUNT:
      return getViewCount();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case WECHAT_ID:
      return isSetWechatId();
    case POSITION_ID:
      return isSetPositionId();
    case RECOMMEND_USER_ID:
      return isSetRecommendUserId();
    case SUBMIT_TIME:
      return isSetSubmitTime();
    case STATUS_ID:
      return isSetStatusId();
    case L_APPLICATION_ID:
      return isSetLApplicationId();
    case REWARD:
      return isSetReward();
    case SOURCE_ID:
      return isSetSourceId();
    case CREATE_TIME:
      return isSetCreateTime();
    case APPLIER_ID:
      return isSetApplierId();
    case INTERVIEW_ID:
      return isSetInterviewId();
    case RESUME_ID:
      return isSetResumeId();
    case ATS_STATUS:
      return isSetAtsStatus();
    case APPLIER_NAME:
      return isSetApplierName();
    case DISABLE:
      return isSetDisable();
    case ROUTINE:
      return isSetRoutine();
    case IS_VIEWED:
      return isSetIsViewed();
    case NOT_SUITABLE:
      return isSetNotSuitable();
    case COMPANY_ID:
      return isSetCompanyId();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case APP_TPL_ID:
      return isSetAppTplId();
    case PROXY:
      return isSetProxy();
    case APPLY_TYPE:
      return isSetApplyType();
    case EMAIL_STATUS:
      return isSetEmailStatus();
    case VIEW_COUNT:
      return isSetViewCount();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof JobApplicationDTO)
      return this.equals((JobApplicationDTO)that);
    return false;
  }

  public boolean equals(JobApplicationDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_wechatId = true && this.isSetWechatId();
    boolean that_present_wechatId = true && that.isSetWechatId();
    if (this_present_wechatId || that_present_wechatId) {
      if (!(this_present_wechatId && that_present_wechatId))
        return false;
      if (this.wechatId != that.wechatId)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_recommendUserId = true && this.isSetRecommendUserId();
    boolean that_present_recommendUserId = true && that.isSetRecommendUserId();
    if (this_present_recommendUserId || that_present_recommendUserId) {
      if (!(this_present_recommendUserId && that_present_recommendUserId))
        return false;
      if (this.recommendUserId != that.recommendUserId)
        return false;
    }

    boolean this_present_submitTime = true && this.isSetSubmitTime();
    boolean that_present_submitTime = true && that.isSetSubmitTime();
    if (this_present_submitTime || that_present_submitTime) {
      if (!(this_present_submitTime && that_present_submitTime))
        return false;
      if (!this.submitTime.equals(that.submitTime))
        return false;
    }

    boolean this_present_statusId = true && this.isSetStatusId();
    boolean that_present_statusId = true && that.isSetStatusId();
    if (this_present_statusId || that_present_statusId) {
      if (!(this_present_statusId && that_present_statusId))
        return false;
      if (this.statusId != that.statusId)
        return false;
    }

    boolean this_present_lApplicationId = true && this.isSetLApplicationId();
    boolean that_present_lApplicationId = true && that.isSetLApplicationId();
    if (this_present_lApplicationId || that_present_lApplicationId) {
      if (!(this_present_lApplicationId && that_present_lApplicationId))
        return false;
      if (this.lApplicationId != that.lApplicationId)
        return false;
    }

    boolean this_present_reward = true && this.isSetReward();
    boolean that_present_reward = true && that.isSetReward();
    if (this_present_reward || that_present_reward) {
      if (!(this_present_reward && that_present_reward))
        return false;
      if (this.reward != that.reward)
        return false;
    }

    boolean this_present_sourceId = true && this.isSetSourceId();
    boolean that_present_sourceId = true && that.isSetSourceId();
    if (this_present_sourceId || that_present_sourceId) {
      if (!(this_present_sourceId && that_present_sourceId))
        return false;
      if (this.sourceId != that.sourceId)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_applierId = true && this.isSetApplierId();
    boolean that_present_applierId = true && that.isSetApplierId();
    if (this_present_applierId || that_present_applierId) {
      if (!(this_present_applierId && that_present_applierId))
        return false;
      if (this.applierId != that.applierId)
        return false;
    }

    boolean this_present_interviewId = true && this.isSetInterviewId();
    boolean that_present_interviewId = true && that.isSetInterviewId();
    if (this_present_interviewId || that_present_interviewId) {
      if (!(this_present_interviewId && that_present_interviewId))
        return false;
      if (this.interviewId != that.interviewId)
        return false;
    }

    boolean this_present_resumeId = true && this.isSetResumeId();
    boolean that_present_resumeId = true && that.isSetResumeId();
    if (this_present_resumeId || that_present_resumeId) {
      if (!(this_present_resumeId && that_present_resumeId))
        return false;
      if (!this.resumeId.equals(that.resumeId))
        return false;
    }

    boolean this_present_atsStatus = true && this.isSetAtsStatus();
    boolean that_present_atsStatus = true && that.isSetAtsStatus();
    if (this_present_atsStatus || that_present_atsStatus) {
      if (!(this_present_atsStatus && that_present_atsStatus))
        return false;
      if (this.atsStatus != that.atsStatus)
        return false;
    }

    boolean this_present_applierName = true && this.isSetApplierName();
    boolean that_present_applierName = true && that.isSetApplierName();
    if (this_present_applierName || that_present_applierName) {
      if (!(this_present_applierName && that_present_applierName))
        return false;
      if (!this.applierName.equals(that.applierName))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_routine = true && this.isSetRoutine();
    boolean that_present_routine = true && that.isSetRoutine();
    if (this_present_routine || that_present_routine) {
      if (!(this_present_routine && that_present_routine))
        return false;
      if (this.routine != that.routine)
        return false;
    }

    boolean this_present_isViewed = true && this.isSetIsViewed();
    boolean that_present_isViewed = true && that.isSetIsViewed();
    if (this_present_isViewed || that_present_isViewed) {
      if (!(this_present_isViewed && that_present_isViewed))
        return false;
      if (this.isViewed != that.isViewed)
        return false;
    }

    boolean this_present_notSuitable = true && this.isSetNotSuitable();
    boolean that_present_notSuitable = true && that.isSetNotSuitable();
    if (this_present_notSuitable || that_present_notSuitable) {
      if (!(this_present_notSuitable && that_present_notSuitable))
        return false;
      if (this.notSuitable != that.notSuitable)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_appTplId = true && this.isSetAppTplId();
    boolean that_present_appTplId = true && that.isSetAppTplId();
    if (this_present_appTplId || that_present_appTplId) {
      if (!(this_present_appTplId && that_present_appTplId))
        return false;
      if (this.appTplId != that.appTplId)
        return false;
    }

    boolean this_present_proxy = true && this.isSetProxy();
    boolean that_present_proxy = true && that.isSetProxy();
    if (this_present_proxy || that_present_proxy) {
      if (!(this_present_proxy && that_present_proxy))
        return false;
      if (this.proxy != that.proxy)
        return false;
    }

    boolean this_present_applyType = true && this.isSetApplyType();
    boolean that_present_applyType = true && that.isSetApplyType();
    if (this_present_applyType || that_present_applyType) {
      if (!(this_present_applyType && that_present_applyType))
        return false;
      if (this.applyType != that.applyType)
        return false;
    }

    boolean this_present_emailStatus = true && this.isSetEmailStatus();
    boolean that_present_emailStatus = true && that.isSetEmailStatus();
    if (this_present_emailStatus || that_present_emailStatus) {
      if (!(this_present_emailStatus && that_present_emailStatus))
        return false;
      if (this.emailStatus != that.emailStatus)
        return false;
    }

    boolean this_present_viewCount = true && this.isSetViewCount();
    boolean that_present_viewCount = true && that.isSetViewCount();
    if (this_present_viewCount || that_present_viewCount) {
      if (!(this_present_viewCount && that_present_viewCount))
        return false;
      if (this.viewCount != that.viewCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetWechatId()) ? 131071 : 524287);
    if (isSetWechatId())
      hashCode = hashCode * 8191 + wechatId;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetRecommendUserId()) ? 131071 : 524287);
    if (isSetRecommendUserId())
      hashCode = hashCode * 8191 + recommendUserId;

    hashCode = hashCode * 8191 + ((isSetSubmitTime()) ? 131071 : 524287);
    if (isSetSubmitTime())
      hashCode = hashCode * 8191 + submitTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatusId()) ? 131071 : 524287);
    if (isSetStatusId())
      hashCode = hashCode * 8191 + statusId;

    hashCode = hashCode * 8191 + ((isSetLApplicationId()) ? 131071 : 524287);
    if (isSetLApplicationId())
      hashCode = hashCode * 8191 + lApplicationId;

    hashCode = hashCode * 8191 + ((isSetReward()) ? 131071 : 524287);
    if (isSetReward())
      hashCode = hashCode * 8191 + reward;

    hashCode = hashCode * 8191 + ((isSetSourceId()) ? 131071 : 524287);
    if (isSetSourceId())
      hashCode = hashCode * 8191 + sourceId;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplierId()) ? 131071 : 524287);
    if (isSetApplierId())
      hashCode = hashCode * 8191 + applierId;

    hashCode = hashCode * 8191 + ((isSetInterviewId()) ? 131071 : 524287);
    if (isSetInterviewId())
      hashCode = hashCode * 8191 + interviewId;

    hashCode = hashCode * 8191 + ((isSetResumeId()) ? 131071 : 524287);
    if (isSetResumeId())
      hashCode = hashCode * 8191 + resumeId.hashCode();

    hashCode = hashCode * 8191 + ((isSetAtsStatus()) ? 131071 : 524287);
    if (isSetAtsStatus())
      hashCode = hashCode * 8191 + atsStatus;

    hashCode = hashCode * 8191 + ((isSetApplierName()) ? 131071 : 524287);
    if (isSetApplierName())
      hashCode = hashCode * 8191 + applierName.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetRoutine()) ? 131071 : 524287);
    if (isSetRoutine())
      hashCode = hashCode * 8191 + routine;

    hashCode = hashCode * 8191 + ((isSetIsViewed()) ? 131071 : 524287);
    if (isSetIsViewed())
      hashCode = hashCode * 8191 + isViewed;

    hashCode = hashCode * 8191 + ((isSetNotSuitable()) ? 131071 : 524287);
    if (isSetNotSuitable())
      hashCode = hashCode * 8191 + notSuitable;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppTplId()) ? 131071 : 524287);
    if (isSetAppTplId())
      hashCode = hashCode * 8191 + appTplId;

    hashCode = hashCode * 8191 + ((isSetProxy()) ? 131071 : 524287);
    if (isSetProxy())
      hashCode = hashCode * 8191 + (int) (proxy);

    hashCode = hashCode * 8191 + ((isSetApplyType()) ? 131071 : 524287);
    if (isSetApplyType())
      hashCode = hashCode * 8191 + (int) (applyType);

    hashCode = hashCode * 8191 + ((isSetEmailStatus()) ? 131071 : 524287);
    if (isSetEmailStatus())
      hashCode = hashCode * 8191 + (int) (emailStatus);

    hashCode = hashCode * 8191 + ((isSetViewCount()) ? 131071 : 524287);
    if (isSetViewCount())
      hashCode = hashCode * 8191 + viewCount;

    return hashCode;
  }

  @Override
  public int compareTo(JobApplicationDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWechatId()).compareTo(other.isSetWechatId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWechatId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wechatId, other.wechatId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommendUserId()).compareTo(other.isSetRecommendUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendUserId, other.recommendUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubmitTime()).compareTo(other.isSetSubmitTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubmitTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submitTime, other.submitTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatusId()).compareTo(other.isSetStatusId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusId, other.statusId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLApplicationId()).compareTo(other.isSetLApplicationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLApplicationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lApplicationId, other.lApplicationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReward()).compareTo(other.isSetReward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reward, other.reward);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSourceId()).compareTo(other.isSetSourceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceId, other.sourceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplierId()).compareTo(other.isSetApplierId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierId, other.applierId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInterviewId()).compareTo(other.isSetInterviewId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInterviewId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.interviewId, other.interviewId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResumeId()).compareTo(other.isSetResumeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResumeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resumeId, other.resumeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAtsStatus()).compareTo(other.isSetAtsStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtsStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atsStatus, other.atsStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplierName()).compareTo(other.isSetApplierName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierName, other.applierName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoutine()).compareTo(other.isSetRoutine());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoutine()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.routine, other.routine);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsViewed()).compareTo(other.isSetIsViewed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsViewed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isViewed, other.isViewed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotSuitable()).compareTo(other.isSetNotSuitable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotSuitable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notSuitable, other.notSuitable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppTplId()).compareTo(other.isSetAppTplId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppTplId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appTplId, other.appTplId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProxy()).compareTo(other.isSetProxy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProxy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.proxy, other.proxy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplyType()).compareTo(other.isSetApplyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyType, other.applyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmailStatus()).compareTo(other.isSetEmailStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailStatus, other.emailStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetViewCount()).compareTo(other.isSetViewCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viewCount, other.viewCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("JobApplicationDTO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetWechatId()) {
      if (!first) sb.append(", ");
      sb.append("wechatId:");
      sb.append(this.wechatId);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetRecommendUserId()) {
      if (!first) sb.append(", ");
      sb.append("recommendUserId:");
      sb.append(this.recommendUserId);
      first = false;
    }
    if (isSetSubmitTime()) {
      if (!first) sb.append(", ");
      sb.append("submitTime:");
      if (this.submitTime == null) {
        sb.append("null");
      } else {
        sb.append(this.submitTime);
      }
      first = false;
    }
    if (isSetStatusId()) {
      if (!first) sb.append(", ");
      sb.append("statusId:");
      sb.append(this.statusId);
      first = false;
    }
    if (isSetLApplicationId()) {
      if (!first) sb.append(", ");
      sb.append("lApplicationId:");
      sb.append(this.lApplicationId);
      first = false;
    }
    if (isSetReward()) {
      if (!first) sb.append(", ");
      sb.append("reward:");
      sb.append(this.reward);
      first = false;
    }
    if (isSetSourceId()) {
      if (!first) sb.append(", ");
      sb.append("sourceId:");
      sb.append(this.sourceId);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetApplierId()) {
      if (!first) sb.append(", ");
      sb.append("applierId:");
      sb.append(this.applierId);
      first = false;
    }
    if (isSetInterviewId()) {
      if (!first) sb.append(", ");
      sb.append("interviewId:");
      sb.append(this.interviewId);
      first = false;
    }
    if (isSetResumeId()) {
      if (!first) sb.append(", ");
      sb.append("resumeId:");
      if (this.resumeId == null) {
        sb.append("null");
      } else {
        sb.append(this.resumeId);
      }
      first = false;
    }
    if (isSetAtsStatus()) {
      if (!first) sb.append(", ");
      sb.append("atsStatus:");
      sb.append(this.atsStatus);
      first = false;
    }
    if (isSetApplierName()) {
      if (!first) sb.append(", ");
      sb.append("applierName:");
      if (this.applierName == null) {
        sb.append("null");
      } else {
        sb.append(this.applierName);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetRoutine()) {
      if (!first) sb.append(", ");
      sb.append("routine:");
      sb.append(this.routine);
      first = false;
    }
    if (isSetIsViewed()) {
      if (!first) sb.append(", ");
      sb.append("isViewed:");
      sb.append(this.isViewed);
      first = false;
    }
    if (isSetNotSuitable()) {
      if (!first) sb.append(", ");
      sb.append("notSuitable:");
      sb.append(this.notSuitable);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetAppTplId()) {
      if (!first) sb.append(", ");
      sb.append("appTplId:");
      sb.append(this.appTplId);
      first = false;
    }
    if (isSetProxy()) {
      if (!first) sb.append(", ");
      sb.append("proxy:");
      sb.append(this.proxy);
      first = false;
    }
    if (isSetApplyType()) {
      if (!first) sb.append(", ");
      sb.append("applyType:");
      sb.append(this.applyType);
      first = false;
    }
    if (isSetEmailStatus()) {
      if (!first) sb.append(", ");
      sb.append("emailStatus:");
      sb.append(this.emailStatus);
      first = false;
    }
    if (isSetViewCount()) {
      if (!first) sb.append(", ");
      sb.append("viewCount:");
      sb.append(this.viewCount);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobApplicationDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationDTOStandardScheme getScheme() {
      return new JobApplicationDTOStandardScheme();
    }
  }

  private static class JobApplicationDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobApplicationDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobApplicationDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WECHAT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wechatId = iprot.readI32();
              struct.setWechatIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RECOMMEND_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recommendUserId = iprot.readI32();
              struct.setRecommendUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUBMIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.submitTime = iprot.readString();
              struct.setSubmitTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.statusId = iprot.readI32();
              struct.setStatusIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // L_APPLICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.lApplicationId = iprot.readI32();
              struct.setLApplicationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reward = iprot.readI32();
              struct.setRewardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sourceId = iprot.readI32();
              struct.setSourceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPLIER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.applierId = iprot.readI32();
              struct.setApplierIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INTERVIEW_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.interviewId = iprot.readI32();
              struct.setInterviewIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // RESUME_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resumeId = iprot.readString();
              struct.setResumeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ATS_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.atsStatus = iprot.readI32();
              struct.setAtsStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // APPLIER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applierName = iprot.readString();
              struct.setApplierNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ROUTINE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.routine = iprot.readI32();
              struct.setRoutineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IS_VIEWED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isViewed = iprot.readI32();
              struct.setIsViewedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // NOT_SUITABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.notSuitable = iprot.readI32();
              struct.setNotSuitableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // APP_TPL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.appTplId = iprot.readI32();
              struct.setAppTplIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // PROXY
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.proxy = iprot.readByte();
              struct.setProxyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // APPLY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.applyType = iprot.readByte();
              struct.setApplyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // EMAIL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.emailStatus = iprot.readByte();
              struct.setEmailStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.viewCount = iprot.readI32();
              struct.setViewCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobApplicationDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWechatId()) {
        oprot.writeFieldBegin(WECHAT_ID_FIELD_DESC);
        oprot.writeI32(struct.wechatId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecommendUserId()) {
        oprot.writeFieldBegin(RECOMMEND_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.recommendUserId);
        oprot.writeFieldEnd();
      }
      if (struct.submitTime != null) {
        if (struct.isSetSubmitTime()) {
          oprot.writeFieldBegin(SUBMIT_TIME_FIELD_DESC);
          oprot.writeString(struct.submitTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatusId()) {
        oprot.writeFieldBegin(STATUS_ID_FIELD_DESC);
        oprot.writeI32(struct.statusId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLApplicationId()) {
        oprot.writeFieldBegin(L_APPLICATION_ID_FIELD_DESC);
        oprot.writeI32(struct.lApplicationId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetReward()) {
        oprot.writeFieldBegin(REWARD_FIELD_DESC);
        oprot.writeI32(struct.reward);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSourceId()) {
        oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
        oprot.writeI32(struct.sourceId);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApplierId()) {
        oprot.writeFieldBegin(APPLIER_ID_FIELD_DESC);
        oprot.writeI32(struct.applierId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInterviewId()) {
        oprot.writeFieldBegin(INTERVIEW_ID_FIELD_DESC);
        oprot.writeI32(struct.interviewId);
        oprot.writeFieldEnd();
      }
      if (struct.resumeId != null) {
        if (struct.isSetResumeId()) {
          oprot.writeFieldBegin(RESUME_ID_FIELD_DESC);
          oprot.writeString(struct.resumeId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAtsStatus()) {
        oprot.writeFieldBegin(ATS_STATUS_FIELD_DESC);
        oprot.writeI32(struct.atsStatus);
        oprot.writeFieldEnd();
      }
      if (struct.applierName != null) {
        if (struct.isSetApplierName()) {
          oprot.writeFieldBegin(APPLIER_NAME_FIELD_DESC);
          oprot.writeString(struct.applierName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRoutine()) {
        oprot.writeFieldBegin(ROUTINE_FIELD_DESC);
        oprot.writeI32(struct.routine);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsViewed()) {
        oprot.writeFieldBegin(IS_VIEWED_FIELD_DESC);
        oprot.writeI32(struct.isViewed);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNotSuitable()) {
        oprot.writeFieldBegin(NOT_SUITABLE_FIELD_DESC);
        oprot.writeI32(struct.notSuitable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAppTplId()) {
        oprot.writeFieldBegin(APP_TPL_ID_FIELD_DESC);
        oprot.writeI32(struct.appTplId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProxy()) {
        oprot.writeFieldBegin(PROXY_FIELD_DESC);
        oprot.writeByte(struct.proxy);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApplyType()) {
        oprot.writeFieldBegin(APPLY_TYPE_FIELD_DESC);
        oprot.writeByte(struct.applyType);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmailStatus()) {
        oprot.writeFieldBegin(EMAIL_STATUS_FIELD_DESC);
        oprot.writeByte(struct.emailStatus);
        oprot.writeFieldEnd();
      }
      if (struct.isSetViewCount()) {
        oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
        oprot.writeI32(struct.viewCount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobApplicationDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationDTOTupleScheme getScheme() {
      return new JobApplicationDTOTupleScheme();
    }
  }

  private static class JobApplicationDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobApplicationDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobApplicationDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetWechatId()) {
        optionals.set(1);
      }
      if (struct.isSetPositionId()) {
        optionals.set(2);
      }
      if (struct.isSetRecommendUserId()) {
        optionals.set(3);
      }
      if (struct.isSetSubmitTime()) {
        optionals.set(4);
      }
      if (struct.isSetStatusId()) {
        optionals.set(5);
      }
      if (struct.isSetLApplicationId()) {
        optionals.set(6);
      }
      if (struct.isSetReward()) {
        optionals.set(7);
      }
      if (struct.isSetSourceId()) {
        optionals.set(8);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(9);
      }
      if (struct.isSetApplierId()) {
        optionals.set(10);
      }
      if (struct.isSetInterviewId()) {
        optionals.set(11);
      }
      if (struct.isSetResumeId()) {
        optionals.set(12);
      }
      if (struct.isSetAtsStatus()) {
        optionals.set(13);
      }
      if (struct.isSetApplierName()) {
        optionals.set(14);
      }
      if (struct.isSetDisable()) {
        optionals.set(15);
      }
      if (struct.isSetRoutine()) {
        optionals.set(16);
      }
      if (struct.isSetIsViewed()) {
        optionals.set(17);
      }
      if (struct.isSetNotSuitable()) {
        optionals.set(18);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(19);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(20);
      }
      if (struct.isSetAppTplId()) {
        optionals.set(21);
      }
      if (struct.isSetProxy()) {
        optionals.set(22);
      }
      if (struct.isSetApplyType()) {
        optionals.set(23);
      }
      if (struct.isSetEmailStatus()) {
        optionals.set(24);
      }
      if (struct.isSetViewCount()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetWechatId()) {
        oprot.writeI32(struct.wechatId);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetRecommendUserId()) {
        oprot.writeI32(struct.recommendUserId);
      }
      if (struct.isSetSubmitTime()) {
        oprot.writeString(struct.submitTime);
      }
      if (struct.isSetStatusId()) {
        oprot.writeI32(struct.statusId);
      }
      if (struct.isSetLApplicationId()) {
        oprot.writeI32(struct.lApplicationId);
      }
      if (struct.isSetReward()) {
        oprot.writeI32(struct.reward);
      }
      if (struct.isSetSourceId()) {
        oprot.writeI32(struct.sourceId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetApplierId()) {
        oprot.writeI32(struct.applierId);
      }
      if (struct.isSetInterviewId()) {
        oprot.writeI32(struct.interviewId);
      }
      if (struct.isSetResumeId()) {
        oprot.writeString(struct.resumeId);
      }
      if (struct.isSetAtsStatus()) {
        oprot.writeI32(struct.atsStatus);
      }
      if (struct.isSetApplierName()) {
        oprot.writeString(struct.applierName);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetRoutine()) {
        oprot.writeI32(struct.routine);
      }
      if (struct.isSetIsViewed()) {
        oprot.writeI32(struct.isViewed);
      }
      if (struct.isSetNotSuitable()) {
        oprot.writeI32(struct.notSuitable);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetAppTplId()) {
        oprot.writeI32(struct.appTplId);
      }
      if (struct.isSetProxy()) {
        oprot.writeByte(struct.proxy);
      }
      if (struct.isSetApplyType()) {
        oprot.writeByte(struct.applyType);
      }
      if (struct.isSetEmailStatus()) {
        oprot.writeByte(struct.emailStatus);
      }
      if (struct.isSetViewCount()) {
        oprot.writeI32(struct.viewCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobApplicationDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.wechatId = iprot.readI32();
        struct.setWechatIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.recommendUserId = iprot.readI32();
        struct.setRecommendUserIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.submitTime = iprot.readString();
        struct.setSubmitTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.statusId = iprot.readI32();
        struct.setStatusIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.lApplicationId = iprot.readI32();
        struct.setLApplicationIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.reward = iprot.readI32();
        struct.setRewardIsSet(true);
      }
      if (incoming.get(8)) {
        struct.sourceId = iprot.readI32();
        struct.setSourceIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.applierId = iprot.readI32();
        struct.setApplierIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.interviewId = iprot.readI32();
        struct.setInterviewIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.resumeId = iprot.readString();
        struct.setResumeIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.atsStatus = iprot.readI32();
        struct.setAtsStatusIsSet(true);
      }
      if (incoming.get(14)) {
        struct.applierName = iprot.readString();
        struct.setApplierNameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.routine = iprot.readI32();
        struct.setRoutineIsSet(true);
      }
      if (incoming.get(17)) {
        struct.isViewed = iprot.readI32();
        struct.setIsViewedIsSet(true);
      }
      if (incoming.get(18)) {
        struct.notSuitable = iprot.readI32();
        struct.setNotSuitableIsSet(true);
      }
      if (incoming.get(19)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(20)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.appTplId = iprot.readI32();
        struct.setAppTplIdIsSet(true);
      }
      if (incoming.get(22)) {
        struct.proxy = iprot.readByte();
        struct.setProxyIsSet(true);
      }
      if (incoming.get(23)) {
        struct.applyType = iprot.readByte();
        struct.setApplyTypeIsSet(true);
      }
      if (incoming.get(24)) {
        struct.emailStatus = iprot.readByte();
        struct.setEmailStatusIsSet(true);
      }
      if (incoming.get(25)) {
        struct.viewCount = iprot.readI32();
        struct.setViewCountIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

