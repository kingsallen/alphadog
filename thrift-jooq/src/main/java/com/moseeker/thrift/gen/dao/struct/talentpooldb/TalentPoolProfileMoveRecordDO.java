/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.talentpooldb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-09-09")
public class TalentPoolProfileMoveRecordDO implements org.apache.thrift.TBase<TalentPoolProfileMoveRecordDO, TalentPoolProfileMoveRecordDO._Fields>, java.io.Serializable, Cloneable, Comparable<TalentPoolProfileMoveRecordDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TalentPoolProfileMoveRecordDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PROFILE_MOVE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profileMoveId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField THIRD_PARTY_COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdPartyCompanyId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CRAWL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("crawlType", org.apache.thrift.protocol.TType.BYTE, (short)4);
  private static final org.apache.thrift.protocol.TField CRAWL_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("crawlNum", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)6);
  private static final org.apache.thrift.protocol.TField CURRENT_EMAIL_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("currentEmailNum", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField TOTAL_EMAIL_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("totalEmailNum", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TalentPoolProfileMoveRecordDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TalentPoolProfileMoveRecordDOTupleSchemeFactory();

  public int id; // optional
  public int profileMoveId; // optional
  public int thirdPartyCompanyId; // optional
  public byte crawlType; // optional
  public int crawlNum; // optional
  public byte status; // optional
  public int currentEmailNum; // optional
  public int totalEmailNum; // optional
  public String createTime; // optional
  public String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PROFILE_MOVE_ID((short)2, "profileMoveId"),
    THIRD_PARTY_COMPANY_ID((short)3, "thirdPartyCompanyId"),
    CRAWL_TYPE((short)4, "crawlType"),
    CRAWL_NUM((short)5, "crawlNum"),
    STATUS((short)6, "status"),
    CURRENT_EMAIL_NUM((short)7, "currentEmailNum"),
    TOTAL_EMAIL_NUM((short)8, "totalEmailNum"),
    CREATE_TIME((short)9, "createTime"),
    UPDATE_TIME((short)10, "updateTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PROFILE_MOVE_ID
          return PROFILE_MOVE_ID;
        case 3: // THIRD_PARTY_COMPANY_ID
          return THIRD_PARTY_COMPANY_ID;
        case 4: // CRAWL_TYPE
          return CRAWL_TYPE;
        case 5: // CRAWL_NUM
          return CRAWL_NUM;
        case 6: // STATUS
          return STATUS;
        case 7: // CURRENT_EMAIL_NUM
          return CURRENT_EMAIL_NUM;
        case 8: // TOTAL_EMAIL_NUM
          return TOTAL_EMAIL_NUM;
        case 9: // CREATE_TIME
          return CREATE_TIME;
        case 10: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PROFILEMOVEID_ISSET_ID = 1;
  private static final int __THIRDPARTYCOMPANYID_ISSET_ID = 2;
  private static final int __CRAWLTYPE_ISSET_ID = 3;
  private static final int __CRAWLNUM_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __CURRENTEMAILNUM_ISSET_ID = 6;
  private static final int __TOTALEMAILNUM_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.PROFILE_MOVE_ID,_Fields.THIRD_PARTY_COMPANY_ID,_Fields.CRAWL_TYPE,_Fields.CRAWL_NUM,_Fields.STATUS,_Fields.CURRENT_EMAIL_NUM,_Fields.TOTAL_EMAIL_NUM,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_MOVE_ID, new org.apache.thrift.meta_data.FieldMetaData("profileMoveId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.THIRD_PARTY_COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("thirdPartyCompanyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CRAWL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("crawlType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CRAWL_NUM, new org.apache.thrift.meta_data.FieldMetaData("crawlNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CURRENT_EMAIL_NUM, new org.apache.thrift.meta_data.FieldMetaData("currentEmailNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TOTAL_EMAIL_NUM, new org.apache.thrift.meta_data.FieldMetaData("totalEmailNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TalentPoolProfileMoveRecordDO.class, metaDataMap);
  }

  public TalentPoolProfileMoveRecordDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TalentPoolProfileMoveRecordDO(TalentPoolProfileMoveRecordDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.profileMoveId = other.profileMoveId;
    this.thirdPartyCompanyId = other.thirdPartyCompanyId;
    this.crawlType = other.crawlType;
    this.crawlNum = other.crawlNum;
    this.status = other.status;
    this.currentEmailNum = other.currentEmailNum;
    this.totalEmailNum = other.totalEmailNum;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public TalentPoolProfileMoveRecordDO deepCopy() {
    return new TalentPoolProfileMoveRecordDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setProfileMoveIdIsSet(false);
    this.profileMoveId = 0;
    setThirdPartyCompanyIdIsSet(false);
    this.thirdPartyCompanyId = 0;
    setCrawlTypeIsSet(false);
    this.crawlType = 0;
    setCrawlNumIsSet(false);
    this.crawlNum = 0;
    setStatusIsSet(false);
    this.status = 0;
    setCurrentEmailNumIsSet(false);
    this.currentEmailNum = 0;
    setTotalEmailNumIsSet(false);
    this.totalEmailNum = 0;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public TalentPoolProfileMoveRecordDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getProfileMoveId() {
    return this.profileMoveId;
  }

  public TalentPoolProfileMoveRecordDO setProfileMoveId(int profileMoveId) {
    this.profileMoveId = profileMoveId;
    setProfileMoveIdIsSet(true);
    return this;
  }

  public void unsetProfileMoveId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEMOVEID_ISSET_ID);
  }

  /** Returns true if field profileMoveId is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileMoveId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEMOVEID_ISSET_ID);
  }

  public void setProfileMoveIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEMOVEID_ISSET_ID, value);
  }

  public int getThirdPartyCompanyId() {
    return this.thirdPartyCompanyId;
  }

  public TalentPoolProfileMoveRecordDO setThirdPartyCompanyId(int thirdPartyCompanyId) {
    this.thirdPartyCompanyId = thirdPartyCompanyId;
    setThirdPartyCompanyIdIsSet(true);
    return this;
  }

  public void unsetThirdPartyCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __THIRDPARTYCOMPANYID_ISSET_ID);
  }

  /** Returns true if field thirdPartyCompanyId is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdPartyCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __THIRDPARTYCOMPANYID_ISSET_ID);
  }

  public void setThirdPartyCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __THIRDPARTYCOMPANYID_ISSET_ID, value);
  }

  public byte getCrawlType() {
    return this.crawlType;
  }

  public TalentPoolProfileMoveRecordDO setCrawlType(byte crawlType) {
    this.crawlType = crawlType;
    setCrawlTypeIsSet(true);
    return this;
  }

  public void unsetCrawlType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CRAWLTYPE_ISSET_ID);
  }

  /** Returns true if field crawlType is set (has been assigned a value) and false otherwise */
  public boolean isSetCrawlType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CRAWLTYPE_ISSET_ID);
  }

  public void setCrawlTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CRAWLTYPE_ISSET_ID, value);
  }

  public int getCrawlNum() {
    return this.crawlNum;
  }

  public TalentPoolProfileMoveRecordDO setCrawlNum(int crawlNum) {
    this.crawlNum = crawlNum;
    setCrawlNumIsSet(true);
    return this;
  }

  public void unsetCrawlNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CRAWLNUM_ISSET_ID);
  }

  /** Returns true if field crawlNum is set (has been assigned a value) and false otherwise */
  public boolean isSetCrawlNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CRAWLNUM_ISSET_ID);
  }

  public void setCrawlNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CRAWLNUM_ISSET_ID, value);
  }

  public byte getStatus() {
    return this.status;
  }

  public TalentPoolProfileMoveRecordDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public int getCurrentEmailNum() {
    return this.currentEmailNum;
  }

  public TalentPoolProfileMoveRecordDO setCurrentEmailNum(int currentEmailNum) {
    this.currentEmailNum = currentEmailNum;
    setCurrentEmailNumIsSet(true);
    return this;
  }

  public void unsetCurrentEmailNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CURRENTEMAILNUM_ISSET_ID);
  }

  /** Returns true if field currentEmailNum is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentEmailNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CURRENTEMAILNUM_ISSET_ID);
  }

  public void setCurrentEmailNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CURRENTEMAILNUM_ISSET_ID, value);
  }

  public int getTotalEmailNum() {
    return this.totalEmailNum;
  }

  public TalentPoolProfileMoveRecordDO setTotalEmailNum(int totalEmailNum) {
    this.totalEmailNum = totalEmailNum;
    setTotalEmailNumIsSet(true);
    return this;
  }

  public void unsetTotalEmailNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTALEMAILNUM_ISSET_ID);
  }

  /** Returns true if field totalEmailNum is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalEmailNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTALEMAILNUM_ISSET_ID);
  }

  public void setTotalEmailNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTALEMAILNUM_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public TalentPoolProfileMoveRecordDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public TalentPoolProfileMoveRecordDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case PROFILE_MOVE_ID:
      if (value == null) {
        unsetProfileMoveId();
      } else {
        setProfileMoveId((Integer)value);
      }
      break;

    case THIRD_PARTY_COMPANY_ID:
      if (value == null) {
        unsetThirdPartyCompanyId();
      } else {
        setThirdPartyCompanyId((Integer)value);
      }
      break;

    case CRAWL_TYPE:
      if (value == null) {
        unsetCrawlType();
      } else {
        setCrawlType((Byte)value);
      }
      break;

    case CRAWL_NUM:
      if (value == null) {
        unsetCrawlNum();
      } else {
        setCrawlNum((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Byte)value);
      }
      break;

    case CURRENT_EMAIL_NUM:
      if (value == null) {
        unsetCurrentEmailNum();
      } else {
        setCurrentEmailNum((Integer)value);
      }
      break;

    case TOTAL_EMAIL_NUM:
      if (value == null) {
        unsetTotalEmailNum();
      } else {
        setTotalEmailNum((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PROFILE_MOVE_ID:
      return getProfileMoveId();

    case THIRD_PARTY_COMPANY_ID:
      return getThirdPartyCompanyId();

    case CRAWL_TYPE:
      return getCrawlType();

    case CRAWL_NUM:
      return getCrawlNum();

    case STATUS:
      return getStatus();

    case CURRENT_EMAIL_NUM:
      return getCurrentEmailNum();

    case TOTAL_EMAIL_NUM:
      return getTotalEmailNum();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PROFILE_MOVE_ID:
      return isSetProfileMoveId();
    case THIRD_PARTY_COMPANY_ID:
      return isSetThirdPartyCompanyId();
    case CRAWL_TYPE:
      return isSetCrawlType();
    case CRAWL_NUM:
      return isSetCrawlNum();
    case STATUS:
      return isSetStatus();
    case CURRENT_EMAIL_NUM:
      return isSetCurrentEmailNum();
    case TOTAL_EMAIL_NUM:
      return isSetTotalEmailNum();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TalentPoolProfileMoveRecordDO)
      return this.equals((TalentPoolProfileMoveRecordDO)that);
    return false;
  }

  public boolean equals(TalentPoolProfileMoveRecordDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_profileMoveId = true && this.isSetProfileMoveId();
    boolean that_present_profileMoveId = true && that.isSetProfileMoveId();
    if (this_present_profileMoveId || that_present_profileMoveId) {
      if (!(this_present_profileMoveId && that_present_profileMoveId))
        return false;
      if (this.profileMoveId != that.profileMoveId)
        return false;
    }

    boolean this_present_thirdPartyCompanyId = true && this.isSetThirdPartyCompanyId();
    boolean that_present_thirdPartyCompanyId = true && that.isSetThirdPartyCompanyId();
    if (this_present_thirdPartyCompanyId || that_present_thirdPartyCompanyId) {
      if (!(this_present_thirdPartyCompanyId && that_present_thirdPartyCompanyId))
        return false;
      if (this.thirdPartyCompanyId != that.thirdPartyCompanyId)
        return false;
    }

    boolean this_present_crawlType = true && this.isSetCrawlType();
    boolean that_present_crawlType = true && that.isSetCrawlType();
    if (this_present_crawlType || that_present_crawlType) {
      if (!(this_present_crawlType && that_present_crawlType))
        return false;
      if (this.crawlType != that.crawlType)
        return false;
    }

    boolean this_present_crawlNum = true && this.isSetCrawlNum();
    boolean that_present_crawlNum = true && that.isSetCrawlNum();
    if (this_present_crawlNum || that_present_crawlNum) {
      if (!(this_present_crawlNum && that_present_crawlNum))
        return false;
      if (this.crawlNum != that.crawlNum)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_currentEmailNum = true && this.isSetCurrentEmailNum();
    boolean that_present_currentEmailNum = true && that.isSetCurrentEmailNum();
    if (this_present_currentEmailNum || that_present_currentEmailNum) {
      if (!(this_present_currentEmailNum && that_present_currentEmailNum))
        return false;
      if (this.currentEmailNum != that.currentEmailNum)
        return false;
    }

    boolean this_present_totalEmailNum = true && this.isSetTotalEmailNum();
    boolean that_present_totalEmailNum = true && that.isSetTotalEmailNum();
    if (this_present_totalEmailNum || that_present_totalEmailNum) {
      if (!(this_present_totalEmailNum && that_present_totalEmailNum))
        return false;
      if (this.totalEmailNum != that.totalEmailNum)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetProfileMoveId()) ? 131071 : 524287);
    if (isSetProfileMoveId())
      hashCode = hashCode * 8191 + profileMoveId;

    hashCode = hashCode * 8191 + ((isSetThirdPartyCompanyId()) ? 131071 : 524287);
    if (isSetThirdPartyCompanyId())
      hashCode = hashCode * 8191 + thirdPartyCompanyId;

    hashCode = hashCode * 8191 + ((isSetCrawlType()) ? 131071 : 524287);
    if (isSetCrawlType())
      hashCode = hashCode * 8191 + (int) (crawlType);

    hashCode = hashCode * 8191 + ((isSetCrawlNum()) ? 131071 : 524287);
    if (isSetCrawlNum())
      hashCode = hashCode * 8191 + crawlNum;

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetCurrentEmailNum()) ? 131071 : 524287);
    if (isSetCurrentEmailNum())
      hashCode = hashCode * 8191 + currentEmailNum;

    hashCode = hashCode * 8191 + ((isSetTotalEmailNum()) ? 131071 : 524287);
    if (isSetTotalEmailNum())
      hashCode = hashCode * 8191 + totalEmailNum;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TalentPoolProfileMoveRecordDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileMoveId()).compareTo(other.isSetProfileMoveId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileMoveId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileMoveId, other.profileMoveId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdPartyCompanyId()).compareTo(other.isSetThirdPartyCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdPartyCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdPartyCompanyId, other.thirdPartyCompanyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCrawlType()).compareTo(other.isSetCrawlType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCrawlType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.crawlType, other.crawlType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCrawlNum()).compareTo(other.isSetCrawlNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCrawlNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.crawlNum, other.crawlNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrentEmailNum()).compareTo(other.isSetCurrentEmailNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentEmailNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentEmailNum, other.currentEmailNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalEmailNum()).compareTo(other.isSetTotalEmailNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalEmailNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalEmailNum, other.totalEmailNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TalentPoolProfileMoveRecordDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetProfileMoveId()) {
      if (!first) sb.append(", ");
      sb.append("profileMoveId:");
      sb.append(this.profileMoveId);
      first = false;
    }
    if (isSetThirdPartyCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("thirdPartyCompanyId:");
      sb.append(this.thirdPartyCompanyId);
      first = false;
    }
    if (isSetCrawlType()) {
      if (!first) sb.append(", ");
      sb.append("crawlType:");
      sb.append(this.crawlType);
      first = false;
    }
    if (isSetCrawlNum()) {
      if (!first) sb.append(", ");
      sb.append("crawlNum:");
      sb.append(this.crawlNum);
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCurrentEmailNum()) {
      if (!first) sb.append(", ");
      sb.append("currentEmailNum:");
      sb.append(this.currentEmailNum);
      first = false;
    }
    if (isSetTotalEmailNum()) {
      if (!first) sb.append(", ");
      sb.append("totalEmailNum:");
      sb.append(this.totalEmailNum);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TalentPoolProfileMoveRecordDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TalentPoolProfileMoveRecordDOStandardScheme getScheme() {
      return new TalentPoolProfileMoveRecordDOStandardScheme();
    }
  }

  private static class TalentPoolProfileMoveRecordDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<TalentPoolProfileMoveRecordDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TalentPoolProfileMoveRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROFILE_MOVE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileMoveId = iprot.readI32();
              struct.setProfileMoveIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // THIRD_PARTY_COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.thirdPartyCompanyId = iprot.readI32();
              struct.setThirdPartyCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CRAWL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.crawlType = iprot.readByte();
              struct.setCrawlTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CRAWL_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.crawlNum = iprot.readI32();
              struct.setCrawlNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CURRENT_EMAIL_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.currentEmailNum = iprot.readI32();
              struct.setCurrentEmailNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TOTAL_EMAIL_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalEmailNum = iprot.readI32();
              struct.setTotalEmailNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TalentPoolProfileMoveRecordDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileMoveId()) {
        oprot.writeFieldBegin(PROFILE_MOVE_ID_FIELD_DESC);
        oprot.writeI32(struct.profileMoveId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetThirdPartyCompanyId()) {
        oprot.writeFieldBegin(THIRD_PARTY_COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.thirdPartyCompanyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCrawlType()) {
        oprot.writeFieldBegin(CRAWL_TYPE_FIELD_DESC);
        oprot.writeByte(struct.crawlType);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCrawlNum()) {
        oprot.writeFieldBegin(CRAWL_NUM_FIELD_DESC);
        oprot.writeI32(struct.crawlNum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCurrentEmailNum()) {
        oprot.writeFieldBegin(CURRENT_EMAIL_NUM_FIELD_DESC);
        oprot.writeI32(struct.currentEmailNum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTotalEmailNum()) {
        oprot.writeFieldBegin(TOTAL_EMAIL_NUM_FIELD_DESC);
        oprot.writeI32(struct.totalEmailNum);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TalentPoolProfileMoveRecordDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TalentPoolProfileMoveRecordDOTupleScheme getScheme() {
      return new TalentPoolProfileMoveRecordDOTupleScheme();
    }
  }

  private static class TalentPoolProfileMoveRecordDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<TalentPoolProfileMoveRecordDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TalentPoolProfileMoveRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetProfileMoveId()) {
        optionals.set(1);
      }
      if (struct.isSetThirdPartyCompanyId()) {
        optionals.set(2);
      }
      if (struct.isSetCrawlType()) {
        optionals.set(3);
      }
      if (struct.isSetCrawlNum()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      if (struct.isSetCurrentEmailNum()) {
        optionals.set(6);
      }
      if (struct.isSetTotalEmailNum()) {
        optionals.set(7);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(8);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetProfileMoveId()) {
        oprot.writeI32(struct.profileMoveId);
      }
      if (struct.isSetThirdPartyCompanyId()) {
        oprot.writeI32(struct.thirdPartyCompanyId);
      }
      if (struct.isSetCrawlType()) {
        oprot.writeByte(struct.crawlType);
      }
      if (struct.isSetCrawlNum()) {
        oprot.writeI32(struct.crawlNum);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetCurrentEmailNum()) {
        oprot.writeI32(struct.currentEmailNum);
      }
      if (struct.isSetTotalEmailNum()) {
        oprot.writeI32(struct.totalEmailNum);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TalentPoolProfileMoveRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.profileMoveId = iprot.readI32();
        struct.setProfileMoveIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.thirdPartyCompanyId = iprot.readI32();
        struct.setThirdPartyCompanyIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.crawlType = iprot.readByte();
        struct.setCrawlTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.crawlNum = iprot.readI32();
        struct.setCrawlNumIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.currentEmailNum = iprot.readI32();
        struct.setCurrentEmailNumIsSet(true);
      }
      if (incoming.get(7)) {
        struct.totalEmailNum = iprot.readI32();
        struct.setTotalEmailNumIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

