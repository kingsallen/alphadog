/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-11-20")
public class TalentpoolNewServices {

    public interface Iface {

        public com.moseeker.thrift.gen.common.struct.Response addProfileContent(int userId, int accountId, java.lang.String content) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response deleteHrAutoMaticTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response addHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response updateHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response getHrAutoMaticTagList(int hr_id, int company_id, int page_number, int page_size) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response getHrAutoMaticTagSingle(int hr_id, int company_id, int id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response getCompanyTagList(int hr_id, int company_id, int page_number, int page_size) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response deleteCompanyTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response getCompanyIdInfo(int hr_id, int company_id, int company_tag_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response addCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

        public com.moseeker.thrift.gen.common.struct.Response updateCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException;

    }

    public interface AsyncIface {

        public void addProfileContent(int userId, int accountId, java.lang.String content, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void deleteHrAutoMaticTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void addHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void updateHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void getHrAutoMaticTagList(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void getHrAutoMaticTagSingle(int hr_id, int company_id, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void getCompanyTagList(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void deleteCompanyTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void getCompanyIdInfo(int hr_id, int company_id, int company_tag_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void addCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

        public void updateCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    }

    public static class Client extends org.apache.thrift.TServiceClient implements Iface {
        public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
            public Factory() {}
            public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
                return new Client(prot);
            }
            public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
                return new Client(iprot, oprot);
            }
        }

        public Client(org.apache.thrift.protocol.TProtocol prot)
        {
            super(prot, prot);
        }

        public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
            super(iprot, oprot);
        }

        public com.moseeker.thrift.gen.common.struct.Response addProfileContent(int userId, int accountId, java.lang.String content) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_addProfileContent(userId, accountId, content);
            return recv_addProfileContent();
        }

        public void send_addProfileContent(int userId, int accountId, java.lang.String content) throws org.apache.thrift.TException
        {
            addProfileContent_args args = new addProfileContent_args();
            args.setUserId(userId);
            args.setAccountId(accountId);
            args.setContent(content);
            sendBase("addProfileContent", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_addProfileContent() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            addProfileContent_result result = new addProfileContent_result();
            receiveBase(result, "addProfileContent");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addProfileContent failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response deleteHrAutoMaticTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_deleteHrAutoMaticTagByIds(hr_id, company_id, tag_ids);
            return recv_deleteHrAutoMaticTagByIds();
        }

        public void send_deleteHrAutoMaticTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids) throws org.apache.thrift.TException
        {
            deleteHrAutoMaticTagByIds_args args = new deleteHrAutoMaticTagByIds_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setTag_ids(tag_ids);
            sendBase("deleteHrAutoMaticTagByIds", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_deleteHrAutoMaticTagByIds() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            deleteHrAutoMaticTagByIds_result result = new deleteHrAutoMaticTagByIds_result();
            receiveBase(result, "deleteHrAutoMaticTagByIds");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteHrAutoMaticTagByIds failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response addHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_addHrAutoMaticTag(hrAutoTagDO, company_id);
            return recv_addHrAutoMaticTag();
        }

        public void send_addHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws org.apache.thrift.TException
        {
            addHrAutoMaticTag_args args = new addHrAutoMaticTag_args();
            args.setHrAutoTagDO(hrAutoTagDO);
            args.setCompany_id(company_id);
            sendBase("addHrAutoMaticTag", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_addHrAutoMaticTag() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            addHrAutoMaticTag_result result = new addHrAutoMaticTag_result();
            receiveBase(result, "addHrAutoMaticTag");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addHrAutoMaticTag failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response updateHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_updateHrAutoMaticTag(hrAutoTagDO, company_id);
            return recv_updateHrAutoMaticTag();
        }

        public void send_updateHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id) throws org.apache.thrift.TException
        {
            updateHrAutoMaticTag_args args = new updateHrAutoMaticTag_args();
            args.setHrAutoTagDO(hrAutoTagDO);
            args.setCompany_id(company_id);
            sendBase("updateHrAutoMaticTag", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_updateHrAutoMaticTag() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            updateHrAutoMaticTag_result result = new updateHrAutoMaticTag_result();
            receiveBase(result, "updateHrAutoMaticTag");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateHrAutoMaticTag failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response getHrAutoMaticTagList(int hr_id, int company_id, int page_number, int page_size) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_getHrAutoMaticTagList(hr_id, company_id, page_number, page_size);
            return recv_getHrAutoMaticTagList();
        }

        public void send_getHrAutoMaticTagList(int hr_id, int company_id, int page_number, int page_size) throws org.apache.thrift.TException
        {
            getHrAutoMaticTagList_args args = new getHrAutoMaticTagList_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setPage_number(page_number);
            args.setPage_size(page_size);
            sendBase("getHrAutoMaticTagList", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_getHrAutoMaticTagList() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            getHrAutoMaticTagList_result result = new getHrAutoMaticTagList_result();
            receiveBase(result, "getHrAutoMaticTagList");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getHrAutoMaticTagList failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response getHrAutoMaticTagSingle(int hr_id, int company_id, int id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_getHrAutoMaticTagSingle(hr_id, company_id, id);
            return recv_getHrAutoMaticTagSingle();
        }

        public void send_getHrAutoMaticTagSingle(int hr_id, int company_id, int id) throws org.apache.thrift.TException
        {
            getHrAutoMaticTagSingle_args args = new getHrAutoMaticTagSingle_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setId(id);
            sendBase("getHrAutoMaticTagSingle", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_getHrAutoMaticTagSingle() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            getHrAutoMaticTagSingle_result result = new getHrAutoMaticTagSingle_result();
            receiveBase(result, "getHrAutoMaticTagSingle");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getHrAutoMaticTagSingle failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response getCompanyTagList(int hr_id, int company_id, int page_number, int page_size) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_getCompanyTagList(hr_id, company_id, page_number, page_size);
            return recv_getCompanyTagList();
        }

        public void send_getCompanyTagList(int hr_id, int company_id, int page_number, int page_size) throws org.apache.thrift.TException
        {
            getCompanyTagList_args args = new getCompanyTagList_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setPage_number(page_number);
            args.setPage_size(page_size);
            sendBase("getCompanyTagList", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_getCompanyTagList() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            getCompanyTagList_result result = new getCompanyTagList_result();
            receiveBase(result, "getCompanyTagList");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getCompanyTagList failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response deleteCompanyTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_deleteCompanyTagByIds(hr_id, company_id, company_tag_ids);
            return recv_deleteCompanyTagByIds();
        }

        public void send_deleteCompanyTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids) throws org.apache.thrift.TException
        {
            deleteCompanyTagByIds_args args = new deleteCompanyTagByIds_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setCompany_tag_ids(company_tag_ids);
            sendBase("deleteCompanyTagByIds", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_deleteCompanyTagByIds() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            deleteCompanyTagByIds_result result = new deleteCompanyTagByIds_result();
            receiveBase(result, "deleteCompanyTagByIds");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteCompanyTagByIds failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response getCompanyIdInfo(int hr_id, int company_id, int company_tag_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_getCompanyIdInfo(hr_id, company_id, company_tag_id);
            return recv_getCompanyIdInfo();
        }

        public void send_getCompanyIdInfo(int hr_id, int company_id, int company_tag_id) throws org.apache.thrift.TException
        {
            getCompanyIdInfo_args args = new getCompanyIdInfo_args();
            args.setHr_id(hr_id);
            args.setCompany_id(company_id);
            args.setCompany_tag_id(company_tag_id);
            sendBase("getCompanyIdInfo", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_getCompanyIdInfo() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            getCompanyIdInfo_result result = new getCompanyIdInfo_result();
            receiveBase(result, "getCompanyIdInfo");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getCompanyIdInfo failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response addCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_addCompanyTag(companyTagDO, hr_id);
            return recv_addCompanyTag();
        }

        public void send_addCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws org.apache.thrift.TException
        {
            addCompanyTag_args args = new addCompanyTag_args();
            args.setCompanyTagDO(companyTagDO);
            args.setHr_id(hr_id);
            sendBase("addCompanyTag", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_addCompanyTag() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            addCompanyTag_result result = new addCompanyTag_result();
            receiveBase(result, "addCompanyTag");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "addCompanyTag failed: unknown result");
        }

        public com.moseeker.thrift.gen.common.struct.Response updateCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            send_updateCompanyTag(companyTagDO, hr_id);
            return recv_updateCompanyTag();
        }

        public void send_updateCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id) throws org.apache.thrift.TException
        {
            updateCompanyTag_args args = new updateCompanyTag_args();
            args.setCompanyTagDO(companyTagDO);
            args.setHr_id(hr_id);
            sendBase("updateCompanyTag", args);
        }

        public com.moseeker.thrift.gen.common.struct.Response recv_updateCompanyTag() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException
        {
            updateCompanyTag_result result = new updateCompanyTag_result();
            receiveBase(result, "updateCompanyTag");
            if (result.isSetSuccess()) {
                return result.success;
            }
            if (result.e != null) {
                throw result.e;
            }
            throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateCompanyTag failed: unknown result");
        }

    }
    public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
        public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
            private org.apache.thrift.async.TAsyncClientManager clientManager;
            private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
            public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
                this.clientManager = clientManager;
                this.protocolFactory = protocolFactory;
            }
            public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
                return new AsyncClient(protocolFactory, clientManager, transport);
            }
        }

        public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
            super(protocolFactory, clientManager, transport);
        }

        public void addProfileContent(int userId, int accountId, java.lang.String content, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            addProfileContent_call method_call = new addProfileContent_call(userId, accountId, content, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class addProfileContent_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int userId;
            private int accountId;
            private java.lang.String content;
            public addProfileContent_call(int userId, int accountId, java.lang.String content, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.userId = userId;
                this.accountId = accountId;
                this.content = content;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addProfileContent", org.apache.thrift.protocol.TMessageType.CALL, 0));
                addProfileContent_args args = new addProfileContent_args();
                args.setUserId(userId);
                args.setAccountId(accountId);
                args.setContent(content);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_addProfileContent();
            }
        }

        public void deleteHrAutoMaticTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            deleteHrAutoMaticTagByIds_call method_call = new deleteHrAutoMaticTagByIds_call(hr_id, company_id, tag_ids, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class deleteHrAutoMaticTagByIds_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private java.util.List<java.lang.Integer> tag_ids;
            public deleteHrAutoMaticTagByIds_call(int hr_id, int company_id, java.util.List<java.lang.Integer> tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.tag_ids = tag_ids;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteHrAutoMaticTagByIds", org.apache.thrift.protocol.TMessageType.CALL, 0));
                deleteHrAutoMaticTagByIds_args args = new deleteHrAutoMaticTagByIds_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setTag_ids(tag_ids);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_deleteHrAutoMaticTagByIds();
            }
        }

        public void addHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            addHrAutoMaticTag_call method_call = new addHrAutoMaticTag_call(hrAutoTagDO, company_id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class addHrAutoMaticTag_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO;
            private int company_id;
            public addHrAutoMaticTag_call(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hrAutoTagDO = hrAutoTagDO;
                this.company_id = company_id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addHrAutoMaticTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
                addHrAutoMaticTag_args args = new addHrAutoMaticTag_args();
                args.setHrAutoTagDO(hrAutoTagDO);
                args.setCompany_id(company_id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_addHrAutoMaticTag();
            }
        }

        public void updateHrAutoMaticTag(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            updateHrAutoMaticTag_call method_call = new updateHrAutoMaticTag_call(hrAutoTagDO, company_id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class updateHrAutoMaticTag_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO;
            private int company_id;
            public updateHrAutoMaticTag_call(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO, int company_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hrAutoTagDO = hrAutoTagDO;
                this.company_id = company_id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateHrAutoMaticTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
                updateHrAutoMaticTag_args args = new updateHrAutoMaticTag_args();
                args.setHrAutoTagDO(hrAutoTagDO);
                args.setCompany_id(company_id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_updateHrAutoMaticTag();
            }
        }

        public void getHrAutoMaticTagList(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            getHrAutoMaticTagList_call method_call = new getHrAutoMaticTagList_call(hr_id, company_id, page_number, page_size, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class getHrAutoMaticTagList_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private int page_number;
            private int page_size;
            public getHrAutoMaticTagList_call(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.page_number = page_number;
                this.page_size = page_size;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getHrAutoMaticTagList", org.apache.thrift.protocol.TMessageType.CALL, 0));
                getHrAutoMaticTagList_args args = new getHrAutoMaticTagList_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setPage_number(page_number);
                args.setPage_size(page_size);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_getHrAutoMaticTagList();
            }
        }

        public void getHrAutoMaticTagSingle(int hr_id, int company_id, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            getHrAutoMaticTagSingle_call method_call = new getHrAutoMaticTagSingle_call(hr_id, company_id, id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class getHrAutoMaticTagSingle_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private int id;
            public getHrAutoMaticTagSingle_call(int hr_id, int company_id, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.id = id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getHrAutoMaticTagSingle", org.apache.thrift.protocol.TMessageType.CALL, 0));
                getHrAutoMaticTagSingle_args args = new getHrAutoMaticTagSingle_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setId(id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_getHrAutoMaticTagSingle();
            }
        }

        public void getCompanyTagList(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            getCompanyTagList_call method_call = new getCompanyTagList_call(hr_id, company_id, page_number, page_size, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class getCompanyTagList_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private int page_number;
            private int page_size;
            public getCompanyTagList_call(int hr_id, int company_id, int page_number, int page_size, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.page_number = page_number;
                this.page_size = page_size;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getCompanyTagList", org.apache.thrift.protocol.TMessageType.CALL, 0));
                getCompanyTagList_args args = new getCompanyTagList_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setPage_number(page_number);
                args.setPage_size(page_size);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_getCompanyTagList();
            }
        }

        public void deleteCompanyTagByIds(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            deleteCompanyTagByIds_call method_call = new deleteCompanyTagByIds_call(hr_id, company_id, company_tag_ids, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class deleteCompanyTagByIds_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private java.util.List<java.lang.Integer> company_tag_ids;
            public deleteCompanyTagByIds_call(int hr_id, int company_id, java.util.List<java.lang.Integer> company_tag_ids, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.company_tag_ids = company_tag_ids;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteCompanyTagByIds", org.apache.thrift.protocol.TMessageType.CALL, 0));
                deleteCompanyTagByIds_args args = new deleteCompanyTagByIds_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setCompany_tag_ids(company_tag_ids);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_deleteCompanyTagByIds();
            }
        }

        public void getCompanyIdInfo(int hr_id, int company_id, int company_tag_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            getCompanyIdInfo_call method_call = new getCompanyIdInfo_call(hr_id, company_id, company_tag_id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class getCompanyIdInfo_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private int hr_id;
            private int company_id;
            private int company_tag_id;
            public getCompanyIdInfo_call(int hr_id, int company_id, int company_tag_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.hr_id = hr_id;
                this.company_id = company_id;
                this.company_tag_id = company_tag_id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getCompanyIdInfo", org.apache.thrift.protocol.TMessageType.CALL, 0));
                getCompanyIdInfo_args args = new getCompanyIdInfo_args();
                args.setHr_id(hr_id);
                args.setCompany_id(company_id);
                args.setCompany_tag_id(company_tag_id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_getCompanyIdInfo();
            }
        }

        public void addCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            addCompanyTag_call method_call = new addCompanyTag_call(companyTagDO, hr_id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class addCompanyTag_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO;
            private int hr_id;
            public addCompanyTag_call(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyTagDO = companyTagDO;
                this.hr_id = hr_id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addCompanyTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
                addCompanyTag_args args = new addCompanyTag_args();
                args.setCompanyTagDO(companyTagDO);
                args.setHr_id(hr_id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_addCompanyTag();
            }
        }

        public void updateCompanyTag(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
            checkReady();
            updateCompanyTag_call method_call = new updateCompanyTag_call(companyTagDO, hr_id, resultHandler, this, ___protocolFactory, ___transport);
            this.___currentMethod = method_call;
            ___manager.call(method_call);
        }

        public static class updateCompanyTag_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
            private com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO;
            private int hr_id;
            public updateCompanyTag_call(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO, int hr_id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
                super(client, protocolFactory, transport, resultHandler, false);
                this.companyTagDO = companyTagDO;
                this.hr_id = hr_id;
            }

            public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
                prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateCompanyTag", org.apache.thrift.protocol.TMessageType.CALL, 0));
                updateCompanyTag_args args = new updateCompanyTag_args();
                args.setCompanyTagDO(companyTagDO);
                args.setHr_id(hr_id);
                args.write(prot);
                prot.writeMessageEnd();
            }

            public com.moseeker.thrift.gen.common.struct.Response getResult() throws com.moseeker.thrift.gen.common.struct.BIZException, org.apache.thrift.TException {
                if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
                    throw new java.lang.IllegalStateException("Method call not finished!");
                }
                org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
                org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
                return (new Client(prot)).recv_updateCompanyTag();
            }
        }

    }

    public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
        private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
        public Processor(I iface) {
            super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
        }

        protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
            super(iface, getProcessMap(processMap));
        }

        private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
            processMap.put("addProfileContent", new addProfileContent());
            processMap.put("deleteHrAutoMaticTagByIds", new deleteHrAutoMaticTagByIds());
            processMap.put("addHrAutoMaticTag", new addHrAutoMaticTag());
            processMap.put("updateHrAutoMaticTag", new updateHrAutoMaticTag());
            processMap.put("getHrAutoMaticTagList", new getHrAutoMaticTagList());
            processMap.put("getHrAutoMaticTagSingle", new getHrAutoMaticTagSingle());
            processMap.put("getCompanyTagList", new getCompanyTagList());
            processMap.put("deleteCompanyTagByIds", new deleteCompanyTagByIds());
            processMap.put("getCompanyIdInfo", new getCompanyIdInfo());
            processMap.put("addCompanyTag", new addCompanyTag());
            processMap.put("updateCompanyTag", new updateCompanyTag());
            return processMap;
        }

        public static class addProfileContent<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addProfileContent_args> {
            public addProfileContent() {
                super("addProfileContent");
            }

            public addProfileContent_args getEmptyArgsInstance() {
                return new addProfileContent_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public addProfileContent_result getResult(I iface, addProfileContent_args args) throws org.apache.thrift.TException {
                addProfileContent_result result = new addProfileContent_result();
                try {
                    result.success = iface.addProfileContent(args.userId, args.accountId, args.content);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class deleteHrAutoMaticTagByIds<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteHrAutoMaticTagByIds_args> {
            public deleteHrAutoMaticTagByIds() {
                super("deleteHrAutoMaticTagByIds");
            }

            public deleteHrAutoMaticTagByIds_args getEmptyArgsInstance() {
                return new deleteHrAutoMaticTagByIds_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public deleteHrAutoMaticTagByIds_result getResult(I iface, deleteHrAutoMaticTagByIds_args args) throws org.apache.thrift.TException {
                deleteHrAutoMaticTagByIds_result result = new deleteHrAutoMaticTagByIds_result();
                try {
                    result.success = iface.deleteHrAutoMaticTagByIds(args.hr_id, args.company_id, args.tag_ids);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class addHrAutoMaticTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addHrAutoMaticTag_args> {
            public addHrAutoMaticTag() {
                super("addHrAutoMaticTag");
            }

            public addHrAutoMaticTag_args getEmptyArgsInstance() {
                return new addHrAutoMaticTag_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public addHrAutoMaticTag_result getResult(I iface, addHrAutoMaticTag_args args) throws org.apache.thrift.TException {
                addHrAutoMaticTag_result result = new addHrAutoMaticTag_result();
                try {
                    result.success = iface.addHrAutoMaticTag(args.hrAutoTagDO, args.company_id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class updateHrAutoMaticTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateHrAutoMaticTag_args> {
            public updateHrAutoMaticTag() {
                super("updateHrAutoMaticTag");
            }

            public updateHrAutoMaticTag_args getEmptyArgsInstance() {
                return new updateHrAutoMaticTag_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public updateHrAutoMaticTag_result getResult(I iface, updateHrAutoMaticTag_args args) throws org.apache.thrift.TException {
                updateHrAutoMaticTag_result result = new updateHrAutoMaticTag_result();
                try {
                    result.success = iface.updateHrAutoMaticTag(args.hrAutoTagDO, args.company_id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class getHrAutoMaticTagList<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getHrAutoMaticTagList_args> {
            public getHrAutoMaticTagList() {
                super("getHrAutoMaticTagList");
            }

            public getHrAutoMaticTagList_args getEmptyArgsInstance() {
                return new getHrAutoMaticTagList_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public getHrAutoMaticTagList_result getResult(I iface, getHrAutoMaticTagList_args args) throws org.apache.thrift.TException {
                getHrAutoMaticTagList_result result = new getHrAutoMaticTagList_result();
                try {
                    result.success = iface.getHrAutoMaticTagList(args.hr_id, args.company_id, args.page_number, args.page_size);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class getHrAutoMaticTagSingle<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getHrAutoMaticTagSingle_args> {
            public getHrAutoMaticTagSingle() {
                super("getHrAutoMaticTagSingle");
            }

            public getHrAutoMaticTagSingle_args getEmptyArgsInstance() {
                return new getHrAutoMaticTagSingle_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public getHrAutoMaticTagSingle_result getResult(I iface, getHrAutoMaticTagSingle_args args) throws org.apache.thrift.TException {
                getHrAutoMaticTagSingle_result result = new getHrAutoMaticTagSingle_result();
                try {
                    result.success = iface.getHrAutoMaticTagSingle(args.hr_id, args.company_id, args.id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class getCompanyTagList<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getCompanyTagList_args> {
            public getCompanyTagList() {
                super("getCompanyTagList");
            }

            public getCompanyTagList_args getEmptyArgsInstance() {
                return new getCompanyTagList_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public getCompanyTagList_result getResult(I iface, getCompanyTagList_args args) throws org.apache.thrift.TException {
                getCompanyTagList_result result = new getCompanyTagList_result();
                try {
                    result.success = iface.getCompanyTagList(args.hr_id, args.company_id, args.page_number, args.page_size);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class deleteCompanyTagByIds<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteCompanyTagByIds_args> {
            public deleteCompanyTagByIds() {
                super("deleteCompanyTagByIds");
            }

            public deleteCompanyTagByIds_args getEmptyArgsInstance() {
                return new deleteCompanyTagByIds_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public deleteCompanyTagByIds_result getResult(I iface, deleteCompanyTagByIds_args args) throws org.apache.thrift.TException {
                deleteCompanyTagByIds_result result = new deleteCompanyTagByIds_result();
                try {
                    result.success = iface.deleteCompanyTagByIds(args.hr_id, args.company_id, args.company_tag_ids);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class getCompanyIdInfo<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getCompanyIdInfo_args> {
            public getCompanyIdInfo() {
                super("getCompanyIdInfo");
            }

            public getCompanyIdInfo_args getEmptyArgsInstance() {
                return new getCompanyIdInfo_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public getCompanyIdInfo_result getResult(I iface, getCompanyIdInfo_args args) throws org.apache.thrift.TException {
                getCompanyIdInfo_result result = new getCompanyIdInfo_result();
                try {
                    result.success = iface.getCompanyIdInfo(args.hr_id, args.company_id, args.company_tag_id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class addCompanyTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addCompanyTag_args> {
            public addCompanyTag() {
                super("addCompanyTag");
            }

            public addCompanyTag_args getEmptyArgsInstance() {
                return new addCompanyTag_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public addCompanyTag_result getResult(I iface, addCompanyTag_args args) throws org.apache.thrift.TException {
                addCompanyTag_result result = new addCompanyTag_result();
                try {
                    result.success = iface.addCompanyTag(args.companyTagDO, args.hr_id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

        public static class updateCompanyTag<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateCompanyTag_args> {
            public updateCompanyTag() {
                super("updateCompanyTag");
            }

            public updateCompanyTag_args getEmptyArgsInstance() {
                return new updateCompanyTag_args();
            }

            protected boolean isOneway() {
                return false;
            }

            public updateCompanyTag_result getResult(I iface, updateCompanyTag_args args) throws org.apache.thrift.TException {
                updateCompanyTag_result result = new updateCompanyTag_result();
                try {
                    result.success = iface.updateCompanyTag(args.companyTagDO, args.hr_id);
                } catch (com.moseeker.thrift.gen.common.struct.BIZException e) {
                    result.e = e;
                }
                return result;
            }
        }

    }

    public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
        private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
        public AsyncProcessor(I iface) {
            super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
        }

        protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
            super(iface, getProcessMap(processMap));
        }

        private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
            processMap.put("addProfileContent", new addProfileContent());
            processMap.put("deleteHrAutoMaticTagByIds", new deleteHrAutoMaticTagByIds());
            processMap.put("addHrAutoMaticTag", new addHrAutoMaticTag());
            processMap.put("updateHrAutoMaticTag", new updateHrAutoMaticTag());
            processMap.put("getHrAutoMaticTagList", new getHrAutoMaticTagList());
            processMap.put("getHrAutoMaticTagSingle", new getHrAutoMaticTagSingle());
            processMap.put("getCompanyTagList", new getCompanyTagList());
            processMap.put("deleteCompanyTagByIds", new deleteCompanyTagByIds());
            processMap.put("getCompanyIdInfo", new getCompanyIdInfo());
            processMap.put("addCompanyTag", new addCompanyTag());
            processMap.put("updateCompanyTag", new updateCompanyTag());
            return processMap;
        }

        public static class addProfileContent<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addProfileContent_args, com.moseeker.thrift.gen.common.struct.Response> {
            public addProfileContent() {
                super("addProfileContent");
            }

            public addProfileContent_args getEmptyArgsInstance() {
                return new addProfileContent_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        addProfileContent_result result = new addProfileContent_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        addProfileContent_result result = new addProfileContent_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, addProfileContent_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.addProfileContent(args.userId, args.accountId, args.content,resultHandler);
            }
        }

        public static class deleteHrAutoMaticTagByIds<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteHrAutoMaticTagByIds_args, com.moseeker.thrift.gen.common.struct.Response> {
            public deleteHrAutoMaticTagByIds() {
                super("deleteHrAutoMaticTagByIds");
            }

            public deleteHrAutoMaticTagByIds_args getEmptyArgsInstance() {
                return new deleteHrAutoMaticTagByIds_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        deleteHrAutoMaticTagByIds_result result = new deleteHrAutoMaticTagByIds_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        deleteHrAutoMaticTagByIds_result result = new deleteHrAutoMaticTagByIds_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, deleteHrAutoMaticTagByIds_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.deleteHrAutoMaticTagByIds(args.hr_id, args.company_id, args.tag_ids,resultHandler);
            }
        }

        public static class addHrAutoMaticTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addHrAutoMaticTag_args, com.moseeker.thrift.gen.common.struct.Response> {
            public addHrAutoMaticTag() {
                super("addHrAutoMaticTag");
            }

            public addHrAutoMaticTag_args getEmptyArgsInstance() {
                return new addHrAutoMaticTag_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        addHrAutoMaticTag_result result = new addHrAutoMaticTag_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        addHrAutoMaticTag_result result = new addHrAutoMaticTag_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, addHrAutoMaticTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.addHrAutoMaticTag(args.hrAutoTagDO, args.company_id,resultHandler);
            }
        }

        public static class updateHrAutoMaticTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateHrAutoMaticTag_args, com.moseeker.thrift.gen.common.struct.Response> {
            public updateHrAutoMaticTag() {
                super("updateHrAutoMaticTag");
            }

            public updateHrAutoMaticTag_args getEmptyArgsInstance() {
                return new updateHrAutoMaticTag_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        updateHrAutoMaticTag_result result = new updateHrAutoMaticTag_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        updateHrAutoMaticTag_result result = new updateHrAutoMaticTag_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, updateHrAutoMaticTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.updateHrAutoMaticTag(args.hrAutoTagDO, args.company_id,resultHandler);
            }
        }

        public static class getHrAutoMaticTagList<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getHrAutoMaticTagList_args, com.moseeker.thrift.gen.common.struct.Response> {
            public getHrAutoMaticTagList() {
                super("getHrAutoMaticTagList");
            }

            public getHrAutoMaticTagList_args getEmptyArgsInstance() {
                return new getHrAutoMaticTagList_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        getHrAutoMaticTagList_result result = new getHrAutoMaticTagList_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        getHrAutoMaticTagList_result result = new getHrAutoMaticTagList_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, getHrAutoMaticTagList_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.getHrAutoMaticTagList(args.hr_id, args.company_id, args.page_number, args.page_size,resultHandler);
            }
        }

        public static class getHrAutoMaticTagSingle<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getHrAutoMaticTagSingle_args, com.moseeker.thrift.gen.common.struct.Response> {
            public getHrAutoMaticTagSingle() {
                super("getHrAutoMaticTagSingle");
            }

            public getHrAutoMaticTagSingle_args getEmptyArgsInstance() {
                return new getHrAutoMaticTagSingle_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        getHrAutoMaticTagSingle_result result = new getHrAutoMaticTagSingle_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        getHrAutoMaticTagSingle_result result = new getHrAutoMaticTagSingle_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, getHrAutoMaticTagSingle_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.getHrAutoMaticTagSingle(args.hr_id, args.company_id, args.id,resultHandler);
            }
        }

        public static class getCompanyTagList<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getCompanyTagList_args, com.moseeker.thrift.gen.common.struct.Response> {
            public getCompanyTagList() {
                super("getCompanyTagList");
            }

            public getCompanyTagList_args getEmptyArgsInstance() {
                return new getCompanyTagList_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        getCompanyTagList_result result = new getCompanyTagList_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        getCompanyTagList_result result = new getCompanyTagList_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, getCompanyTagList_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.getCompanyTagList(args.hr_id, args.company_id, args.page_number, args.page_size,resultHandler);
            }
        }

        public static class deleteCompanyTagByIds<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteCompanyTagByIds_args, com.moseeker.thrift.gen.common.struct.Response> {
            public deleteCompanyTagByIds() {
                super("deleteCompanyTagByIds");
            }

            public deleteCompanyTagByIds_args getEmptyArgsInstance() {
                return new deleteCompanyTagByIds_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        deleteCompanyTagByIds_result result = new deleteCompanyTagByIds_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        deleteCompanyTagByIds_result result = new deleteCompanyTagByIds_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, deleteCompanyTagByIds_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.deleteCompanyTagByIds(args.hr_id, args.company_id, args.company_tag_ids,resultHandler);
            }
        }

        public static class getCompanyIdInfo<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getCompanyIdInfo_args, com.moseeker.thrift.gen.common.struct.Response> {
            public getCompanyIdInfo() {
                super("getCompanyIdInfo");
            }

            public getCompanyIdInfo_args getEmptyArgsInstance() {
                return new getCompanyIdInfo_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        getCompanyIdInfo_result result = new getCompanyIdInfo_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        getCompanyIdInfo_result result = new getCompanyIdInfo_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, getCompanyIdInfo_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.getCompanyIdInfo(args.hr_id, args.company_id, args.company_tag_id,resultHandler);
            }
        }

        public static class addCompanyTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addCompanyTag_args, com.moseeker.thrift.gen.common.struct.Response> {
            public addCompanyTag() {
                super("addCompanyTag");
            }

            public addCompanyTag_args getEmptyArgsInstance() {
                return new addCompanyTag_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        addCompanyTag_result result = new addCompanyTag_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        addCompanyTag_result result = new addCompanyTag_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, addCompanyTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.addCompanyTag(args.companyTagDO, args.hr_id,resultHandler);
            }
        }

        public static class updateCompanyTag<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateCompanyTag_args, com.moseeker.thrift.gen.common.struct.Response> {
            public updateCompanyTag() {
                super("updateCompanyTag");
            }

            public updateCompanyTag_args getEmptyArgsInstance() {
                return new updateCompanyTag_args();
            }

            public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
                final org.apache.thrift.AsyncProcessFunction fcall = this;
                return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
                    public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
                        updateCompanyTag_result result = new updateCompanyTag_result();
                        result.success = o;
                        try {
                            fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
                        } catch (org.apache.thrift.transport.TTransportException e) {
                            _LOGGER.error("TTransportException writing to internal frame buffer", e);
                            fb.close();
                        } catch (java.lang.Exception e) {
                            _LOGGER.error("Exception writing to internal frame buffer", e);
                            onError(e);
                        }
                    }
                    public void onError(java.lang.Exception e) {
                        byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
                        org.apache.thrift.TSerializable msg;
                        updateCompanyTag_result result = new updateCompanyTag_result();
                        if (e instanceof com.moseeker.thrift.gen.common.struct.BIZException) {
                            result.e = (com.moseeker.thrift.gen.common.struct.BIZException) e;
                            result.setEIsSet(true);
                            msg = result;
                        } else if (e instanceof org.apache.thrift.transport.TTransportException) {
                            _LOGGER.error("TTransportException inside handler", e);
                            fb.close();
                            return;
                        } else if (e instanceof org.apache.thrift.TApplicationException) {
                            _LOGGER.error("TApplicationException inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = (org.apache.thrift.TApplicationException)e;
                        } else {
                            _LOGGER.error("Exception inside handler", e);
                            msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
                            msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
                        }
                        try {
                            fcall.sendResponse(fb,msg,msgType,seqid);
                        } catch (java.lang.Exception ex) {
                            _LOGGER.error("Exception writing to internal frame buffer", ex);
                            fb.close();
                        }
                    }
                };
            }

            protected boolean isOneway() {
                return false;
            }

            public void start(I iface, updateCompanyTag_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
                iface.updateCompanyTag(args.companyTagDO, args.hr_id,resultHandler);
            }
        }

    }

    public static class addProfileContent_args implements org.apache.thrift.TBase<addProfileContent_args, addProfileContent_args._Fields>, java.io.Serializable, Cloneable, Comparable<addProfileContent_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addProfileContent_args");

        private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)3);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addProfileContent_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addProfileContent_argsTupleSchemeFactory();

        public int userId; // required
        public int accountId; // required
        public java.lang.String content; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            USER_ID((short)1, "userId"),
            ACCOUNT_ID((short)2, "accountId"),
            CONTENT((short)3, "content");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // USER_ID
                        return USER_ID;
                    case 2: // ACCOUNT_ID
                        return ACCOUNT_ID;
                    case 3: // CONTENT
                        return CONTENT;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __USERID_ISSET_ID = 0;
        private static final int __ACCOUNTID_ISSET_ID = 1;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addProfileContent_args.class, metaDataMap);
        }

        public addProfileContent_args() {
        }

        public addProfileContent_args(
                int userId,
                int accountId,
                java.lang.String content)
        {
            this();
            this.userId = userId;
            setUserIdIsSet(true);
            this.accountId = accountId;
            setAccountIdIsSet(true);
            this.content = content;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addProfileContent_args(addProfileContent_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.userId = other.userId;
            this.accountId = other.accountId;
            if (other.isSetContent()) {
                this.content = other.content;
            }
        }

        public addProfileContent_args deepCopy() {
            return new addProfileContent_args(this);
        }

        @Override
        public void clear() {
            setUserIdIsSet(false);
            this.userId = 0;
            setAccountIdIsSet(false);
            this.accountId = 0;
            this.content = null;
        }

        public int getUserId() {
            return this.userId;
        }

        public addProfileContent_args setUserId(int userId) {
            this.userId = userId;
            setUserIdIsSet(true);
            return this;
        }

        public void unsetUserId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
        }

        /** Returns true if field userId is set (has been assigned a value) and false otherwise */
        public boolean isSetUserId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
        }

        public void setUserIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
        }

        public int getAccountId() {
            return this.accountId;
        }

        public addProfileContent_args setAccountId(int accountId) {
            this.accountId = accountId;
            setAccountIdIsSet(true);
            return this;
        }

        public void unsetAccountId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
        }

        /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
        public boolean isSetAccountId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
        }

        public void setAccountIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
        }

        public java.lang.String getContent() {
            return this.content;
        }

        public addProfileContent_args setContent(java.lang.String content) {
            this.content = content;
            return this;
        }

        public void unsetContent() {
            this.content = null;
        }

        /** Returns true if field content is set (has been assigned a value) and false otherwise */
        public boolean isSetContent() {
            return this.content != null;
        }

        public void setContentIsSet(boolean value) {
            if (!value) {
                this.content = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case USER_ID:
                    if (value == null) {
                        unsetUserId();
                    } else {
                        setUserId((java.lang.Integer)value);
                    }
                    break;

                case ACCOUNT_ID:
                    if (value == null) {
                        unsetAccountId();
                    } else {
                        setAccountId((java.lang.Integer)value);
                    }
                    break;

                case CONTENT:
                    if (value == null) {
                        unsetContent();
                    } else {
                        setContent((java.lang.String)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case USER_ID:
                    return getUserId();

                case ACCOUNT_ID:
                    return getAccountId();

                case CONTENT:
                    return getContent();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case USER_ID:
                    return isSetUserId();
                case ACCOUNT_ID:
                    return isSetAccountId();
                case CONTENT:
                    return isSetContent();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addProfileContent_args)
                return this.equals((addProfileContent_args)that);
            return false;
        }

        public boolean equals(addProfileContent_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_userId = true;
            boolean that_present_userId = true;
            if (this_present_userId || that_present_userId) {
                if (!(this_present_userId && that_present_userId))
                    return false;
                if (this.userId != that.userId)
                    return false;
            }

            boolean this_present_accountId = true;
            boolean that_present_accountId = true;
            if (this_present_accountId || that_present_accountId) {
                if (!(this_present_accountId && that_present_accountId))
                    return false;
                if (this.accountId != that.accountId)
                    return false;
            }

            boolean this_present_content = true && this.isSetContent();
            boolean that_present_content = true && that.isSetContent();
            if (this_present_content || that_present_content) {
                if (!(this_present_content && that_present_content))
                    return false;
                if (!this.content.equals(that.content))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + userId;

            hashCode = hashCode * 8191 + accountId;

            hashCode = hashCode * 8191 + ((isSetContent()) ? 131071 : 524287);
            if (isSetContent())
                hashCode = hashCode * 8191 + content.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(addProfileContent_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetUserId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetAccountId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetContent()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addProfileContent_args(");
            boolean first = true;

            sb.append("userId:");
            sb.append(this.userId);
            first = false;
            if (!first) sb.append(", ");
            sb.append("accountId:");
            sb.append(this.accountId);
            first = false;
            if (!first) sb.append(", ");
            sb.append("content:");
            if (this.content == null) {
                sb.append("null");
            } else {
                sb.append(this.content);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addProfileContent_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addProfileContent_argsStandardScheme getScheme() {
                return new addProfileContent_argsStandardScheme();
            }
        }

        private static class addProfileContent_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addProfileContent_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addProfileContent_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // USER_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.userId = iprot.readI32();
                                struct.setUserIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // ACCOUNT_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.accountId = iprot.readI32();
                                struct.setAccountIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // CONTENT
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                                struct.content = iprot.readString();
                                struct.setContentIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addProfileContent_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(USER_ID_FIELD_DESC);
                oprot.writeI32(struct.userId);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
                oprot.writeI32(struct.accountId);
                oprot.writeFieldEnd();
                if (struct.content != null) {
                    oprot.writeFieldBegin(CONTENT_FIELD_DESC);
                    oprot.writeString(struct.content);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addProfileContent_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addProfileContent_argsTupleScheme getScheme() {
                return new addProfileContent_argsTupleScheme();
            }
        }

        private static class addProfileContent_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addProfileContent_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addProfileContent_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetUserId()) {
                    optionals.set(0);
                }
                if (struct.isSetAccountId()) {
                    optionals.set(1);
                }
                if (struct.isSetContent()) {
                    optionals.set(2);
                }
                oprot.writeBitSet(optionals, 3);
                if (struct.isSetUserId()) {
                    oprot.writeI32(struct.userId);
                }
                if (struct.isSetAccountId()) {
                    oprot.writeI32(struct.accountId);
                }
                if (struct.isSetContent()) {
                    oprot.writeString(struct.content);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addProfileContent_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(3);
                if (incoming.get(0)) {
                    struct.userId = iprot.readI32();
                    struct.setUserIdIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.accountId = iprot.readI32();
                    struct.setAccountIdIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.content = iprot.readString();
                    struct.setContentIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addProfileContent_result implements org.apache.thrift.TBase<addProfileContent_result, addProfileContent_result._Fields>, java.io.Serializable, Cloneable, Comparable<addProfileContent_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addProfileContent_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addProfileContent_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addProfileContent_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addProfileContent_result.class, metaDataMap);
        }

        public addProfileContent_result() {
        }

        public addProfileContent_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addProfileContent_result(addProfileContent_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public addProfileContent_result deepCopy() {
            return new addProfileContent_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public addProfileContent_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public addProfileContent_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addProfileContent_result)
                return this.equals((addProfileContent_result)that);
            return false;
        }

        public boolean equals(addProfileContent_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(addProfileContent_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addProfileContent_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addProfileContent_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addProfileContent_resultStandardScheme getScheme() {
                return new addProfileContent_resultStandardScheme();
            }
        }

        private static class addProfileContent_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addProfileContent_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addProfileContent_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addProfileContent_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addProfileContent_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addProfileContent_resultTupleScheme getScheme() {
                return new addProfileContent_resultTupleScheme();
            }
        }

        private static class addProfileContent_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addProfileContent_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addProfileContent_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addProfileContent_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class deleteHrAutoMaticTagByIds_args implements org.apache.thrift.TBase<deleteHrAutoMaticTagByIds_args, deleteHrAutoMaticTagByIds_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteHrAutoMaticTagByIds_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteHrAutoMaticTagByIds_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField TAG_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("tag_ids", org.apache.thrift.protocol.TType.LIST, (short)3);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteHrAutoMaticTagByIds_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteHrAutoMaticTagByIds_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public java.util.List<java.lang.Integer> tag_ids; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            TAG_IDS((short)3, "tag_ids");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // TAG_IDS
                        return TAG_IDS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.TAG_IDS, new org.apache.thrift.meta_data.FieldMetaData("tag_ids", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteHrAutoMaticTagByIds_args.class, metaDataMap);
        }

        public deleteHrAutoMaticTagByIds_args() {
        }

        public deleteHrAutoMaticTagByIds_args(
                int hr_id,
                int company_id,
                java.util.List<java.lang.Integer> tag_ids)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.tag_ids = tag_ids;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public deleteHrAutoMaticTagByIds_args(deleteHrAutoMaticTagByIds_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            if (other.isSetTag_ids()) {
                java.util.List<java.lang.Integer> __this__tag_ids = new java.util.ArrayList<java.lang.Integer>(other.tag_ids);
                this.tag_ids = __this__tag_ids;
            }
        }

        public deleteHrAutoMaticTagByIds_args deepCopy() {
            return new deleteHrAutoMaticTagByIds_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            this.tag_ids = null;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public deleteHrAutoMaticTagByIds_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public deleteHrAutoMaticTagByIds_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getTag_idsSize() {
            return (this.tag_ids == null) ? 0 : this.tag_ids.size();
        }

        public java.util.Iterator<java.lang.Integer> getTag_idsIterator() {
            return (this.tag_ids == null) ? null : this.tag_ids.iterator();
        }

        public void addToTag_ids(int elem) {
            if (this.tag_ids == null) {
                this.tag_ids = new java.util.ArrayList<java.lang.Integer>();
            }
            this.tag_ids.add(elem);
        }

        public java.util.List<java.lang.Integer> getTag_ids() {
            return this.tag_ids;
        }

        public deleteHrAutoMaticTagByIds_args setTag_ids(java.util.List<java.lang.Integer> tag_ids) {
            this.tag_ids = tag_ids;
            return this;
        }

        public void unsetTag_ids() {
            this.tag_ids = null;
        }

        /** Returns true if field tag_ids is set (has been assigned a value) and false otherwise */
        public boolean isSetTag_ids() {
            return this.tag_ids != null;
        }

        public void setTag_idsIsSet(boolean value) {
            if (!value) {
                this.tag_ids = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case TAG_IDS:
                    if (value == null) {
                        unsetTag_ids();
                    } else {
                        setTag_ids((java.util.List<java.lang.Integer>)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case TAG_IDS:
                    return getTag_ids();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case TAG_IDS:
                    return isSetTag_ids();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof deleteHrAutoMaticTagByIds_args)
                return this.equals((deleteHrAutoMaticTagByIds_args)that);
            return false;
        }

        public boolean equals(deleteHrAutoMaticTagByIds_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_tag_ids = true && this.isSetTag_ids();
            boolean that_present_tag_ids = true && that.isSetTag_ids();
            if (this_present_tag_ids || that_present_tag_ids) {
                if (!(this_present_tag_ids && that_present_tag_ids))
                    return false;
                if (!this.tag_ids.equals(that.tag_ids))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + ((isSetTag_ids()) ? 131071 : 524287);
            if (isSetTag_ids())
                hashCode = hashCode * 8191 + tag_ids.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(deleteHrAutoMaticTagByIds_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetTag_ids()).compareTo(other.isSetTag_ids());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetTag_ids()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tag_ids, other.tag_ids);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteHrAutoMaticTagByIds_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("tag_ids:");
            if (this.tag_ids == null) {
                sb.append("null");
            } else {
                sb.append(this.tag_ids);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class deleteHrAutoMaticTagByIds_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteHrAutoMaticTagByIds_argsStandardScheme getScheme() {
                return new deleteHrAutoMaticTagByIds_argsStandardScheme();
            }
        }

        private static class deleteHrAutoMaticTagByIds_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteHrAutoMaticTagByIds_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, deleteHrAutoMaticTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // TAG_IDS
                            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                                {
                                    org.apache.thrift.protocol.TList _list342 = iprot.readListBegin();
                                    struct.tag_ids = new java.util.ArrayList<java.lang.Integer>(_list342.size);
                                    int _elem343;
                                    for (int _i344 = 0; _i344 < _list342.size; ++_i344)
                                    {
                                        _elem343 = iprot.readI32();
                                        struct.tag_ids.add(_elem343);
                                    }
                                    iprot.readListEnd();
                                }
                                struct.setTag_idsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, deleteHrAutoMaticTagByIds_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                if (struct.tag_ids != null) {
                    oprot.writeFieldBegin(TAG_IDS_FIELD_DESC);
                    {
                        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.tag_ids.size()));
                        for (int _iter345 : struct.tag_ids)
                        {
                            oprot.writeI32(_iter345);
                        }
                        oprot.writeListEnd();
                    }
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class deleteHrAutoMaticTagByIds_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteHrAutoMaticTagByIds_argsTupleScheme getScheme() {
                return new deleteHrAutoMaticTagByIds_argsTupleScheme();
            }
        }

        private static class deleteHrAutoMaticTagByIds_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteHrAutoMaticTagByIds_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, deleteHrAutoMaticTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetTag_ids()) {
                    optionals.set(2);
                }
                oprot.writeBitSet(optionals, 3);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetTag_ids()) {
                    {
                        oprot.writeI32(struct.tag_ids.size());
                        for (int _iter346 : struct.tag_ids)
                        {
                            oprot.writeI32(_iter346);
                        }
                    }
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, deleteHrAutoMaticTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(3);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    {
                        org.apache.thrift.protocol.TList _list347 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
                        struct.tag_ids = new java.util.ArrayList<java.lang.Integer>(_list347.size);
                        int _elem348;
                        for (int _i349 = 0; _i349 < _list347.size; ++_i349)
                        {
                            _elem348 = iprot.readI32();
                            struct.tag_ids.add(_elem348);
                        }
                    }
                    struct.setTag_idsIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class deleteHrAutoMaticTagByIds_result implements org.apache.thrift.TBase<deleteHrAutoMaticTagByIds_result, deleteHrAutoMaticTagByIds_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteHrAutoMaticTagByIds_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteHrAutoMaticTagByIds_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteHrAutoMaticTagByIds_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteHrAutoMaticTagByIds_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteHrAutoMaticTagByIds_result.class, metaDataMap);
        }

        public deleteHrAutoMaticTagByIds_result() {
        }

        public deleteHrAutoMaticTagByIds_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public deleteHrAutoMaticTagByIds_result(deleteHrAutoMaticTagByIds_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public deleteHrAutoMaticTagByIds_result deepCopy() {
            return new deleteHrAutoMaticTagByIds_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public deleteHrAutoMaticTagByIds_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public deleteHrAutoMaticTagByIds_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof deleteHrAutoMaticTagByIds_result)
                return this.equals((deleteHrAutoMaticTagByIds_result)that);
            return false;
        }

        public boolean equals(deleteHrAutoMaticTagByIds_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(deleteHrAutoMaticTagByIds_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteHrAutoMaticTagByIds_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class deleteHrAutoMaticTagByIds_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteHrAutoMaticTagByIds_resultStandardScheme getScheme() {
                return new deleteHrAutoMaticTagByIds_resultStandardScheme();
            }
        }

        private static class deleteHrAutoMaticTagByIds_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteHrAutoMaticTagByIds_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, deleteHrAutoMaticTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, deleteHrAutoMaticTagByIds_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class deleteHrAutoMaticTagByIds_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteHrAutoMaticTagByIds_resultTupleScheme getScheme() {
                return new deleteHrAutoMaticTagByIds_resultTupleScheme();
            }
        }

        private static class deleteHrAutoMaticTagByIds_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteHrAutoMaticTagByIds_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, deleteHrAutoMaticTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, deleteHrAutoMaticTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addHrAutoMaticTag_args implements org.apache.thrift.TBase<addHrAutoMaticTag_args, addHrAutoMaticTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<addHrAutoMaticTag_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addHrAutoMaticTag_args");

        private static final org.apache.thrift.protocol.TField HR_AUTO_TAG_DO_FIELD_DESC = new org.apache.thrift.protocol.TField("hrAutoTagDO", org.apache.thrift.protocol.TType.STRUCT, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addHrAutoMaticTag_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addHrAutoMaticTag_argsTupleSchemeFactory();

        public com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO; // required
        public int company_id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_AUTO_TAG_DO((short)1, "hrAutoTagDO"),
            COMPANY_ID((short)2, "company_id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_AUTO_TAG_DO
                        return HR_AUTO_TAG_DO;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __COMPANY_ID_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_AUTO_TAG_DO, new org.apache.thrift.meta_data.FieldMetaData("hrAutoTagDO", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO.class)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addHrAutoMaticTag_args.class, metaDataMap);
        }

        public addHrAutoMaticTag_args() {
        }

        public addHrAutoMaticTag_args(
                com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO,
                int company_id)
        {
            this();
            this.hrAutoTagDO = hrAutoTagDO;
            this.company_id = company_id;
            setCompany_idIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addHrAutoMaticTag_args(addHrAutoMaticTag_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetHrAutoTagDO()) {
                this.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO(other.hrAutoTagDO);
            }
            this.company_id = other.company_id;
        }

        public addHrAutoMaticTag_args deepCopy() {
            return new addHrAutoMaticTag_args(this);
        }

        @Override
        public void clear() {
            this.hrAutoTagDO = null;
            setCompany_idIsSet(false);
            this.company_id = 0;
        }

        public com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO getHrAutoTagDO() {
            return this.hrAutoTagDO;
        }

        public addHrAutoMaticTag_args setHrAutoTagDO(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO) {
            this.hrAutoTagDO = hrAutoTagDO;
            return this;
        }

        public void unsetHrAutoTagDO() {
            this.hrAutoTagDO = null;
        }

        /** Returns true if field hrAutoTagDO is set (has been assigned a value) and false otherwise */
        public boolean isSetHrAutoTagDO() {
            return this.hrAutoTagDO != null;
        }

        public void setHrAutoTagDOIsSet(boolean value) {
            if (!value) {
                this.hrAutoTagDO = null;
            }
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public addHrAutoMaticTag_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_AUTO_TAG_DO:
                    if (value == null) {
                        unsetHrAutoTagDO();
                    } else {
                        setHrAutoTagDO((com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_AUTO_TAG_DO:
                    return getHrAutoTagDO();

                case COMPANY_ID:
                    return getCompany_id();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_AUTO_TAG_DO:
                    return isSetHrAutoTagDO();
                case COMPANY_ID:
                    return isSetCompany_id();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addHrAutoMaticTag_args)
                return this.equals((addHrAutoMaticTag_args)that);
            return false;
        }

        public boolean equals(addHrAutoMaticTag_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hrAutoTagDO = true && this.isSetHrAutoTagDO();
            boolean that_present_hrAutoTagDO = true && that.isSetHrAutoTagDO();
            if (this_present_hrAutoTagDO || that_present_hrAutoTagDO) {
                if (!(this_present_hrAutoTagDO && that_present_hrAutoTagDO))
                    return false;
                if (!this.hrAutoTagDO.equals(that.hrAutoTagDO))
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetHrAutoTagDO()) ? 131071 : 524287);
            if (isSetHrAutoTagDO())
                hashCode = hashCode * 8191 + hrAutoTagDO.hashCode();

            hashCode = hashCode * 8191 + company_id;

            return hashCode;
        }

        @Override
        public int compareTo(addHrAutoMaticTag_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHrAutoTagDO()).compareTo(other.isSetHrAutoTagDO());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHrAutoTagDO()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrAutoTagDO, other.hrAutoTagDO);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addHrAutoMaticTag_args(");
            boolean first = true;

            sb.append("hrAutoTagDO:");
            if (this.hrAutoTagDO == null) {
                sb.append("null");
            } else {
                sb.append(this.hrAutoTagDO);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (hrAutoTagDO != null) {
                hrAutoTagDO.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addHrAutoMaticTag_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addHrAutoMaticTag_argsStandardScheme getScheme() {
                return new addHrAutoMaticTag_argsStandardScheme();
            }
        }

        private static class addHrAutoMaticTag_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addHrAutoMaticTag_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_AUTO_TAG_DO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO();
                                struct.hrAutoTagDO.read(iprot);
                                struct.setHrAutoTagDOIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.hrAutoTagDO != null) {
                    oprot.writeFieldBegin(HR_AUTO_TAG_DO_FIELD_DESC);
                    struct.hrAutoTagDO.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addHrAutoMaticTag_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addHrAutoMaticTag_argsTupleScheme getScheme() {
                return new addHrAutoMaticTag_argsTupleScheme();
            }
        }

        private static class addHrAutoMaticTag_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addHrAutoMaticTag_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHrAutoTagDO()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetHrAutoTagDO()) {
                    struct.hrAutoTagDO.write(oprot);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO();
                    struct.hrAutoTagDO.read(iprot);
                    struct.setHrAutoTagDOIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addHrAutoMaticTag_result implements org.apache.thrift.TBase<addHrAutoMaticTag_result, addHrAutoMaticTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<addHrAutoMaticTag_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addHrAutoMaticTag_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addHrAutoMaticTag_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addHrAutoMaticTag_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addHrAutoMaticTag_result.class, metaDataMap);
        }

        public addHrAutoMaticTag_result() {
        }

        public addHrAutoMaticTag_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addHrAutoMaticTag_result(addHrAutoMaticTag_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public addHrAutoMaticTag_result deepCopy() {
            return new addHrAutoMaticTag_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public addHrAutoMaticTag_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public addHrAutoMaticTag_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addHrAutoMaticTag_result)
                return this.equals((addHrAutoMaticTag_result)that);
            return false;
        }

        public boolean equals(addHrAutoMaticTag_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(addHrAutoMaticTag_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addHrAutoMaticTag_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addHrAutoMaticTag_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addHrAutoMaticTag_resultStandardScheme getScheme() {
                return new addHrAutoMaticTag_resultStandardScheme();
            }
        }

        private static class addHrAutoMaticTag_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addHrAutoMaticTag_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addHrAutoMaticTag_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addHrAutoMaticTag_resultTupleScheme getScheme() {
                return new addHrAutoMaticTag_resultTupleScheme();
            }
        }

        private static class addHrAutoMaticTag_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addHrAutoMaticTag_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class updateHrAutoMaticTag_args implements org.apache.thrift.TBase<updateHrAutoMaticTag_args, updateHrAutoMaticTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateHrAutoMaticTag_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateHrAutoMaticTag_args");

        private static final org.apache.thrift.protocol.TField HR_AUTO_TAG_DO_FIELD_DESC = new org.apache.thrift.protocol.TField("hrAutoTagDO", org.apache.thrift.protocol.TType.STRUCT, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateHrAutoMaticTag_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateHrAutoMaticTag_argsTupleSchemeFactory();

        public com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO; // required
        public int company_id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_AUTO_TAG_DO((short)1, "hrAutoTagDO"),
            COMPANY_ID((short)2, "company_id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_AUTO_TAG_DO
                        return HR_AUTO_TAG_DO;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __COMPANY_ID_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_AUTO_TAG_DO, new org.apache.thrift.meta_data.FieldMetaData("hrAutoTagDO", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO.class)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateHrAutoMaticTag_args.class, metaDataMap);
        }

        public updateHrAutoMaticTag_args() {
        }

        public updateHrAutoMaticTag_args(
                com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO,
                int company_id)
        {
            this();
            this.hrAutoTagDO = hrAutoTagDO;
            this.company_id = company_id;
            setCompany_idIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public updateHrAutoMaticTag_args(updateHrAutoMaticTag_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetHrAutoTagDO()) {
                this.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO(other.hrAutoTagDO);
            }
            this.company_id = other.company_id;
        }

        public updateHrAutoMaticTag_args deepCopy() {
            return new updateHrAutoMaticTag_args(this);
        }

        @Override
        public void clear() {
            this.hrAutoTagDO = null;
            setCompany_idIsSet(false);
            this.company_id = 0;
        }

        public com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO getHrAutoTagDO() {
            return this.hrAutoTagDO;
        }

        public updateHrAutoMaticTag_args setHrAutoTagDO(com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO hrAutoTagDO) {
            this.hrAutoTagDO = hrAutoTagDO;
            return this;
        }

        public void unsetHrAutoTagDO() {
            this.hrAutoTagDO = null;
        }

        /** Returns true if field hrAutoTagDO is set (has been assigned a value) and false otherwise */
        public boolean isSetHrAutoTagDO() {
            return this.hrAutoTagDO != null;
        }

        public void setHrAutoTagDOIsSet(boolean value) {
            if (!value) {
                this.hrAutoTagDO = null;
            }
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public updateHrAutoMaticTag_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_AUTO_TAG_DO:
                    if (value == null) {
                        unsetHrAutoTagDO();
                    } else {
                        setHrAutoTagDO((com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_AUTO_TAG_DO:
                    return getHrAutoTagDO();

                case COMPANY_ID:
                    return getCompany_id();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_AUTO_TAG_DO:
                    return isSetHrAutoTagDO();
                case COMPANY_ID:
                    return isSetCompany_id();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof updateHrAutoMaticTag_args)
                return this.equals((updateHrAutoMaticTag_args)that);
            return false;
        }

        public boolean equals(updateHrAutoMaticTag_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hrAutoTagDO = true && this.isSetHrAutoTagDO();
            boolean that_present_hrAutoTagDO = true && that.isSetHrAutoTagDO();
            if (this_present_hrAutoTagDO || that_present_hrAutoTagDO) {
                if (!(this_present_hrAutoTagDO && that_present_hrAutoTagDO))
                    return false;
                if (!this.hrAutoTagDO.equals(that.hrAutoTagDO))
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetHrAutoTagDO()) ? 131071 : 524287);
            if (isSetHrAutoTagDO())
                hashCode = hashCode * 8191 + hrAutoTagDO.hashCode();

            hashCode = hashCode * 8191 + company_id;

            return hashCode;
        }

        @Override
        public int compareTo(updateHrAutoMaticTag_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHrAutoTagDO()).compareTo(other.isSetHrAutoTagDO());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHrAutoTagDO()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrAutoTagDO, other.hrAutoTagDO);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("updateHrAutoMaticTag_args(");
            boolean first = true;

            sb.append("hrAutoTagDO:");
            if (this.hrAutoTagDO == null) {
                sb.append("null");
            } else {
                sb.append(this.hrAutoTagDO);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (hrAutoTagDO != null) {
                hrAutoTagDO.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class updateHrAutoMaticTag_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateHrAutoMaticTag_argsStandardScheme getScheme() {
                return new updateHrAutoMaticTag_argsStandardScheme();
            }
        }

        private static class updateHrAutoMaticTag_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateHrAutoMaticTag_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, updateHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_AUTO_TAG_DO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO();
                                struct.hrAutoTagDO.read(iprot);
                                struct.setHrAutoTagDOIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, updateHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.hrAutoTagDO != null) {
                    oprot.writeFieldBegin(HR_AUTO_TAG_DO_FIELD_DESC);
                    struct.hrAutoTagDO.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class updateHrAutoMaticTag_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateHrAutoMaticTag_argsTupleScheme getScheme() {
                return new updateHrAutoMaticTag_argsTupleScheme();
            }
        }

        private static class updateHrAutoMaticTag_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateHrAutoMaticTag_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, updateHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHrAutoTagDO()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetHrAutoTagDO()) {
                    struct.hrAutoTagDO.write(oprot);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, updateHrAutoMaticTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.hrAutoTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolHrAutomaticTagDO();
                    struct.hrAutoTagDO.read(iprot);
                    struct.setHrAutoTagDOIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class updateHrAutoMaticTag_result implements org.apache.thrift.TBase<updateHrAutoMaticTag_result, updateHrAutoMaticTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateHrAutoMaticTag_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateHrAutoMaticTag_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateHrAutoMaticTag_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateHrAutoMaticTag_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateHrAutoMaticTag_result.class, metaDataMap);
        }

        public updateHrAutoMaticTag_result() {
        }

        public updateHrAutoMaticTag_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public updateHrAutoMaticTag_result(updateHrAutoMaticTag_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public updateHrAutoMaticTag_result deepCopy() {
            return new updateHrAutoMaticTag_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public updateHrAutoMaticTag_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public updateHrAutoMaticTag_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof updateHrAutoMaticTag_result)
                return this.equals((updateHrAutoMaticTag_result)that);
            return false;
        }

        public boolean equals(updateHrAutoMaticTag_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(updateHrAutoMaticTag_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("updateHrAutoMaticTag_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class updateHrAutoMaticTag_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateHrAutoMaticTag_resultStandardScheme getScheme() {
                return new updateHrAutoMaticTag_resultStandardScheme();
            }
        }

        private static class updateHrAutoMaticTag_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateHrAutoMaticTag_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, updateHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, updateHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class updateHrAutoMaticTag_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateHrAutoMaticTag_resultTupleScheme getScheme() {
                return new updateHrAutoMaticTag_resultTupleScheme();
            }
        }

        private static class updateHrAutoMaticTag_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateHrAutoMaticTag_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, updateHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, updateHrAutoMaticTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getHrAutoMaticTagList_args implements org.apache.thrift.TBase<getHrAutoMaticTagList_args, getHrAutoMaticTagList_args._Fields>, java.io.Serializable, Cloneable, Comparable<getHrAutoMaticTagList_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getHrAutoMaticTagList_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField PAGE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("page_number", org.apache.thrift.protocol.TType.I32, (short)3);
        private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("page_size", org.apache.thrift.protocol.TType.I32, (short)4);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getHrAutoMaticTagList_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getHrAutoMaticTagList_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public int page_number; // required
        public int page_size; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            PAGE_NUMBER((short)3, "page_number"),
            PAGE_SIZE((short)4, "page_size");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // PAGE_NUMBER
                        return PAGE_NUMBER;
                    case 4: // PAGE_SIZE
                        return PAGE_SIZE;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private static final int __PAGE_NUMBER_ISSET_ID = 2;
        private static final int __PAGE_SIZE_ISSET_ID = 3;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.PAGE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("page_number", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("page_size", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getHrAutoMaticTagList_args.class, metaDataMap);
        }

        public getHrAutoMaticTagList_args() {
        }

        public getHrAutoMaticTagList_args(
                int hr_id,
                int company_id,
                int page_number,
                int page_size)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.page_number = page_number;
            setPage_numberIsSet(true);
            this.page_size = page_size;
            setPage_sizeIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getHrAutoMaticTagList_args(getHrAutoMaticTagList_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            this.page_number = other.page_number;
            this.page_size = other.page_size;
        }

        public getHrAutoMaticTagList_args deepCopy() {
            return new getHrAutoMaticTagList_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            setPage_numberIsSet(false);
            this.page_number = 0;
            setPage_sizeIsSet(false);
            this.page_size = 0;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public getHrAutoMaticTagList_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public getHrAutoMaticTagList_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getPage_number() {
            return this.page_number;
        }

        public getHrAutoMaticTagList_args setPage_number(int page_number) {
            this.page_number = page_number;
            setPage_numberIsSet(true);
            return this;
        }

        public void unsetPage_number() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID);
        }

        /** Returns true if field page_number is set (has been assigned a value) and false otherwise */
        public boolean isSetPage_number() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID);
        }

        public void setPage_numberIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID, value);
        }

        public int getPage_size() {
            return this.page_size;
        }

        public getHrAutoMaticTagList_args setPage_size(int page_size) {
            this.page_size = page_size;
            setPage_sizeIsSet(true);
            return this;
        }

        public void unsetPage_size() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
        }

        /** Returns true if field page_size is set (has been assigned a value) and false otherwise */
        public boolean isSetPage_size() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
        }

        public void setPage_sizeIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case PAGE_NUMBER:
                    if (value == null) {
                        unsetPage_number();
                    } else {
                        setPage_number((java.lang.Integer)value);
                    }
                    break;

                case PAGE_SIZE:
                    if (value == null) {
                        unsetPage_size();
                    } else {
                        setPage_size((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case PAGE_NUMBER:
                    return getPage_number();

                case PAGE_SIZE:
                    return getPage_size();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case PAGE_NUMBER:
                    return isSetPage_number();
                case PAGE_SIZE:
                    return isSetPage_size();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getHrAutoMaticTagList_args)
                return this.equals((getHrAutoMaticTagList_args)that);
            return false;
        }

        public boolean equals(getHrAutoMaticTagList_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_page_number = true;
            boolean that_present_page_number = true;
            if (this_present_page_number || that_present_page_number) {
                if (!(this_present_page_number && that_present_page_number))
                    return false;
                if (this.page_number != that.page_number)
                    return false;
            }

            boolean this_present_page_size = true;
            boolean that_present_page_size = true;
            if (this_present_page_size || that_present_page_size) {
                if (!(this_present_page_size && that_present_page_size))
                    return false;
                if (this.page_size != that.page_size)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + page_number;

            hashCode = hashCode * 8191 + page_size;

            return hashCode;
        }

        @Override
        public int compareTo(getHrAutoMaticTagList_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetPage_number()).compareTo(other.isSetPage_number());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetPage_number()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_number, other.page_number);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetPage_size()).compareTo(other.isSetPage_size());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetPage_size()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_size, other.page_size);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getHrAutoMaticTagList_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("page_number:");
            sb.append(this.page_number);
            first = false;
            if (!first) sb.append(", ");
            sb.append("page_size:");
            sb.append(this.page_size);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getHrAutoMaticTagList_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagList_argsStandardScheme getScheme() {
                return new getHrAutoMaticTagList_argsStandardScheme();
            }
        }

        private static class getHrAutoMaticTagList_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getHrAutoMaticTagList_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getHrAutoMaticTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // PAGE_NUMBER
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.page_number = iprot.readI32();
                                struct.setPage_numberIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 4: // PAGE_SIZE
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.page_size = iprot.readI32();
                                struct.setPage_sizeIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getHrAutoMaticTagList_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(PAGE_NUMBER_FIELD_DESC);
                oprot.writeI32(struct.page_number);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
                oprot.writeI32(struct.page_size);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getHrAutoMaticTagList_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagList_argsTupleScheme getScheme() {
                return new getHrAutoMaticTagList_argsTupleScheme();
            }
        }

        private static class getHrAutoMaticTagList_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getHrAutoMaticTagList_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetPage_number()) {
                    optionals.set(2);
                }
                if (struct.isSetPage_size()) {
                    optionals.set(3);
                }
                oprot.writeBitSet(optionals, 4);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetPage_number()) {
                    oprot.writeI32(struct.page_number);
                }
                if (struct.isSetPage_size()) {
                    oprot.writeI32(struct.page_size);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(4);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.page_number = iprot.readI32();
                    struct.setPage_numberIsSet(true);
                }
                if (incoming.get(3)) {
                    struct.page_size = iprot.readI32();
                    struct.setPage_sizeIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getHrAutoMaticTagList_result implements org.apache.thrift.TBase<getHrAutoMaticTagList_result, getHrAutoMaticTagList_result._Fields>, java.io.Serializable, Cloneable, Comparable<getHrAutoMaticTagList_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getHrAutoMaticTagList_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getHrAutoMaticTagList_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getHrAutoMaticTagList_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getHrAutoMaticTagList_result.class, metaDataMap);
        }

        public getHrAutoMaticTagList_result() {
        }

        public getHrAutoMaticTagList_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getHrAutoMaticTagList_result(getHrAutoMaticTagList_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public getHrAutoMaticTagList_result deepCopy() {
            return new getHrAutoMaticTagList_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public getHrAutoMaticTagList_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public getHrAutoMaticTagList_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getHrAutoMaticTagList_result)
                return this.equals((getHrAutoMaticTagList_result)that);
            return false;
        }

        public boolean equals(getHrAutoMaticTagList_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(getHrAutoMaticTagList_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getHrAutoMaticTagList_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getHrAutoMaticTagList_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagList_resultStandardScheme getScheme() {
                return new getHrAutoMaticTagList_resultStandardScheme();
            }
        }

        private static class getHrAutoMaticTagList_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getHrAutoMaticTagList_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getHrAutoMaticTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getHrAutoMaticTagList_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getHrAutoMaticTagList_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagList_resultTupleScheme getScheme() {
                return new getHrAutoMaticTagList_resultTupleScheme();
            }
        }

        private static class getHrAutoMaticTagList_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getHrAutoMaticTagList_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getHrAutoMaticTagSingle_args implements org.apache.thrift.TBase<getHrAutoMaticTagSingle_args, getHrAutoMaticTagSingle_args._Fields>, java.io.Serializable, Cloneable, Comparable<getHrAutoMaticTagSingle_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getHrAutoMaticTagSingle_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)3);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getHrAutoMaticTagSingle_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getHrAutoMaticTagSingle_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public int id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            ID((short)3, "id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // ID
                        return ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private static final int __ID_ISSET_ID = 2;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getHrAutoMaticTagSingle_args.class, metaDataMap);
        }

        public getHrAutoMaticTagSingle_args() {
        }

        public getHrAutoMaticTagSingle_args(
                int hr_id,
                int company_id,
                int id)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.id = id;
            setIdIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getHrAutoMaticTagSingle_args(getHrAutoMaticTagSingle_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            this.id = other.id;
        }

        public getHrAutoMaticTagSingle_args deepCopy() {
            return new getHrAutoMaticTagSingle_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            setIdIsSet(false);
            this.id = 0;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public getHrAutoMaticTagSingle_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public getHrAutoMaticTagSingle_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getId() {
            return this.id;
        }

        public getHrAutoMaticTagSingle_args setId(int id) {
            this.id = id;
            setIdIsSet(true);
            return this;
        }

        public void unsetId() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
        }

        /** Returns true if field id is set (has been assigned a value) and false otherwise */
        public boolean isSetId() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
        }

        public void setIdIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case ID:
                    if (value == null) {
                        unsetId();
                    } else {
                        setId((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case ID:
                    return getId();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case ID:
                    return isSetId();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getHrAutoMaticTagSingle_args)
                return this.equals((getHrAutoMaticTagSingle_args)that);
            return false;
        }

        public boolean equals(getHrAutoMaticTagSingle_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_id = true;
            boolean that_present_id = true;
            if (this_present_id || that_present_id) {
                if (!(this_present_id && that_present_id))
                    return false;
                if (this.id != that.id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + id;

            return hashCode;
        }

        @Override
        public int compareTo(getHrAutoMaticTagSingle_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetId()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getHrAutoMaticTagSingle_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("id:");
            sb.append(this.id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getHrAutoMaticTagSingle_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagSingle_argsStandardScheme getScheme() {
                return new getHrAutoMaticTagSingle_argsStandardScheme();
            }
        }

        private static class getHrAutoMaticTagSingle_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getHrAutoMaticTagSingle_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getHrAutoMaticTagSingle_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.id = iprot.readI32();
                                struct.setIdIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getHrAutoMaticTagSingle_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(ID_FIELD_DESC);
                oprot.writeI32(struct.id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getHrAutoMaticTagSingle_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagSingle_argsTupleScheme getScheme() {
                return new getHrAutoMaticTagSingle_argsTupleScheme();
            }
        }

        private static class getHrAutoMaticTagSingle_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getHrAutoMaticTagSingle_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagSingle_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetId()) {
                    optionals.set(2);
                }
                oprot.writeBitSet(optionals, 3);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetId()) {
                    oprot.writeI32(struct.id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagSingle_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(3);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.id = iprot.readI32();
                    struct.setIdIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getHrAutoMaticTagSingle_result implements org.apache.thrift.TBase<getHrAutoMaticTagSingle_result, getHrAutoMaticTagSingle_result._Fields>, java.io.Serializable, Cloneable, Comparable<getHrAutoMaticTagSingle_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getHrAutoMaticTagSingle_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getHrAutoMaticTagSingle_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getHrAutoMaticTagSingle_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getHrAutoMaticTagSingle_result.class, metaDataMap);
        }

        public getHrAutoMaticTagSingle_result() {
        }

        public getHrAutoMaticTagSingle_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getHrAutoMaticTagSingle_result(getHrAutoMaticTagSingle_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public getHrAutoMaticTagSingle_result deepCopy() {
            return new getHrAutoMaticTagSingle_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public getHrAutoMaticTagSingle_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public getHrAutoMaticTagSingle_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getHrAutoMaticTagSingle_result)
                return this.equals((getHrAutoMaticTagSingle_result)that);
            return false;
        }

        public boolean equals(getHrAutoMaticTagSingle_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(getHrAutoMaticTagSingle_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getHrAutoMaticTagSingle_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getHrAutoMaticTagSingle_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagSingle_resultStandardScheme getScheme() {
                return new getHrAutoMaticTagSingle_resultStandardScheme();
            }
        }

        private static class getHrAutoMaticTagSingle_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getHrAutoMaticTagSingle_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getHrAutoMaticTagSingle_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getHrAutoMaticTagSingle_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getHrAutoMaticTagSingle_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getHrAutoMaticTagSingle_resultTupleScheme getScheme() {
                return new getHrAutoMaticTagSingle_resultTupleScheme();
            }
        }

        private static class getHrAutoMaticTagSingle_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getHrAutoMaticTagSingle_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagSingle_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getHrAutoMaticTagSingle_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getCompanyTagList_args implements org.apache.thrift.TBase<getCompanyTagList_args, getCompanyTagList_args._Fields>, java.io.Serializable, Cloneable, Comparable<getCompanyTagList_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCompanyTagList_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField PAGE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("page_number", org.apache.thrift.protocol.TType.I32, (short)3);
        private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("page_size", org.apache.thrift.protocol.TType.I32, (short)4);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCompanyTagList_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCompanyTagList_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public int page_number; // required
        public int page_size; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            PAGE_NUMBER((short)3, "page_number"),
            PAGE_SIZE((short)4, "page_size");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // PAGE_NUMBER
                        return PAGE_NUMBER;
                    case 4: // PAGE_SIZE
                        return PAGE_SIZE;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private static final int __PAGE_NUMBER_ISSET_ID = 2;
        private static final int __PAGE_SIZE_ISSET_ID = 3;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.PAGE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("page_number", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("page_size", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCompanyTagList_args.class, metaDataMap);
        }

        public getCompanyTagList_args() {
        }

        public getCompanyTagList_args(
                int hr_id,
                int company_id,
                int page_number,
                int page_size)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.page_number = page_number;
            setPage_numberIsSet(true);
            this.page_size = page_size;
            setPage_sizeIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getCompanyTagList_args(getCompanyTagList_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            this.page_number = other.page_number;
            this.page_size = other.page_size;
        }

        public getCompanyTagList_args deepCopy() {
            return new getCompanyTagList_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            setPage_numberIsSet(false);
            this.page_number = 0;
            setPage_sizeIsSet(false);
            this.page_size = 0;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public getCompanyTagList_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public getCompanyTagList_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getPage_number() {
            return this.page_number;
        }

        public getCompanyTagList_args setPage_number(int page_number) {
            this.page_number = page_number;
            setPage_numberIsSet(true);
            return this;
        }

        public void unsetPage_number() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID);
        }

        /** Returns true if field page_number is set (has been assigned a value) and false otherwise */
        public boolean isSetPage_number() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID);
        }

        public void setPage_numberIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_NUMBER_ISSET_ID, value);
        }

        public int getPage_size() {
            return this.page_size;
        }

        public getCompanyTagList_args setPage_size(int page_size) {
            this.page_size = page_size;
            setPage_sizeIsSet(true);
            return this;
        }

        public void unsetPage_size() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
        }

        /** Returns true if field page_size is set (has been assigned a value) and false otherwise */
        public boolean isSetPage_size() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
        }

        public void setPage_sizeIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case PAGE_NUMBER:
                    if (value == null) {
                        unsetPage_number();
                    } else {
                        setPage_number((java.lang.Integer)value);
                    }
                    break;

                case PAGE_SIZE:
                    if (value == null) {
                        unsetPage_size();
                    } else {
                        setPage_size((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case PAGE_NUMBER:
                    return getPage_number();

                case PAGE_SIZE:
                    return getPage_size();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case PAGE_NUMBER:
                    return isSetPage_number();
                case PAGE_SIZE:
                    return isSetPage_size();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getCompanyTagList_args)
                return this.equals((getCompanyTagList_args)that);
            return false;
        }

        public boolean equals(getCompanyTagList_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_page_number = true;
            boolean that_present_page_number = true;
            if (this_present_page_number || that_present_page_number) {
                if (!(this_present_page_number && that_present_page_number))
                    return false;
                if (this.page_number != that.page_number)
                    return false;
            }

            boolean this_present_page_size = true;
            boolean that_present_page_size = true;
            if (this_present_page_size || that_present_page_size) {
                if (!(this_present_page_size && that_present_page_size))
                    return false;
                if (this.page_size != that.page_size)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + page_number;

            hashCode = hashCode * 8191 + page_size;

            return hashCode;
        }

        @Override
        public int compareTo(getCompanyTagList_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetPage_number()).compareTo(other.isSetPage_number());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetPage_number()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_number, other.page_number);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetPage_size()).compareTo(other.isSetPage_size());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetPage_size()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_size, other.page_size);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getCompanyTagList_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("page_number:");
            sb.append(this.page_number);
            first = false;
            if (!first) sb.append(", ");
            sb.append("page_size:");
            sb.append(this.page_size);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getCompanyTagList_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyTagList_argsStandardScheme getScheme() {
                return new getCompanyTagList_argsStandardScheme();
            }
        }

        private static class getCompanyTagList_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCompanyTagList_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getCompanyTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // PAGE_NUMBER
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.page_number = iprot.readI32();
                                struct.setPage_numberIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 4: // PAGE_SIZE
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.page_size = iprot.readI32();
                                struct.setPage_sizeIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getCompanyTagList_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(PAGE_NUMBER_FIELD_DESC);
                oprot.writeI32(struct.page_number);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
                oprot.writeI32(struct.page_size);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getCompanyTagList_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyTagList_argsTupleScheme getScheme() {
                return new getCompanyTagList_argsTupleScheme();
            }
        }

        private static class getCompanyTagList_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCompanyTagList_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getCompanyTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetPage_number()) {
                    optionals.set(2);
                }
                if (struct.isSetPage_size()) {
                    optionals.set(3);
                }
                oprot.writeBitSet(optionals, 4);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetPage_number()) {
                    oprot.writeI32(struct.page_number);
                }
                if (struct.isSetPage_size()) {
                    oprot.writeI32(struct.page_size);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getCompanyTagList_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(4);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.page_number = iprot.readI32();
                    struct.setPage_numberIsSet(true);
                }
                if (incoming.get(3)) {
                    struct.page_size = iprot.readI32();
                    struct.setPage_sizeIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getCompanyTagList_result implements org.apache.thrift.TBase<getCompanyTagList_result, getCompanyTagList_result._Fields>, java.io.Serializable, Cloneable, Comparable<getCompanyTagList_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCompanyTagList_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCompanyTagList_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCompanyTagList_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCompanyTagList_result.class, metaDataMap);
        }

        public getCompanyTagList_result() {
        }

        public getCompanyTagList_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getCompanyTagList_result(getCompanyTagList_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public getCompanyTagList_result deepCopy() {
            return new getCompanyTagList_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public getCompanyTagList_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public getCompanyTagList_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getCompanyTagList_result)
                return this.equals((getCompanyTagList_result)that);
            return false;
        }

        public boolean equals(getCompanyTagList_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(getCompanyTagList_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getCompanyTagList_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getCompanyTagList_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyTagList_resultStandardScheme getScheme() {
                return new getCompanyTagList_resultStandardScheme();
            }
        }

        private static class getCompanyTagList_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCompanyTagList_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getCompanyTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getCompanyTagList_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getCompanyTagList_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyTagList_resultTupleScheme getScheme() {
                return new getCompanyTagList_resultTupleScheme();
            }
        }

        private static class getCompanyTagList_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCompanyTagList_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getCompanyTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getCompanyTagList_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class deleteCompanyTagByIds_args implements org.apache.thrift.TBase<deleteCompanyTagByIds_args, deleteCompanyTagByIds_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteCompanyTagByIds_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteCompanyTagByIds_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField COMPANY_TAG_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("company_tag_ids", org.apache.thrift.protocol.TType.LIST, (short)3);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteCompanyTagByIds_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteCompanyTagByIds_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public java.util.List<java.lang.Integer> company_tag_ids; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            COMPANY_TAG_IDS((short)3, "company_tag_ids");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // COMPANY_TAG_IDS
                        return COMPANY_TAG_IDS;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_TAG_IDS, new org.apache.thrift.meta_data.FieldMetaData("company_tag_ids", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteCompanyTagByIds_args.class, metaDataMap);
        }

        public deleteCompanyTagByIds_args() {
        }

        public deleteCompanyTagByIds_args(
                int hr_id,
                int company_id,
                java.util.List<java.lang.Integer> company_tag_ids)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.company_tag_ids = company_tag_ids;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public deleteCompanyTagByIds_args(deleteCompanyTagByIds_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            if (other.isSetCompany_tag_ids()) {
                java.util.List<java.lang.Integer> __this__company_tag_ids = new java.util.ArrayList<java.lang.Integer>(other.company_tag_ids);
                this.company_tag_ids = __this__company_tag_ids;
            }
        }

        public deleteCompanyTagByIds_args deepCopy() {
            return new deleteCompanyTagByIds_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            this.company_tag_ids = null;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public deleteCompanyTagByIds_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public deleteCompanyTagByIds_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getCompany_tag_idsSize() {
            return (this.company_tag_ids == null) ? 0 : this.company_tag_ids.size();
        }

        public java.util.Iterator<java.lang.Integer> getCompany_tag_idsIterator() {
            return (this.company_tag_ids == null) ? null : this.company_tag_ids.iterator();
        }

        public void addToCompany_tag_ids(int elem) {
            if (this.company_tag_ids == null) {
                this.company_tag_ids = new java.util.ArrayList<java.lang.Integer>();
            }
            this.company_tag_ids.add(elem);
        }

        public java.util.List<java.lang.Integer> getCompany_tag_ids() {
            return this.company_tag_ids;
        }

        public deleteCompanyTagByIds_args setCompany_tag_ids(java.util.List<java.lang.Integer> company_tag_ids) {
            this.company_tag_ids = company_tag_ids;
            return this;
        }

        public void unsetCompany_tag_ids() {
            this.company_tag_ids = null;
        }

        /** Returns true if field company_tag_ids is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_tag_ids() {
            return this.company_tag_ids != null;
        }

        public void setCompany_tag_idsIsSet(boolean value) {
            if (!value) {
                this.company_tag_ids = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_TAG_IDS:
                    if (value == null) {
                        unsetCompany_tag_ids();
                    } else {
                        setCompany_tag_ids((java.util.List<java.lang.Integer>)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case COMPANY_TAG_IDS:
                    return getCompany_tag_ids();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case COMPANY_TAG_IDS:
                    return isSetCompany_tag_ids();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof deleteCompanyTagByIds_args)
                return this.equals((deleteCompanyTagByIds_args)that);
            return false;
        }

        public boolean equals(deleteCompanyTagByIds_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_company_tag_ids = true && this.isSetCompany_tag_ids();
            boolean that_present_company_tag_ids = true && that.isSetCompany_tag_ids();
            if (this_present_company_tag_ids || that_present_company_tag_ids) {
                if (!(this_present_company_tag_ids && that_present_company_tag_ids))
                    return false;
                if (!this.company_tag_ids.equals(that.company_tag_ids))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + ((isSetCompany_tag_ids()) ? 131071 : 524287);
            if (isSetCompany_tag_ids())
                hashCode = hashCode * 8191 + company_tag_ids.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(deleteCompanyTagByIds_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_tag_ids()).compareTo(other.isSetCompany_tag_ids());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_tag_ids()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_tag_ids, other.company_tag_ids);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteCompanyTagByIds_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_tag_ids:");
            if (this.company_tag_ids == null) {
                sb.append("null");
            } else {
                sb.append(this.company_tag_ids);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class deleteCompanyTagByIds_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteCompanyTagByIds_argsStandardScheme getScheme() {
                return new deleteCompanyTagByIds_argsStandardScheme();
            }
        }

        private static class deleteCompanyTagByIds_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteCompanyTagByIds_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, deleteCompanyTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // COMPANY_TAG_IDS
                            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                                {
                                    org.apache.thrift.protocol.TList _list350 = iprot.readListBegin();
                                    struct.company_tag_ids = new java.util.ArrayList<java.lang.Integer>(_list350.size);
                                    int _elem351;
                                    for (int _i352 = 0; _i352 < _list350.size; ++_i352)
                                    {
                                        _elem351 = iprot.readI32();
                                        struct.company_tag_ids.add(_elem351);
                                    }
                                    iprot.readListEnd();
                                }
                                struct.setCompany_tag_idsIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, deleteCompanyTagByIds_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                if (struct.company_tag_ids != null) {
                    oprot.writeFieldBegin(COMPANY_TAG_IDS_FIELD_DESC);
                    {
                        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.company_tag_ids.size()));
                        for (int _iter353 : struct.company_tag_ids)
                        {
                            oprot.writeI32(_iter353);
                        }
                        oprot.writeListEnd();
                    }
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class deleteCompanyTagByIds_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteCompanyTagByIds_argsTupleScheme getScheme() {
                return new deleteCompanyTagByIds_argsTupleScheme();
            }
        }

        private static class deleteCompanyTagByIds_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteCompanyTagByIds_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, deleteCompanyTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetCompany_tag_ids()) {
                    optionals.set(2);
                }
                oprot.writeBitSet(optionals, 3);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetCompany_tag_ids()) {
                    {
                        oprot.writeI32(struct.company_tag_ids.size());
                        for (int _iter354 : struct.company_tag_ids)
                        {
                            oprot.writeI32(_iter354);
                        }
                    }
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, deleteCompanyTagByIds_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(3);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    {
                        org.apache.thrift.protocol.TList _list355 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
                        struct.company_tag_ids = new java.util.ArrayList<java.lang.Integer>(_list355.size);
                        int _elem356;
                        for (int _i357 = 0; _i357 < _list355.size; ++_i357)
                        {
                            _elem356 = iprot.readI32();
                            struct.company_tag_ids.add(_elem356);
                        }
                    }
                    struct.setCompany_tag_idsIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class deleteCompanyTagByIds_result implements org.apache.thrift.TBase<deleteCompanyTagByIds_result, deleteCompanyTagByIds_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteCompanyTagByIds_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteCompanyTagByIds_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteCompanyTagByIds_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteCompanyTagByIds_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteCompanyTagByIds_result.class, metaDataMap);
        }

        public deleteCompanyTagByIds_result() {
        }

        public deleteCompanyTagByIds_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public deleteCompanyTagByIds_result(deleteCompanyTagByIds_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public deleteCompanyTagByIds_result deepCopy() {
            return new deleteCompanyTagByIds_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public deleteCompanyTagByIds_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public deleteCompanyTagByIds_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof deleteCompanyTagByIds_result)
                return this.equals((deleteCompanyTagByIds_result)that);
            return false;
        }

        public boolean equals(deleteCompanyTagByIds_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(deleteCompanyTagByIds_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteCompanyTagByIds_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class deleteCompanyTagByIds_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteCompanyTagByIds_resultStandardScheme getScheme() {
                return new deleteCompanyTagByIds_resultStandardScheme();
            }
        }

        private static class deleteCompanyTagByIds_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteCompanyTagByIds_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, deleteCompanyTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, deleteCompanyTagByIds_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class deleteCompanyTagByIds_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public deleteCompanyTagByIds_resultTupleScheme getScheme() {
                return new deleteCompanyTagByIds_resultTupleScheme();
            }
        }

        private static class deleteCompanyTagByIds_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteCompanyTagByIds_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, deleteCompanyTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, deleteCompanyTagByIds_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getCompanyIdInfo_args implements org.apache.thrift.TBase<getCompanyIdInfo_args, getCompanyIdInfo_args._Fields>, java.io.Serializable, Cloneable, Comparable<getCompanyIdInfo_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCompanyIdInfo_args");

        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)1);
        private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
        private static final org.apache.thrift.protocol.TField COMPANY_TAG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_tag_id", org.apache.thrift.protocol.TType.I32, (short)3);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCompanyIdInfo_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCompanyIdInfo_argsTupleSchemeFactory();

        public int hr_id; // required
        public int company_id; // required
        public int company_tag_id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            HR_ID((short)1, "hr_id"),
            COMPANY_ID((short)2, "company_id"),
            COMPANY_TAG_ID((short)3, "company_tag_id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // HR_ID
                        return HR_ID;
                    case 2: // COMPANY_ID
                        return COMPANY_ID;
                    case 3: // COMPANY_TAG_ID
                        return COMPANY_TAG_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private static final int __COMPANY_ID_ISSET_ID = 1;
        private static final int __COMPANY_TAG_ID_ISSET_ID = 2;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            tmpMap.put(_Fields.COMPANY_TAG_ID, new org.apache.thrift.meta_data.FieldMetaData("company_tag_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCompanyIdInfo_args.class, metaDataMap);
        }

        public getCompanyIdInfo_args() {
        }

        public getCompanyIdInfo_args(
                int hr_id,
                int company_id,
                int company_tag_id)
        {
            this();
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            this.company_id = company_id;
            setCompany_idIsSet(true);
            this.company_tag_id = company_tag_id;
            setCompany_tag_idIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getCompanyIdInfo_args(getCompanyIdInfo_args other) {
            __isset_bitfield = other.__isset_bitfield;
            this.hr_id = other.hr_id;
            this.company_id = other.company_id;
            this.company_tag_id = other.company_tag_id;
        }

        public getCompanyIdInfo_args deepCopy() {
            return new getCompanyIdInfo_args(this);
        }

        @Override
        public void clear() {
            setHr_idIsSet(false);
            this.hr_id = 0;
            setCompany_idIsSet(false);
            this.company_id = 0;
            setCompany_tag_idIsSet(false);
            this.company_tag_id = 0;
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public getCompanyIdInfo_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public int getCompany_id() {
            return this.company_id;
        }

        public getCompanyIdInfo_args setCompany_id(int company_id) {
            this.company_id = company_id;
            setCompany_idIsSet(true);
            return this;
        }

        public void unsetCompany_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
        }

        public void setCompany_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
        }

        public int getCompany_tag_id() {
            return this.company_tag_id;
        }

        public getCompanyIdInfo_args setCompany_tag_id(int company_tag_id) {
            this.company_tag_id = company_tag_id;
            setCompany_tag_idIsSet(true);
            return this;
        }

        public void unsetCompany_tag_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_TAG_ID_ISSET_ID);
        }

        /** Returns true if field company_tag_id is set (has been assigned a value) and false otherwise */
        public boolean isSetCompany_tag_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_TAG_ID_ISSET_ID);
        }

        public void setCompany_tag_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_TAG_ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_ID:
                    if (value == null) {
                        unsetCompany_id();
                    } else {
                        setCompany_id((java.lang.Integer)value);
                    }
                    break;

                case COMPANY_TAG_ID:
                    if (value == null) {
                        unsetCompany_tag_id();
                    } else {
                        setCompany_tag_id((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case HR_ID:
                    return getHr_id();

                case COMPANY_ID:
                    return getCompany_id();

                case COMPANY_TAG_ID:
                    return getCompany_tag_id();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case HR_ID:
                    return isSetHr_id();
                case COMPANY_ID:
                    return isSetCompany_id();
                case COMPANY_TAG_ID:
                    return isSetCompany_tag_id();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getCompanyIdInfo_args)
                return this.equals((getCompanyIdInfo_args)that);
            return false;
        }

        public boolean equals(getCompanyIdInfo_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            boolean this_present_company_id = true;
            boolean that_present_company_id = true;
            if (this_present_company_id || that_present_company_id) {
                if (!(this_present_company_id && that_present_company_id))
                    return false;
                if (this.company_id != that.company_id)
                    return false;
            }

            boolean this_present_company_tag_id = true;
            boolean that_present_company_tag_id = true;
            if (this_present_company_tag_id || that_present_company_tag_id) {
                if (!(this_present_company_tag_id && that_present_company_tag_id))
                    return false;
                if (this.company_tag_id != that.company_tag_id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + hr_id;

            hashCode = hashCode * 8191 + company_id;

            hashCode = hashCode * 8191 + company_tag_id;

            return hashCode;
        }

        @Override
        public int compareTo(getCompanyIdInfo_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetCompany_tag_id()).compareTo(other.isSetCompany_tag_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompany_tag_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_tag_id, other.company_tag_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getCompanyIdInfo_args(");
            boolean first = true;

            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
            if (!first) sb.append(", ");
            sb.append("company_tag_id:");
            sb.append(this.company_tag_id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getCompanyIdInfo_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyIdInfo_argsStandardScheme getScheme() {
                return new getCompanyIdInfo_argsStandardScheme();
            }
        }

        private static class getCompanyIdInfo_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCompanyIdInfo_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getCompanyIdInfo_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // COMPANY_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_id = iprot.readI32();
                                struct.setCompany_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 3: // COMPANY_TAG_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.company_tag_id = iprot.readI32();
                                struct.setCompany_tag_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getCompanyIdInfo_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
                oprot.writeFieldBegin(COMPANY_TAG_ID_FIELD_DESC);
                oprot.writeI32(struct.company_tag_id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getCompanyIdInfo_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyIdInfo_argsTupleScheme getScheme() {
                return new getCompanyIdInfo_argsTupleScheme();
            }
        }

        private static class getCompanyIdInfo_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCompanyIdInfo_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getCompanyIdInfo_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetHr_id()) {
                    optionals.set(0);
                }
                if (struct.isSetCompany_id()) {
                    optionals.set(1);
                }
                if (struct.isSetCompany_tag_id()) {
                    optionals.set(2);
                }
                oprot.writeBitSet(optionals, 3);
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
                if (struct.isSetCompany_id()) {
                    oprot.writeI32(struct.company_id);
                }
                if (struct.isSetCompany_tag_id()) {
                    oprot.writeI32(struct.company_tag_id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getCompanyIdInfo_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(3);
                if (incoming.get(0)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.company_id = iprot.readI32();
                    struct.setCompany_idIsSet(true);
                }
                if (incoming.get(2)) {
                    struct.company_tag_id = iprot.readI32();
                    struct.setCompany_tag_idIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class getCompanyIdInfo_result implements org.apache.thrift.TBase<getCompanyIdInfo_result, getCompanyIdInfo_result._Fields>, java.io.Serializable, Cloneable, Comparable<getCompanyIdInfo_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCompanyIdInfo_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCompanyIdInfo_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCompanyIdInfo_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCompanyIdInfo_result.class, metaDataMap);
        }

        public getCompanyIdInfo_result() {
        }

        public getCompanyIdInfo_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public getCompanyIdInfo_result(getCompanyIdInfo_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public getCompanyIdInfo_result deepCopy() {
            return new getCompanyIdInfo_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public getCompanyIdInfo_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public getCompanyIdInfo_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof getCompanyIdInfo_result)
                return this.equals((getCompanyIdInfo_result)that);
            return false;
        }

        public boolean equals(getCompanyIdInfo_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(getCompanyIdInfo_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("getCompanyIdInfo_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class getCompanyIdInfo_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyIdInfo_resultStandardScheme getScheme() {
                return new getCompanyIdInfo_resultStandardScheme();
            }
        }

        private static class getCompanyIdInfo_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCompanyIdInfo_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, getCompanyIdInfo_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, getCompanyIdInfo_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class getCompanyIdInfo_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public getCompanyIdInfo_resultTupleScheme getScheme() {
                return new getCompanyIdInfo_resultTupleScheme();
            }
        }

        private static class getCompanyIdInfo_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCompanyIdInfo_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, getCompanyIdInfo_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, getCompanyIdInfo_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addCompanyTag_args implements org.apache.thrift.TBase<addCompanyTag_args, addCompanyTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<addCompanyTag_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addCompanyTag_args");

        private static final org.apache.thrift.protocol.TField COMPANY_TAG_DO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyTagDO", org.apache.thrift.protocol.TType.STRUCT, (short)1);
        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)2);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addCompanyTag_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addCompanyTag_argsTupleSchemeFactory();

        public com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO; // required
        public int hr_id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_TAG_DO((short)1, "companyTagDO"),
            HR_ID((short)2, "hr_id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // COMPANY_TAG_DO
                        return COMPANY_TAG_DO;
                    case 2: // HR_ID
                        return HR_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_TAG_DO, new org.apache.thrift.meta_data.FieldMetaData("companyTagDO", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO.class)));
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addCompanyTag_args.class, metaDataMap);
        }

        public addCompanyTag_args() {
        }

        public addCompanyTag_args(
                com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO,
                int hr_id)
        {
            this();
            this.companyTagDO = companyTagDO;
            this.hr_id = hr_id;
            setHr_idIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addCompanyTag_args(addCompanyTag_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyTagDO()) {
                this.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO(other.companyTagDO);
            }
            this.hr_id = other.hr_id;
        }

        public addCompanyTag_args deepCopy() {
            return new addCompanyTag_args(this);
        }

        @Override
        public void clear() {
            this.companyTagDO = null;
            setHr_idIsSet(false);
            this.hr_id = 0;
        }

        public com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO getCompanyTagDO() {
            return this.companyTagDO;
        }

        public addCompanyTag_args setCompanyTagDO(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO) {
            this.companyTagDO = companyTagDO;
            return this;
        }

        public void unsetCompanyTagDO() {
            this.companyTagDO = null;
        }

        /** Returns true if field companyTagDO is set (has been assigned a value) and false otherwise */
        public boolean isSetCompanyTagDO() {
            return this.companyTagDO != null;
        }

        public void setCompanyTagDOIsSet(boolean value) {
            if (!value) {
                this.companyTagDO = null;
            }
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public addCompanyTag_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case COMPANY_TAG_DO:
                    if (value == null) {
                        unsetCompanyTagDO();
                    } else {
                        setCompanyTagDO((com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO)value);
                    }
                    break;

                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_TAG_DO:
                    return getCompanyTagDO();

                case HR_ID:
                    return getHr_id();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_TAG_DO:
                    return isSetCompanyTagDO();
                case HR_ID:
                    return isSetHr_id();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addCompanyTag_args)
                return this.equals((addCompanyTag_args)that);
            return false;
        }

        public boolean equals(addCompanyTag_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyTagDO = true && this.isSetCompanyTagDO();
            boolean that_present_companyTagDO = true && that.isSetCompanyTagDO();
            if (this_present_companyTagDO || that_present_companyTagDO) {
                if (!(this_present_companyTagDO && that_present_companyTagDO))
                    return false;
                if (!this.companyTagDO.equals(that.companyTagDO))
                    return false;
            }

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyTagDO()) ? 131071 : 524287);
            if (isSetCompanyTagDO())
                hashCode = hashCode * 8191 + companyTagDO.hashCode();

            hashCode = hashCode * 8191 + hr_id;

            return hashCode;
        }

        @Override
        public int compareTo(addCompanyTag_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyTagDO()).compareTo(other.isSetCompanyTagDO());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyTagDO()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyTagDO, other.companyTagDO);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addCompanyTag_args(");
            boolean first = true;

            sb.append("companyTagDO:");
            if (this.companyTagDO == null) {
                sb.append("null");
            } else {
                sb.append(this.companyTagDO);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyTagDO != null) {
                companyTagDO.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addCompanyTag_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addCompanyTag_argsStandardScheme getScheme() {
                return new addCompanyTag_argsStandardScheme();
            }
        }

        private static class addCompanyTag_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addCompanyTag_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_TAG_DO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO();
                                struct.companyTagDO.read(iprot);
                                struct.setCompanyTagDOIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addCompanyTag_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyTagDO != null) {
                    oprot.writeFieldBegin(COMPANY_TAG_DO_FIELD_DESC);
                    struct.companyTagDO.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addCompanyTag_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addCompanyTag_argsTupleScheme getScheme() {
                return new addCompanyTag_argsTupleScheme();
            }
        }

        private static class addCompanyTag_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addCompanyTag_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyTagDO()) {
                    optionals.set(0);
                }
                if (struct.isSetHr_id()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetCompanyTagDO()) {
                    struct.companyTagDO.write(oprot);
                }
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO();
                    struct.companyTagDO.read(iprot);
                    struct.setCompanyTagDOIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class addCompanyTag_result implements org.apache.thrift.TBase<addCompanyTag_result, addCompanyTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<addCompanyTag_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addCompanyTag_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addCompanyTag_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addCompanyTag_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addCompanyTag_result.class, metaDataMap);
        }

        public addCompanyTag_result() {
        }

        public addCompanyTag_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public addCompanyTag_result(addCompanyTag_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public addCompanyTag_result deepCopy() {
            return new addCompanyTag_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public addCompanyTag_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public addCompanyTag_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof addCompanyTag_result)
                return this.equals((addCompanyTag_result)that);
            return false;
        }

        public boolean equals(addCompanyTag_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(addCompanyTag_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("addCompanyTag_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class addCompanyTag_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addCompanyTag_resultStandardScheme getScheme() {
                return new addCompanyTag_resultStandardScheme();
            }
        }

        private static class addCompanyTag_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addCompanyTag_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, addCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, addCompanyTag_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class addCompanyTag_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public addCompanyTag_resultTupleScheme getScheme() {
                return new addCompanyTag_resultTupleScheme();
            }
        }

        private static class addCompanyTag_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addCompanyTag_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, addCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, addCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class updateCompanyTag_args implements org.apache.thrift.TBase<updateCompanyTag_args, updateCompanyTag_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateCompanyTag_args>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateCompanyTag_args");

        private static final org.apache.thrift.protocol.TField COMPANY_TAG_DO_FIELD_DESC = new org.apache.thrift.protocol.TField("companyTagDO", org.apache.thrift.protocol.TType.STRUCT, (short)1);
        private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_id", org.apache.thrift.protocol.TType.I32, (short)2);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateCompanyTag_argsStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateCompanyTag_argsTupleSchemeFactory();

        public com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO; // required
        public int hr_id; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            COMPANY_TAG_DO((short)1, "companyTagDO"),
            HR_ID((short)2, "hr_id");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 1: // COMPANY_TAG_DO
                        return COMPANY_TAG_DO;
                    case 2: // HR_ID
                        return HR_ID;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        private static final int __HR_ID_ISSET_ID = 0;
        private byte __isset_bitfield = 0;
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.COMPANY_TAG_DO, new org.apache.thrift.meta_data.FieldMetaData("companyTagDO", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO.class)));
            tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateCompanyTag_args.class, metaDataMap);
        }

        public updateCompanyTag_args() {
        }

        public updateCompanyTag_args(
                com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO,
                int hr_id)
        {
            this();
            this.companyTagDO = companyTagDO;
            this.hr_id = hr_id;
            setHr_idIsSet(true);
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public updateCompanyTag_args(updateCompanyTag_args other) {
            __isset_bitfield = other.__isset_bitfield;
            if (other.isSetCompanyTagDO()) {
                this.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO(other.companyTagDO);
            }
            this.hr_id = other.hr_id;
        }

        public updateCompanyTag_args deepCopy() {
            return new updateCompanyTag_args(this);
        }

        @Override
        public void clear() {
            this.companyTagDO = null;
            setHr_idIsSet(false);
            this.hr_id = 0;
        }

        public com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO getCompanyTagDO() {
            return this.companyTagDO;
        }

        public updateCompanyTag_args setCompanyTagDO(com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO companyTagDO) {
            this.companyTagDO = companyTagDO;
            return this;
        }

        public void unsetCompanyTagDO() {
            this.companyTagDO = null;
        }

        /** Returns true if field companyTagDO is set (has been assigned a value) and false otherwise */
        public boolean isSetCompanyTagDO() {
            return this.companyTagDO != null;
        }

        public void setCompanyTagDOIsSet(boolean value) {
            if (!value) {
                this.companyTagDO = null;
            }
        }

        public int getHr_id() {
            return this.hr_id;
        }

        public updateCompanyTag_args setHr_id(int hr_id) {
            this.hr_id = hr_id;
            setHr_idIsSet(true);
            return this;
        }

        public void unsetHr_id() {
            __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        /** Returns true if field hr_id is set (has been assigned a value) and false otherwise */
        public boolean isSetHr_id() {
            return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ID_ISSET_ID);
        }

        public void setHr_idIsSet(boolean value) {
            __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ID_ISSET_ID, value);
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case COMPANY_TAG_DO:
                    if (value == null) {
                        unsetCompanyTagDO();
                    } else {
                        setCompanyTagDO((com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO)value);
                    }
                    break;

                case HR_ID:
                    if (value == null) {
                        unsetHr_id();
                    } else {
                        setHr_id((java.lang.Integer)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case COMPANY_TAG_DO:
                    return getCompanyTagDO();

                case HR_ID:
                    return getHr_id();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case COMPANY_TAG_DO:
                    return isSetCompanyTagDO();
                case HR_ID:
                    return isSetHr_id();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof updateCompanyTag_args)
                return this.equals((updateCompanyTag_args)that);
            return false;
        }

        public boolean equals(updateCompanyTag_args that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_companyTagDO = true && this.isSetCompanyTagDO();
            boolean that_present_companyTagDO = true && that.isSetCompanyTagDO();
            if (this_present_companyTagDO || that_present_companyTagDO) {
                if (!(this_present_companyTagDO && that_present_companyTagDO))
                    return false;
                if (!this.companyTagDO.equals(that.companyTagDO))
                    return false;
            }

            boolean this_present_hr_id = true;
            boolean that_present_hr_id = true;
            if (this_present_hr_id || that_present_hr_id) {
                if (!(this_present_hr_id && that_present_hr_id))
                    return false;
                if (this.hr_id != that.hr_id)
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetCompanyTagDO()) ? 131071 : 524287);
            if (isSetCompanyTagDO())
                hashCode = hashCode * 8191 + companyTagDO.hashCode();

            hashCode = hashCode * 8191 + hr_id;

            return hashCode;
        }

        @Override
        public int compareTo(updateCompanyTag_args other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetCompanyTagDO()).compareTo(other.isSetCompanyTagDO());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetCompanyTagDO()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyTagDO, other.companyTagDO);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetHr_id()).compareTo(other.isSetHr_id());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetHr_id()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_id, other.hr_id);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("updateCompanyTag_args(");
            boolean first = true;

            sb.append("companyTagDO:");
            if (this.companyTagDO == null) {
                sb.append("null");
            } else {
                sb.append(this.companyTagDO);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("hr_id:");
            sb.append(this.hr_id);
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (companyTagDO != null) {
                companyTagDO.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
                __isset_bitfield = 0;
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class updateCompanyTag_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateCompanyTag_argsStandardScheme getScheme() {
                return new updateCompanyTag_argsStandardScheme();
            }
        }

        private static class updateCompanyTag_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateCompanyTag_args> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, updateCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 1: // COMPANY_TAG_DO
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO();
                                struct.companyTagDO.read(iprot);
                                struct.setCompanyTagDOIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 2: // HR_ID
                            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                                struct.hr_id = iprot.readI32();
                                struct.setHr_idIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, updateCompanyTag_args struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.companyTagDO != null) {
                    oprot.writeFieldBegin(COMPANY_TAG_DO_FIELD_DESC);
                    struct.companyTagDO.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldBegin(HR_ID_FIELD_DESC);
                oprot.writeI32(struct.hr_id);
                oprot.writeFieldEnd();
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class updateCompanyTag_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateCompanyTag_argsTupleScheme getScheme() {
                return new updateCompanyTag_argsTupleScheme();
            }
        }

        private static class updateCompanyTag_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateCompanyTag_args> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, updateCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetCompanyTagDO()) {
                    optionals.set(0);
                }
                if (struct.isSetHr_id()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetCompanyTagDO()) {
                    struct.companyTagDO.write(oprot);
                }
                if (struct.isSetHr_id()) {
                    oprot.writeI32(struct.hr_id);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, updateCompanyTag_args struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.companyTagDO = new com.moseeker.thrift.gen.company.struct.TalentpoolCompanyTagDO();
                    struct.companyTagDO.read(iprot);
                    struct.setCompanyTagDOIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.hr_id = iprot.readI32();
                    struct.setHr_idIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

    public static class updateCompanyTag_result implements org.apache.thrift.TBase<updateCompanyTag_result, updateCompanyTag_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateCompanyTag_result>   {
        private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateCompanyTag_result");

        private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
        private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

        private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateCompanyTag_resultStandardSchemeFactory();
        private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateCompanyTag_resultTupleSchemeFactory();

        public com.moseeker.thrift.gen.common.struct.Response success; // required
        public com.moseeker.thrift.gen.common.struct.BIZException e; // required

        /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
        public enum _Fields implements org.apache.thrift.TFieldIdEnum {
            SUCCESS((short)0, "success"),
            E((short)1, "e");

            private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

            static {
                for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                    byName.put(field.getFieldName(), field);
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, or null if its not found.
             */
            public static _Fields findByThriftId(int fieldId) {
                switch(fieldId) {
                    case 0: // SUCCESS
                        return SUCCESS;
                    case 1: // E
                        return E;
                    default:
                        return null;
                }
            }

            /**
             * Find the _Fields constant that matches fieldId, throwing an exception
             * if it is not found.
             */
            public static _Fields findByThriftIdOrThrow(int fieldId) {
                _Fields fields = findByThriftId(fieldId);
                if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
                return fields;
            }

            /**
             * Find the _Fields constant that matches name, or null if its not found.
             */
            public static _Fields findByName(java.lang.String name) {
                return byName.get(name);
            }

            private final short _thriftId;
            private final java.lang.String _fieldName;

            _Fields(short thriftId, java.lang.String fieldName) {
                _thriftId = thriftId;
                _fieldName = fieldName;
            }

            public short getThriftFieldId() {
                return _thriftId;
            }

            public java.lang.String getFieldName() {
                return _fieldName;
            }
        }

        // isset id assignments
        public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
        static {
            java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
            tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
            tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT,
                    new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.BIZException.class)));
            metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
            org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateCompanyTag_result.class, metaDataMap);
        }

        public updateCompanyTag_result() {
        }

        public updateCompanyTag_result(
                com.moseeker.thrift.gen.common.struct.Response success,
                com.moseeker.thrift.gen.common.struct.BIZException e)
        {
            this();
            this.success = success;
            this.e = e;
        }

        /**
         * Performs a deep copy on <i>other</i>.
         */
        public updateCompanyTag_result(updateCompanyTag_result other) {
            if (other.isSetSuccess()) {
                this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
            }
            if (other.isSetE()) {
                this.e = new com.moseeker.thrift.gen.common.struct.BIZException(other.e);
            }
        }

        public updateCompanyTag_result deepCopy() {
            return new updateCompanyTag_result(this);
        }

        @Override
        public void clear() {
            this.success = null;
            this.e = null;
        }

        public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
            return this.success;
        }

        public updateCompanyTag_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
            this.success = success;
            return this;
        }

        public void unsetSuccess() {
            this.success = null;
        }

        /** Returns true if field success is set (has been assigned a value) and false otherwise */
        public boolean isSetSuccess() {
            return this.success != null;
        }

        public void setSuccessIsSet(boolean value) {
            if (!value) {
                this.success = null;
            }
        }

        public com.moseeker.thrift.gen.common.struct.BIZException getE() {
            return this.e;
        }

        public updateCompanyTag_result setE(com.moseeker.thrift.gen.common.struct.BIZException e) {
            this.e = e;
            return this;
        }

        public void unsetE() {
            this.e = null;
        }

        /** Returns true if field e is set (has been assigned a value) and false otherwise */
        public boolean isSetE() {
            return this.e != null;
        }

        public void setEIsSet(boolean value) {
            if (!value) {
                this.e = null;
            }
        }

        public void setFieldValue(_Fields field, java.lang.Object value) {
            switch (field) {
                case SUCCESS:
                    if (value == null) {
                        unsetSuccess();
                    } else {
                        setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
                    }
                    break;

                case E:
                    if (value == null) {
                        unsetE();
                    } else {
                        setE((com.moseeker.thrift.gen.common.struct.BIZException)value);
                    }
                    break;

            }
        }

        public java.lang.Object getFieldValue(_Fields field) {
            switch (field) {
                case SUCCESS:
                    return getSuccess();

                case E:
                    return getE();

            }
            throw new java.lang.IllegalStateException();
        }

        /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
        public boolean isSet(_Fields field) {
            if (field == null) {
                throw new java.lang.IllegalArgumentException();
            }

            switch (field) {
                case SUCCESS:
                    return isSetSuccess();
                case E:
                    return isSetE();
            }
            throw new java.lang.IllegalStateException();
        }

        @Override
        public boolean equals(java.lang.Object that) {
            if (that == null)
                return false;
            if (that instanceof updateCompanyTag_result)
                return this.equals((updateCompanyTag_result)that);
            return false;
        }

        public boolean equals(updateCompanyTag_result that) {
            if (that == null)
                return false;
            if (this == that)
                return true;

            boolean this_present_success = true && this.isSetSuccess();
            boolean that_present_success = true && that.isSetSuccess();
            if (this_present_success || that_present_success) {
                if (!(this_present_success && that_present_success))
                    return false;
                if (!this.success.equals(that.success))
                    return false;
            }

            boolean this_present_e = true && this.isSetE();
            boolean that_present_e = true && that.isSetE();
            if (this_present_e || that_present_e) {
                if (!(this_present_e && that_present_e))
                    return false;
                if (!this.e.equals(that.e))
                    return false;
            }

            return true;
        }

        @Override
        public int hashCode() {
            int hashCode = 1;

            hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
            if (isSetSuccess())
                hashCode = hashCode * 8191 + success.hashCode();

            hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
            if (isSetE())
                hashCode = hashCode * 8191 + e.hashCode();

            return hashCode;
        }

        @Override
        public int compareTo(updateCompanyTag_result other) {
            if (!getClass().equals(other.getClass())) {
                return getClass().getName().compareTo(other.getClass().getName());
            }

            int lastComparison = 0;

            lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetSuccess()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
            if (lastComparison != 0) {
                return lastComparison;
            }
            if (isSetE()) {
                lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
                if (lastComparison != 0) {
                    return lastComparison;
                }
            }
            return 0;
        }

        public _Fields fieldForId(int fieldId) {
            return _Fields.findByThriftId(fieldId);
        }

        public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
            scheme(iprot).read(iprot, this);
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
            scheme(oprot).write(oprot, this);
        }

        @Override
        public java.lang.String toString() {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("updateCompanyTag_result(");
            boolean first = true;

            sb.append("success:");
            if (this.success == null) {
                sb.append("null");
            } else {
                sb.append(this.success);
            }
            first = false;
            if (!first) sb.append(", ");
            sb.append("e:");
            if (this.e == null) {
                sb.append("null");
            } else {
                sb.append(this.e);
            }
            first = false;
            sb.append(")");
            return sb.toString();
        }

        public void validate() throws org.apache.thrift.TException {
            // check for required fields
            // check for sub-struct validity
            if (success != null) {
                success.validate();
            }
        }

        private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
            try {
                write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
            try {
                read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
            } catch (org.apache.thrift.TException te) {
                throw new java.io.IOException(te);
            }
        }

        private static class updateCompanyTag_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateCompanyTag_resultStandardScheme getScheme() {
                return new updateCompanyTag_resultStandardScheme();
            }
        }

        private static class updateCompanyTag_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateCompanyTag_result> {

            public void read(org.apache.thrift.protocol.TProtocol iprot, updateCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TField schemeField;
                iprot.readStructBegin();
                while (true)
                {
                    schemeField = iprot.readFieldBegin();
                    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                        break;
                    }
                    switch (schemeField.id) {
                        case 0: // SUCCESS
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                                struct.success.read(iprot);
                                struct.setSuccessIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        case 1: // E
                            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                                struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                                struct.e.read(iprot);
                                struct.setEIsSet(true);
                            } else {
                                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                            }
                            break;
                        default:
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                    }
                    iprot.readFieldEnd();
                }
                iprot.readStructEnd();

                // check for required fields of primitive type, which can't be checked in the validate method
                struct.validate();
            }

            public void write(org.apache.thrift.protocol.TProtocol oprot, updateCompanyTag_result struct) throws org.apache.thrift.TException {
                struct.validate();

                oprot.writeStructBegin(STRUCT_DESC);
                if (struct.success != null) {
                    oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
                    struct.success.write(oprot);
                    oprot.writeFieldEnd();
                }
                if (struct.e != null) {
                    oprot.writeFieldBegin(E_FIELD_DESC);
                    struct.e.write(oprot);
                    oprot.writeFieldEnd();
                }
                oprot.writeFieldStop();
                oprot.writeStructEnd();
            }

        }

        private static class updateCompanyTag_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
            public updateCompanyTag_resultTupleScheme getScheme() {
                return new updateCompanyTag_resultTupleScheme();
            }
        }

        private static class updateCompanyTag_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateCompanyTag_result> {

            @Override
            public void write(org.apache.thrift.protocol.TProtocol prot, updateCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet optionals = new java.util.BitSet();
                if (struct.isSetSuccess()) {
                    optionals.set(0);
                }
                if (struct.isSetE()) {
                    optionals.set(1);
                }
                oprot.writeBitSet(optionals, 2);
                if (struct.isSetSuccess()) {
                    struct.success.write(oprot);
                }
                if (struct.isSetE()) {
                    struct.e.write(oprot);
                }
            }

            @Override
            public void read(org.apache.thrift.protocol.TProtocol prot, updateCompanyTag_result struct) throws org.apache.thrift.TException {
                org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
                java.util.BitSet incoming = iprot.readBitSet(2);
                if (incoming.get(0)) {
                    struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                    struct.success.read(iprot);
                    struct.setSuccessIsSet(true);
                }
                if (incoming.get(1)) {
                    struct.e = new com.moseeker.thrift.gen.common.struct.BIZException();
                    struct.e.read(iprot);
                    struct.setEIsSet(true);
                }
            }
        }

        private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
            return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
        }
    }

}
