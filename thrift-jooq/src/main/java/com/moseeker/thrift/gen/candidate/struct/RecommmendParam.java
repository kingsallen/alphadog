/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.candidate.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-10")
public class RecommmendParam implements org.apache.thrift.TBase<RecommmendParam, RecommmendParam._Fields>, java.io.Serializable, Cloneable, Comparable<RecommmendParam> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecommmendParam");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField REAL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("realName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("company", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RECOM_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("recomReason", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField POST_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("postUserId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField CLICK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("clickTime", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RecommmendParamStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RecommmendParamTupleSchemeFactory();

  public int id; // optional
  public java.lang.String realName; // optional
  public java.lang.String company; // optional
  public java.lang.String position; // optional
  public java.lang.String mobile; // optional
  public java.lang.String recomReason; // optional
  public int companyId; // optional
  public int postUserId; // optional
  public java.lang.String clickTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    REAL_NAME((short)2, "realName"),
    COMPANY((short)3, "company"),
    POSITION((short)4, "position"),
    MOBILE((short)5, "mobile"),
    RECOM_REASON((short)6, "recomReason"),
    COMPANY_ID((short)7, "companyId"),
    POST_USER_ID((short)8, "postUserId"),
    CLICK_TIME((short)9, "clickTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // REAL_NAME
          return REAL_NAME;
        case 3: // COMPANY
          return COMPANY;
        case 4: // POSITION
          return POSITION;
        case 5: // MOBILE
          return MOBILE;
        case 6: // RECOM_REASON
          return RECOM_REASON;
        case 7: // COMPANY_ID
          return COMPANY_ID;
        case 8: // POST_USER_ID
          return POST_USER_ID;
        case 9: // CLICK_TIME
          return CLICK_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __POSTUSERID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.REAL_NAME,_Fields.COMPANY,_Fields.POSITION,_Fields.MOBILE,_Fields.RECOM_REASON,_Fields.COMPANY_ID,_Fields.POST_USER_ID,_Fields.CLICK_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REAL_NAME, new org.apache.thrift.meta_data.FieldMetaData("realName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY, new org.apache.thrift.meta_data.FieldMetaData("company", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_REASON, new org.apache.thrift.meta_data.FieldMetaData("recomReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POST_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("postUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLICK_TIME, new org.apache.thrift.meta_data.FieldMetaData("clickTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecommmendParam.class, metaDataMap);
  }

  public RecommmendParam() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RecommmendParam(RecommmendParam other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetRealName()) {
      this.realName = other.realName;
    }
    if (other.isSetCompany()) {
      this.company = other.company;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    if (other.isSetRecomReason()) {
      this.recomReason = other.recomReason;
    }
    this.companyId = other.companyId;
    this.postUserId = other.postUserId;
    if (other.isSetClickTime()) {
      this.clickTime = other.clickTime;
    }
  }

  public RecommmendParam deepCopy() {
    return new RecommmendParam(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.realName = null;
    this.company = null;
    this.position = null;
    this.mobile = null;
    this.recomReason = null;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setPostUserIdIsSet(false);
    this.postUserId = 0;
    this.clickTime = null;
  }

  public int getId() {
    return this.id;
  }

  public RecommmendParam setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getRealName() {
    return this.realName;
  }

  public RecommmendParam setRealName(java.lang.String realName) {
    this.realName = realName;
    return this;
  }

  public void unsetRealName() {
    this.realName = null;
  }

  /** Returns true if field realName is set (has been assigned a value) and false otherwise */
  public boolean isSetRealName() {
    return this.realName != null;
  }

  public void setRealNameIsSet(boolean value) {
    if (!value) {
      this.realName = null;
    }
  }

  public java.lang.String getCompany() {
    return this.company;
  }

  public RecommmendParam setCompany(java.lang.String company) {
    this.company = company;
    return this;
  }

  public void unsetCompany() {
    this.company = null;
  }

  /** Returns true if field company is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany() {
    return this.company != null;
  }

  public void setCompanyIsSet(boolean value) {
    if (!value) {
      this.company = null;
    }
  }

  public java.lang.String getPosition() {
    return this.position;
  }

  public RecommmendParam setPosition(java.lang.String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public java.lang.String getMobile() {
    return this.mobile;
  }

  public RecommmendParam setMobile(java.lang.String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public java.lang.String getRecomReason() {
    return this.recomReason;
  }

  public RecommmendParam setRecomReason(java.lang.String recomReason) {
    this.recomReason = recomReason;
    return this;
  }

  public void unsetRecomReason() {
    this.recomReason = null;
  }

  /** Returns true if field recomReason is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomReason() {
    return this.recomReason != null;
  }

  public void setRecomReasonIsSet(boolean value) {
    if (!value) {
      this.recomReason = null;
    }
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public RecommmendParam setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getPostUserId() {
    return this.postUserId;
  }

  public RecommmendParam setPostUserId(int postUserId) {
    this.postUserId = postUserId;
    setPostUserIdIsSet(true);
    return this;
  }

  public void unsetPostUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  /** Returns true if field postUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPostUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  public void setPostUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSTUSERID_ISSET_ID, value);
  }

  public java.lang.String getClickTime() {
    return this.clickTime;
  }

  public RecommmendParam setClickTime(java.lang.String clickTime) {
    this.clickTime = clickTime;
    return this;
  }

  public void unsetClickTime() {
    this.clickTime = null;
  }

  /** Returns true if field clickTime is set (has been assigned a value) and false otherwise */
  public boolean isSetClickTime() {
    return this.clickTime != null;
  }

  public void setClickTimeIsSet(boolean value) {
    if (!value) {
      this.clickTime = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case REAL_NAME:
      if (value == null) {
        unsetRealName();
      } else {
        setRealName((java.lang.String)value);
      }
      break;

    case COMPANY:
      if (value == null) {
        unsetCompany();
      } else {
        setCompany((java.lang.String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((java.lang.String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((java.lang.String)value);
      }
      break;

    case RECOM_REASON:
      if (value == null) {
        unsetRecomReason();
      } else {
        setRecomReason((java.lang.String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case POST_USER_ID:
      if (value == null) {
        unsetPostUserId();
      } else {
        setPostUserId((java.lang.Integer)value);
      }
      break;

    case CLICK_TIME:
      if (value == null) {
        unsetClickTime();
      } else {
        setClickTime((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case REAL_NAME:
      return getRealName();

    case COMPANY:
      return getCompany();

    case POSITION:
      return getPosition();

    case MOBILE:
      return getMobile();

    case RECOM_REASON:
      return getRecomReason();

    case COMPANY_ID:
      return getCompanyId();

    case POST_USER_ID:
      return getPostUserId();

    case CLICK_TIME:
      return getClickTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case REAL_NAME:
      return isSetRealName();
    case COMPANY:
      return isSetCompany();
    case POSITION:
      return isSetPosition();
    case MOBILE:
      return isSetMobile();
    case RECOM_REASON:
      return isSetRecomReason();
    case COMPANY_ID:
      return isSetCompanyId();
    case POST_USER_ID:
      return isSetPostUserId();
    case CLICK_TIME:
      return isSetClickTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof RecommmendParam)
      return this.equals((RecommmendParam)that);
    return false;
  }

  public boolean equals(RecommmendParam that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_realName = true && this.isSetRealName();
    boolean that_present_realName = true && that.isSetRealName();
    if (this_present_realName || that_present_realName) {
      if (!(this_present_realName && that_present_realName))
        return false;
      if (!this.realName.equals(that.realName))
        return false;
    }

    boolean this_present_company = true && this.isSetCompany();
    boolean that_present_company = true && that.isSetCompany();
    if (this_present_company || that_present_company) {
      if (!(this_present_company && that_present_company))
        return false;
      if (!this.company.equals(that.company))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_recomReason = true && this.isSetRecomReason();
    boolean that_present_recomReason = true && that.isSetRecomReason();
    if (this_present_recomReason || that_present_recomReason) {
      if (!(this_present_recomReason && that_present_recomReason))
        return false;
      if (!this.recomReason.equals(that.recomReason))
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_postUserId = true && this.isSetPostUserId();
    boolean that_present_postUserId = true && that.isSetPostUserId();
    if (this_present_postUserId || that_present_postUserId) {
      if (!(this_present_postUserId && that_present_postUserId))
        return false;
      if (this.postUserId != that.postUserId)
        return false;
    }

    boolean this_present_clickTime = true && this.isSetClickTime();
    boolean that_present_clickTime = true && that.isSetClickTime();
    if (this_present_clickTime || that_present_clickTime) {
      if (!(this_present_clickTime && that_present_clickTime))
        return false;
      if (!this.clickTime.equals(that.clickTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetRealName()) ? 131071 : 524287);
    if (isSetRealName())
      hashCode = hashCode * 8191 + realName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany()) ? 131071 : 524287);
    if (isSetCompany())
      hashCode = hashCode * 8191 + company.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecomReason()) ? 131071 : 524287);
    if (isSetRecomReason())
      hashCode = hashCode * 8191 + recomReason.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetPostUserId()) ? 131071 : 524287);
    if (isSetPostUserId())
      hashCode = hashCode * 8191 + postUserId;

    hashCode = hashCode * 8191 + ((isSetClickTime()) ? 131071 : 524287);
    if (isSetClickTime())
      hashCode = hashCode * 8191 + clickTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(RecommmendParam other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRealName()).compareTo(other.isSetRealName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realName, other.realName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany()).compareTo(other.isSetCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company, other.company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomReason()).compareTo(other.isSetRecomReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomReason, other.recomReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPostUserId()).compareTo(other.isSetPostUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.postUserId, other.postUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClickTime()).compareTo(other.isSetClickTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickTime, other.clickTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("RecommmendParam(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetRealName()) {
      if (!first) sb.append(", ");
      sb.append("realName:");
      if (this.realName == null) {
        sb.append("null");
      } else {
        sb.append(this.realName);
      }
      first = false;
    }
    if (isSetCompany()) {
      if (!first) sb.append(", ");
      sb.append("company:");
      if (this.company == null) {
        sb.append("null");
      } else {
        sb.append(this.company);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetRecomReason()) {
      if (!first) sb.append(", ");
      sb.append("recomReason:");
      if (this.recomReason == null) {
        sb.append("null");
      } else {
        sb.append(this.recomReason);
      }
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetPostUserId()) {
      if (!first) sb.append(", ");
      sb.append("postUserId:");
      sb.append(this.postUserId);
      first = false;
    }
    if (isSetClickTime()) {
      if (!first) sb.append(", ");
      sb.append("clickTime:");
      if (this.clickTime == null) {
        sb.append("null");
      } else {
        sb.append(this.clickTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RecommmendParamStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RecommmendParamStandardScheme getScheme() {
      return new RecommmendParamStandardScheme();
    }
  }

  private static class RecommmendParamStandardScheme extends org.apache.thrift.scheme.StandardScheme<RecommmendParam> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RecommmendParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // REAL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.realName = iprot.readString();
              struct.setRealNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.company = iprot.readString();
              struct.setCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RECOM_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomReason = iprot.readString();
              struct.setRecomReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // POST_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.postUserId = iprot.readI32();
              struct.setPostUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CLICK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickTime = iprot.readString();
              struct.setClickTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RecommmendParam struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.realName != null) {
        if (struct.isSetRealName()) {
          oprot.writeFieldBegin(REAL_NAME_FIELD_DESC);
          oprot.writeString(struct.realName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.company != null) {
        if (struct.isSetCompany()) {
          oprot.writeFieldBegin(COMPANY_FIELD_DESC);
          oprot.writeString(struct.company);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recomReason != null) {
        if (struct.isSetRecomReason()) {
          oprot.writeFieldBegin(RECOM_REASON_FIELD_DESC);
          oprot.writeString(struct.recomReason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPostUserId()) {
        oprot.writeFieldBegin(POST_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.postUserId);
        oprot.writeFieldEnd();
      }
      if (struct.clickTime != null) {
        if (struct.isSetClickTime()) {
          oprot.writeFieldBegin(CLICK_TIME_FIELD_DESC);
          oprot.writeString(struct.clickTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RecommmendParamTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RecommmendParamTupleScheme getScheme() {
      return new RecommmendParamTupleScheme();
    }
  }

  private static class RecommmendParamTupleScheme extends org.apache.thrift.scheme.TupleScheme<RecommmendParam> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RecommmendParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetRealName()) {
        optionals.set(1);
      }
      if (struct.isSetCompany()) {
        optionals.set(2);
      }
      if (struct.isSetPosition()) {
        optionals.set(3);
      }
      if (struct.isSetMobile()) {
        optionals.set(4);
      }
      if (struct.isSetRecomReason()) {
        optionals.set(5);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(6);
      }
      if (struct.isSetPostUserId()) {
        optionals.set(7);
      }
      if (struct.isSetClickTime()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetRealName()) {
        oprot.writeString(struct.realName);
      }
      if (struct.isSetCompany()) {
        oprot.writeString(struct.company);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetRecomReason()) {
        oprot.writeString(struct.recomReason);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetPostUserId()) {
        oprot.writeI32(struct.postUserId);
      }
      if (struct.isSetClickTime()) {
        oprot.writeString(struct.clickTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RecommmendParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.realName = iprot.readString();
        struct.setRealNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.company = iprot.readString();
        struct.setCompanyIsSet(true);
      }
      if (incoming.get(3)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(5)) {
        struct.recomReason = iprot.readString();
        struct.setRecomReasonIsSet(true);
      }
      if (incoming.get(6)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.postUserId = iprot.readI32();
        struct.setPostUserIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.clickTime = iprot.readString();
        struct.setClickTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

