/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-07-24")
public class Education implements org.apache.thrift.TBase<Education, Education._Fields>, java.io.Serializable, Cloneable, Comparable<Education> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Education");

    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profile_id", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("start_date", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("end_date", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField END_UNTIL_NOW_FIELD_DESC = new org.apache.thrift.protocol.TField("end_until_now", org.apache.thrift.protocol.TType.I16, (short)5);
    private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.I32, (short)6);
    private static final org.apache.thrift.protocol.TField COLLEGE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("college_code", org.apache.thrift.protocol.TType.I32, (short)7);
    private static final org.apache.thrift.protocol.TField COLLEGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("college_name", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField COLLEGE_LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("college_logo", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField MAJOR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("major_code", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField MAJOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("major_name", org.apache.thrift.protocol.TType.STRING, (short)11);
    private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)12);
    private static final org.apache.thrift.protocol.TField IS_FULL_FIELD_DESC = new org.apache.thrift.protocol.TField("is_full", org.apache.thrift.protocol.TType.I16, (short)13);
    private static final org.apache.thrift.protocol.TField IS_UNIFIED_FIELD_DESC = new org.apache.thrift.protocol.TField("is_unified", org.apache.thrift.protocol.TType.I16, (short)14);
    private static final org.apache.thrift.protocol.TField IS_STUDY_ABROAD_FIELD_DESC = new org.apache.thrift.protocol.TField("is_study_abroad", org.apache.thrift.protocol.TType.I16, (short)15);
    private static final org.apache.thrift.protocol.TField STUDY_ABROAD_COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("study_abroad_country", org.apache.thrift.protocol.TType.STRING, (short)16);
    private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)17);
    private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)18);
    private static final org.apache.thrift.protocol.TField COUNTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("country_id", org.apache.thrift.protocol.TType.I32, (short)19);
    private static final org.apache.thrift.protocol.TField COUNTRY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("country_name", org.apache.thrift.protocol.TType.STRING, (short)20);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EducationStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EducationTupleSchemeFactory();

    public int id; // optional
    public int profile_id; // optional
    public java.lang.String start_date; // optional
    public java.lang.String end_date; // optional
    public short end_until_now; // optional
    public int degree; // optional
    public int college_code; // optional
    public java.lang.String college_name; // optional
    public java.lang.String college_logo; // optional
    public java.lang.String major_code; // optional
    public java.lang.String major_name; // optional
    public java.lang.String description; // optional
    public short is_full; // optional
    public short is_unified; // optional
    public short is_study_abroad; // optional
    public java.lang.String study_abroad_country; // optional
    public java.lang.String create_time; // optional
    public java.lang.String update_time; // optional
    public int country_id; // optional
    public java.lang.String country_name; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        ID((short)1, "id"),
        PROFILE_ID((short)2, "profile_id"),
        START_DATE((short)3, "start_date"),
        END_DATE((short)4, "end_date"),
        END_UNTIL_NOW((short)5, "end_until_now"),
        DEGREE((short)6, "degree"),
        COLLEGE_CODE((short)7, "college_code"),
        COLLEGE_NAME((short)8, "college_name"),
        COLLEGE_LOGO((short)9, "college_logo"),
        MAJOR_CODE((short)10, "major_code"),
        MAJOR_NAME((short)11, "major_name"),
        DESCRIPTION((short)12, "description"),
        IS_FULL((short)13, "is_full"),
        IS_UNIFIED((short)14, "is_unified"),
        IS_STUDY_ABROAD((short)15, "is_study_abroad"),
        STUDY_ABROAD_COUNTRY((short)16, "study_abroad_country"),
        CREATE_TIME((short)17, "create_time"),
        UPDATE_TIME((short)18, "update_time"),
        COUNTRY_ID((short)19, "country_id"),
        COUNTRY_NAME((short)20, "country_name");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // ID
                    return ID;
                case 2: // PROFILE_ID
                    return PROFILE_ID;
                case 3: // START_DATE
                    return START_DATE;
                case 4: // END_DATE
                    return END_DATE;
                case 5: // END_UNTIL_NOW
                    return END_UNTIL_NOW;
                case 6: // DEGREE
                    return DEGREE;
                case 7: // COLLEGE_CODE
                    return COLLEGE_CODE;
                case 8: // COLLEGE_NAME
                    return COLLEGE_NAME;
                case 9: // COLLEGE_LOGO
                    return COLLEGE_LOGO;
                case 10: // MAJOR_CODE
                    return MAJOR_CODE;
                case 11: // MAJOR_NAME
                    return MAJOR_NAME;
                case 12: // DESCRIPTION
                    return DESCRIPTION;
                case 13: // IS_FULL
                    return IS_FULL;
                case 14: // IS_UNIFIED
                    return IS_UNIFIED;
                case 15: // IS_STUDY_ABROAD
                    return IS_STUDY_ABROAD;
                case 16: // STUDY_ABROAD_COUNTRY
                    return STUDY_ABROAD_COUNTRY;
                case 17: // CREATE_TIME
                    return CREATE_TIME;
                case 18: // UPDATE_TIME
                    return UPDATE_TIME;
                case 19: // COUNTRY_ID
                    return COUNTRY_ID;
                case 20: // COUNTRY_NAME
                    return COUNTRY_NAME;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private static final int __PROFILE_ID_ISSET_ID = 1;
    private static final int __END_UNTIL_NOW_ISSET_ID = 2;
    private static final int __DEGREE_ISSET_ID = 3;
    private static final int __COLLEGE_CODE_ISSET_ID = 4;
    private static final int __IS_FULL_ISSET_ID = 5;
    private static final int __IS_UNIFIED_ISSET_ID = 6;
    private static final int __IS_STUDY_ABROAD_ISSET_ID = 7;
    private static final int __COUNTRY_ID_ISSET_ID = 8;
    private short __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.ID,_Fields.PROFILE_ID,_Fields.START_DATE,_Fields.END_DATE,_Fields.END_UNTIL_NOW,_Fields.DEGREE,_Fields.COLLEGE_CODE,_Fields.COLLEGE_NAME,_Fields.COLLEGE_LOGO,_Fields.MAJOR_CODE,_Fields.MAJOR_NAME,_Fields.DESCRIPTION,_Fields.IS_FULL,_Fields.IS_UNIFIED,_Fields.IS_STUDY_ABROAD,_Fields.STUDY_ABROAD_COUNTRY,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.COUNTRY_ID,_Fields.COUNTRY_NAME};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profile_id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("start_date", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("end_date", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.END_UNTIL_NOW, new org.apache.thrift.meta_data.FieldMetaData("end_until_now", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COLLEGE_CODE, new org.apache.thrift.meta_data.FieldMetaData("college_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COLLEGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("college_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COLLEGE_LOGO, new org.apache.thrift.meta_data.FieldMetaData("college_logo", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.MAJOR_CODE, new org.apache.thrift.meta_data.FieldMetaData("major_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.MAJOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("major_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.IS_FULL, new org.apache.thrift.meta_data.FieldMetaData("is_full", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.IS_UNIFIED, new org.apache.thrift.meta_data.FieldMetaData("is_unified", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.IS_STUDY_ABROAD, new org.apache.thrift.meta_data.FieldMetaData("is_study_abroad", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.STUDY_ABROAD_COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("study_abroad_country", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.COUNTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("country_id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COUNTRY_NAME, new org.apache.thrift.meta_data.FieldMetaData("country_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Education.class, metaDataMap);
    }

    public Education() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public Education(Education other) {
        __isset_bitfield = other.__isset_bitfield;
        this.id = other.id;
        this.profile_id = other.profile_id;
        if (other.isSetStart_date()) {
            this.start_date = other.start_date;
        }
        if (other.isSetEnd_date()) {
            this.end_date = other.end_date;
        }
        this.end_until_now = other.end_until_now;
        this.degree = other.degree;
        this.college_code = other.college_code;
        if (other.isSetCollege_name()) {
            this.college_name = other.college_name;
        }
        if (other.isSetCollege_logo()) {
            this.college_logo = other.college_logo;
        }
        if (other.isSetMajor_code()) {
            this.major_code = other.major_code;
        }
        if (other.isSetMajor_name()) {
            this.major_name = other.major_name;
        }
        if (other.isSetDescription()) {
            this.description = other.description;
        }
        this.is_full = other.is_full;
        this.is_unified = other.is_unified;
        this.is_study_abroad = other.is_study_abroad;
        if (other.isSetStudy_abroad_country()) {
            this.study_abroad_country = other.study_abroad_country;
        }
        if (other.isSetCreate_time()) {
            this.create_time = other.create_time;
        }
        if (other.isSetUpdate_time()) {
            this.update_time = other.update_time;
        }
        this.country_id = other.country_id;
        if (other.isSetCountry_name()) {
            this.country_name = other.country_name;
        }
    }

    public Education deepCopy() {
        return new Education(this);
    }

    @Override
    public void clear() {
        setIdIsSet(false);
        this.id = 0;
        setProfile_idIsSet(false);
        this.profile_id = 0;
        this.start_date = null;
        this.end_date = null;
        setEnd_until_nowIsSet(false);
        this.end_until_now = 0;
        setDegreeIsSet(false);
        this.degree = 0;
        setCollege_codeIsSet(false);
        this.college_code = 0;
        this.college_name = null;
        this.college_logo = null;
        this.major_code = null;
        this.major_name = null;
        this.description = null;
        setIs_fullIsSet(false);
        this.is_full = 0;
        setIs_unifiedIsSet(false);
        this.is_unified = 0;
        setIs_study_abroadIsSet(false);
        this.is_study_abroad = 0;
        this.study_abroad_country = null;
        this.create_time = null;
        this.update_time = null;
        setCountry_idIsSet(false);
        this.country_id = 0;
        this.country_name = null;
    }

    public int getId() {
        return this.id;
    }

    public Education setId(int id) {
        this.id = id;
        setIdIsSet(true);
        return this;
    }

    public void unsetId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public int getProfile_id() {
        return this.profile_id;
    }

    public Education setProfile_id(int profile_id) {
        this.profile_id = profile_id;
        setProfile_idIsSet(true);
        return this;
    }

    public void unsetProfile_id() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
    }

    /** Returns true if field profile_id is set (has been assigned a value) and false otherwise */
    public boolean isSetProfile_id() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
    }

    public void setProfile_idIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILE_ID_ISSET_ID, value);
    }

    public java.lang.String getStart_date() {
        return this.start_date;
    }

    public Education setStart_date(java.lang.String start_date) {
        this.start_date = start_date;
        return this;
    }

    public void unsetStart_date() {
        this.start_date = null;
    }

    /** Returns true if field start_date is set (has been assigned a value) and false otherwise */
    public boolean isSetStart_date() {
        return this.start_date != null;
    }

    public void setStart_dateIsSet(boolean value) {
        if (!value) {
            this.start_date = null;
        }
    }

    public java.lang.String getEnd_date() {
        return this.end_date;
    }

    public Education setEnd_date(java.lang.String end_date) {
        this.end_date = end_date;
        return this;
    }

    public void unsetEnd_date() {
        this.end_date = null;
    }

    /** Returns true if field end_date is set (has been assigned a value) and false otherwise */
    public boolean isSetEnd_date() {
        return this.end_date != null;
    }

    public void setEnd_dateIsSet(boolean value) {
        if (!value) {
            this.end_date = null;
        }
    }

    public short getEnd_until_now() {
        return this.end_until_now;
    }

    public Education setEnd_until_now(short end_until_now) {
        this.end_until_now = end_until_now;
        setEnd_until_nowIsSet(true);
        return this;
    }

    public void unsetEnd_until_now() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID);
    }

    /** Returns true if field end_until_now is set (has been assigned a value) and false otherwise */
    public boolean isSetEnd_until_now() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID);
    }

    public void setEnd_until_nowIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __END_UNTIL_NOW_ISSET_ID, value);
    }

    public int getDegree() {
        return this.degree;
    }

    public Education setDegree(int degree) {
        this.degree = degree;
        setDegreeIsSet(true);
        return this;
    }

    public void unsetDegree() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEGREE_ISSET_ID);
    }

    /** Returns true if field degree is set (has been assigned a value) and false otherwise */
    public boolean isSetDegree() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEGREE_ISSET_ID);
    }

    public void setDegreeIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEGREE_ISSET_ID, value);
    }

    public int getCollege_code() {
        return this.college_code;
    }

    public Education setCollege_code(int college_code) {
        this.college_code = college_code;
        setCollege_codeIsSet(true);
        return this;
    }

    public void unsetCollege_code() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID);
    }

    /** Returns true if field college_code is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_code() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID);
    }

    public void setCollege_codeIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID, value);
    }

    public java.lang.String getCollege_name() {
        return this.college_name;
    }

    public Education setCollege_name(java.lang.String college_name) {
        this.college_name = college_name;
        return this;
    }

    public void unsetCollege_name() {
        this.college_name = null;
    }

    /** Returns true if field college_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_name() {
        return this.college_name != null;
    }

    public void setCollege_nameIsSet(boolean value) {
        if (!value) {
            this.college_name = null;
        }
    }

    public java.lang.String getCollege_logo() {
        return this.college_logo;
    }

    public Education setCollege_logo(java.lang.String college_logo) {
        this.college_logo = college_logo;
        return this;
    }

    public void unsetCollege_logo() {
        this.college_logo = null;
    }

    /** Returns true if field college_logo is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_logo() {
        return this.college_logo != null;
    }

    public void setCollege_logoIsSet(boolean value) {
        if (!value) {
            this.college_logo = null;
        }
    }

    public java.lang.String getMajor_code() {
        return this.major_code;
    }

    public Education setMajor_code(java.lang.String major_code) {
        this.major_code = major_code;
        return this;
    }

    public void unsetMajor_code() {
        this.major_code = null;
    }

    /** Returns true if field major_code is set (has been assigned a value) and false otherwise */
    public boolean isSetMajor_code() {
        return this.major_code != null;
    }

    public void setMajor_codeIsSet(boolean value) {
        if (!value) {
            this.major_code = null;
        }
    }

    public java.lang.String getMajor_name() {
        return this.major_name;
    }

    public Education setMajor_name(java.lang.String major_name) {
        this.major_name = major_name;
        return this;
    }

    public void unsetMajor_name() {
        this.major_name = null;
    }

    /** Returns true if field major_name is set (has been assigned a value) and false otherwise */
    public boolean isSetMajor_name() {
        return this.major_name != null;
    }

    public void setMajor_nameIsSet(boolean value) {
        if (!value) {
            this.major_name = null;
        }
    }

    public java.lang.String getDescription() {
        return this.description;
    }

    public Education setDescription(java.lang.String description) {
        this.description = description;
        return this;
    }

    public void unsetDescription() {
        this.description = null;
    }

    /** Returns true if field description is set (has been assigned a value) and false otherwise */
    public boolean isSetDescription() {
        return this.description != null;
    }

    public void setDescriptionIsSet(boolean value) {
        if (!value) {
            this.description = null;
        }
    }

    public short getIs_full() {
        return this.is_full;
    }

    public Education setIs_full(short is_full) {
        this.is_full = is_full;
        setIs_fullIsSet(true);
        return this;
    }

    public void unsetIs_full() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_FULL_ISSET_ID);
    }

    /** Returns true if field is_full is set (has been assigned a value) and false otherwise */
    public boolean isSetIs_full() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_FULL_ISSET_ID);
    }

    public void setIs_fullIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_FULL_ISSET_ID, value);
    }

    public short getIs_unified() {
        return this.is_unified;
    }

    public Education setIs_unified(short is_unified) {
        this.is_unified = is_unified;
        setIs_unifiedIsSet(true);
        return this;
    }

    public void unsetIs_unified() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_UNIFIED_ISSET_ID);
    }

    /** Returns true if field is_unified is set (has been assigned a value) and false otherwise */
    public boolean isSetIs_unified() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_UNIFIED_ISSET_ID);
    }

    public void setIs_unifiedIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_UNIFIED_ISSET_ID, value);
    }

    public short getIs_study_abroad() {
        return this.is_study_abroad;
    }

    public Education setIs_study_abroad(short is_study_abroad) {
        this.is_study_abroad = is_study_abroad;
        setIs_study_abroadIsSet(true);
        return this;
    }

    public void unsetIs_study_abroad() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_STUDY_ABROAD_ISSET_ID);
    }

    /** Returns true if field is_study_abroad is set (has been assigned a value) and false otherwise */
    public boolean isSetIs_study_abroad() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_STUDY_ABROAD_ISSET_ID);
    }

    public void setIs_study_abroadIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_STUDY_ABROAD_ISSET_ID, value);
    }

    public java.lang.String getStudy_abroad_country() {
        return this.study_abroad_country;
    }

    public Education setStudy_abroad_country(java.lang.String study_abroad_country) {
        this.study_abroad_country = study_abroad_country;
        return this;
    }

    public void unsetStudy_abroad_country() {
        this.study_abroad_country = null;
    }

    /** Returns true if field study_abroad_country is set (has been assigned a value) and false otherwise */
    public boolean isSetStudy_abroad_country() {
        return this.study_abroad_country != null;
    }

    public void setStudy_abroad_countryIsSet(boolean value) {
        if (!value) {
            this.study_abroad_country = null;
        }
    }

    public java.lang.String getCreate_time() {
        return this.create_time;
    }

    public Education setCreate_time(java.lang.String create_time) {
        this.create_time = create_time;
        return this;
    }

    public void unsetCreate_time() {
        this.create_time = null;
    }

    /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
    public boolean isSetCreate_time() {
        return this.create_time != null;
    }

    public void setCreate_timeIsSet(boolean value) {
        if (!value) {
            this.create_time = null;
        }
    }

    public java.lang.String getUpdate_time() {
        return this.update_time;
    }

    public Education setUpdate_time(java.lang.String update_time) {
        this.update_time = update_time;
        return this;
    }

    public void unsetUpdate_time() {
        this.update_time = null;
    }

    /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
    public boolean isSetUpdate_time() {
        return this.update_time != null;
    }

    public void setUpdate_timeIsSet(boolean value) {
        if (!value) {
            this.update_time = null;
        }
    }

    public int getCountry_id() {
        return this.country_id;
    }

    public Education setCountry_id(int country_id) {
        this.country_id = country_id;
        setCountry_idIsSet(true);
        return this;
    }

    public void unsetCountry_id() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNTRY_ID_ISSET_ID);
    }

    /** Returns true if field country_id is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry_id() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNTRY_ID_ISSET_ID);
    }

    public void setCountry_idIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNTRY_ID_ISSET_ID, value);
    }

    public java.lang.String getCountry_name() {
        return this.country_name;
    }

    public Education setCountry_name(java.lang.String country_name) {
        this.country_name = country_name;
        return this;
    }

    public void unsetCountry_name() {
        this.country_name = null;
    }

    /** Returns true if field country_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry_name() {
        return this.country_name != null;
    }

    public void setCountry_nameIsSet(boolean value) {
        if (!value) {
            this.country_name = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case ID:
                if (value == null) {
                    unsetId();
                } else {
                    setId((java.lang.Integer)value);
                }
                break;

            case PROFILE_ID:
                if (value == null) {
                    unsetProfile_id();
                } else {
                    setProfile_id((java.lang.Integer)value);
                }
                break;

            case START_DATE:
                if (value == null) {
                    unsetStart_date();
                } else {
                    setStart_date((java.lang.String)value);
                }
                break;

            case END_DATE:
                if (value == null) {
                    unsetEnd_date();
                } else {
                    setEnd_date((java.lang.String)value);
                }
                break;

            case END_UNTIL_NOW:
                if (value == null) {
                    unsetEnd_until_now();
                } else {
                    setEnd_until_now((java.lang.Short)value);
                }
                break;

            case DEGREE:
                if (value == null) {
                    unsetDegree();
                } else {
                    setDegree((java.lang.Integer)value);
                }
                break;

            case COLLEGE_CODE:
                if (value == null) {
                    unsetCollege_code();
                } else {
                    setCollege_code((java.lang.Integer)value);
                }
                break;

            case COLLEGE_NAME:
                if (value == null) {
                    unsetCollege_name();
                } else {
                    setCollege_name((java.lang.String)value);
                }
                break;

            case COLLEGE_LOGO:
                if (value == null) {
                    unsetCollege_logo();
                } else {
                    setCollege_logo((java.lang.String)value);
                }
                break;

            case MAJOR_CODE:
                if (value == null) {
                    unsetMajor_code();
                } else {
                    setMajor_code((java.lang.String)value);
                }
                break;

            case MAJOR_NAME:
                if (value == null) {
                    unsetMajor_name();
                } else {
                    setMajor_name((java.lang.String)value);
                }
                break;

            case DESCRIPTION:
                if (value == null) {
                    unsetDescription();
                } else {
                    setDescription((java.lang.String)value);
                }
                break;

            case IS_FULL:
                if (value == null) {
                    unsetIs_full();
                } else {
                    setIs_full((java.lang.Short)value);
                }
                break;

            case IS_UNIFIED:
                if (value == null) {
                    unsetIs_unified();
                } else {
                    setIs_unified((java.lang.Short)value);
                }
                break;

            case IS_STUDY_ABROAD:
                if (value == null) {
                    unsetIs_study_abroad();
                } else {
                    setIs_study_abroad((java.lang.Short)value);
                }
                break;

            case STUDY_ABROAD_COUNTRY:
                if (value == null) {
                    unsetStudy_abroad_country();
                } else {
                    setStudy_abroad_country((java.lang.String)value);
                }
                break;

            case CREATE_TIME:
                if (value == null) {
                    unsetCreate_time();
                } else {
                    setCreate_time((java.lang.String)value);
                }
                break;

            case UPDATE_TIME:
                if (value == null) {
                    unsetUpdate_time();
                } else {
                    setUpdate_time((java.lang.String)value);
                }
                break;

            case COUNTRY_ID:
                if (value == null) {
                    unsetCountry_id();
                } else {
                    setCountry_id((java.lang.Integer)value);
                }
                break;

            case COUNTRY_NAME:
                if (value == null) {
                    unsetCountry_name();
                } else {
                    setCountry_name((java.lang.String)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case ID:
                return getId();

            case PROFILE_ID:
                return getProfile_id();

            case START_DATE:
                return getStart_date();

            case END_DATE:
                return getEnd_date();

            case END_UNTIL_NOW:
                return getEnd_until_now();

            case DEGREE:
                return getDegree();

            case COLLEGE_CODE:
                return getCollege_code();

            case COLLEGE_NAME:
                return getCollege_name();

            case COLLEGE_LOGO:
                return getCollege_logo();

            case MAJOR_CODE:
                return getMajor_code();

            case MAJOR_NAME:
                return getMajor_name();

            case DESCRIPTION:
                return getDescription();

            case IS_FULL:
                return getIs_full();

            case IS_UNIFIED:
                return getIs_unified();

            case IS_STUDY_ABROAD:
                return getIs_study_abroad();

            case STUDY_ABROAD_COUNTRY:
                return getStudy_abroad_country();

            case CREATE_TIME:
                return getCreate_time();

            case UPDATE_TIME:
                return getUpdate_time();

            case COUNTRY_ID:
                return getCountry_id();

            case COUNTRY_NAME:
                return getCountry_name();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case ID:
                return isSetId();
            case PROFILE_ID:
                return isSetProfile_id();
            case START_DATE:
                return isSetStart_date();
            case END_DATE:
                return isSetEnd_date();
            case END_UNTIL_NOW:
                return isSetEnd_until_now();
            case DEGREE:
                return isSetDegree();
            case COLLEGE_CODE:
                return isSetCollege_code();
            case COLLEGE_NAME:
                return isSetCollege_name();
            case COLLEGE_LOGO:
                return isSetCollege_logo();
            case MAJOR_CODE:
                return isSetMajor_code();
            case MAJOR_NAME:
                return isSetMajor_name();
            case DESCRIPTION:
                return isSetDescription();
            case IS_FULL:
                return isSetIs_full();
            case IS_UNIFIED:
                return isSetIs_unified();
            case IS_STUDY_ABROAD:
                return isSetIs_study_abroad();
            case STUDY_ABROAD_COUNTRY:
                return isSetStudy_abroad_country();
            case CREATE_TIME:
                return isSetCreate_time();
            case UPDATE_TIME:
                return isSetUpdate_time();
            case COUNTRY_ID:
                return isSetCountry_id();
            case COUNTRY_NAME:
                return isSetCountry_name();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof Education)
            return this.equals((Education)that);
        return false;
    }

    public boolean equals(Education that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_id = true && this.isSetId();
        boolean that_present_id = true && that.isSetId();
        if (this_present_id || that_present_id) {
            if (!(this_present_id && that_present_id))
                return false;
            if (this.id != that.id)
                return false;
        }

        boolean this_present_profile_id = true && this.isSetProfile_id();
        boolean that_present_profile_id = true && that.isSetProfile_id();
        if (this_present_profile_id || that_present_profile_id) {
            if (!(this_present_profile_id && that_present_profile_id))
                return false;
            if (this.profile_id != that.profile_id)
                return false;
        }

        boolean this_present_start_date = true && this.isSetStart_date();
        boolean that_present_start_date = true && that.isSetStart_date();
        if (this_present_start_date || that_present_start_date) {
            if (!(this_present_start_date && that_present_start_date))
                return false;
            if (!this.start_date.equals(that.start_date))
                return false;
        }

        boolean this_present_end_date = true && this.isSetEnd_date();
        boolean that_present_end_date = true && that.isSetEnd_date();
        if (this_present_end_date || that_present_end_date) {
            if (!(this_present_end_date && that_present_end_date))
                return false;
            if (!this.end_date.equals(that.end_date))
                return false;
        }

        boolean this_present_end_until_now = true && this.isSetEnd_until_now();
        boolean that_present_end_until_now = true && that.isSetEnd_until_now();
        if (this_present_end_until_now || that_present_end_until_now) {
            if (!(this_present_end_until_now && that_present_end_until_now))
                return false;
            if (this.end_until_now != that.end_until_now)
                return false;
        }

        boolean this_present_degree = true && this.isSetDegree();
        boolean that_present_degree = true && that.isSetDegree();
        if (this_present_degree || that_present_degree) {
            if (!(this_present_degree && that_present_degree))
                return false;
            if (this.degree != that.degree)
                return false;
        }

        boolean this_present_college_code = true && this.isSetCollege_code();
        boolean that_present_college_code = true && that.isSetCollege_code();
        if (this_present_college_code || that_present_college_code) {
            if (!(this_present_college_code && that_present_college_code))
                return false;
            if (this.college_code != that.college_code)
                return false;
        }

        boolean this_present_college_name = true && this.isSetCollege_name();
        boolean that_present_college_name = true && that.isSetCollege_name();
        if (this_present_college_name || that_present_college_name) {
            if (!(this_present_college_name && that_present_college_name))
                return false;
            if (!this.college_name.equals(that.college_name))
                return false;
        }

        boolean this_present_college_logo = true && this.isSetCollege_logo();
        boolean that_present_college_logo = true && that.isSetCollege_logo();
        if (this_present_college_logo || that_present_college_logo) {
            if (!(this_present_college_logo && that_present_college_logo))
                return false;
            if (!this.college_logo.equals(that.college_logo))
                return false;
        }

        boolean this_present_major_code = true && this.isSetMajor_code();
        boolean that_present_major_code = true && that.isSetMajor_code();
        if (this_present_major_code || that_present_major_code) {
            if (!(this_present_major_code && that_present_major_code))
                return false;
            if (!this.major_code.equals(that.major_code))
                return false;
        }

        boolean this_present_major_name = true && this.isSetMajor_name();
        boolean that_present_major_name = true && that.isSetMajor_name();
        if (this_present_major_name || that_present_major_name) {
            if (!(this_present_major_name && that_present_major_name))
                return false;
            if (!this.major_name.equals(that.major_name))
                return false;
        }

        boolean this_present_description = true && this.isSetDescription();
        boolean that_present_description = true && that.isSetDescription();
        if (this_present_description || that_present_description) {
            if (!(this_present_description && that_present_description))
                return false;
            if (!this.description.equals(that.description))
                return false;
        }

        boolean this_present_is_full = true && this.isSetIs_full();
        boolean that_present_is_full = true && that.isSetIs_full();
        if (this_present_is_full || that_present_is_full) {
            if (!(this_present_is_full && that_present_is_full))
                return false;
            if (this.is_full != that.is_full)
                return false;
        }

        boolean this_present_is_unified = true && this.isSetIs_unified();
        boolean that_present_is_unified = true && that.isSetIs_unified();
        if (this_present_is_unified || that_present_is_unified) {
            if (!(this_present_is_unified && that_present_is_unified))
                return false;
            if (this.is_unified != that.is_unified)
                return false;
        }

        boolean this_present_is_study_abroad = true && this.isSetIs_study_abroad();
        boolean that_present_is_study_abroad = true && that.isSetIs_study_abroad();
        if (this_present_is_study_abroad || that_present_is_study_abroad) {
            if (!(this_present_is_study_abroad && that_present_is_study_abroad))
                return false;
            if (this.is_study_abroad != that.is_study_abroad)
                return false;
        }

        boolean this_present_study_abroad_country = true && this.isSetStudy_abroad_country();
        boolean that_present_study_abroad_country = true && that.isSetStudy_abroad_country();
        if (this_present_study_abroad_country || that_present_study_abroad_country) {
            if (!(this_present_study_abroad_country && that_present_study_abroad_country))
                return false;
            if (!this.study_abroad_country.equals(that.study_abroad_country))
                return false;
        }

        boolean this_present_create_time = true && this.isSetCreate_time();
        boolean that_present_create_time = true && that.isSetCreate_time();
        if (this_present_create_time || that_present_create_time) {
            if (!(this_present_create_time && that_present_create_time))
                return false;
            if (!this.create_time.equals(that.create_time))
                return false;
        }

        boolean this_present_update_time = true && this.isSetUpdate_time();
        boolean that_present_update_time = true && that.isSetUpdate_time();
        if (this_present_update_time || that_present_update_time) {
            if (!(this_present_update_time && that_present_update_time))
                return false;
            if (!this.update_time.equals(that.update_time))
                return false;
        }

        boolean this_present_country_id = true && this.isSetCountry_id();
        boolean that_present_country_id = true && that.isSetCountry_id();
        if (this_present_country_id || that_present_country_id) {
            if (!(this_present_country_id && that_present_country_id))
                return false;
            if (this.country_id != that.country_id)
                return false;
        }

        boolean this_present_country_name = true && this.isSetCountry_name();
        boolean that_present_country_name = true && that.isSetCountry_name();
        if (this_present_country_name || that_present_country_name) {
            if (!(this_present_country_name && that_present_country_name))
                return false;
            if (!this.country_name.equals(that.country_name))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
        if (isSetId())
            hashCode = hashCode * 8191 + id;

        hashCode = hashCode * 8191 + ((isSetProfile_id()) ? 131071 : 524287);
        if (isSetProfile_id())
            hashCode = hashCode * 8191 + profile_id;

        hashCode = hashCode * 8191 + ((isSetStart_date()) ? 131071 : 524287);
        if (isSetStart_date())
            hashCode = hashCode * 8191 + start_date.hashCode();

        hashCode = hashCode * 8191 + ((isSetEnd_date()) ? 131071 : 524287);
        if (isSetEnd_date())
            hashCode = hashCode * 8191 + end_date.hashCode();

        hashCode = hashCode * 8191 + ((isSetEnd_until_now()) ? 131071 : 524287);
        if (isSetEnd_until_now())
            hashCode = hashCode * 8191 + end_until_now;

        hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
        if (isSetDegree())
            hashCode = hashCode * 8191 + degree;

        hashCode = hashCode * 8191 + ((isSetCollege_code()) ? 131071 : 524287);
        if (isSetCollege_code())
            hashCode = hashCode * 8191 + college_code;

        hashCode = hashCode * 8191 + ((isSetCollege_name()) ? 131071 : 524287);
        if (isSetCollege_name())
            hashCode = hashCode * 8191 + college_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetCollege_logo()) ? 131071 : 524287);
        if (isSetCollege_logo())
            hashCode = hashCode * 8191 + college_logo.hashCode();

        hashCode = hashCode * 8191 + ((isSetMajor_code()) ? 131071 : 524287);
        if (isSetMajor_code())
            hashCode = hashCode * 8191 + major_code.hashCode();

        hashCode = hashCode * 8191 + ((isSetMajor_name()) ? 131071 : 524287);
        if (isSetMajor_name())
            hashCode = hashCode * 8191 + major_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
        if (isSetDescription())
            hashCode = hashCode * 8191 + description.hashCode();

        hashCode = hashCode * 8191 + ((isSetIs_full()) ? 131071 : 524287);
        if (isSetIs_full())
            hashCode = hashCode * 8191 + is_full;

        hashCode = hashCode * 8191 + ((isSetIs_unified()) ? 131071 : 524287);
        if (isSetIs_unified())
            hashCode = hashCode * 8191 + is_unified;

        hashCode = hashCode * 8191 + ((isSetIs_study_abroad()) ? 131071 : 524287);
        if (isSetIs_study_abroad())
            hashCode = hashCode * 8191 + is_study_abroad;

        hashCode = hashCode * 8191 + ((isSetStudy_abroad_country()) ? 131071 : 524287);
        if (isSetStudy_abroad_country())
            hashCode = hashCode * 8191 + study_abroad_country.hashCode();

        hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
        if (isSetCreate_time())
            hashCode = hashCode * 8191 + create_time.hashCode();

        hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
        if (isSetUpdate_time())
            hashCode = hashCode * 8191 + update_time.hashCode();

        hashCode = hashCode * 8191 + ((isSetCountry_id()) ? 131071 : 524287);
        if (isSetCountry_id())
            hashCode = hashCode * 8191 + country_id;

        hashCode = hashCode * 8191 + ((isSetCountry_name()) ? 131071 : 524287);
        if (isSetCountry_name())
            hashCode = hashCode * 8191 + country_name.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(Education other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetProfile_id()).compareTo(other.isSetProfile_id());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProfile_id()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profile_id, other.profile_id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetStart_date()).compareTo(other.isSetStart_date());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStart_date()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start_date, other.start_date);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEnd_date()).compareTo(other.isSetEnd_date());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEnd_date()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_date, other.end_date);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEnd_until_now()).compareTo(other.isSetEnd_until_now());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEnd_until_now()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_until_now, other.end_until_now);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDegree()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCollege_code()).compareTo(other.isSetCollege_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_code, other.college_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCollege_name()).compareTo(other.isSetCollege_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_name, other.college_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCollege_logo()).compareTo(other.isSetCollege_logo());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_logo()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_logo, other.college_logo);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMajor_code()).compareTo(other.isSetMajor_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMajor_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major_code, other.major_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMajor_name()).compareTo(other.isSetMajor_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMajor_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major_name, other.major_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDescription()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIs_full()).compareTo(other.isSetIs_full());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIs_full()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_full, other.is_full);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIs_unified()).compareTo(other.isSetIs_unified());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIs_unified()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_unified, other.is_unified);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIs_study_abroad()).compareTo(other.isSetIs_study_abroad());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIs_study_abroad()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_study_abroad, other.is_study_abroad);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetStudy_abroad_country()).compareTo(other.isSetStudy_abroad_country());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStudy_abroad_country()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.study_abroad_country, other.study_abroad_country);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCreate_time()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUpdate_time()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCountry_id()).compareTo(other.isSetCountry_id());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCountry_id()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country_id, other.country_id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCountry_name()).compareTo(other.isSetCountry_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCountry_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country_name, other.country_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("Education(");
        boolean first = true;

        if (isSetId()) {
            sb.append("id:");
            sb.append(this.id);
            first = false;
        }
        if (isSetProfile_id()) {
            if (!first) sb.append(", ");
            sb.append("profile_id:");
            sb.append(this.profile_id);
            first = false;
        }
        if (isSetStart_date()) {
            if (!first) sb.append(", ");
            sb.append("start_date:");
            if (this.start_date == null) {
                sb.append("null");
            } else {
                sb.append(this.start_date);
            }
            first = false;
        }
        if (isSetEnd_date()) {
            if (!first) sb.append(", ");
            sb.append("end_date:");
            if (this.end_date == null) {
                sb.append("null");
            } else {
                sb.append(this.end_date);
            }
            first = false;
        }
        if (isSetEnd_until_now()) {
            if (!first) sb.append(", ");
            sb.append("end_until_now:");
            sb.append(this.end_until_now);
            first = false;
        }
        if (isSetDegree()) {
            if (!first) sb.append(", ");
            sb.append("degree:");
            sb.append(this.degree);
            first = false;
        }
        if (isSetCollege_code()) {
            if (!first) sb.append(", ");
            sb.append("college_code:");
            sb.append(this.college_code);
            first = false;
        }
        if (isSetCollege_name()) {
            if (!first) sb.append(", ");
            sb.append("college_name:");
            if (this.college_name == null) {
                sb.append("null");
            } else {
                sb.append(this.college_name);
            }
            first = false;
        }
        if (isSetCollege_logo()) {
            if (!first) sb.append(", ");
            sb.append("college_logo:");
            if (this.college_logo == null) {
                sb.append("null");
            } else {
                sb.append(this.college_logo);
            }
            first = false;
        }
        if (isSetMajor_code()) {
            if (!first) sb.append(", ");
            sb.append("major_code:");
            if (this.major_code == null) {
                sb.append("null");
            } else {
                sb.append(this.major_code);
            }
            first = false;
        }
        if (isSetMajor_name()) {
            if (!first) sb.append(", ");
            sb.append("major_name:");
            if (this.major_name == null) {
                sb.append("null");
            } else {
                sb.append(this.major_name);
            }
            first = false;
        }
        if (isSetDescription()) {
            if (!first) sb.append(", ");
            sb.append("description:");
            if (this.description == null) {
                sb.append("null");
            } else {
                sb.append(this.description);
            }
            first = false;
        }
        if (isSetIs_full()) {
            if (!first) sb.append(", ");
            sb.append("is_full:");
            sb.append(this.is_full);
            first = false;
        }
        if (isSetIs_unified()) {
            if (!first) sb.append(", ");
            sb.append("is_unified:");
            sb.append(this.is_unified);
            first = false;
        }
        if (isSetIs_study_abroad()) {
            if (!first) sb.append(", ");
            sb.append("is_study_abroad:");
            sb.append(this.is_study_abroad);
            first = false;
        }
        if (isSetStudy_abroad_country()) {
            if (!first) sb.append(", ");
            sb.append("study_abroad_country:");
            if (this.study_abroad_country == null) {
                sb.append("null");
            } else {
                sb.append(this.study_abroad_country);
            }
            first = false;
        }
        if (isSetCreate_time()) {
            if (!first) sb.append(", ");
            sb.append("create_time:");
            if (this.create_time == null) {
                sb.append("null");
            } else {
                sb.append(this.create_time);
            }
            first = false;
        }
        if (isSetUpdate_time()) {
            if (!first) sb.append(", ");
            sb.append("update_time:");
            if (this.update_time == null) {
                sb.append("null");
            } else {
                sb.append(this.update_time);
            }
            first = false;
        }
        if (isSetCountry_id()) {
            if (!first) sb.append(", ");
            sb.append("country_id:");
            sb.append(this.country_id);
            first = false;
        }
        if (isSetCountry_name()) {
            if (!first) sb.append(", ");
            sb.append("country_name:");
            if (this.country_name == null) {
                sb.append("null");
            } else {
                sb.append(this.country_name);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class EducationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EducationStandardScheme getScheme() {
            return new EducationStandardScheme();
        }
    }

    private static class EducationStandardScheme extends org.apache.thrift.scheme.StandardScheme<Education> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, Education struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.id = iprot.readI32();
                            struct.setIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // PROFILE_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.profile_id = iprot.readI32();
                            struct.setProfile_idIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // START_DATE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.start_date = iprot.readString();
                            struct.setStart_dateIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // END_DATE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.end_date = iprot.readString();
                            struct.setEnd_dateIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // END_UNTIL_NOW
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.end_until_now = iprot.readI16();
                            struct.setEnd_until_nowIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // DEGREE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.degree = iprot.readI32();
                            struct.setDegreeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // COLLEGE_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.college_code = iprot.readI32();
                            struct.setCollege_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // COLLEGE_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.college_name = iprot.readString();
                            struct.setCollege_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // COLLEGE_LOGO
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.college_logo = iprot.readString();
                            struct.setCollege_logoIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 10: // MAJOR_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.major_code = iprot.readString();
                            struct.setMajor_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 11: // MAJOR_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.major_name = iprot.readString();
                            struct.setMajor_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 12: // DESCRIPTION
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.description = iprot.readString();
                            struct.setDescriptionIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 13: // IS_FULL
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.is_full = iprot.readI16();
                            struct.setIs_fullIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 14: // IS_UNIFIED
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.is_unified = iprot.readI16();
                            struct.setIs_unifiedIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 15: // IS_STUDY_ABROAD
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.is_study_abroad = iprot.readI16();
                            struct.setIs_study_abroadIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 16: // STUDY_ABROAD_COUNTRY
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.study_abroad_country = iprot.readString();
                            struct.setStudy_abroad_countryIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 17: // CREATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.create_time = iprot.readString();
                            struct.setCreate_timeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 18: // UPDATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.update_time = iprot.readString();
                            struct.setUpdate_timeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 19: // COUNTRY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.country_id = iprot.readI32();
                            struct.setCountry_idIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 20: // COUNTRY_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.country_name = iprot.readString();
                            struct.setCountry_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, Education struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetId()) {
                oprot.writeFieldBegin(ID_FIELD_DESC);
                oprot.writeI32(struct.id);
                oprot.writeFieldEnd();
            }
            if (struct.isSetProfile_id()) {
                oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
                oprot.writeI32(struct.profile_id);
                oprot.writeFieldEnd();
            }
            if (struct.start_date != null) {
                if (struct.isSetStart_date()) {
                    oprot.writeFieldBegin(START_DATE_FIELD_DESC);
                    oprot.writeString(struct.start_date);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.end_date != null) {
                if (struct.isSetEnd_date()) {
                    oprot.writeFieldBegin(END_DATE_FIELD_DESC);
                    oprot.writeString(struct.end_date);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetEnd_until_now()) {
                oprot.writeFieldBegin(END_UNTIL_NOW_FIELD_DESC);
                oprot.writeI16(struct.end_until_now);
                oprot.writeFieldEnd();
            }
            if (struct.isSetDegree()) {
                oprot.writeFieldBegin(DEGREE_FIELD_DESC);
                oprot.writeI32(struct.degree);
                oprot.writeFieldEnd();
            }
            if (struct.isSetCollege_code()) {
                oprot.writeFieldBegin(COLLEGE_CODE_FIELD_DESC);
                oprot.writeI32(struct.college_code);
                oprot.writeFieldEnd();
            }
            if (struct.college_name != null) {
                if (struct.isSetCollege_name()) {
                    oprot.writeFieldBegin(COLLEGE_NAME_FIELD_DESC);
                    oprot.writeString(struct.college_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.college_logo != null) {
                if (struct.isSetCollege_logo()) {
                    oprot.writeFieldBegin(COLLEGE_LOGO_FIELD_DESC);
                    oprot.writeString(struct.college_logo);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.major_code != null) {
                if (struct.isSetMajor_code()) {
                    oprot.writeFieldBegin(MAJOR_CODE_FIELD_DESC);
                    oprot.writeString(struct.major_code);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.major_name != null) {
                if (struct.isSetMajor_name()) {
                    oprot.writeFieldBegin(MAJOR_NAME_FIELD_DESC);
                    oprot.writeString(struct.major_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.description != null) {
                if (struct.isSetDescription()) {
                    oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
                    oprot.writeString(struct.description);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetIs_full()) {
                oprot.writeFieldBegin(IS_FULL_FIELD_DESC);
                oprot.writeI16(struct.is_full);
                oprot.writeFieldEnd();
            }
            if (struct.isSetIs_unified()) {
                oprot.writeFieldBegin(IS_UNIFIED_FIELD_DESC);
                oprot.writeI16(struct.is_unified);
                oprot.writeFieldEnd();
            }
            if (struct.isSetIs_study_abroad()) {
                oprot.writeFieldBegin(IS_STUDY_ABROAD_FIELD_DESC);
                oprot.writeI16(struct.is_study_abroad);
                oprot.writeFieldEnd();
            }
            if (struct.study_abroad_country != null) {
                if (struct.isSetStudy_abroad_country()) {
                    oprot.writeFieldBegin(STUDY_ABROAD_COUNTRY_FIELD_DESC);
                    oprot.writeString(struct.study_abroad_country);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.create_time != null) {
                if (struct.isSetCreate_time()) {
                    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.create_time);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.update_time != null) {
                if (struct.isSetUpdate_time()) {
                    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.update_time);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetCountry_id()) {
                oprot.writeFieldBegin(COUNTRY_ID_FIELD_DESC);
                oprot.writeI32(struct.country_id);
                oprot.writeFieldEnd();
            }
            if (struct.country_name != null) {
                if (struct.isSetCountry_name()) {
                    oprot.writeFieldBegin(COUNTRY_NAME_FIELD_DESC);
                    oprot.writeString(struct.country_name);
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class EducationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EducationTupleScheme getScheme() {
            return new EducationTupleScheme();
        }
    }

    private static class EducationTupleScheme extends org.apache.thrift.scheme.TupleScheme<Education> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, Education struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetId()) {
                optionals.set(0);
            }
            if (struct.isSetProfile_id()) {
                optionals.set(1);
            }
            if (struct.isSetStart_date()) {
                optionals.set(2);
            }
            if (struct.isSetEnd_date()) {
                optionals.set(3);
            }
            if (struct.isSetEnd_until_now()) {
                optionals.set(4);
            }
            if (struct.isSetDegree()) {
                optionals.set(5);
            }
            if (struct.isSetCollege_code()) {
                optionals.set(6);
            }
            if (struct.isSetCollege_name()) {
                optionals.set(7);
            }
            if (struct.isSetCollege_logo()) {
                optionals.set(8);
            }
            if (struct.isSetMajor_code()) {
                optionals.set(9);
            }
            if (struct.isSetMajor_name()) {
                optionals.set(10);
            }
            if (struct.isSetDescription()) {
                optionals.set(11);
            }
            if (struct.isSetIs_full()) {
                optionals.set(12);
            }
            if (struct.isSetIs_unified()) {
                optionals.set(13);
            }
            if (struct.isSetIs_study_abroad()) {
                optionals.set(14);
            }
            if (struct.isSetStudy_abroad_country()) {
                optionals.set(15);
            }
            if (struct.isSetCreate_time()) {
                optionals.set(16);
            }
            if (struct.isSetUpdate_time()) {
                optionals.set(17);
            }
            if (struct.isSetCountry_id()) {
                optionals.set(18);
            }
            if (struct.isSetCountry_name()) {
                optionals.set(19);
            }
            oprot.writeBitSet(optionals, 20);
            if (struct.isSetId()) {
                oprot.writeI32(struct.id);
            }
            if (struct.isSetProfile_id()) {
                oprot.writeI32(struct.profile_id);
            }
            if (struct.isSetStart_date()) {
                oprot.writeString(struct.start_date);
            }
            if (struct.isSetEnd_date()) {
                oprot.writeString(struct.end_date);
            }
            if (struct.isSetEnd_until_now()) {
                oprot.writeI16(struct.end_until_now);
            }
            if (struct.isSetDegree()) {
                oprot.writeI32(struct.degree);
            }
            if (struct.isSetCollege_code()) {
                oprot.writeI32(struct.college_code);
            }
            if (struct.isSetCollege_name()) {
                oprot.writeString(struct.college_name);
            }
            if (struct.isSetCollege_logo()) {
                oprot.writeString(struct.college_logo);
            }
            if (struct.isSetMajor_code()) {
                oprot.writeString(struct.major_code);
            }
            if (struct.isSetMajor_name()) {
                oprot.writeString(struct.major_name);
            }
            if (struct.isSetDescription()) {
                oprot.writeString(struct.description);
            }
            if (struct.isSetIs_full()) {
                oprot.writeI16(struct.is_full);
            }
            if (struct.isSetIs_unified()) {
                oprot.writeI16(struct.is_unified);
            }
            if (struct.isSetIs_study_abroad()) {
                oprot.writeI16(struct.is_study_abroad);
            }
            if (struct.isSetStudy_abroad_country()) {
                oprot.writeString(struct.study_abroad_country);
            }
            if (struct.isSetCreate_time()) {
                oprot.writeString(struct.create_time);
            }
            if (struct.isSetUpdate_time()) {
                oprot.writeString(struct.update_time);
            }
            if (struct.isSetCountry_id()) {
                oprot.writeI32(struct.country_id);
            }
            if (struct.isSetCountry_name()) {
                oprot.writeString(struct.country_name);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, Education struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(20);
            if (incoming.get(0)) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.profile_id = iprot.readI32();
                struct.setProfile_idIsSet(true);
            }
            if (incoming.get(2)) {
                struct.start_date = iprot.readString();
                struct.setStart_dateIsSet(true);
            }
            if (incoming.get(3)) {
                struct.end_date = iprot.readString();
                struct.setEnd_dateIsSet(true);
            }
            if (incoming.get(4)) {
                struct.end_until_now = iprot.readI16();
                struct.setEnd_until_nowIsSet(true);
            }
            if (incoming.get(5)) {
                struct.degree = iprot.readI32();
                struct.setDegreeIsSet(true);
            }
            if (incoming.get(6)) {
                struct.college_code = iprot.readI32();
                struct.setCollege_codeIsSet(true);
            }
            if (incoming.get(7)) {
                struct.college_name = iprot.readString();
                struct.setCollege_nameIsSet(true);
            }
            if (incoming.get(8)) {
                struct.college_logo = iprot.readString();
                struct.setCollege_logoIsSet(true);
            }
            if (incoming.get(9)) {
                struct.major_code = iprot.readString();
                struct.setMajor_codeIsSet(true);
            }
            if (incoming.get(10)) {
                struct.major_name = iprot.readString();
                struct.setMajor_nameIsSet(true);
            }
            if (incoming.get(11)) {
                struct.description = iprot.readString();
                struct.setDescriptionIsSet(true);
            }
            if (incoming.get(12)) {
                struct.is_full = iprot.readI16();
                struct.setIs_fullIsSet(true);
            }
            if (incoming.get(13)) {
                struct.is_unified = iprot.readI16();
                struct.setIs_unifiedIsSet(true);
            }
            if (incoming.get(14)) {
                struct.is_study_abroad = iprot.readI16();
                struct.setIs_study_abroadIsSet(true);
            }
            if (incoming.get(15)) {
                struct.study_abroad_country = iprot.readString();
                struct.setStudy_abroad_countryIsSet(true);
            }
            if (incoming.get(16)) {
                struct.create_time = iprot.readString();
                struct.setCreate_timeIsSet(true);
            }
            if (incoming.get(17)) {
                struct.update_time = iprot.readString();
                struct.setUpdate_timeIsSet(true);
            }
            if (incoming.get(18)) {
                struct.country_id = iprot.readI32();
                struct.setCountry_idIsSet(true);
            }
            if (incoming.get(19)) {
                struct.country_name = iprot.readString();
                struct.setCountry_nameIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

