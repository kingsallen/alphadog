/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-12-01")
public class HrCompanyConf implements org.apache.thrift.TBase<HrCompanyConf, HrCompanyConf._Fields>, java.io.Serializable, Cloneable, Comparable<HrCompanyConf> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrCompanyConf");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField THEME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("theme_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField HB_THROTTLE_FIELD_DESC = new org.apache.thrift.protocol.TField("hb_throttle", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField APP_REPLY_FIELD_DESC = new org.apache.thrift.protocol.TField("app_reply", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_INDING_FIELD_DESC = new org.apache.thrift.protocol.TField("employee_inding", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField RECOMMEND_PRESENTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend_presentee", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField RECOMMEND_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend_success", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField FORWARD_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("forward_message", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField APPLICATION_COUNT_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("application_count_limit", org.apache.thrift.protocol.TType.I16, (short)11);
  private static final org.apache.thrift.protocol.TField JOB_CUSTOM_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("job_custom_title", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField SEARCH_SEQ_FIELD_DESC = new org.apache.thrift.protocol.TField("search_seq", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField SEARCH_IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("search_img", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField JOB_OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("job_occupation", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TEAMNAME_CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("teamname_custom", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField APPLICATION_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("application_time", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField NEWJD_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("newjd_status", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField HR_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_chat", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
  private static final org.apache.thrift.protocol.TField SHOW_IN_QX_FIELD_DESC = new org.apache.thrift.protocol.TField("show_in_qx", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_SLUG_FIELD_DESC = new org.apache.thrift.protocol.TField("employee_slug", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField DISPLAY_LOCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("display_locale", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField TALENTPOOL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("talentpool_status", org.apache.thrift.protocol.TType.BYTE, (short)23);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrCompanyConfStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrCompanyConfTupleSchemeFactory();

  public int company_id; // optional
  public int theme_id; // optional
  public int hb_throttle; // optional
  public String app_reply; // optional
  public String create_time; // optional
  public String update_time; // optional
  public String employee_inding; // optional
  public String recommend_presentee; // optional
  public String recommend_success; // optional
  public String forward_message; // optional
  public short application_count_limit; // optional
  public String job_custom_title; // optional
  public String search_seq; // optional
  public String search_img; // optional
  public String job_occupation; // optional
  public String teamname_custom; // optional
  public String application_time; // optional
  public int newjd_status; // optional
  public double hr_chat; // optional
  public double show_in_qx; // optional
  public String employee_slug; // optional
  public String display_locale; // optional
  public byte talentpool_status; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "company_id"),
    THEME_ID((short)2, "theme_id"),
    HB_THROTTLE((short)3, "hb_throttle"),
    APP_REPLY((short)4, "app_reply"),
    CREATE_TIME((short)5, "create_time"),
    UPDATE_TIME((short)6, "update_time"),
    EMPLOYEE_INDING((short)7, "employee_inding"),
    RECOMMEND_PRESENTEE((short)8, "recommend_presentee"),
    RECOMMEND_SUCCESS((short)9, "recommend_success"),
    FORWARD_MESSAGE((short)10, "forward_message"),
    APPLICATION_COUNT_LIMIT((short)11, "application_count_limit"),
    JOB_CUSTOM_TITLE((short)12, "job_custom_title"),
    SEARCH_SEQ((short)13, "search_seq"),
    SEARCH_IMG((short)14, "search_img"),
    JOB_OCCUPATION((short)15, "job_occupation"),
    TEAMNAME_CUSTOM((short)16, "teamname_custom"),
    APPLICATION_TIME((short)17, "application_time"),
    NEWJD_STATUS((short)18, "newjd_status"),
    HR_CHAT((short)19, "hr_chat"),
    SHOW_IN_QX((short)20, "show_in_qx"),
    EMPLOYEE_SLUG((short)21, "employee_slug"),
    DISPLAY_LOCALE((short)22, "display_locale"),
    TALENTPOOL_STATUS((short)23, "talentpool_status");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // THEME_ID
          return THEME_ID;
        case 3: // HB_THROTTLE
          return HB_THROTTLE;
        case 4: // APP_REPLY
          return APP_REPLY;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // UPDATE_TIME
          return UPDATE_TIME;
        case 7: // EMPLOYEE_INDING
          return EMPLOYEE_INDING;
        case 8: // RECOMMEND_PRESENTEE
          return RECOMMEND_PRESENTEE;
        case 9: // RECOMMEND_SUCCESS
          return RECOMMEND_SUCCESS;
        case 10: // FORWARD_MESSAGE
          return FORWARD_MESSAGE;
        case 11: // APPLICATION_COUNT_LIMIT
          return APPLICATION_COUNT_LIMIT;
        case 12: // JOB_CUSTOM_TITLE
          return JOB_CUSTOM_TITLE;
        case 13: // SEARCH_SEQ
          return SEARCH_SEQ;
        case 14: // SEARCH_IMG
          return SEARCH_IMG;
        case 15: // JOB_OCCUPATION
          return JOB_OCCUPATION;
        case 16: // TEAMNAME_CUSTOM
          return TEAMNAME_CUSTOM;
        case 17: // APPLICATION_TIME
          return APPLICATION_TIME;
        case 18: // NEWJD_STATUS
          return NEWJD_STATUS;
        case 19: // HR_CHAT
          return HR_CHAT;
        case 20: // SHOW_IN_QX
          return SHOW_IN_QX;
        case 21: // EMPLOYEE_SLUG
          return EMPLOYEE_SLUG;
        case 22: // DISPLAY_LOCALE
          return DISPLAY_LOCALE;
        case 23: // TALENTPOOL_STATUS
          return TALENTPOOL_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANY_ID_ISSET_ID = 0;
  private static final int __THEME_ID_ISSET_ID = 1;
  private static final int __HB_THROTTLE_ISSET_ID = 2;
  private static final int __APPLICATION_COUNT_LIMIT_ISSET_ID = 3;
  private static final int __NEWJD_STATUS_ISSET_ID = 4;
  private static final int __HR_CHAT_ISSET_ID = 5;
  private static final int __SHOW_IN_QX_ISSET_ID = 6;
  private static final int __TALENTPOOL_STATUS_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.THEME_ID,_Fields.HB_THROTTLE,_Fields.APP_REPLY,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.EMPLOYEE_INDING,_Fields.RECOMMEND_PRESENTEE,_Fields.RECOMMEND_SUCCESS,_Fields.FORWARD_MESSAGE,_Fields.APPLICATION_COUNT_LIMIT,_Fields.JOB_CUSTOM_TITLE,_Fields.SEARCH_SEQ,_Fields.SEARCH_IMG,_Fields.JOB_OCCUPATION,_Fields.TEAMNAME_CUSTOM,_Fields.APPLICATION_TIME,_Fields.NEWJD_STATUS,_Fields.HR_CHAT,_Fields.SHOW_IN_QX,_Fields.EMPLOYEE_SLUG,_Fields.DISPLAY_LOCALE,_Fields.TALENTPOOL_STATUS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.THEME_ID, new org.apache.thrift.meta_data.FieldMetaData("theme_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HB_THROTTLE, new org.apache.thrift.meta_data.FieldMetaData("hb_throttle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_REPLY, new org.apache.thrift.meta_data.FieldMetaData("app_reply", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYEE_INDING, new org.apache.thrift.meta_data.FieldMetaData("employee_inding", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_PRESENTEE, new org.apache.thrift.meta_data.FieldMetaData("recommend_presentee", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("recommend_success", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FORWARD_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("forward_message", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_COUNT_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("application_count_limit", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.JOB_CUSTOM_TITLE, new org.apache.thrift.meta_data.FieldMetaData("job_custom_title", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SEARCH_SEQ, new org.apache.thrift.meta_data.FieldMetaData("search_seq", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SEARCH_IMG, new org.apache.thrift.meta_data.FieldMetaData("search_img", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("job_occupation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEAMNAME_CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("teamname_custom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_TIME, new org.apache.thrift.meta_data.FieldMetaData("application_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NEWJD_STATUS, new org.apache.thrift.meta_data.FieldMetaData("newjd_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_CHAT, new org.apache.thrift.meta_data.FieldMetaData("hr_chat", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SHOW_IN_QX, new org.apache.thrift.meta_data.FieldMetaData("show_in_qx", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EMPLOYEE_SLUG, new org.apache.thrift.meta_data.FieldMetaData("employee_slug", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_LOCALE, new org.apache.thrift.meta_data.FieldMetaData("display_locale", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TALENTPOOL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("talentpool_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrCompanyConf.class, metaDataMap);
  }

  public HrCompanyConf() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrCompanyConf(HrCompanyConf other) {
    __isset_bitfield = other.__isset_bitfield;
    this.company_id = other.company_id;
    this.theme_id = other.theme_id;
    this.hb_throttle = other.hb_throttle;
    if (other.isSetApp_reply()) {
      this.app_reply = other.app_reply;
    }
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    if (other.isSetEmployee_inding()) {
      this.employee_inding = other.employee_inding;
    }
    if (other.isSetRecommend_presentee()) {
      this.recommend_presentee = other.recommend_presentee;
    }
    if (other.isSetRecommend_success()) {
      this.recommend_success = other.recommend_success;
    }
    if (other.isSetForward_message()) {
      this.forward_message = other.forward_message;
    }
    this.application_count_limit = other.application_count_limit;
    if (other.isSetJob_custom_title()) {
      this.job_custom_title = other.job_custom_title;
    }
    if (other.isSetSearch_seq()) {
      this.search_seq = other.search_seq;
    }
    if (other.isSetSearch_img()) {
      this.search_img = other.search_img;
    }
    if (other.isSetJob_occupation()) {
      this.job_occupation = other.job_occupation;
    }
    if (other.isSetTeamname_custom()) {
      this.teamname_custom = other.teamname_custom;
    }
    if (other.isSetApplication_time()) {
      this.application_time = other.application_time;
    }
    this.newjd_status = other.newjd_status;
    this.hr_chat = other.hr_chat;
    this.show_in_qx = other.show_in_qx;
    if (other.isSetEmployee_slug()) {
      this.employee_slug = other.employee_slug;
    }
    if (other.isSetDisplay_locale()) {
      this.display_locale = other.display_locale;
    }
    this.talentpool_status = other.talentpool_status;
  }

  public HrCompanyConf deepCopy() {
    return new HrCompanyConf(this);
  }

  @Override
  public void clear() {
    setCompany_idIsSet(false);
    this.company_id = 0;
    setTheme_idIsSet(false);
    this.theme_id = 0;
    setHb_throttleIsSet(false);
    this.hb_throttle = 0;
    this.app_reply = null;
    this.create_time = null;
    this.update_time = null;
    this.employee_inding = null;
    this.recommend_presentee = null;
    this.recommend_success = null;
    this.forward_message = null;
    setApplication_count_limitIsSet(false);
    this.application_count_limit = 0;
    this.job_custom_title = null;
    this.search_seq = null;
    this.search_img = null;
    this.job_occupation = null;
    this.teamname_custom = null;
    this.application_time = null;
    setNewjd_statusIsSet(false);
    this.newjd_status = 0;
    setHr_chatIsSet(false);
    this.hr_chat = 0.0;
    setShow_in_qxIsSet(false);
    this.show_in_qx = 0.0;
    this.employee_slug = null;
    this.display_locale = null;
    setTalentpool_statusIsSet(false);
    this.talentpool_status = 0;
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public HrCompanyConf setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getTheme_id() {
    return this.theme_id;
  }

  public HrCompanyConf setTheme_id(int theme_id) {
    this.theme_id = theme_id;
    setTheme_idIsSet(true);
    return this;
  }

  public void unsetTheme_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __THEME_ID_ISSET_ID);
  }

  /** Returns true if field theme_id is set (has been assigned a value) and false otherwise */
  public boolean isSetTheme_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __THEME_ID_ISSET_ID);
  }

  public void setTheme_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __THEME_ID_ISSET_ID, value);
  }

  public int getHb_throttle() {
    return this.hb_throttle;
  }

  public HrCompanyConf setHb_throttle(int hb_throttle) {
    this.hb_throttle = hb_throttle;
    setHb_throttleIsSet(true);
    return this;
  }

  public void unsetHb_throttle() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HB_THROTTLE_ISSET_ID);
  }

  /** Returns true if field hb_throttle is set (has been assigned a value) and false otherwise */
  public boolean isSetHb_throttle() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HB_THROTTLE_ISSET_ID);
  }

  public void setHb_throttleIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HB_THROTTLE_ISSET_ID, value);
  }

  public String getApp_reply() {
    return this.app_reply;
  }

  public HrCompanyConf setApp_reply(String app_reply) {
    this.app_reply = app_reply;
    return this;
  }

  public void unsetApp_reply() {
    this.app_reply = null;
  }

  /** Returns true if field app_reply is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_reply() {
    return this.app_reply != null;
  }

  public void setApp_replyIsSet(boolean value) {
    if (!value) {
      this.app_reply = null;
    }
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public HrCompanyConf setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public HrCompanyConf setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public String getEmployee_inding() {
    return this.employee_inding;
  }

  public HrCompanyConf setEmployee_inding(String employee_inding) {
    this.employee_inding = employee_inding;
    return this;
  }

  public void unsetEmployee_inding() {
    this.employee_inding = null;
  }

  /** Returns true if field employee_inding is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployee_inding() {
    return this.employee_inding != null;
  }

  public void setEmployee_indingIsSet(boolean value) {
    if (!value) {
      this.employee_inding = null;
    }
  }

  public String getRecommend_presentee() {
    return this.recommend_presentee;
  }

  public HrCompanyConf setRecommend_presentee(String recommend_presentee) {
    this.recommend_presentee = recommend_presentee;
    return this;
  }

  public void unsetRecommend_presentee() {
    this.recommend_presentee = null;
  }

  /** Returns true if field recommend_presentee is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend_presentee() {
    return this.recommend_presentee != null;
  }

  public void setRecommend_presenteeIsSet(boolean value) {
    if (!value) {
      this.recommend_presentee = null;
    }
  }

  public String getRecommend_success() {
    return this.recommend_success;
  }

  public HrCompanyConf setRecommend_success(String recommend_success) {
    this.recommend_success = recommend_success;
    return this;
  }

  public void unsetRecommend_success() {
    this.recommend_success = null;
  }

  /** Returns true if field recommend_success is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend_success() {
    return this.recommend_success != null;
  }

  public void setRecommend_successIsSet(boolean value) {
    if (!value) {
      this.recommend_success = null;
    }
  }

  public String getForward_message() {
    return this.forward_message;
  }

  public HrCompanyConf setForward_message(String forward_message) {
    this.forward_message = forward_message;
    return this;
  }

  public void unsetForward_message() {
    this.forward_message = null;
  }

  /** Returns true if field forward_message is set (has been assigned a value) and false otherwise */
  public boolean isSetForward_message() {
    return this.forward_message != null;
  }

  public void setForward_messageIsSet(boolean value) {
    if (!value) {
      this.forward_message = null;
    }
  }

  public short getApplication_count_limit() {
    return this.application_count_limit;
  }

  public HrCompanyConf setApplication_count_limit(short application_count_limit) {
    this.application_count_limit = application_count_limit;
    setApplication_count_limitIsSet(true);
    return this;
  }

  public void unsetApplication_count_limit() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATION_COUNT_LIMIT_ISSET_ID);
  }

  /** Returns true if field application_count_limit is set (has been assigned a value) and false otherwise */
  public boolean isSetApplication_count_limit() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATION_COUNT_LIMIT_ISSET_ID);
  }

  public void setApplication_count_limitIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATION_COUNT_LIMIT_ISSET_ID, value);
  }

  public String getJob_custom_title() {
    return this.job_custom_title;
  }

  public HrCompanyConf setJob_custom_title(String job_custom_title) {
    this.job_custom_title = job_custom_title;
    return this;
  }

  public void unsetJob_custom_title() {
    this.job_custom_title = null;
  }

  /** Returns true if field job_custom_title is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_custom_title() {
    return this.job_custom_title != null;
  }

  public void setJob_custom_titleIsSet(boolean value) {
    if (!value) {
      this.job_custom_title = null;
    }
  }

  public String getSearch_seq() {
    return this.search_seq;
  }

  public HrCompanyConf setSearch_seq(String search_seq) {
    this.search_seq = search_seq;
    return this;
  }

  public void unsetSearch_seq() {
    this.search_seq = null;
  }

  /** Returns true if field search_seq is set (has been assigned a value) and false otherwise */
  public boolean isSetSearch_seq() {
    return this.search_seq != null;
  }

  public void setSearch_seqIsSet(boolean value) {
    if (!value) {
      this.search_seq = null;
    }
  }

  public String getSearch_img() {
    return this.search_img;
  }

  public HrCompanyConf setSearch_img(String search_img) {
    this.search_img = search_img;
    return this;
  }

  public void unsetSearch_img() {
    this.search_img = null;
  }

  /** Returns true if field search_img is set (has been assigned a value) and false otherwise */
  public boolean isSetSearch_img() {
    return this.search_img != null;
  }

  public void setSearch_imgIsSet(boolean value) {
    if (!value) {
      this.search_img = null;
    }
  }

  public String getJob_occupation() {
    return this.job_occupation;
  }

  public HrCompanyConf setJob_occupation(String job_occupation) {
    this.job_occupation = job_occupation;
    return this;
  }

  public void unsetJob_occupation() {
    this.job_occupation = null;
  }

  /** Returns true if field job_occupation is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_occupation() {
    return this.job_occupation != null;
  }

  public void setJob_occupationIsSet(boolean value) {
    if (!value) {
      this.job_occupation = null;
    }
  }

  public String getTeamname_custom() {
    return this.teamname_custom;
  }

  public HrCompanyConf setTeamname_custom(String teamname_custom) {
    this.teamname_custom = teamname_custom;
    return this;
  }

  public void unsetTeamname_custom() {
    this.teamname_custom = null;
  }

  /** Returns true if field teamname_custom is set (has been assigned a value) and false otherwise */
  public boolean isSetTeamname_custom() {
    return this.teamname_custom != null;
  }

  public void setTeamname_customIsSet(boolean value) {
    if (!value) {
      this.teamname_custom = null;
    }
  }

  public String getApplication_time() {
    return this.application_time;
  }

  public HrCompanyConf setApplication_time(String application_time) {
    this.application_time = application_time;
    return this;
  }

  public void unsetApplication_time() {
    this.application_time = null;
  }

  /** Returns true if field application_time is set (has been assigned a value) and false otherwise */
  public boolean isSetApplication_time() {
    return this.application_time != null;
  }

  public void setApplication_timeIsSet(boolean value) {
    if (!value) {
      this.application_time = null;
    }
  }

  public int getNewjd_status() {
    return this.newjd_status;
  }

  public HrCompanyConf setNewjd_status(int newjd_status) {
    this.newjd_status = newjd_status;
    setNewjd_statusIsSet(true);
    return this;
  }

  public void unsetNewjd_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWJD_STATUS_ISSET_ID);
  }

  /** Returns true if field newjd_status is set (has been assigned a value) and false otherwise */
  public boolean isSetNewjd_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWJD_STATUS_ISSET_ID);
  }

  public void setNewjd_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWJD_STATUS_ISSET_ID, value);
  }

  public double getHr_chat() {
    return this.hr_chat;
  }

  public HrCompanyConf setHr_chat(double hr_chat) {
    this.hr_chat = hr_chat;
    setHr_chatIsSet(true);
    return this;
  }

  public void unsetHr_chat() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_CHAT_ISSET_ID);
  }

  /** Returns true if field hr_chat is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_chat() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_CHAT_ISSET_ID);
  }

  public void setHr_chatIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_CHAT_ISSET_ID, value);
  }

  public double getShow_in_qx() {
    return this.show_in_qx;
  }

  public HrCompanyConf setShow_in_qx(double show_in_qx) {
    this.show_in_qx = show_in_qx;
    setShow_in_qxIsSet(true);
    return this;
  }

  public void unsetShow_in_qx() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOW_IN_QX_ISSET_ID);
  }

  /** Returns true if field show_in_qx is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_in_qx() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOW_IN_QX_ISSET_ID);
  }

  public void setShow_in_qxIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOW_IN_QX_ISSET_ID, value);
  }

  public String getEmployee_slug() {
    return this.employee_slug;
  }

  public HrCompanyConf setEmployee_slug(String employee_slug) {
    this.employee_slug = employee_slug;
    return this;
  }

  public void unsetEmployee_slug() {
    this.employee_slug = null;
  }

  /** Returns true if field employee_slug is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployee_slug() {
    return this.employee_slug != null;
  }

  public void setEmployee_slugIsSet(boolean value) {
    if (!value) {
      this.employee_slug = null;
    }
  }

  public String getDisplay_locale() {
    return this.display_locale;
  }

  public HrCompanyConf setDisplay_locale(String display_locale) {
    this.display_locale = display_locale;
    return this;
  }

  public void unsetDisplay_locale() {
    this.display_locale = null;
  }

  /** Returns true if field display_locale is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplay_locale() {
    return this.display_locale != null;
  }

  public void setDisplay_localeIsSet(boolean value) {
    if (!value) {
      this.display_locale = null;
    }
  }

  public byte getTalentpool_status() {
    return this.talentpool_status;
  }

  public HrCompanyConf setTalentpool_status(byte talentpool_status) {
    this.talentpool_status = talentpool_status;
    setTalentpool_statusIsSet(true);
    return this;
  }

  public void unsetTalentpool_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TALENTPOOL_STATUS_ISSET_ID);
  }

  /** Returns true if field talentpool_status is set (has been assigned a value) and false otherwise */
  public boolean isSetTalentpool_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TALENTPOOL_STATUS_ISSET_ID);
  }

  public void setTalentpool_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TALENTPOOL_STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((Integer)value);
      }
      break;

    case THEME_ID:
      if (value == null) {
        unsetTheme_id();
      } else {
        setTheme_id((Integer)value);
      }
      break;

    case HB_THROTTLE:
      if (value == null) {
        unsetHb_throttle();
      } else {
        setHb_throttle((Integer)value);
      }
      break;

    case APP_REPLY:
      if (value == null) {
        unsetApp_reply();
      } else {
        setApp_reply((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    case EMPLOYEE_INDING:
      if (value == null) {
        unsetEmployee_inding();
      } else {
        setEmployee_inding((String)value);
      }
      break;

    case RECOMMEND_PRESENTEE:
      if (value == null) {
        unsetRecommend_presentee();
      } else {
        setRecommend_presentee((String)value);
      }
      break;

    case RECOMMEND_SUCCESS:
      if (value == null) {
        unsetRecommend_success();
      } else {
        setRecommend_success((String)value);
      }
      break;

    case FORWARD_MESSAGE:
      if (value == null) {
        unsetForward_message();
      } else {
        setForward_message((String)value);
      }
      break;

    case APPLICATION_COUNT_LIMIT:
      if (value == null) {
        unsetApplication_count_limit();
      } else {
        setApplication_count_limit((Short)value);
      }
      break;

    case JOB_CUSTOM_TITLE:
      if (value == null) {
        unsetJob_custom_title();
      } else {
        setJob_custom_title((String)value);
      }
      break;

    case SEARCH_SEQ:
      if (value == null) {
        unsetSearch_seq();
      } else {
        setSearch_seq((String)value);
      }
      break;

    case SEARCH_IMG:
      if (value == null) {
        unsetSearch_img();
      } else {
        setSearch_img((String)value);
      }
      break;

    case JOB_OCCUPATION:
      if (value == null) {
        unsetJob_occupation();
      } else {
        setJob_occupation((String)value);
      }
      break;

    case TEAMNAME_CUSTOM:
      if (value == null) {
        unsetTeamname_custom();
      } else {
        setTeamname_custom((String)value);
      }
      break;

    case APPLICATION_TIME:
      if (value == null) {
        unsetApplication_time();
      } else {
        setApplication_time((String)value);
      }
      break;

    case NEWJD_STATUS:
      if (value == null) {
        unsetNewjd_status();
      } else {
        setNewjd_status((Integer)value);
      }
      break;

    case HR_CHAT:
      if (value == null) {
        unsetHr_chat();
      } else {
        setHr_chat((Double)value);
      }
      break;

    case SHOW_IN_QX:
      if (value == null) {
        unsetShow_in_qx();
      } else {
        setShow_in_qx((Double)value);
      }
      break;

    case EMPLOYEE_SLUG:
      if (value == null) {
        unsetEmployee_slug();
      } else {
        setEmployee_slug((String)value);
      }
      break;

    case DISPLAY_LOCALE:
      if (value == null) {
        unsetDisplay_locale();
      } else {
        setDisplay_locale((String)value);
      }
      break;

    case TALENTPOOL_STATUS:
      if (value == null) {
        unsetTalentpool_status();
      } else {
        setTalentpool_status((Byte)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return getCompany_id();

    case THEME_ID:
      return getTheme_id();

    case HB_THROTTLE:
      return getHb_throttle();

    case APP_REPLY:
      return getApp_reply();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    case EMPLOYEE_INDING:
      return getEmployee_inding();

    case RECOMMEND_PRESENTEE:
      return getRecommend_presentee();

    case RECOMMEND_SUCCESS:
      return getRecommend_success();

    case FORWARD_MESSAGE:
      return getForward_message();

    case APPLICATION_COUNT_LIMIT:
      return getApplication_count_limit();

    case JOB_CUSTOM_TITLE:
      return getJob_custom_title();

    case SEARCH_SEQ:
      return getSearch_seq();

    case SEARCH_IMG:
      return getSearch_img();

    case JOB_OCCUPATION:
      return getJob_occupation();

    case TEAMNAME_CUSTOM:
      return getTeamname_custom();

    case APPLICATION_TIME:
      return getApplication_time();

    case NEWJD_STATUS:
      return getNewjd_status();

    case HR_CHAT:
      return getHr_chat();

    case SHOW_IN_QX:
      return getShow_in_qx();

    case EMPLOYEE_SLUG:
      return getEmployee_slug();

    case DISPLAY_LOCALE:
      return getDisplay_locale();

    case TALENTPOOL_STATUS:
      return getTalentpool_status();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompany_id();
    case THEME_ID:
      return isSetTheme_id();
    case HB_THROTTLE:
      return isSetHb_throttle();
    case APP_REPLY:
      return isSetApp_reply();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case EMPLOYEE_INDING:
      return isSetEmployee_inding();
    case RECOMMEND_PRESENTEE:
      return isSetRecommend_presentee();
    case RECOMMEND_SUCCESS:
      return isSetRecommend_success();
    case FORWARD_MESSAGE:
      return isSetForward_message();
    case APPLICATION_COUNT_LIMIT:
      return isSetApplication_count_limit();
    case JOB_CUSTOM_TITLE:
      return isSetJob_custom_title();
    case SEARCH_SEQ:
      return isSetSearch_seq();
    case SEARCH_IMG:
      return isSetSearch_img();
    case JOB_OCCUPATION:
      return isSetJob_occupation();
    case TEAMNAME_CUSTOM:
      return isSetTeamname_custom();
    case APPLICATION_TIME:
      return isSetApplication_time();
    case NEWJD_STATUS:
      return isSetNewjd_status();
    case HR_CHAT:
      return isSetHr_chat();
    case SHOW_IN_QX:
      return isSetShow_in_qx();
    case EMPLOYEE_SLUG:
      return isSetEmployee_slug();
    case DISPLAY_LOCALE:
      return isSetDisplay_locale();
    case TALENTPOOL_STATUS:
      return isSetTalentpool_status();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof HrCompanyConf)
      return this.equals((HrCompanyConf)that);
    return false;
  }

  public boolean equals(HrCompanyConf that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_theme_id = true && this.isSetTheme_id();
    boolean that_present_theme_id = true && that.isSetTheme_id();
    if (this_present_theme_id || that_present_theme_id) {
      if (!(this_present_theme_id && that_present_theme_id))
        return false;
      if (this.theme_id != that.theme_id)
        return false;
    }

    boolean this_present_hb_throttle = true && this.isSetHb_throttle();
    boolean that_present_hb_throttle = true && that.isSetHb_throttle();
    if (this_present_hb_throttle || that_present_hb_throttle) {
      if (!(this_present_hb_throttle && that_present_hb_throttle))
        return false;
      if (this.hb_throttle != that.hb_throttle)
        return false;
    }

    boolean this_present_app_reply = true && this.isSetApp_reply();
    boolean that_present_app_reply = true && that.isSetApp_reply();
    if (this_present_app_reply || that_present_app_reply) {
      if (!(this_present_app_reply && that_present_app_reply))
        return false;
      if (!this.app_reply.equals(that.app_reply))
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_employee_inding = true && this.isSetEmployee_inding();
    boolean that_present_employee_inding = true && that.isSetEmployee_inding();
    if (this_present_employee_inding || that_present_employee_inding) {
      if (!(this_present_employee_inding && that_present_employee_inding))
        return false;
      if (!this.employee_inding.equals(that.employee_inding))
        return false;
    }

    boolean this_present_recommend_presentee = true && this.isSetRecommend_presentee();
    boolean that_present_recommend_presentee = true && that.isSetRecommend_presentee();
    if (this_present_recommend_presentee || that_present_recommend_presentee) {
      if (!(this_present_recommend_presentee && that_present_recommend_presentee))
        return false;
      if (!this.recommend_presentee.equals(that.recommend_presentee))
        return false;
    }

    boolean this_present_recommend_success = true && this.isSetRecommend_success();
    boolean that_present_recommend_success = true && that.isSetRecommend_success();
    if (this_present_recommend_success || that_present_recommend_success) {
      if (!(this_present_recommend_success && that_present_recommend_success))
        return false;
      if (!this.recommend_success.equals(that.recommend_success))
        return false;
    }

    boolean this_present_forward_message = true && this.isSetForward_message();
    boolean that_present_forward_message = true && that.isSetForward_message();
    if (this_present_forward_message || that_present_forward_message) {
      if (!(this_present_forward_message && that_present_forward_message))
        return false;
      if (!this.forward_message.equals(that.forward_message))
        return false;
    }

    boolean this_present_application_count_limit = true && this.isSetApplication_count_limit();
    boolean that_present_application_count_limit = true && that.isSetApplication_count_limit();
    if (this_present_application_count_limit || that_present_application_count_limit) {
      if (!(this_present_application_count_limit && that_present_application_count_limit))
        return false;
      if (this.application_count_limit != that.application_count_limit)
        return false;
    }

    boolean this_present_job_custom_title = true && this.isSetJob_custom_title();
    boolean that_present_job_custom_title = true && that.isSetJob_custom_title();
    if (this_present_job_custom_title || that_present_job_custom_title) {
      if (!(this_present_job_custom_title && that_present_job_custom_title))
        return false;
      if (!this.job_custom_title.equals(that.job_custom_title))
        return false;
    }

    boolean this_present_search_seq = true && this.isSetSearch_seq();
    boolean that_present_search_seq = true && that.isSetSearch_seq();
    if (this_present_search_seq || that_present_search_seq) {
      if (!(this_present_search_seq && that_present_search_seq))
        return false;
      if (!this.search_seq.equals(that.search_seq))
        return false;
    }

    boolean this_present_search_img = true && this.isSetSearch_img();
    boolean that_present_search_img = true && that.isSetSearch_img();
    if (this_present_search_img || that_present_search_img) {
      if (!(this_present_search_img && that_present_search_img))
        return false;
      if (!this.search_img.equals(that.search_img))
        return false;
    }

    boolean this_present_job_occupation = true && this.isSetJob_occupation();
    boolean that_present_job_occupation = true && that.isSetJob_occupation();
    if (this_present_job_occupation || that_present_job_occupation) {
      if (!(this_present_job_occupation && that_present_job_occupation))
        return false;
      if (!this.job_occupation.equals(that.job_occupation))
        return false;
    }

    boolean this_present_teamname_custom = true && this.isSetTeamname_custom();
    boolean that_present_teamname_custom = true && that.isSetTeamname_custom();
    if (this_present_teamname_custom || that_present_teamname_custom) {
      if (!(this_present_teamname_custom && that_present_teamname_custom))
        return false;
      if (!this.teamname_custom.equals(that.teamname_custom))
        return false;
    }

    boolean this_present_application_time = true && this.isSetApplication_time();
    boolean that_present_application_time = true && that.isSetApplication_time();
    if (this_present_application_time || that_present_application_time) {
      if (!(this_present_application_time && that_present_application_time))
        return false;
      if (!this.application_time.equals(that.application_time))
        return false;
    }

    boolean this_present_newjd_status = true && this.isSetNewjd_status();
    boolean that_present_newjd_status = true && that.isSetNewjd_status();
    if (this_present_newjd_status || that_present_newjd_status) {
      if (!(this_present_newjd_status && that_present_newjd_status))
        return false;
      if (this.newjd_status != that.newjd_status)
        return false;
    }

    boolean this_present_hr_chat = true && this.isSetHr_chat();
    boolean that_present_hr_chat = true && that.isSetHr_chat();
    if (this_present_hr_chat || that_present_hr_chat) {
      if (!(this_present_hr_chat && that_present_hr_chat))
        return false;
      if (this.hr_chat != that.hr_chat)
        return false;
    }

    boolean this_present_show_in_qx = true && this.isSetShow_in_qx();
    boolean that_present_show_in_qx = true && that.isSetShow_in_qx();
    if (this_present_show_in_qx || that_present_show_in_qx) {
      if (!(this_present_show_in_qx && that_present_show_in_qx))
        return false;
      if (this.show_in_qx != that.show_in_qx)
        return false;
    }

    boolean this_present_employee_slug = true && this.isSetEmployee_slug();
    boolean that_present_employee_slug = true && that.isSetEmployee_slug();
    if (this_present_employee_slug || that_present_employee_slug) {
      if (!(this_present_employee_slug && that_present_employee_slug))
        return false;
      if (!this.employee_slug.equals(that.employee_slug))
        return false;
    }

    boolean this_present_display_locale = true && this.isSetDisplay_locale();
    boolean that_present_display_locale = true && that.isSetDisplay_locale();
    if (this_present_display_locale || that_present_display_locale) {
      if (!(this_present_display_locale && that_present_display_locale))
        return false;
      if (!this.display_locale.equals(that.display_locale))
        return false;
    }

    boolean this_present_talentpool_status = true && this.isSetTalentpool_status();
    boolean that_present_talentpool_status = true && that.isSetTalentpool_status();
    if (this_present_talentpool_status || that_present_talentpool_status) {
      if (!(this_present_talentpool_status && that_present_talentpool_status))
        return false;
      if (this.talentpool_status != that.talentpool_status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetTheme_id()) ? 131071 : 524287);
    if (isSetTheme_id())
      hashCode = hashCode * 8191 + theme_id;

    hashCode = hashCode * 8191 + ((isSetHb_throttle()) ? 131071 : 524287);
    if (isSetHb_throttle())
      hashCode = hashCode * 8191 + hb_throttle;

    hashCode = hashCode * 8191 + ((isSetApp_reply()) ? 131071 : 524287);
    if (isSetApp_reply())
      hashCode = hashCode * 8191 + app_reply.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmployee_inding()) ? 131071 : 524287);
    if (isSetEmployee_inding())
      hashCode = hashCode * 8191 + employee_inding.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecommend_presentee()) ? 131071 : 524287);
    if (isSetRecommend_presentee())
      hashCode = hashCode * 8191 + recommend_presentee.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecommend_success()) ? 131071 : 524287);
    if (isSetRecommend_success())
      hashCode = hashCode * 8191 + recommend_success.hashCode();

    hashCode = hashCode * 8191 + ((isSetForward_message()) ? 131071 : 524287);
    if (isSetForward_message())
      hashCode = hashCode * 8191 + forward_message.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplication_count_limit()) ? 131071 : 524287);
    if (isSetApplication_count_limit())
      hashCode = hashCode * 8191 + application_count_limit;

    hashCode = hashCode * 8191 + ((isSetJob_custom_title()) ? 131071 : 524287);
    if (isSetJob_custom_title())
      hashCode = hashCode * 8191 + job_custom_title.hashCode();

    hashCode = hashCode * 8191 + ((isSetSearch_seq()) ? 131071 : 524287);
    if (isSetSearch_seq())
      hashCode = hashCode * 8191 + search_seq.hashCode();

    hashCode = hashCode * 8191 + ((isSetSearch_img()) ? 131071 : 524287);
    if (isSetSearch_img())
      hashCode = hashCode * 8191 + search_img.hashCode();

    hashCode = hashCode * 8191 + ((isSetJob_occupation()) ? 131071 : 524287);
    if (isSetJob_occupation())
      hashCode = hashCode * 8191 + job_occupation.hashCode();

    hashCode = hashCode * 8191 + ((isSetTeamname_custom()) ? 131071 : 524287);
    if (isSetTeamname_custom())
      hashCode = hashCode * 8191 + teamname_custom.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplication_time()) ? 131071 : 524287);
    if (isSetApplication_time())
      hashCode = hashCode * 8191 + application_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetNewjd_status()) ? 131071 : 524287);
    if (isSetNewjd_status())
      hashCode = hashCode * 8191 + newjd_status;

    hashCode = hashCode * 8191 + ((isSetHr_chat()) ? 131071 : 524287);
    if (isSetHr_chat())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(hr_chat);

    hashCode = hashCode * 8191 + ((isSetShow_in_qx()) ? 131071 : 524287);
    if (isSetShow_in_qx())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(show_in_qx);

    hashCode = hashCode * 8191 + ((isSetEmployee_slug()) ? 131071 : 524287);
    if (isSetEmployee_slug())
      hashCode = hashCode * 8191 + employee_slug.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplay_locale()) ? 131071 : 524287);
    if (isSetDisplay_locale())
      hashCode = hashCode * 8191 + display_locale.hashCode();

    hashCode = hashCode * 8191 + ((isSetTalentpool_status()) ? 131071 : 524287);
    if (isSetTalentpool_status())
      hashCode = hashCode * 8191 + (int) (talentpool_status);

    return hashCode;
  }

  @Override
  public int compareTo(HrCompanyConf other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTheme_id()).compareTo(other.isSetTheme_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTheme_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.theme_id, other.theme_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHb_throttle()).compareTo(other.isSetHb_throttle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHb_throttle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hb_throttle, other.hb_throttle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApp_reply()).compareTo(other.isSetApp_reply());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_reply()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_reply, other.app_reply);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployee_inding()).compareTo(other.isSetEmployee_inding());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployee_inding()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employee_inding, other.employee_inding);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommend_presentee()).compareTo(other.isSetRecommend_presentee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend_presentee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend_presentee, other.recommend_presentee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommend_success()).compareTo(other.isSetRecommend_success());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend_success()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend_success, other.recommend_success);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetForward_message()).compareTo(other.isSetForward_message());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetForward_message()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.forward_message, other.forward_message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplication_count_limit()).compareTo(other.isSetApplication_count_limit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplication_count_limit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.application_count_limit, other.application_count_limit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_custom_title()).compareTo(other.isSetJob_custom_title());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_custom_title()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_custom_title, other.job_custom_title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSearch_seq()).compareTo(other.isSetSearch_seq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSearch_seq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.search_seq, other.search_seq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSearch_img()).compareTo(other.isSetSearch_img());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSearch_img()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.search_img, other.search_img);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_occupation()).compareTo(other.isSetJob_occupation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_occupation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_occupation, other.job_occupation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeamname_custom()).compareTo(other.isSetTeamname_custom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeamname_custom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teamname_custom, other.teamname_custom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplication_time()).compareTo(other.isSetApplication_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplication_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.application_time, other.application_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewjd_status()).compareTo(other.isSetNewjd_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewjd_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newjd_status, other.newjd_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHr_chat()).compareTo(other.isSetHr_chat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_chat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_chat, other.hr_chat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_in_qx()).compareTo(other.isSetShow_in_qx());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_in_qx()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_in_qx, other.show_in_qx);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployee_slug()).compareTo(other.isSetEmployee_slug());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployee_slug()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employee_slug, other.employee_slug);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplay_locale()).compareTo(other.isSetDisplay_locale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplay_locale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.display_locale, other.display_locale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTalentpool_status()).compareTo(other.isSetTalentpool_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTalentpool_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.talentpool_status, other.talentpool_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("HrCompanyConf(");
    boolean first = true;

    if (isSetCompany_id()) {
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetTheme_id()) {
      if (!first) sb.append(", ");
      sb.append("theme_id:");
      sb.append(this.theme_id);
      first = false;
    }
    if (isSetHb_throttle()) {
      if (!first) sb.append(", ");
      sb.append("hb_throttle:");
      sb.append(this.hb_throttle);
      first = false;
    }
    if (isSetApp_reply()) {
      if (!first) sb.append(", ");
      sb.append("app_reply:");
      if (this.app_reply == null) {
        sb.append("null");
      } else {
        sb.append(this.app_reply);
      }
      first = false;
    }
    if (isSetCreate_time()) {
      if (!first) sb.append(", ");
      sb.append("create_time:");
      if (this.create_time == null) {
        sb.append("null");
      } else {
        sb.append(this.create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetEmployee_inding()) {
      if (!first) sb.append(", ");
      sb.append("employee_inding:");
      if (this.employee_inding == null) {
        sb.append("null");
      } else {
        sb.append(this.employee_inding);
      }
      first = false;
    }
    if (isSetRecommend_presentee()) {
      if (!first) sb.append(", ");
      sb.append("recommend_presentee:");
      if (this.recommend_presentee == null) {
        sb.append("null");
      } else {
        sb.append(this.recommend_presentee);
      }
      first = false;
    }
    if (isSetRecommend_success()) {
      if (!first) sb.append(", ");
      sb.append("recommend_success:");
      if (this.recommend_success == null) {
        sb.append("null");
      } else {
        sb.append(this.recommend_success);
      }
      first = false;
    }
    if (isSetForward_message()) {
      if (!first) sb.append(", ");
      sb.append("forward_message:");
      if (this.forward_message == null) {
        sb.append("null");
      } else {
        sb.append(this.forward_message);
      }
      first = false;
    }
    if (isSetApplication_count_limit()) {
      if (!first) sb.append(", ");
      sb.append("application_count_limit:");
      sb.append(this.application_count_limit);
      first = false;
    }
    if (isSetJob_custom_title()) {
      if (!first) sb.append(", ");
      sb.append("job_custom_title:");
      if (this.job_custom_title == null) {
        sb.append("null");
      } else {
        sb.append(this.job_custom_title);
      }
      first = false;
    }
    if (isSetSearch_seq()) {
      if (!first) sb.append(", ");
      sb.append("search_seq:");
      if (this.search_seq == null) {
        sb.append("null");
      } else {
        sb.append(this.search_seq);
      }
      first = false;
    }
    if (isSetSearch_img()) {
      if (!first) sb.append(", ");
      sb.append("search_img:");
      if (this.search_img == null) {
        sb.append("null");
      } else {
        sb.append(this.search_img);
      }
      first = false;
    }
    if (isSetJob_occupation()) {
      if (!first) sb.append(", ");
      sb.append("job_occupation:");
      if (this.job_occupation == null) {
        sb.append("null");
      } else {
        sb.append(this.job_occupation);
      }
      first = false;
    }
    if (isSetTeamname_custom()) {
      if (!first) sb.append(", ");
      sb.append("teamname_custom:");
      if (this.teamname_custom == null) {
        sb.append("null");
      } else {
        sb.append(this.teamname_custom);
      }
      first = false;
    }
    if (isSetApplication_time()) {
      if (!first) sb.append(", ");
      sb.append("application_time:");
      if (this.application_time == null) {
        sb.append("null");
      } else {
        sb.append(this.application_time);
      }
      first = false;
    }
    if (isSetNewjd_status()) {
      if (!first) sb.append(", ");
      sb.append("newjd_status:");
      sb.append(this.newjd_status);
      first = false;
    }
    if (isSetHr_chat()) {
      if (!first) sb.append(", ");
      sb.append("hr_chat:");
      sb.append(this.hr_chat);
      first = false;
    }
    if (isSetShow_in_qx()) {
      if (!first) sb.append(", ");
      sb.append("show_in_qx:");
      sb.append(this.show_in_qx);
      first = false;
    }
    if (isSetEmployee_slug()) {
      if (!first) sb.append(", ");
      sb.append("employee_slug:");
      if (this.employee_slug == null) {
        sb.append("null");
      } else {
        sb.append(this.employee_slug);
      }
      first = false;
    }
    if (isSetDisplay_locale()) {
      if (!first) sb.append(", ");
      sb.append("display_locale:");
      if (this.display_locale == null) {
        sb.append("null");
      } else {
        sb.append(this.display_locale);
      }
      first = false;
    }
    if (isSetTalentpool_status()) {
      if (!first) sb.append(", ");
      sb.append("talentpool_status:");
      sb.append(this.talentpool_status);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrCompanyConfStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrCompanyConfStandardScheme getScheme() {
      return new HrCompanyConfStandardScheme();
    }
  }

  private static class HrCompanyConfStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrCompanyConf> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrCompanyConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // THEME_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.theme_id = iprot.readI32();
              struct.setTheme_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HB_THROTTLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hb_throttle = iprot.readI32();
              struct.setHb_throttleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APP_REPLY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.app_reply = iprot.readString();
              struct.setApp_replyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EMPLOYEE_INDING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employee_inding = iprot.readString();
              struct.setEmployee_indingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RECOMMEND_PRESENTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommend_presentee = iprot.readString();
              struct.setRecommend_presenteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RECOMMEND_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommend_success = iprot.readString();
              struct.setRecommend_successIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FORWARD_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.forward_message = iprot.readString();
              struct.setForward_messageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPLICATION_COUNT_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.application_count_limit = iprot.readI16();
              struct.setApplication_count_limitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // JOB_CUSTOM_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_custom_title = iprot.readString();
              struct.setJob_custom_titleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SEARCH_SEQ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.search_seq = iprot.readString();
              struct.setSearch_seqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // SEARCH_IMG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.search_img = iprot.readString();
              struct.setSearch_imgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // JOB_OCCUPATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_occupation = iprot.readString();
              struct.setJob_occupationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TEAMNAME_CUSTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.teamname_custom = iprot.readString();
              struct.setTeamname_customIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // APPLICATION_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.application_time = iprot.readString();
              struct.setApplication_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // NEWJD_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.newjd_status = iprot.readI32();
              struct.setNewjd_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // HR_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.hr_chat = iprot.readDouble();
              struct.setHr_chatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // SHOW_IN_QX
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.show_in_qx = iprot.readDouble();
              struct.setShow_in_qxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // EMPLOYEE_SLUG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employee_slug = iprot.readString();
              struct.setEmployee_slugIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // DISPLAY_LOCALE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.display_locale = iprot.readString();
              struct.setDisplay_localeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TALENTPOOL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.talentpool_status = iprot.readByte();
              struct.setTalentpool_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrCompanyConf struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTheme_id()) {
        oprot.writeFieldBegin(THEME_ID_FIELD_DESC);
        oprot.writeI32(struct.theme_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHb_throttle()) {
        oprot.writeFieldBegin(HB_THROTTLE_FIELD_DESC);
        oprot.writeI32(struct.hb_throttle);
        oprot.writeFieldEnd();
      }
      if (struct.app_reply != null) {
        if (struct.isSetApp_reply()) {
          oprot.writeFieldBegin(APP_REPLY_FIELD_DESC);
          oprot.writeString(struct.app_reply);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_time != null) {
        if (struct.isSetCreate_time()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.employee_inding != null) {
        if (struct.isSetEmployee_inding()) {
          oprot.writeFieldBegin(EMPLOYEE_INDING_FIELD_DESC);
          oprot.writeString(struct.employee_inding);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recommend_presentee != null) {
        if (struct.isSetRecommend_presentee()) {
          oprot.writeFieldBegin(RECOMMEND_PRESENTEE_FIELD_DESC);
          oprot.writeString(struct.recommend_presentee);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recommend_success != null) {
        if (struct.isSetRecommend_success()) {
          oprot.writeFieldBegin(RECOMMEND_SUCCESS_FIELD_DESC);
          oprot.writeString(struct.recommend_success);
          oprot.writeFieldEnd();
        }
      }
      if (struct.forward_message != null) {
        if (struct.isSetForward_message()) {
          oprot.writeFieldBegin(FORWARD_MESSAGE_FIELD_DESC);
          oprot.writeString(struct.forward_message);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApplication_count_limit()) {
        oprot.writeFieldBegin(APPLICATION_COUNT_LIMIT_FIELD_DESC);
        oprot.writeI16(struct.application_count_limit);
        oprot.writeFieldEnd();
      }
      if (struct.job_custom_title != null) {
        if (struct.isSetJob_custom_title()) {
          oprot.writeFieldBegin(JOB_CUSTOM_TITLE_FIELD_DESC);
          oprot.writeString(struct.job_custom_title);
          oprot.writeFieldEnd();
        }
      }
      if (struct.search_seq != null) {
        if (struct.isSetSearch_seq()) {
          oprot.writeFieldBegin(SEARCH_SEQ_FIELD_DESC);
          oprot.writeString(struct.search_seq);
          oprot.writeFieldEnd();
        }
      }
      if (struct.search_img != null) {
        if (struct.isSetSearch_img()) {
          oprot.writeFieldBegin(SEARCH_IMG_FIELD_DESC);
          oprot.writeString(struct.search_img);
          oprot.writeFieldEnd();
        }
      }
      if (struct.job_occupation != null) {
        if (struct.isSetJob_occupation()) {
          oprot.writeFieldBegin(JOB_OCCUPATION_FIELD_DESC);
          oprot.writeString(struct.job_occupation);
          oprot.writeFieldEnd();
        }
      }
      if (struct.teamname_custom != null) {
        if (struct.isSetTeamname_custom()) {
          oprot.writeFieldBegin(TEAMNAME_CUSTOM_FIELD_DESC);
          oprot.writeString(struct.teamname_custom);
          oprot.writeFieldEnd();
        }
      }
      if (struct.application_time != null) {
        if (struct.isSetApplication_time()) {
          oprot.writeFieldBegin(APPLICATION_TIME_FIELD_DESC);
          oprot.writeString(struct.application_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNewjd_status()) {
        oprot.writeFieldBegin(NEWJD_STATUS_FIELD_DESC);
        oprot.writeI32(struct.newjd_status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHr_chat()) {
        oprot.writeFieldBegin(HR_CHAT_FIELD_DESC);
        oprot.writeDouble(struct.hr_chat);
        oprot.writeFieldEnd();
      }
      if (struct.isSetShow_in_qx()) {
        oprot.writeFieldBegin(SHOW_IN_QX_FIELD_DESC);
        oprot.writeDouble(struct.show_in_qx);
        oprot.writeFieldEnd();
      }
      if (struct.employee_slug != null) {
        if (struct.isSetEmployee_slug()) {
          oprot.writeFieldBegin(EMPLOYEE_SLUG_FIELD_DESC);
          oprot.writeString(struct.employee_slug);
          oprot.writeFieldEnd();
        }
      }
      if (struct.display_locale != null) {
        if (struct.isSetDisplay_locale()) {
          oprot.writeFieldBegin(DISPLAY_LOCALE_FIELD_DESC);
          oprot.writeString(struct.display_locale);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTalentpool_status()) {
        oprot.writeFieldBegin(TALENTPOOL_STATUS_FIELD_DESC);
        oprot.writeByte(struct.talentpool_status);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrCompanyConfTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrCompanyConfTupleScheme getScheme() {
      return new HrCompanyConfTupleScheme();
    }
  }

  private static class HrCompanyConfTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrCompanyConf> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrCompanyConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCompany_id()) {
        optionals.set(0);
      }
      if (struct.isSetTheme_id()) {
        optionals.set(1);
      }
      if (struct.isSetHb_throttle()) {
        optionals.set(2);
      }
      if (struct.isSetApp_reply()) {
        optionals.set(3);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(4);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(5);
      }
      if (struct.isSetEmployee_inding()) {
        optionals.set(6);
      }
      if (struct.isSetRecommend_presentee()) {
        optionals.set(7);
      }
      if (struct.isSetRecommend_success()) {
        optionals.set(8);
      }
      if (struct.isSetForward_message()) {
        optionals.set(9);
      }
      if (struct.isSetApplication_count_limit()) {
        optionals.set(10);
      }
      if (struct.isSetJob_custom_title()) {
        optionals.set(11);
      }
      if (struct.isSetSearch_seq()) {
        optionals.set(12);
      }
      if (struct.isSetSearch_img()) {
        optionals.set(13);
      }
      if (struct.isSetJob_occupation()) {
        optionals.set(14);
      }
      if (struct.isSetTeamname_custom()) {
        optionals.set(15);
      }
      if (struct.isSetApplication_time()) {
        optionals.set(16);
      }
      if (struct.isSetNewjd_status()) {
        optionals.set(17);
      }
      if (struct.isSetHr_chat()) {
        optionals.set(18);
      }
      if (struct.isSetShow_in_qx()) {
        optionals.set(19);
      }
      if (struct.isSetEmployee_slug()) {
        optionals.set(20);
      }
      if (struct.isSetDisplay_locale()) {
        optionals.set(21);
      }
      if (struct.isSetTalentpool_status()) {
        optionals.set(22);
      }
      oprot.writeBitSet(optionals, 23);
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetTheme_id()) {
        oprot.writeI32(struct.theme_id);
      }
      if (struct.isSetHb_throttle()) {
        oprot.writeI32(struct.hb_throttle);
      }
      if (struct.isSetApp_reply()) {
        oprot.writeString(struct.app_reply);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetEmployee_inding()) {
        oprot.writeString(struct.employee_inding);
      }
      if (struct.isSetRecommend_presentee()) {
        oprot.writeString(struct.recommend_presentee);
      }
      if (struct.isSetRecommend_success()) {
        oprot.writeString(struct.recommend_success);
      }
      if (struct.isSetForward_message()) {
        oprot.writeString(struct.forward_message);
      }
      if (struct.isSetApplication_count_limit()) {
        oprot.writeI16(struct.application_count_limit);
      }
      if (struct.isSetJob_custom_title()) {
        oprot.writeString(struct.job_custom_title);
      }
      if (struct.isSetSearch_seq()) {
        oprot.writeString(struct.search_seq);
      }
      if (struct.isSetSearch_img()) {
        oprot.writeString(struct.search_img);
      }
      if (struct.isSetJob_occupation()) {
        oprot.writeString(struct.job_occupation);
      }
      if (struct.isSetTeamname_custom()) {
        oprot.writeString(struct.teamname_custom);
      }
      if (struct.isSetApplication_time()) {
        oprot.writeString(struct.application_time);
      }
      if (struct.isSetNewjd_status()) {
        oprot.writeI32(struct.newjd_status);
      }
      if (struct.isSetHr_chat()) {
        oprot.writeDouble(struct.hr_chat);
      }
      if (struct.isSetShow_in_qx()) {
        oprot.writeDouble(struct.show_in_qx);
      }
      if (struct.isSetEmployee_slug()) {
        oprot.writeString(struct.employee_slug);
      }
      if (struct.isSetDisplay_locale()) {
        oprot.writeString(struct.display_locale);
      }
      if (struct.isSetTalentpool_status()) {
        oprot.writeByte(struct.talentpool_status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrCompanyConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(23);
      if (incoming.get(0)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.theme_id = iprot.readI32();
        struct.setTheme_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hb_throttle = iprot.readI32();
        struct.setHb_throttleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.app_reply = iprot.readString();
        struct.setApp_replyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.employee_inding = iprot.readString();
        struct.setEmployee_indingIsSet(true);
      }
      if (incoming.get(7)) {
        struct.recommend_presentee = iprot.readString();
        struct.setRecommend_presenteeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.recommend_success = iprot.readString();
        struct.setRecommend_successIsSet(true);
      }
      if (incoming.get(9)) {
        struct.forward_message = iprot.readString();
        struct.setForward_messageIsSet(true);
      }
      if (incoming.get(10)) {
        struct.application_count_limit = iprot.readI16();
        struct.setApplication_count_limitIsSet(true);
      }
      if (incoming.get(11)) {
        struct.job_custom_title = iprot.readString();
        struct.setJob_custom_titleIsSet(true);
      }
      if (incoming.get(12)) {
        struct.search_seq = iprot.readString();
        struct.setSearch_seqIsSet(true);
      }
      if (incoming.get(13)) {
        struct.search_img = iprot.readString();
        struct.setSearch_imgIsSet(true);
      }
      if (incoming.get(14)) {
        struct.job_occupation = iprot.readString();
        struct.setJob_occupationIsSet(true);
      }
      if (incoming.get(15)) {
        struct.teamname_custom = iprot.readString();
        struct.setTeamname_customIsSet(true);
      }
      if (incoming.get(16)) {
        struct.application_time = iprot.readString();
        struct.setApplication_timeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.newjd_status = iprot.readI32();
        struct.setNewjd_statusIsSet(true);
      }
      if (incoming.get(18)) {
        struct.hr_chat = iprot.readDouble();
        struct.setHr_chatIsSet(true);
      }
      if (incoming.get(19)) {
        struct.show_in_qx = iprot.readDouble();
        struct.setShow_in_qxIsSet(true);
      }
      if (incoming.get(20)) {
        struct.employee_slug = iprot.readString();
        struct.setEmployee_slugIsSet(true);
      }
      if (incoming.get(21)) {
        struct.display_locale = iprot.readString();
        struct.setDisplay_localeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.talentpool_status = iprot.readByte();
        struct.setTalentpool_statusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

