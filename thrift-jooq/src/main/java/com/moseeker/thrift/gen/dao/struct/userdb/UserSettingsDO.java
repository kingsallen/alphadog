/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.userdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-12")
public class UserSettingsDO implements org.apache.thrift.TBase<UserSettingsDO, UserSettingsDO._Fields>, java.io.Serializable, Cloneable, Comparable<UserSettingsDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserSettingsDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField BANNER_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("bannerUrl", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRIVACY_POLICY_FIELD_DESC = new org.apache.thrift.protocol.TField("privacyPolicy", org.apache.thrift.protocol.TType.BYTE, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserSettingsDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserSettingsDOTupleSchemeFactory();

  public int id; // optional
  public int userId; // optional
  public java.lang.String bannerUrl; // optional
  public byte privacyPolicy; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    USER_ID((short)2, "userId"),
    BANNER_URL((short)3, "bannerUrl"),
    PRIVACY_POLICY((short)4, "privacyPolicy");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // BANNER_URL
          return BANNER_URL;
        case 4: // PRIVACY_POLICY
          return PRIVACY_POLICY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __PRIVACYPOLICY_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.USER_ID,_Fields.BANNER_URL,_Fields.PRIVACY_POLICY};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BANNER_URL, new org.apache.thrift.meta_data.FieldMetaData("bannerUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRIVACY_POLICY, new org.apache.thrift.meta_data.FieldMetaData("privacyPolicy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserSettingsDO.class, metaDataMap);
  }

  public UserSettingsDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserSettingsDO(UserSettingsDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.userId = other.userId;
    if (other.isSetBannerUrl()) {
      this.bannerUrl = other.bannerUrl;
    }
    this.privacyPolicy = other.privacyPolicy;
  }

  public UserSettingsDO deepCopy() {
    return new UserSettingsDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.bannerUrl = null;
    setPrivacyPolicyIsSet(false);
    this.privacyPolicy = 0;
  }

  public int getId() {
    return this.id;
  }

  public UserSettingsDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public UserSettingsDO setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public java.lang.String getBannerUrl() {
    return this.bannerUrl;
  }

  public UserSettingsDO setBannerUrl(java.lang.String bannerUrl) {
    this.bannerUrl = bannerUrl;
    return this;
  }

  public void unsetBannerUrl() {
    this.bannerUrl = null;
  }

  /** Returns true if field bannerUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetBannerUrl() {
    return this.bannerUrl != null;
  }

  public void setBannerUrlIsSet(boolean value) {
    if (!value) {
      this.bannerUrl = null;
    }
  }

  public byte getPrivacyPolicy() {
    return this.privacyPolicy;
  }

  public UserSettingsDO setPrivacyPolicy(byte privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
    setPrivacyPolicyIsSet(true);
    return this;
  }

  public void unsetPrivacyPolicy() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRIVACYPOLICY_ISSET_ID);
  }

  /** Returns true if field privacyPolicy is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyPolicy() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRIVACYPOLICY_ISSET_ID);
  }

  public void setPrivacyPolicyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRIVACYPOLICY_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((java.lang.Integer)value);
      }
      break;

    case BANNER_URL:
      if (value == null) {
        unsetBannerUrl();
      } else {
        setBannerUrl((java.lang.String)value);
      }
      break;

    case PRIVACY_POLICY:
      if (value == null) {
        unsetPrivacyPolicy();
      } else {
        setPrivacyPolicy((java.lang.Byte)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case USER_ID:
      return getUserId();

    case BANNER_URL:
      return getBannerUrl();

    case PRIVACY_POLICY:
      return getPrivacyPolicy();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case USER_ID:
      return isSetUserId();
    case BANNER_URL:
      return isSetBannerUrl();
    case PRIVACY_POLICY:
      return isSetPrivacyPolicy();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserSettingsDO)
      return this.equals((UserSettingsDO)that);
    return false;
  }

  public boolean equals(UserSettingsDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_bannerUrl = true && this.isSetBannerUrl();
    boolean that_present_bannerUrl = true && that.isSetBannerUrl();
    if (this_present_bannerUrl || that_present_bannerUrl) {
      if (!(this_present_bannerUrl && that_present_bannerUrl))
        return false;
      if (!this.bannerUrl.equals(that.bannerUrl))
        return false;
    }

    boolean this_present_privacyPolicy = true && this.isSetPrivacyPolicy();
    boolean that_present_privacyPolicy = true && that.isSetPrivacyPolicy();
    if (this_present_privacyPolicy || that_present_privacyPolicy) {
      if (!(this_present_privacyPolicy && that_present_privacyPolicy))
        return false;
      if (this.privacyPolicy != that.privacyPolicy)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetUserId()) ? 131071 : 524287);
    if (isSetUserId())
      hashCode = hashCode * 8191 + userId;

    hashCode = hashCode * 8191 + ((isSetBannerUrl()) ? 131071 : 524287);
    if (isSetBannerUrl())
      hashCode = hashCode * 8191 + bannerUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetPrivacyPolicy()) ? 131071 : 524287);
    if (isSetPrivacyPolicy())
      hashCode = hashCode * 8191 + (int) (privacyPolicy);

    return hashCode;
  }

  @Override
  public int compareTo(UserSettingsDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBannerUrl()).compareTo(other.isSetBannerUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBannerUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bannerUrl, other.bannerUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPrivacyPolicy()).compareTo(other.isSetPrivacyPolicy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyPolicy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.privacyPolicy, other.privacyPolicy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserSettingsDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetUserId()) {
      if (!first) sb.append(", ");
      sb.append("userId:");
      sb.append(this.userId);
      first = false;
    }
    if (isSetBannerUrl()) {
      if (!first) sb.append(", ");
      sb.append("bannerUrl:");
      if (this.bannerUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.bannerUrl);
      }
      first = false;
    }
    if (isSetPrivacyPolicy()) {
      if (!first) sb.append(", ");
      sb.append("privacyPolicy:");
      sb.append(this.privacyPolicy);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserSettingsDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserSettingsDOStandardScheme getScheme() {
      return new UserSettingsDOStandardScheme();
    }
  }

  private static class UserSettingsDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserSettingsDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserSettingsDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BANNER_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bannerUrl = iprot.readString();
              struct.setBannerUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRIVACY_POLICY
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.privacyPolicy = iprot.readByte();
              struct.setPrivacyPolicyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserSettingsDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetUserId()) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI32(struct.userId);
        oprot.writeFieldEnd();
      }
      if (struct.bannerUrl != null) {
        if (struct.isSetBannerUrl()) {
          oprot.writeFieldBegin(BANNER_URL_FIELD_DESC);
          oprot.writeString(struct.bannerUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPrivacyPolicy()) {
        oprot.writeFieldBegin(PRIVACY_POLICY_FIELD_DESC);
        oprot.writeByte(struct.privacyPolicy);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserSettingsDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserSettingsDOTupleScheme getScheme() {
      return new UserSettingsDOTupleScheme();
    }
  }

  private static class UserSettingsDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserSettingsDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserSettingsDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetBannerUrl()) {
        optionals.set(2);
      }
      if (struct.isSetPrivacyPolicy()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetBannerUrl()) {
        oprot.writeString(struct.bannerUrl);
      }
      if (struct.isSetPrivacyPolicy()) {
        oprot.writeByte(struct.privacyPolicy);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserSettingsDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bannerUrl = iprot.readString();
        struct.setBannerUrlIsSet(true);
      }
      if (incoming.get(3)) {
        struct.privacyPolicy = iprot.readByte();
        struct.setPrivacyPolicyIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

