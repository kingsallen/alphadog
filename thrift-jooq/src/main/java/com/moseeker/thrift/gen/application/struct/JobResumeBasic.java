/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.application.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-8")
public class JobResumeBasic implements org.apache.thrift.TBase<JobResumeBasic, JobResumeBasic._Fields>, java.io.Serializable, Cloneable, Comparable<JobResumeBasic> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobResumeBasic");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField APPID_FIELD_DESC = new org.apache.thrift.protocol.TField("appid", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LASTNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastname", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("age", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField WORK_EXP_YEARS_FIELD_DESC = new org.apache.thrift.protocol.TField("work_exp_years", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField JOB_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("job_position", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField JOB_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("job_company", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField JOB_START_FIELD_DESC = new org.apache.thrift.protocol.TField("job_start", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField JOB_END_FIELD_DESC = new org.apache.thrift.protocol.TField("job_end", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField EDU_GRADE_FIELD_DESC = new org.apache.thrift.protocol.TField("edu_grade", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField EDU_SCHOOL_FIELD_DESC = new org.apache.thrift.protocol.TField("edu_school", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField EDU_START_FIELD_DESC = new org.apache.thrift.protocol.TField("edu_start", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField EDU_END_FIELD_DESC = new org.apache.thrift.protocol.TField("edu_end", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField RESUME_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("resume_type", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField CV_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cv_type", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField EMAIL_RESUME_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("email_resume_status", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("view_count", org.apache.thrift.protocol.TType.I32, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new JobResumeBasicStandardSchemeFactory());
    schemes.put(TupleScheme.class, new JobResumeBasicTupleSchemeFactory());
  }

  public long id; // optional
  public long appid; // optional
  public long position_id; // optional
  public String lastname; // optional
  public int age; // optional
  public int work_exp_years; // optional
  public String job_position; // optional
  public String job_company; // optional
  public String job_start; // optional
  public String job_end; // optional
  public String edu_grade; // optional
  public String edu_school; // optional
  public String edu_start; // optional
  public String edu_end; // optional
  public int resume_type; // optional
  public int cv_type; // optional
  public int email_resume_status; // optional
  public int view_count; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    APPID((short)2, "appid"),
    POSITION_ID((short)3, "position_id"),
    LASTNAME((short)4, "lastname"),
    AGE((short)5, "age"),
    WORK_EXP_YEARS((short)6, "work_exp_years"),
    JOB_POSITION((short)7, "job_position"),
    JOB_COMPANY((short)8, "job_company"),
    JOB_START((short)9, "job_start"),
    JOB_END((short)10, "job_end"),
    EDU_GRADE((short)11, "edu_grade"),
    EDU_SCHOOL((short)12, "edu_school"),
    EDU_START((short)13, "edu_start"),
    EDU_END((short)14, "edu_end"),
    RESUME_TYPE((short)15, "resume_type"),
    CV_TYPE((short)16, "cv_type"),
    EMAIL_RESUME_STATUS((short)17, "email_resume_status"),
    VIEW_COUNT((short)18, "view_count");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // APPID
          return APPID;
        case 3: // POSITION_ID
          return POSITION_ID;
        case 4: // LASTNAME
          return LASTNAME;
        case 5: // AGE
          return AGE;
        case 6: // WORK_EXP_YEARS
          return WORK_EXP_YEARS;
        case 7: // JOB_POSITION
          return JOB_POSITION;
        case 8: // JOB_COMPANY
          return JOB_COMPANY;
        case 9: // JOB_START
          return JOB_START;
        case 10: // JOB_END
          return JOB_END;
        case 11: // EDU_GRADE
          return EDU_GRADE;
        case 12: // EDU_SCHOOL
          return EDU_SCHOOL;
        case 13: // EDU_START
          return EDU_START;
        case 14: // EDU_END
          return EDU_END;
        case 15: // RESUME_TYPE
          return RESUME_TYPE;
        case 16: // CV_TYPE
          return CV_TYPE;
        case 17: // EMAIL_RESUME_STATUS
          return EMAIL_RESUME_STATUS;
        case 18: // VIEW_COUNT
          return VIEW_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __APPID_ISSET_ID = 1;
  private static final int __POSITION_ID_ISSET_ID = 2;
  private static final int __AGE_ISSET_ID = 3;
  private static final int __WORK_EXP_YEARS_ISSET_ID = 4;
  private static final int __RESUME_TYPE_ISSET_ID = 5;
  private static final int __CV_TYPE_ISSET_ID = 6;
  private static final int __EMAIL_RESUME_STATUS_ISSET_ID = 7;
  private static final int __VIEW_COUNT_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.APPID,_Fields.POSITION_ID,_Fields.LASTNAME,_Fields.AGE,_Fields.WORK_EXP_YEARS,_Fields.JOB_POSITION,_Fields.JOB_COMPANY,_Fields.JOB_START,_Fields.JOB_END,_Fields.EDU_GRADE,_Fields.EDU_SCHOOL,_Fields.EDU_START,_Fields.EDU_END,_Fields.RESUME_TYPE,_Fields.CV_TYPE,_Fields.EMAIL_RESUME_STATUS,_Fields.VIEW_COUNT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.APPID, new org.apache.thrift.meta_data.FieldMetaData("appid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LASTNAME, new org.apache.thrift.meta_data.FieldMetaData("lastname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGE, new org.apache.thrift.meta_data.FieldMetaData("age", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORK_EXP_YEARS, new org.apache.thrift.meta_data.FieldMetaData("work_exp_years", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JOB_POSITION, new org.apache.thrift.meta_data.FieldMetaData("job_position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("job_company", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_START, new org.apache.thrift.meta_data.FieldMetaData("job_start", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_END, new org.apache.thrift.meta_data.FieldMetaData("job_end", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDU_GRADE, new org.apache.thrift.meta_data.FieldMetaData("edu_grade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDU_SCHOOL, new org.apache.thrift.meta_data.FieldMetaData("edu_school", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDU_START, new org.apache.thrift.meta_data.FieldMetaData("edu_start", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDU_END, new org.apache.thrift.meta_data.FieldMetaData("edu_end", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESUME_TYPE, new org.apache.thrift.meta_data.FieldMetaData("resume_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CV_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cv_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_RESUME_STATUS, new org.apache.thrift.meta_data.FieldMetaData("email_resume_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("view_count", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobResumeBasic.class, metaDataMap);
  }

  public JobResumeBasic() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobResumeBasic(JobResumeBasic other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.appid = other.appid;
    this.position_id = other.position_id;
    if (other.isSetLastname()) {
      this.lastname = other.lastname;
    }
    this.age = other.age;
    this.work_exp_years = other.work_exp_years;
    if (other.isSetJob_position()) {
      this.job_position = other.job_position;
    }
    if (other.isSetJob_company()) {
      this.job_company = other.job_company;
    }
    if (other.isSetJob_start()) {
      this.job_start = other.job_start;
    }
    if (other.isSetJob_end()) {
      this.job_end = other.job_end;
    }
    if (other.isSetEdu_grade()) {
      this.edu_grade = other.edu_grade;
    }
    if (other.isSetEdu_school()) {
      this.edu_school = other.edu_school;
    }
    if (other.isSetEdu_start()) {
      this.edu_start = other.edu_start;
    }
    if (other.isSetEdu_end()) {
      this.edu_end = other.edu_end;
    }
    this.resume_type = other.resume_type;
    this.cv_type = other.cv_type;
    this.email_resume_status = other.email_resume_status;
    this.view_count = other.view_count;
  }

  public JobResumeBasic deepCopy() {
    return new JobResumeBasic(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setAppidIsSet(false);
    this.appid = 0;
    setPosition_idIsSet(false);
    this.position_id = 0;
    this.lastname = null;
    setAgeIsSet(false);
    this.age = 0;
    setWork_exp_yearsIsSet(false);
    this.work_exp_years = 0;
    this.job_position = null;
    this.job_company = null;
    this.job_start = null;
    this.job_end = null;
    this.edu_grade = null;
    this.edu_school = null;
    this.edu_start = null;
    this.edu_end = null;
    setResume_typeIsSet(false);
    this.resume_type = 0;
    setCv_typeIsSet(false);
    this.cv_type = 0;
    setEmail_resume_statusIsSet(false);
    this.email_resume_status = 0;
    setView_countIsSet(false);
    this.view_count = 0;
  }

  public long getId() {
    return this.id;
  }

  public JobResumeBasic setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public long getAppid() {
    return this.appid;
  }

  public JobResumeBasic setAppid(long appid) {
    this.appid = appid;
    setAppidIsSet(true);
    return this;
  }

  public void unsetAppid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPID_ISSET_ID);
  }

  /** Returns true if field appid is set (has been assigned a value) and false otherwise */
  public boolean isSetAppid() {
    return EncodingUtils.testBit(__isset_bitfield, __APPID_ISSET_ID);
  }

  public void setAppidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPID_ISSET_ID, value);
  }

  public long getPosition_id() {
    return this.position_id;
  }

  public JobResumeBasic setPosition_id(long position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public String getLastname() {
    return this.lastname;
  }

  public JobResumeBasic setLastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  public void unsetLastname() {
    this.lastname = null;
  }

  /** Returns true if field lastname is set (has been assigned a value) and false otherwise */
  public boolean isSetLastname() {
    return this.lastname != null;
  }

  public void setLastnameIsSet(boolean value) {
    if (!value) {
      this.lastname = null;
    }
  }

  public int getAge() {
    return this.age;
  }

  public JobResumeBasic setAge(int age) {
    this.age = age;
    setAgeIsSet(true);
    return this;
  }

  public void unsetAge() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  /** Returns true if field age is set (has been assigned a value) and false otherwise */
  public boolean isSetAge() {
    return EncodingUtils.testBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  public void setAgeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGE_ISSET_ID, value);
  }

  public int getWork_exp_years() {
    return this.work_exp_years;
  }

  public JobResumeBasic setWork_exp_years(int work_exp_years) {
    this.work_exp_years = work_exp_years;
    setWork_exp_yearsIsSet(true);
    return this;
  }

  public void unsetWork_exp_years() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __WORK_EXP_YEARS_ISSET_ID);
  }

  /** Returns true if field work_exp_years is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_exp_years() {
    return EncodingUtils.testBit(__isset_bitfield, __WORK_EXP_YEARS_ISSET_ID);
  }

  public void setWork_exp_yearsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __WORK_EXP_YEARS_ISSET_ID, value);
  }

  public String getJob_position() {
    return this.job_position;
  }

  public JobResumeBasic setJob_position(String job_position) {
    this.job_position = job_position;
    return this;
  }

  public void unsetJob_position() {
    this.job_position = null;
  }

  /** Returns true if field job_position is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_position() {
    return this.job_position != null;
  }

  public void setJob_positionIsSet(boolean value) {
    if (!value) {
      this.job_position = null;
    }
  }

  public String getJob_company() {
    return this.job_company;
  }

  public JobResumeBasic setJob_company(String job_company) {
    this.job_company = job_company;
    return this;
  }

  public void unsetJob_company() {
    this.job_company = null;
  }

  /** Returns true if field job_company is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_company() {
    return this.job_company != null;
  }

  public void setJob_companyIsSet(boolean value) {
    if (!value) {
      this.job_company = null;
    }
  }

  public String getJob_start() {
    return this.job_start;
  }

  public JobResumeBasic setJob_start(String job_start) {
    this.job_start = job_start;
    return this;
  }

  public void unsetJob_start() {
    this.job_start = null;
  }

  /** Returns true if field job_start is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_start() {
    return this.job_start != null;
  }

  public void setJob_startIsSet(boolean value) {
    if (!value) {
      this.job_start = null;
    }
  }

  public String getJob_end() {
    return this.job_end;
  }

  public JobResumeBasic setJob_end(String job_end) {
    this.job_end = job_end;
    return this;
  }

  public void unsetJob_end() {
    this.job_end = null;
  }

  /** Returns true if field job_end is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_end() {
    return this.job_end != null;
  }

  public void setJob_endIsSet(boolean value) {
    if (!value) {
      this.job_end = null;
    }
  }

  public String getEdu_grade() {
    return this.edu_grade;
  }

  public JobResumeBasic setEdu_grade(String edu_grade) {
    this.edu_grade = edu_grade;
    return this;
  }

  public void unsetEdu_grade() {
    this.edu_grade = null;
  }

  /** Returns true if field edu_grade is set (has been assigned a value) and false otherwise */
  public boolean isSetEdu_grade() {
    return this.edu_grade != null;
  }

  public void setEdu_gradeIsSet(boolean value) {
    if (!value) {
      this.edu_grade = null;
    }
  }

  public String getEdu_school() {
    return this.edu_school;
  }

  public JobResumeBasic setEdu_school(String edu_school) {
    this.edu_school = edu_school;
    return this;
  }

  public void unsetEdu_school() {
    this.edu_school = null;
  }

  /** Returns true if field edu_school is set (has been assigned a value) and false otherwise */
  public boolean isSetEdu_school() {
    return this.edu_school != null;
  }

  public void setEdu_schoolIsSet(boolean value) {
    if (!value) {
      this.edu_school = null;
    }
  }

  public String getEdu_start() {
    return this.edu_start;
  }

  public JobResumeBasic setEdu_start(String edu_start) {
    this.edu_start = edu_start;
    return this;
  }

  public void unsetEdu_start() {
    this.edu_start = null;
  }

  /** Returns true if field edu_start is set (has been assigned a value) and false otherwise */
  public boolean isSetEdu_start() {
    return this.edu_start != null;
  }

  public void setEdu_startIsSet(boolean value) {
    if (!value) {
      this.edu_start = null;
    }
  }

  public String getEdu_end() {
    return this.edu_end;
  }

  public JobResumeBasic setEdu_end(String edu_end) {
    this.edu_end = edu_end;
    return this;
  }

  public void unsetEdu_end() {
    this.edu_end = null;
  }

  /** Returns true if field edu_end is set (has been assigned a value) and false otherwise */
  public boolean isSetEdu_end() {
    return this.edu_end != null;
  }

  public void setEdu_endIsSet(boolean value) {
    if (!value) {
      this.edu_end = null;
    }
  }

  public int getResume_type() {
    return this.resume_type;
  }

  public JobResumeBasic setResume_type(int resume_type) {
    this.resume_type = resume_type;
    setResume_typeIsSet(true);
    return this;
  }

  public void unsetResume_type() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESUME_TYPE_ISSET_ID);
  }

  /** Returns true if field resume_type is set (has been assigned a value) and false otherwise */
  public boolean isSetResume_type() {
    return EncodingUtils.testBit(__isset_bitfield, __RESUME_TYPE_ISSET_ID);
  }

  public void setResume_typeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESUME_TYPE_ISSET_ID, value);
  }

  public int getCv_type() {
    return this.cv_type;
  }

  public JobResumeBasic setCv_type(int cv_type) {
    this.cv_type = cv_type;
    setCv_typeIsSet(true);
    return this;
  }

  public void unsetCv_type() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CV_TYPE_ISSET_ID);
  }

  /** Returns true if field cv_type is set (has been assigned a value) and false otherwise */
  public boolean isSetCv_type() {
    return EncodingUtils.testBit(__isset_bitfield, __CV_TYPE_ISSET_ID);
  }

  public void setCv_typeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CV_TYPE_ISSET_ID, value);
  }

  public int getEmail_resume_status() {
    return this.email_resume_status;
  }

  public JobResumeBasic setEmail_resume_status(int email_resume_status) {
    this.email_resume_status = email_resume_status;
    setEmail_resume_statusIsSet(true);
    return this;
  }

  public void unsetEmail_resume_status() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EMAIL_RESUME_STATUS_ISSET_ID);
  }

  /** Returns true if field email_resume_status is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_resume_status() {
    return EncodingUtils.testBit(__isset_bitfield, __EMAIL_RESUME_STATUS_ISSET_ID);
  }

  public void setEmail_resume_statusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EMAIL_RESUME_STATUS_ISSET_ID, value);
  }

  public int getView_count() {
    return this.view_count;
  }

  public JobResumeBasic setView_count(int view_count) {
    this.view_count = view_count;
    setView_countIsSet(true);
    return this;
  }

  public void unsetView_count() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID);
  }

  /** Returns true if field view_count is set (has been assigned a value) and false otherwise */
  public boolean isSetView_count() {
    return EncodingUtils.testBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID);
  }

  public void setView_countIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIEW_COUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case APPID:
      if (value == null) {
        unsetAppid();
      } else {
        setAppid((Long)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((Long)value);
      }
      break;

    case LASTNAME:
      if (value == null) {
        unsetLastname();
      } else {
        setLastname((String)value);
      }
      break;

    case AGE:
      if (value == null) {
        unsetAge();
      } else {
        setAge((Integer)value);
      }
      break;

    case WORK_EXP_YEARS:
      if (value == null) {
        unsetWork_exp_years();
      } else {
        setWork_exp_years((Integer)value);
      }
      break;

    case JOB_POSITION:
      if (value == null) {
        unsetJob_position();
      } else {
        setJob_position((String)value);
      }
      break;

    case JOB_COMPANY:
      if (value == null) {
        unsetJob_company();
      } else {
        setJob_company((String)value);
      }
      break;

    case JOB_START:
      if (value == null) {
        unsetJob_start();
      } else {
        setJob_start((String)value);
      }
      break;

    case JOB_END:
      if (value == null) {
        unsetJob_end();
      } else {
        setJob_end((String)value);
      }
      break;

    case EDU_GRADE:
      if (value == null) {
        unsetEdu_grade();
      } else {
        setEdu_grade((String)value);
      }
      break;

    case EDU_SCHOOL:
      if (value == null) {
        unsetEdu_school();
      } else {
        setEdu_school((String)value);
      }
      break;

    case EDU_START:
      if (value == null) {
        unsetEdu_start();
      } else {
        setEdu_start((String)value);
      }
      break;

    case EDU_END:
      if (value == null) {
        unsetEdu_end();
      } else {
        setEdu_end((String)value);
      }
      break;

    case RESUME_TYPE:
      if (value == null) {
        unsetResume_type();
      } else {
        setResume_type((Integer)value);
      }
      break;

    case CV_TYPE:
      if (value == null) {
        unsetCv_type();
      } else {
        setCv_type((Integer)value);
      }
      break;

    case EMAIL_RESUME_STATUS:
      if (value == null) {
        unsetEmail_resume_status();
      } else {
        setEmail_resume_status((Integer)value);
      }
      break;

    case VIEW_COUNT:
      if (value == null) {
        unsetView_count();
      } else {
        setView_count((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case APPID:
      return Long.valueOf(getAppid());

    case POSITION_ID:
      return Long.valueOf(getPosition_id());

    case LASTNAME:
      return getLastname();

    case AGE:
      return Integer.valueOf(getAge());

    case WORK_EXP_YEARS:
      return Integer.valueOf(getWork_exp_years());

    case JOB_POSITION:
      return getJob_position();

    case JOB_COMPANY:
      return getJob_company();

    case JOB_START:
      return getJob_start();

    case JOB_END:
      return getJob_end();

    case EDU_GRADE:
      return getEdu_grade();

    case EDU_SCHOOL:
      return getEdu_school();

    case EDU_START:
      return getEdu_start();

    case EDU_END:
      return getEdu_end();

    case RESUME_TYPE:
      return Integer.valueOf(getResume_type());

    case CV_TYPE:
      return Integer.valueOf(getCv_type());

    case EMAIL_RESUME_STATUS:
      return Integer.valueOf(getEmail_resume_status());

    case VIEW_COUNT:
      return Integer.valueOf(getView_count());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case APPID:
      return isSetAppid();
    case POSITION_ID:
      return isSetPosition_id();
    case LASTNAME:
      return isSetLastname();
    case AGE:
      return isSetAge();
    case WORK_EXP_YEARS:
      return isSetWork_exp_years();
    case JOB_POSITION:
      return isSetJob_position();
    case JOB_COMPANY:
      return isSetJob_company();
    case JOB_START:
      return isSetJob_start();
    case JOB_END:
      return isSetJob_end();
    case EDU_GRADE:
      return isSetEdu_grade();
    case EDU_SCHOOL:
      return isSetEdu_school();
    case EDU_START:
      return isSetEdu_start();
    case EDU_END:
      return isSetEdu_end();
    case RESUME_TYPE:
      return isSetResume_type();
    case CV_TYPE:
      return isSetCv_type();
    case EMAIL_RESUME_STATUS:
      return isSetEmail_resume_status();
    case VIEW_COUNT:
      return isSetView_count();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof JobResumeBasic)
      return this.equals((JobResumeBasic)that);
    return false;
  }

  public boolean equals(JobResumeBasic that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_appid = true && this.isSetAppid();
    boolean that_present_appid = true && that.isSetAppid();
    if (this_present_appid || that_present_appid) {
      if (!(this_present_appid && that_present_appid))
        return false;
      if (this.appid != that.appid)
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_lastname = true && this.isSetLastname();
    boolean that_present_lastname = true && that.isSetLastname();
    if (this_present_lastname || that_present_lastname) {
      if (!(this_present_lastname && that_present_lastname))
        return false;
      if (!this.lastname.equals(that.lastname))
        return false;
    }

    boolean this_present_age = true && this.isSetAge();
    boolean that_present_age = true && that.isSetAge();
    if (this_present_age || that_present_age) {
      if (!(this_present_age && that_present_age))
        return false;
      if (this.age != that.age)
        return false;
    }

    boolean this_present_work_exp_years = true && this.isSetWork_exp_years();
    boolean that_present_work_exp_years = true && that.isSetWork_exp_years();
    if (this_present_work_exp_years || that_present_work_exp_years) {
      if (!(this_present_work_exp_years && that_present_work_exp_years))
        return false;
      if (this.work_exp_years != that.work_exp_years)
        return false;
    }

    boolean this_present_job_position = true && this.isSetJob_position();
    boolean that_present_job_position = true && that.isSetJob_position();
    if (this_present_job_position || that_present_job_position) {
      if (!(this_present_job_position && that_present_job_position))
        return false;
      if (!this.job_position.equals(that.job_position))
        return false;
    }

    boolean this_present_job_company = true && this.isSetJob_company();
    boolean that_present_job_company = true && that.isSetJob_company();
    if (this_present_job_company || that_present_job_company) {
      if (!(this_present_job_company && that_present_job_company))
        return false;
      if (!this.job_company.equals(that.job_company))
        return false;
    }

    boolean this_present_job_start = true && this.isSetJob_start();
    boolean that_present_job_start = true && that.isSetJob_start();
    if (this_present_job_start || that_present_job_start) {
      if (!(this_present_job_start && that_present_job_start))
        return false;
      if (!this.job_start.equals(that.job_start))
        return false;
    }

    boolean this_present_job_end = true && this.isSetJob_end();
    boolean that_present_job_end = true && that.isSetJob_end();
    if (this_present_job_end || that_present_job_end) {
      if (!(this_present_job_end && that_present_job_end))
        return false;
      if (!this.job_end.equals(that.job_end))
        return false;
    }

    boolean this_present_edu_grade = true && this.isSetEdu_grade();
    boolean that_present_edu_grade = true && that.isSetEdu_grade();
    if (this_present_edu_grade || that_present_edu_grade) {
      if (!(this_present_edu_grade && that_present_edu_grade))
        return false;
      if (!this.edu_grade.equals(that.edu_grade))
        return false;
    }

    boolean this_present_edu_school = true && this.isSetEdu_school();
    boolean that_present_edu_school = true && that.isSetEdu_school();
    if (this_present_edu_school || that_present_edu_school) {
      if (!(this_present_edu_school && that_present_edu_school))
        return false;
      if (!this.edu_school.equals(that.edu_school))
        return false;
    }

    boolean this_present_edu_start = true && this.isSetEdu_start();
    boolean that_present_edu_start = true && that.isSetEdu_start();
    if (this_present_edu_start || that_present_edu_start) {
      if (!(this_present_edu_start && that_present_edu_start))
        return false;
      if (!this.edu_start.equals(that.edu_start))
        return false;
    }

    boolean this_present_edu_end = true && this.isSetEdu_end();
    boolean that_present_edu_end = true && that.isSetEdu_end();
    if (this_present_edu_end || that_present_edu_end) {
      if (!(this_present_edu_end && that_present_edu_end))
        return false;
      if (!this.edu_end.equals(that.edu_end))
        return false;
    }

    boolean this_present_resume_type = true && this.isSetResume_type();
    boolean that_present_resume_type = true && that.isSetResume_type();
    if (this_present_resume_type || that_present_resume_type) {
      if (!(this_present_resume_type && that_present_resume_type))
        return false;
      if (this.resume_type != that.resume_type)
        return false;
    }

    boolean this_present_cv_type = true && this.isSetCv_type();
    boolean that_present_cv_type = true && that.isSetCv_type();
    if (this_present_cv_type || that_present_cv_type) {
      if (!(this_present_cv_type && that_present_cv_type))
        return false;
      if (this.cv_type != that.cv_type)
        return false;
    }

    boolean this_present_email_resume_status = true && this.isSetEmail_resume_status();
    boolean that_present_email_resume_status = true && that.isSetEmail_resume_status();
    if (this_present_email_resume_status || that_present_email_resume_status) {
      if (!(this_present_email_resume_status && that_present_email_resume_status))
        return false;
      if (this.email_resume_status != that.email_resume_status)
        return false;
    }

    boolean this_present_view_count = true && this.isSetView_count();
    boolean that_present_view_count = true && that.isSetView_count();
    if (this_present_view_count || that_present_view_count) {
      if (!(this_present_view_count && that_present_view_count))
        return false;
      if (this.view_count != that.view_count)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_appid = true && (isSetAppid());
    list.add(present_appid);
    if (present_appid)
      list.add(appid);

    boolean present_position_id = true && (isSetPosition_id());
    list.add(present_position_id);
    if (present_position_id)
      list.add(position_id);

    boolean present_lastname = true && (isSetLastname());
    list.add(present_lastname);
    if (present_lastname)
      list.add(lastname);

    boolean present_age = true && (isSetAge());
    list.add(present_age);
    if (present_age)
      list.add(age);

    boolean present_work_exp_years = true && (isSetWork_exp_years());
    list.add(present_work_exp_years);
    if (present_work_exp_years)
      list.add(work_exp_years);

    boolean present_job_position = true && (isSetJob_position());
    list.add(present_job_position);
    if (present_job_position)
      list.add(job_position);

    boolean present_job_company = true && (isSetJob_company());
    list.add(present_job_company);
    if (present_job_company)
      list.add(job_company);

    boolean present_job_start = true && (isSetJob_start());
    list.add(present_job_start);
    if (present_job_start)
      list.add(job_start);

    boolean present_job_end = true && (isSetJob_end());
    list.add(present_job_end);
    if (present_job_end)
      list.add(job_end);

    boolean present_edu_grade = true && (isSetEdu_grade());
    list.add(present_edu_grade);
    if (present_edu_grade)
      list.add(edu_grade);

    boolean present_edu_school = true && (isSetEdu_school());
    list.add(present_edu_school);
    if (present_edu_school)
      list.add(edu_school);

    boolean present_edu_start = true && (isSetEdu_start());
    list.add(present_edu_start);
    if (present_edu_start)
      list.add(edu_start);

    boolean present_edu_end = true && (isSetEdu_end());
    list.add(present_edu_end);
    if (present_edu_end)
      list.add(edu_end);

    boolean present_resume_type = true && (isSetResume_type());
    list.add(present_resume_type);
    if (present_resume_type)
      list.add(resume_type);

    boolean present_cv_type = true && (isSetCv_type());
    list.add(present_cv_type);
    if (present_cv_type)
      list.add(cv_type);

    boolean present_email_resume_status = true && (isSetEmail_resume_status());
    list.add(present_email_resume_status);
    if (present_email_resume_status)
      list.add(email_resume_status);

    boolean present_view_count = true && (isSetView_count());
    list.add(present_view_count);
    if (present_view_count)
      list.add(view_count);

    return list.hashCode();
  }

  @Override
  public int compareTo(JobResumeBasic other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppid()).compareTo(other.isSetAppid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appid, other.appid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastname()).compareTo(other.isSetLastname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastname, other.lastname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAge()).compareTo(other.isSetAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age, other.age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWork_exp_years()).compareTo(other.isSetWork_exp_years());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_exp_years()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_exp_years, other.work_exp_years);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_position()).compareTo(other.isSetJob_position());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_position()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_position, other.job_position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_company()).compareTo(other.isSetJob_company());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_company()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_company, other.job_company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_start()).compareTo(other.isSetJob_start());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_start()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_start, other.job_start);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJob_end()).compareTo(other.isSetJob_end());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_end()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_end, other.job_end);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEdu_grade()).compareTo(other.isSetEdu_grade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEdu_grade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.edu_grade, other.edu_grade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEdu_school()).compareTo(other.isSetEdu_school());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEdu_school()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.edu_school, other.edu_school);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEdu_start()).compareTo(other.isSetEdu_start());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEdu_start()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.edu_start, other.edu_start);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEdu_end()).compareTo(other.isSetEdu_end());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEdu_end()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.edu_end, other.edu_end);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResume_type()).compareTo(other.isSetResume_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResume_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resume_type, other.resume_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCv_type()).compareTo(other.isSetCv_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCv_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cv_type, other.cv_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail_resume_status()).compareTo(other.isSetEmail_resume_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_resume_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_resume_status, other.email_resume_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetView_count()).compareTo(other.isSetView_count());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetView_count()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.view_count, other.view_count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("JobResumeBasic(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetAppid()) {
      if (!first) sb.append(", ");
      sb.append("appid:");
      sb.append(this.appid);
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetLastname()) {
      if (!first) sb.append(", ");
      sb.append("lastname:");
      if (this.lastname == null) {
        sb.append("null");
      } else {
        sb.append(this.lastname);
      }
      first = false;
    }
    if (isSetAge()) {
      if (!first) sb.append(", ");
      sb.append("age:");
      sb.append(this.age);
      first = false;
    }
    if (isSetWork_exp_years()) {
      if (!first) sb.append(", ");
      sb.append("work_exp_years:");
      sb.append(this.work_exp_years);
      first = false;
    }
    if (isSetJob_position()) {
      if (!first) sb.append(", ");
      sb.append("job_position:");
      if (this.job_position == null) {
        sb.append("null");
      } else {
        sb.append(this.job_position);
      }
      first = false;
    }
    if (isSetJob_company()) {
      if (!first) sb.append(", ");
      sb.append("job_company:");
      if (this.job_company == null) {
        sb.append("null");
      } else {
        sb.append(this.job_company);
      }
      first = false;
    }
    if (isSetJob_start()) {
      if (!first) sb.append(", ");
      sb.append("job_start:");
      if (this.job_start == null) {
        sb.append("null");
      } else {
        sb.append(this.job_start);
      }
      first = false;
    }
    if (isSetJob_end()) {
      if (!first) sb.append(", ");
      sb.append("job_end:");
      if (this.job_end == null) {
        sb.append("null");
      } else {
        sb.append(this.job_end);
      }
      first = false;
    }
    if (isSetEdu_grade()) {
      if (!first) sb.append(", ");
      sb.append("edu_grade:");
      if (this.edu_grade == null) {
        sb.append("null");
      } else {
        sb.append(this.edu_grade);
      }
      first = false;
    }
    if (isSetEdu_school()) {
      if (!first) sb.append(", ");
      sb.append("edu_school:");
      if (this.edu_school == null) {
        sb.append("null");
      } else {
        sb.append(this.edu_school);
      }
      first = false;
    }
    if (isSetEdu_start()) {
      if (!first) sb.append(", ");
      sb.append("edu_start:");
      if (this.edu_start == null) {
        sb.append("null");
      } else {
        sb.append(this.edu_start);
      }
      first = false;
    }
    if (isSetEdu_end()) {
      if (!first) sb.append(", ");
      sb.append("edu_end:");
      if (this.edu_end == null) {
        sb.append("null");
      } else {
        sb.append(this.edu_end);
      }
      first = false;
    }
    if (isSetResume_type()) {
      if (!first) sb.append(", ");
      sb.append("resume_type:");
      sb.append(this.resume_type);
      first = false;
    }
    if (isSetCv_type()) {
      if (!first) sb.append(", ");
      sb.append("cv_type:");
      sb.append(this.cv_type);
      first = false;
    }
    if (isSetEmail_resume_status()) {
      if (!first) sb.append(", ");
      sb.append("email_resume_status:");
      sb.append(this.email_resume_status);
      first = false;
    }
    if (isSetView_count()) {
      if (!first) sb.append(", ");
      sb.append("view_count:");
      sb.append(this.view_count);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobResumeBasicStandardSchemeFactory implements SchemeFactory {
    public JobResumeBasicStandardScheme getScheme() {
      return new JobResumeBasicStandardScheme();
    }
  }

  private static class JobResumeBasicStandardScheme extends StandardScheme<JobResumeBasic> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobResumeBasic struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APPID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.appid = iprot.readI64();
              struct.setAppidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.position_id = iprot.readI64();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LASTNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastname = iprot.readString();
              struct.setLastnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.age = iprot.readI32();
              struct.setAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // WORK_EXP_YEARS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.work_exp_years = iprot.readI32();
              struct.setWork_exp_yearsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // JOB_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_position = iprot.readString();
              struct.setJob_positionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // JOB_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_company = iprot.readString();
              struct.setJob_companyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JOB_START
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_start = iprot.readString();
              struct.setJob_startIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // JOB_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_end = iprot.readString();
              struct.setJob_endIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // EDU_GRADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.edu_grade = iprot.readString();
              struct.setEdu_gradeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // EDU_SCHOOL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.edu_school = iprot.readString();
              struct.setEdu_schoolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // EDU_START
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.edu_start = iprot.readString();
              struct.setEdu_startIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // EDU_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.edu_end = iprot.readString();
              struct.setEdu_endIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RESUME_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resume_type = iprot.readI32();
              struct.setResume_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CV_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cv_type = iprot.readI32();
              struct.setCv_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EMAIL_RESUME_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.email_resume_status = iprot.readI32();
              struct.setEmail_resume_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.view_count = iprot.readI32();
              struct.setView_countIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobResumeBasic struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAppid()) {
        oprot.writeFieldBegin(APPID_FIELD_DESC);
        oprot.writeI64(struct.appid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI64(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.lastname != null) {
        if (struct.isSetLastname()) {
          oprot.writeFieldBegin(LASTNAME_FIELD_DESC);
          oprot.writeString(struct.lastname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAge()) {
        oprot.writeFieldBegin(AGE_FIELD_DESC);
        oprot.writeI32(struct.age);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWork_exp_years()) {
        oprot.writeFieldBegin(WORK_EXP_YEARS_FIELD_DESC);
        oprot.writeI32(struct.work_exp_years);
        oprot.writeFieldEnd();
      }
      if (struct.job_position != null) {
        if (struct.isSetJob_position()) {
          oprot.writeFieldBegin(JOB_POSITION_FIELD_DESC);
          oprot.writeString(struct.job_position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.job_company != null) {
        if (struct.isSetJob_company()) {
          oprot.writeFieldBegin(JOB_COMPANY_FIELD_DESC);
          oprot.writeString(struct.job_company);
          oprot.writeFieldEnd();
        }
      }
      if (struct.job_start != null) {
        if (struct.isSetJob_start()) {
          oprot.writeFieldBegin(JOB_START_FIELD_DESC);
          oprot.writeString(struct.job_start);
          oprot.writeFieldEnd();
        }
      }
      if (struct.job_end != null) {
        if (struct.isSetJob_end()) {
          oprot.writeFieldBegin(JOB_END_FIELD_DESC);
          oprot.writeString(struct.job_end);
          oprot.writeFieldEnd();
        }
      }
      if (struct.edu_grade != null) {
        if (struct.isSetEdu_grade()) {
          oprot.writeFieldBegin(EDU_GRADE_FIELD_DESC);
          oprot.writeString(struct.edu_grade);
          oprot.writeFieldEnd();
        }
      }
      if (struct.edu_school != null) {
        if (struct.isSetEdu_school()) {
          oprot.writeFieldBegin(EDU_SCHOOL_FIELD_DESC);
          oprot.writeString(struct.edu_school);
          oprot.writeFieldEnd();
        }
      }
      if (struct.edu_start != null) {
        if (struct.isSetEdu_start()) {
          oprot.writeFieldBegin(EDU_START_FIELD_DESC);
          oprot.writeString(struct.edu_start);
          oprot.writeFieldEnd();
        }
      }
      if (struct.edu_end != null) {
        if (struct.isSetEdu_end()) {
          oprot.writeFieldBegin(EDU_END_FIELD_DESC);
          oprot.writeString(struct.edu_end);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetResume_type()) {
        oprot.writeFieldBegin(RESUME_TYPE_FIELD_DESC);
        oprot.writeI32(struct.resume_type);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCv_type()) {
        oprot.writeFieldBegin(CV_TYPE_FIELD_DESC);
        oprot.writeI32(struct.cv_type);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmail_resume_status()) {
        oprot.writeFieldBegin(EMAIL_RESUME_STATUS_FIELD_DESC);
        oprot.writeI32(struct.email_resume_status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetView_count()) {
        oprot.writeFieldBegin(VIEW_COUNT_FIELD_DESC);
        oprot.writeI32(struct.view_count);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobResumeBasicTupleSchemeFactory implements SchemeFactory {
    public JobResumeBasicTupleScheme getScheme() {
      return new JobResumeBasicTupleScheme();
    }
  }

  private static class JobResumeBasicTupleScheme extends TupleScheme<JobResumeBasic> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobResumeBasic struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetAppid()) {
        optionals.set(1);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(2);
      }
      if (struct.isSetLastname()) {
        optionals.set(3);
      }
      if (struct.isSetAge()) {
        optionals.set(4);
      }
      if (struct.isSetWork_exp_years()) {
        optionals.set(5);
      }
      if (struct.isSetJob_position()) {
        optionals.set(6);
      }
      if (struct.isSetJob_company()) {
        optionals.set(7);
      }
      if (struct.isSetJob_start()) {
        optionals.set(8);
      }
      if (struct.isSetJob_end()) {
        optionals.set(9);
      }
      if (struct.isSetEdu_grade()) {
        optionals.set(10);
      }
      if (struct.isSetEdu_school()) {
        optionals.set(11);
      }
      if (struct.isSetEdu_start()) {
        optionals.set(12);
      }
      if (struct.isSetEdu_end()) {
        optionals.set(13);
      }
      if (struct.isSetResume_type()) {
        optionals.set(14);
      }
      if (struct.isSetCv_type()) {
        optionals.set(15);
      }
      if (struct.isSetEmail_resume_status()) {
        optionals.set(16);
      }
      if (struct.isSetView_count()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetAppid()) {
        oprot.writeI64(struct.appid);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI64(struct.position_id);
      }
      if (struct.isSetLastname()) {
        oprot.writeString(struct.lastname);
      }
      if (struct.isSetAge()) {
        oprot.writeI32(struct.age);
      }
      if (struct.isSetWork_exp_years()) {
        oprot.writeI32(struct.work_exp_years);
      }
      if (struct.isSetJob_position()) {
        oprot.writeString(struct.job_position);
      }
      if (struct.isSetJob_company()) {
        oprot.writeString(struct.job_company);
      }
      if (struct.isSetJob_start()) {
        oprot.writeString(struct.job_start);
      }
      if (struct.isSetJob_end()) {
        oprot.writeString(struct.job_end);
      }
      if (struct.isSetEdu_grade()) {
        oprot.writeString(struct.edu_grade);
      }
      if (struct.isSetEdu_school()) {
        oprot.writeString(struct.edu_school);
      }
      if (struct.isSetEdu_start()) {
        oprot.writeString(struct.edu_start);
      }
      if (struct.isSetEdu_end()) {
        oprot.writeString(struct.edu_end);
      }
      if (struct.isSetResume_type()) {
        oprot.writeI32(struct.resume_type);
      }
      if (struct.isSetCv_type()) {
        oprot.writeI32(struct.cv_type);
      }
      if (struct.isSetEmail_resume_status()) {
        oprot.writeI32(struct.email_resume_status);
      }
      if (struct.isSetView_count()) {
        oprot.writeI32(struct.view_count);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobResumeBasic struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appid = iprot.readI64();
        struct.setAppidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.position_id = iprot.readI64();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.lastname = iprot.readString();
        struct.setLastnameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.age = iprot.readI32();
        struct.setAgeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.work_exp_years = iprot.readI32();
        struct.setWork_exp_yearsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.job_position = iprot.readString();
        struct.setJob_positionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.job_company = iprot.readString();
        struct.setJob_companyIsSet(true);
      }
      if (incoming.get(8)) {
        struct.job_start = iprot.readString();
        struct.setJob_startIsSet(true);
      }
      if (incoming.get(9)) {
        struct.job_end = iprot.readString();
        struct.setJob_endIsSet(true);
      }
      if (incoming.get(10)) {
        struct.edu_grade = iprot.readString();
        struct.setEdu_gradeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.edu_school = iprot.readString();
        struct.setEdu_schoolIsSet(true);
      }
      if (incoming.get(12)) {
        struct.edu_start = iprot.readString();
        struct.setEdu_startIsSet(true);
      }
      if (incoming.get(13)) {
        struct.edu_end = iprot.readString();
        struct.setEdu_endIsSet(true);
      }
      if (incoming.get(14)) {
        struct.resume_type = iprot.readI32();
        struct.setResume_typeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.cv_type = iprot.readI32();
        struct.setCv_typeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.email_resume_status = iprot.readI32();
        struct.setEmail_resume_statusIsSet(true);
      }
      if (incoming.get(17)) {
        struct.view_count = iprot.readI32();
        struct.setView_countIsSet(true);
      }
    }
  }

}

