/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.candidate.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-11-22")
public class PositionLayerInfo implements org.apache.thrift.TBase<PositionLayerInfo, PositionLayerInfo._Fields>, java.io.Serializable, Cloneable, Comparable<PositionLayerInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PositionLayerInfo");

  private static final org.apache.thrift.protocol.TField CURRENT_POSITION_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("currentPositionCount", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField POSITION_VIEW_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("positionViewCount", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PROFILE_COMPLETENESS_FIELD_DESC = new org.apache.thrift.protocol.TField("profileCompleteness", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField IS_SUBSCRIBE_FIELD_DESC = new org.apache.thrift.protocol.TField("isSubscribe", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField QRCODE_FIELD_DESC = new org.apache.thrift.protocol.TField("qrcode", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField POSITION_WX_LAYER_QRCODE_FIELD_DESC = new org.apache.thrift.protocol.TField("positionWxLayerQrcode", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField POSITION_WX_LAYER_PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("positionWxLayerProfile", org.apache.thrift.protocol.TType.I32, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PositionLayerInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PositionLayerInfoTupleSchemeFactory();

  public int currentPositionCount; // optional
  public int positionViewCount; // optional
  public int profileCompleteness; // optional
  public int isSubscribe; // optional
  public String qrcode; // optional
  public int type; // optional
  public String name; // optional
  public int positionWxLayerQrcode; // optional
  public int positionWxLayerProfile; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CURRENT_POSITION_COUNT((short)1, "currentPositionCount"),
    POSITION_VIEW_COUNT((short)2, "positionViewCount"),
    PROFILE_COMPLETENESS((short)3, "profileCompleteness"),
    IS_SUBSCRIBE((short)4, "isSubscribe"),
    QRCODE((short)5, "qrcode"),
    TYPE((short)6, "type"),
    NAME((short)7, "name"),
    POSITION_WX_LAYER_QRCODE((short)8, "positionWxLayerQrcode"),
    POSITION_WX_LAYER_PROFILE((short)9, "positionWxLayerProfile");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CURRENT_POSITION_COUNT
          return CURRENT_POSITION_COUNT;
        case 2: // POSITION_VIEW_COUNT
          return POSITION_VIEW_COUNT;
        case 3: // PROFILE_COMPLETENESS
          return PROFILE_COMPLETENESS;
        case 4: // IS_SUBSCRIBE
          return IS_SUBSCRIBE;
        case 5: // QRCODE
          return QRCODE;
        case 6: // TYPE
          return TYPE;
        case 7: // NAME
          return NAME;
        case 8: // POSITION_WX_LAYER_QRCODE
          return POSITION_WX_LAYER_QRCODE;
        case 9: // POSITION_WX_LAYER_PROFILE
          return POSITION_WX_LAYER_PROFILE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CURRENTPOSITIONCOUNT_ISSET_ID = 0;
  private static final int __POSITIONVIEWCOUNT_ISSET_ID = 1;
  private static final int __PROFILECOMPLETENESS_ISSET_ID = 2;
  private static final int __ISSUBSCRIBE_ISSET_ID = 3;
  private static final int __TYPE_ISSET_ID = 4;
  private static final int __POSITIONWXLAYERQRCODE_ISSET_ID = 5;
  private static final int __POSITIONWXLAYERPROFILE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.CURRENT_POSITION_COUNT,_Fields.POSITION_VIEW_COUNT,_Fields.PROFILE_COMPLETENESS,_Fields.IS_SUBSCRIBE,_Fields.QRCODE,_Fields.TYPE,_Fields.NAME,_Fields.POSITION_WX_LAYER_QRCODE,_Fields.POSITION_WX_LAYER_PROFILE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CURRENT_POSITION_COUNT, new org.apache.thrift.meta_data.FieldMetaData("currentPositionCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_VIEW_COUNT, new org.apache.thrift.meta_data.FieldMetaData("positionViewCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_COMPLETENESS, new org.apache.thrift.meta_data.FieldMetaData("profileCompleteness", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_SUBSCRIBE, new org.apache.thrift.meta_data.FieldMetaData("isSubscribe", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.QRCODE, new org.apache.thrift.meta_data.FieldMetaData("qrcode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_WX_LAYER_QRCODE, new org.apache.thrift.meta_data.FieldMetaData("positionWxLayerQrcode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_WX_LAYER_PROFILE, new org.apache.thrift.meta_data.FieldMetaData("positionWxLayerProfile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PositionLayerInfo.class, metaDataMap);
  }

  public PositionLayerInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PositionLayerInfo(PositionLayerInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.currentPositionCount = other.currentPositionCount;
    this.positionViewCount = other.positionViewCount;
    this.profileCompleteness = other.profileCompleteness;
    this.isSubscribe = other.isSubscribe;
    if (other.isSetQrcode()) {
      this.qrcode = other.qrcode;
    }
    this.type = other.type;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.positionWxLayerQrcode = other.positionWxLayerQrcode;
    this.positionWxLayerProfile = other.positionWxLayerProfile;
  }

  public PositionLayerInfo deepCopy() {
    return new PositionLayerInfo(this);
  }

  @Override
  public void clear() {
    setCurrentPositionCountIsSet(false);
    this.currentPositionCount = 0;
    setPositionViewCountIsSet(false);
    this.positionViewCount = 0;
    setProfileCompletenessIsSet(false);
    this.profileCompleteness = 0;
    setIsSubscribeIsSet(false);
    this.isSubscribe = 0;
    this.qrcode = null;
    setTypeIsSet(false);
    this.type = 0;
    this.name = null;
    setPositionWxLayerQrcodeIsSet(false);
    this.positionWxLayerQrcode = 0;
    setPositionWxLayerProfileIsSet(false);
    this.positionWxLayerProfile = 0;
  }

  public int getCurrentPositionCount() {
    return this.currentPositionCount;
  }

  public PositionLayerInfo setCurrentPositionCount(int currentPositionCount) {
    this.currentPositionCount = currentPositionCount;
    setCurrentPositionCountIsSet(true);
    return this;
  }

  public void unsetCurrentPositionCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CURRENTPOSITIONCOUNT_ISSET_ID);
  }

  /** Returns true if field currentPositionCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentPositionCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CURRENTPOSITIONCOUNT_ISSET_ID);
  }

  public void setCurrentPositionCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CURRENTPOSITIONCOUNT_ISSET_ID, value);
  }

  public int getPositionViewCount() {
    return this.positionViewCount;
  }

  public PositionLayerInfo setPositionViewCount(int positionViewCount) {
    this.positionViewCount = positionViewCount;
    setPositionViewCountIsSet(true);
    return this;
  }

  public void unsetPositionViewCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONVIEWCOUNT_ISSET_ID);
  }

  /** Returns true if field positionViewCount is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionViewCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONVIEWCOUNT_ISSET_ID);
  }

  public void setPositionViewCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONVIEWCOUNT_ISSET_ID, value);
  }

  public int getProfileCompleteness() {
    return this.profileCompleteness;
  }

  public PositionLayerInfo setProfileCompleteness(int profileCompleteness) {
    this.profileCompleteness = profileCompleteness;
    setProfileCompletenessIsSet(true);
    return this;
  }

  public void unsetProfileCompleteness() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILECOMPLETENESS_ISSET_ID);
  }

  /** Returns true if field profileCompleteness is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileCompleteness() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILECOMPLETENESS_ISSET_ID);
  }

  public void setProfileCompletenessIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILECOMPLETENESS_ISSET_ID, value);
  }

  public int getIsSubscribe() {
    return this.isSubscribe;
  }

  public PositionLayerInfo setIsSubscribe(int isSubscribe) {
    this.isSubscribe = isSubscribe;
    setIsSubscribeIsSet(true);
    return this;
  }

  public void unsetIsSubscribe() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISSUBSCRIBE_ISSET_ID);
  }

  /** Returns true if field isSubscribe is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSubscribe() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISSUBSCRIBE_ISSET_ID);
  }

  public void setIsSubscribeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISSUBSCRIBE_ISSET_ID, value);
  }

  public String getQrcode() {
    return this.qrcode;
  }

  public PositionLayerInfo setQrcode(String qrcode) {
    this.qrcode = qrcode;
    return this;
  }

  public void unsetQrcode() {
    this.qrcode = null;
  }

  /** Returns true if field qrcode is set (has been assigned a value) and false otherwise */
  public boolean isSetQrcode() {
    return this.qrcode != null;
  }

  public void setQrcodeIsSet(boolean value) {
    if (!value) {
      this.qrcode = null;
    }
  }

  public int getType() {
    return this.type;
  }

  public PositionLayerInfo setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public PositionLayerInfo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getPositionWxLayerQrcode() {
    return this.positionWxLayerQrcode;
  }

  public PositionLayerInfo setPositionWxLayerQrcode(int positionWxLayerQrcode) {
    this.positionWxLayerQrcode = positionWxLayerQrcode;
    setPositionWxLayerQrcodeIsSet(true);
    return this;
  }

  public void unsetPositionWxLayerQrcode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONWXLAYERQRCODE_ISSET_ID);
  }

  /** Returns true if field positionWxLayerQrcode is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionWxLayerQrcode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONWXLAYERQRCODE_ISSET_ID);
  }

  public void setPositionWxLayerQrcodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONWXLAYERQRCODE_ISSET_ID, value);
  }

  public int getPositionWxLayerProfile() {
    return this.positionWxLayerProfile;
  }

  public PositionLayerInfo setPositionWxLayerProfile(int positionWxLayerProfile) {
    this.positionWxLayerProfile = positionWxLayerProfile;
    setPositionWxLayerProfileIsSet(true);
    return this;
  }

  public void unsetPositionWxLayerProfile() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONWXLAYERPROFILE_ISSET_ID);
  }

  /** Returns true if field positionWxLayerProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionWxLayerProfile() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONWXLAYERPROFILE_ISSET_ID);
  }

  public void setPositionWxLayerProfileIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONWXLAYERPROFILE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CURRENT_POSITION_COUNT:
      if (value == null) {
        unsetCurrentPositionCount();
      } else {
        setCurrentPositionCount((Integer)value);
      }
      break;

    case POSITION_VIEW_COUNT:
      if (value == null) {
        unsetPositionViewCount();
      } else {
        setPositionViewCount((Integer)value);
      }
      break;

    case PROFILE_COMPLETENESS:
      if (value == null) {
        unsetProfileCompleteness();
      } else {
        setProfileCompleteness((Integer)value);
      }
      break;

    case IS_SUBSCRIBE:
      if (value == null) {
        unsetIsSubscribe();
      } else {
        setIsSubscribe((Integer)value);
      }
      break;

    case QRCODE:
      if (value == null) {
        unsetQrcode();
      } else {
        setQrcode((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case POSITION_WX_LAYER_QRCODE:
      if (value == null) {
        unsetPositionWxLayerQrcode();
      } else {
        setPositionWxLayerQrcode((Integer)value);
      }
      break;

    case POSITION_WX_LAYER_PROFILE:
      if (value == null) {
        unsetPositionWxLayerProfile();
      } else {
        setPositionWxLayerProfile((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CURRENT_POSITION_COUNT:
      return getCurrentPositionCount();

    case POSITION_VIEW_COUNT:
      return getPositionViewCount();

    case PROFILE_COMPLETENESS:
      return getProfileCompleteness();

    case IS_SUBSCRIBE:
      return getIsSubscribe();

    case QRCODE:
      return getQrcode();

    case TYPE:
      return getType();

    case NAME:
      return getName();

    case POSITION_WX_LAYER_QRCODE:
      return getPositionWxLayerQrcode();

    case POSITION_WX_LAYER_PROFILE:
      return getPositionWxLayerProfile();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CURRENT_POSITION_COUNT:
      return isSetCurrentPositionCount();
    case POSITION_VIEW_COUNT:
      return isSetPositionViewCount();
    case PROFILE_COMPLETENESS:
      return isSetProfileCompleteness();
    case IS_SUBSCRIBE:
      return isSetIsSubscribe();
    case QRCODE:
      return isSetQrcode();
    case TYPE:
      return isSetType();
    case NAME:
      return isSetName();
    case POSITION_WX_LAYER_QRCODE:
      return isSetPositionWxLayerQrcode();
    case POSITION_WX_LAYER_PROFILE:
      return isSetPositionWxLayerProfile();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PositionLayerInfo)
      return this.equals((PositionLayerInfo)that);
    return false;
  }

  public boolean equals(PositionLayerInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_currentPositionCount = true && this.isSetCurrentPositionCount();
    boolean that_present_currentPositionCount = true && that.isSetCurrentPositionCount();
    if (this_present_currentPositionCount || that_present_currentPositionCount) {
      if (!(this_present_currentPositionCount && that_present_currentPositionCount))
        return false;
      if (this.currentPositionCount != that.currentPositionCount)
        return false;
    }

    boolean this_present_positionViewCount = true && this.isSetPositionViewCount();
    boolean that_present_positionViewCount = true && that.isSetPositionViewCount();
    if (this_present_positionViewCount || that_present_positionViewCount) {
      if (!(this_present_positionViewCount && that_present_positionViewCount))
        return false;
      if (this.positionViewCount != that.positionViewCount)
        return false;
    }

    boolean this_present_profileCompleteness = true && this.isSetProfileCompleteness();
    boolean that_present_profileCompleteness = true && that.isSetProfileCompleteness();
    if (this_present_profileCompleteness || that_present_profileCompleteness) {
      if (!(this_present_profileCompleteness && that_present_profileCompleteness))
        return false;
      if (this.profileCompleteness != that.profileCompleteness)
        return false;
    }

    boolean this_present_isSubscribe = true && this.isSetIsSubscribe();
    boolean that_present_isSubscribe = true && that.isSetIsSubscribe();
    if (this_present_isSubscribe || that_present_isSubscribe) {
      if (!(this_present_isSubscribe && that_present_isSubscribe))
        return false;
      if (this.isSubscribe != that.isSubscribe)
        return false;
    }

    boolean this_present_qrcode = true && this.isSetQrcode();
    boolean that_present_qrcode = true && that.isSetQrcode();
    if (this_present_qrcode || that_present_qrcode) {
      if (!(this_present_qrcode && that_present_qrcode))
        return false;
      if (!this.qrcode.equals(that.qrcode))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_positionWxLayerQrcode = true && this.isSetPositionWxLayerQrcode();
    boolean that_present_positionWxLayerQrcode = true && that.isSetPositionWxLayerQrcode();
    if (this_present_positionWxLayerQrcode || that_present_positionWxLayerQrcode) {
      if (!(this_present_positionWxLayerQrcode && that_present_positionWxLayerQrcode))
        return false;
      if (this.positionWxLayerQrcode != that.positionWxLayerQrcode)
        return false;
    }

    boolean this_present_positionWxLayerProfile = true && this.isSetPositionWxLayerProfile();
    boolean that_present_positionWxLayerProfile = true && that.isSetPositionWxLayerProfile();
    if (this_present_positionWxLayerProfile || that_present_positionWxLayerProfile) {
      if (!(this_present_positionWxLayerProfile && that_present_positionWxLayerProfile))
        return false;
      if (this.positionWxLayerProfile != that.positionWxLayerProfile)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCurrentPositionCount()) ? 131071 : 524287);
    if (isSetCurrentPositionCount())
      hashCode = hashCode * 8191 + currentPositionCount;

    hashCode = hashCode * 8191 + ((isSetPositionViewCount()) ? 131071 : 524287);
    if (isSetPositionViewCount())
      hashCode = hashCode * 8191 + positionViewCount;

    hashCode = hashCode * 8191 + ((isSetProfileCompleteness()) ? 131071 : 524287);
    if (isSetProfileCompleteness())
      hashCode = hashCode * 8191 + profileCompleteness;

    hashCode = hashCode * 8191 + ((isSetIsSubscribe()) ? 131071 : 524287);
    if (isSetIsSubscribe())
      hashCode = hashCode * 8191 + isSubscribe;

    hashCode = hashCode * 8191 + ((isSetQrcode()) ? 131071 : 524287);
    if (isSetQrcode())
      hashCode = hashCode * 8191 + qrcode.hashCode();

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetPositionWxLayerQrcode()) ? 131071 : 524287);
    if (isSetPositionWxLayerQrcode())
      hashCode = hashCode * 8191 + positionWxLayerQrcode;

    hashCode = hashCode * 8191 + ((isSetPositionWxLayerProfile()) ? 131071 : 524287);
    if (isSetPositionWxLayerProfile())
      hashCode = hashCode * 8191 + positionWxLayerProfile;

    return hashCode;
  }

  @Override
  public int compareTo(PositionLayerInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCurrentPositionCount()).compareTo(other.isSetCurrentPositionCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentPositionCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentPositionCount, other.currentPositionCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionViewCount()).compareTo(other.isSetPositionViewCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionViewCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionViewCount, other.positionViewCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileCompleteness()).compareTo(other.isSetProfileCompleteness());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileCompleteness()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileCompleteness, other.profileCompleteness);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSubscribe()).compareTo(other.isSetIsSubscribe());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSubscribe()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSubscribe, other.isSubscribe);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQrcode()).compareTo(other.isSetQrcode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQrcode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qrcode, other.qrcode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionWxLayerQrcode()).compareTo(other.isSetPositionWxLayerQrcode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionWxLayerQrcode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionWxLayerQrcode, other.positionWxLayerQrcode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionWxLayerProfile()).compareTo(other.isSetPositionWxLayerProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionWxLayerProfile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionWxLayerProfile, other.positionWxLayerProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PositionLayerInfo(");
    boolean first = true;

    if (isSetCurrentPositionCount()) {
      sb.append("currentPositionCount:");
      sb.append(this.currentPositionCount);
      first = false;
    }
    if (isSetPositionViewCount()) {
      if (!first) sb.append(", ");
      sb.append("positionViewCount:");
      sb.append(this.positionViewCount);
      first = false;
    }
    if (isSetProfileCompleteness()) {
      if (!first) sb.append(", ");
      sb.append("profileCompleteness:");
      sb.append(this.profileCompleteness);
      first = false;
    }
    if (isSetIsSubscribe()) {
      if (!first) sb.append(", ");
      sb.append("isSubscribe:");
      sb.append(this.isSubscribe);
      first = false;
    }
    if (isSetQrcode()) {
      if (!first) sb.append(", ");
      sb.append("qrcode:");
      if (this.qrcode == null) {
        sb.append("null");
      } else {
        sb.append(this.qrcode);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      sb.append(this.type);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetPositionWxLayerQrcode()) {
      if (!first) sb.append(", ");
      sb.append("positionWxLayerQrcode:");
      sb.append(this.positionWxLayerQrcode);
      first = false;
    }
    if (isSetPositionWxLayerProfile()) {
      if (!first) sb.append(", ");
      sb.append("positionWxLayerProfile:");
      sb.append(this.positionWxLayerProfile);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PositionLayerInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PositionLayerInfoStandardScheme getScheme() {
      return new PositionLayerInfoStandardScheme();
    }
  }

  private static class PositionLayerInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<PositionLayerInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PositionLayerInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CURRENT_POSITION_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.currentPositionCount = iprot.readI32();
              struct.setCurrentPositionCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POSITION_VIEW_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionViewCount = iprot.readI32();
              struct.setPositionViewCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROFILE_COMPLETENESS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileCompleteness = iprot.readI32();
              struct.setProfileCompletenessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IS_SUBSCRIBE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isSubscribe = iprot.readI32();
              struct.setIsSubscribeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // QRCODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qrcode = iprot.readString();
              struct.setQrcodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // POSITION_WX_LAYER_QRCODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionWxLayerQrcode = iprot.readI32();
              struct.setPositionWxLayerQrcodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // POSITION_WX_LAYER_PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionWxLayerProfile = iprot.readI32();
              struct.setPositionWxLayerProfileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PositionLayerInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCurrentPositionCount()) {
        oprot.writeFieldBegin(CURRENT_POSITION_COUNT_FIELD_DESC);
        oprot.writeI32(struct.currentPositionCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionViewCount()) {
        oprot.writeFieldBegin(POSITION_VIEW_COUNT_FIELD_DESC);
        oprot.writeI32(struct.positionViewCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileCompleteness()) {
        oprot.writeFieldBegin(PROFILE_COMPLETENESS_FIELD_DESC);
        oprot.writeI32(struct.profileCompleteness);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsSubscribe()) {
        oprot.writeFieldBegin(IS_SUBSCRIBE_FIELD_DESC);
        oprot.writeI32(struct.isSubscribe);
        oprot.writeFieldEnd();
      }
      if (struct.qrcode != null) {
        if (struct.isSetQrcode()) {
          oprot.writeFieldBegin(QRCODE_FIELD_DESC);
          oprot.writeString(struct.qrcode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetType()) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPositionWxLayerQrcode()) {
        oprot.writeFieldBegin(POSITION_WX_LAYER_QRCODE_FIELD_DESC);
        oprot.writeI32(struct.positionWxLayerQrcode);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionWxLayerProfile()) {
        oprot.writeFieldBegin(POSITION_WX_LAYER_PROFILE_FIELD_DESC);
        oprot.writeI32(struct.positionWxLayerProfile);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PositionLayerInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PositionLayerInfoTupleScheme getScheme() {
      return new PositionLayerInfoTupleScheme();
    }
  }

  private static class PositionLayerInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<PositionLayerInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PositionLayerInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCurrentPositionCount()) {
        optionals.set(0);
      }
      if (struct.isSetPositionViewCount()) {
        optionals.set(1);
      }
      if (struct.isSetProfileCompleteness()) {
        optionals.set(2);
      }
      if (struct.isSetIsSubscribe()) {
        optionals.set(3);
      }
      if (struct.isSetQrcode()) {
        optionals.set(4);
      }
      if (struct.isSetType()) {
        optionals.set(5);
      }
      if (struct.isSetName()) {
        optionals.set(6);
      }
      if (struct.isSetPositionWxLayerQrcode()) {
        optionals.set(7);
      }
      if (struct.isSetPositionWxLayerProfile()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetCurrentPositionCount()) {
        oprot.writeI32(struct.currentPositionCount);
      }
      if (struct.isSetPositionViewCount()) {
        oprot.writeI32(struct.positionViewCount);
      }
      if (struct.isSetProfileCompleteness()) {
        oprot.writeI32(struct.profileCompleteness);
      }
      if (struct.isSetIsSubscribe()) {
        oprot.writeI32(struct.isSubscribe);
      }
      if (struct.isSetQrcode()) {
        oprot.writeString(struct.qrcode);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPositionWxLayerQrcode()) {
        oprot.writeI32(struct.positionWxLayerQrcode);
      }
      if (struct.isSetPositionWxLayerProfile()) {
        oprot.writeI32(struct.positionWxLayerProfile);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PositionLayerInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.currentPositionCount = iprot.readI32();
        struct.setCurrentPositionCountIsSet(true);
      }
      if (incoming.get(1)) {
        struct.positionViewCount = iprot.readI32();
        struct.setPositionViewCountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.profileCompleteness = iprot.readI32();
        struct.setProfileCompletenessIsSet(true);
      }
      if (incoming.get(3)) {
        struct.isSubscribe = iprot.readI32();
        struct.setIsSubscribeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.qrcode = iprot.readString();
        struct.setQrcodeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.positionWxLayerQrcode = iprot.readI32();
        struct.setPositionWxLayerQrcodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.positionWxLayerProfile = iprot.readI32();
        struct.setPositionWxLayerProfileIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

