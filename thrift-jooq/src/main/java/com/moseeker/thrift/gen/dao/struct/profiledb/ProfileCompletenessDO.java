/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.profiledb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-04")
public class ProfileCompletenessDO implements org.apache.thrift.TBase<ProfileCompletenessDO, ProfileCompletenessDO._Fields>, java.io.Serializable, Cloneable, Comparable<ProfileCompletenessDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProfileCompletenessDO");

  private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profileId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("userUser", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PROFILE_BASIC_FIELD_DESC = new org.apache.thrift.protocol.TField("profileBasic", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PROFILE_WORKEXP_FIELD_DESC = new org.apache.thrift.protocol.TField("profileWorkexp", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PROFILE_EDUCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("profileEducation", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PROFILE_PROJECTEXP_FIELD_DESC = new org.apache.thrift.protocol.TField("profileProjectexp", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField PROFILE_LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("profileLanguage", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PROFILE_SKILL_FIELD_DESC = new org.apache.thrift.protocol.TField("profileSkill", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PROFILE_CREDENTIALS_FIELD_DESC = new org.apache.thrift.protocol.TField("profileCredentials", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField PROFILE_AWARDS_FIELD_DESC = new org.apache.thrift.protocol.TField("profileAwards", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PROFILE_WORKS_FIELD_DESC = new org.apache.thrift.protocol.TField("profileWorks", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField PROFILE_INTENTION_FIELD_DESC = new org.apache.thrift.protocol.TField("profileIntention", org.apache.thrift.protocol.TType.I32, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ProfileCompletenessDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ProfileCompletenessDOTupleSchemeFactory();

  public int profileId; // optional
  public int userUser; // optional
  public int profileBasic; // optional
  public int profileWorkexp; // optional
  public int profileEducation; // optional
  public int profileProjectexp; // optional
  public int profileLanguage; // optional
  public int profileSkill; // optional
  public int profileCredentials; // optional
  public int profileAwards; // optional
  public int profileWorks; // optional
  public int profileIntention; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROFILE_ID((short)1, "profileId"),
    USER_USER((short)2, "userUser"),
    PROFILE_BASIC((short)3, "profileBasic"),
    PROFILE_WORKEXP((short)4, "profileWorkexp"),
    PROFILE_EDUCATION((short)5, "profileEducation"),
    PROFILE_PROJECTEXP((short)6, "profileProjectexp"),
    PROFILE_LANGUAGE((short)7, "profileLanguage"),
    PROFILE_SKILL((short)8, "profileSkill"),
    PROFILE_CREDENTIALS((short)9, "profileCredentials"),
    PROFILE_AWARDS((short)10, "profileAwards"),
    PROFILE_WORKS((short)11, "profileWorks"),
    PROFILE_INTENTION((short)12, "profileIntention");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROFILE_ID
          return PROFILE_ID;
        case 2: // USER_USER
          return USER_USER;
        case 3: // PROFILE_BASIC
          return PROFILE_BASIC;
        case 4: // PROFILE_WORKEXP
          return PROFILE_WORKEXP;
        case 5: // PROFILE_EDUCATION
          return PROFILE_EDUCATION;
        case 6: // PROFILE_PROJECTEXP
          return PROFILE_PROJECTEXP;
        case 7: // PROFILE_LANGUAGE
          return PROFILE_LANGUAGE;
        case 8: // PROFILE_SKILL
          return PROFILE_SKILL;
        case 9: // PROFILE_CREDENTIALS
          return PROFILE_CREDENTIALS;
        case 10: // PROFILE_AWARDS
          return PROFILE_AWARDS;
        case 11: // PROFILE_WORKS
          return PROFILE_WORKS;
        case 12: // PROFILE_INTENTION
          return PROFILE_INTENTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROFILEID_ISSET_ID = 0;
  private static final int __USERUSER_ISSET_ID = 1;
  private static final int __PROFILEBASIC_ISSET_ID = 2;
  private static final int __PROFILEWORKEXP_ISSET_ID = 3;
  private static final int __PROFILEEDUCATION_ISSET_ID = 4;
  private static final int __PROFILEPROJECTEXP_ISSET_ID = 5;
  private static final int __PROFILELANGUAGE_ISSET_ID = 6;
  private static final int __PROFILESKILL_ISSET_ID = 7;
  private static final int __PROFILECREDENTIALS_ISSET_ID = 8;
  private static final int __PROFILEAWARDS_ISSET_ID = 9;
  private static final int __PROFILEWORKS_ISSET_ID = 10;
  private static final int __PROFILEINTENTION_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.PROFILE_ID,_Fields.USER_USER,_Fields.PROFILE_BASIC,_Fields.PROFILE_WORKEXP,_Fields.PROFILE_EDUCATION,_Fields.PROFILE_PROJECTEXP,_Fields.PROFILE_LANGUAGE,_Fields.PROFILE_SKILL,_Fields.PROFILE_CREDENTIALS,_Fields.PROFILE_AWARDS,_Fields.PROFILE_WORKS,_Fields.PROFILE_INTENTION};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profileId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_USER, new org.apache.thrift.meta_data.FieldMetaData("userUser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_BASIC, new org.apache.thrift.meta_data.FieldMetaData("profileBasic", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_WORKEXP, new org.apache.thrift.meta_data.FieldMetaData("profileWorkexp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_EDUCATION, new org.apache.thrift.meta_data.FieldMetaData("profileEducation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_PROJECTEXP, new org.apache.thrift.meta_data.FieldMetaData("profileProjectexp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("profileLanguage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_SKILL, new org.apache.thrift.meta_data.FieldMetaData("profileSkill", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_CREDENTIALS, new org.apache.thrift.meta_data.FieldMetaData("profileCredentials", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_AWARDS, new org.apache.thrift.meta_data.FieldMetaData("profileAwards", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_WORKS, new org.apache.thrift.meta_data.FieldMetaData("profileWorks", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFILE_INTENTION, new org.apache.thrift.meta_data.FieldMetaData("profileIntention", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProfileCompletenessDO.class, metaDataMap);
  }

  public ProfileCompletenessDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProfileCompletenessDO(ProfileCompletenessDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.profileId = other.profileId;
    this.userUser = other.userUser;
    this.profileBasic = other.profileBasic;
    this.profileWorkexp = other.profileWorkexp;
    this.profileEducation = other.profileEducation;
    this.profileProjectexp = other.profileProjectexp;
    this.profileLanguage = other.profileLanguage;
    this.profileSkill = other.profileSkill;
    this.profileCredentials = other.profileCredentials;
    this.profileAwards = other.profileAwards;
    this.profileWorks = other.profileWorks;
    this.profileIntention = other.profileIntention;
  }

  public ProfileCompletenessDO deepCopy() {
    return new ProfileCompletenessDO(this);
  }

  @Override
  public void clear() {
    setProfileIdIsSet(false);
    this.profileId = 0;
    setUserUserIsSet(false);
    this.userUser = 0;
    setProfileBasicIsSet(false);
    this.profileBasic = 0;
    setProfileWorkexpIsSet(false);
    this.profileWorkexp = 0;
    setProfileEducationIsSet(false);
    this.profileEducation = 0;
    setProfileProjectexpIsSet(false);
    this.profileProjectexp = 0;
    setProfileLanguageIsSet(false);
    this.profileLanguage = 0;
    setProfileSkillIsSet(false);
    this.profileSkill = 0;
    setProfileCredentialsIsSet(false);
    this.profileCredentials = 0;
    setProfileAwardsIsSet(false);
    this.profileAwards = 0;
    setProfileWorksIsSet(false);
    this.profileWorks = 0;
    setProfileIntentionIsSet(false);
    this.profileIntention = 0;
  }

  public int getProfileId() {
    return this.profileId;
  }

  public ProfileCompletenessDO setProfileId(int profileId) {
    this.profileId = profileId;
    setProfileIdIsSet(true);
    return this;
  }

  public void unsetProfileId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEID_ISSET_ID);
  }

  /** Returns true if field profileId is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEID_ISSET_ID);
  }

  public void setProfileIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEID_ISSET_ID, value);
  }

  public int getUserUser() {
    return this.userUser;
  }

  public ProfileCompletenessDO setUserUser(int userUser) {
    this.userUser = userUser;
    setUserUserIsSet(true);
    return this;
  }

  public void unsetUserUser() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERUSER_ISSET_ID);
  }

  /** Returns true if field userUser is set (has been assigned a value) and false otherwise */
  public boolean isSetUserUser() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERUSER_ISSET_ID);
  }

  public void setUserUserIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERUSER_ISSET_ID, value);
  }

  public int getProfileBasic() {
    return this.profileBasic;
  }

  public ProfileCompletenessDO setProfileBasic(int profileBasic) {
    this.profileBasic = profileBasic;
    setProfileBasicIsSet(true);
    return this;
  }

  public void unsetProfileBasic() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEBASIC_ISSET_ID);
  }

  /** Returns true if field profileBasic is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileBasic() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEBASIC_ISSET_ID);
  }

  public void setProfileBasicIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEBASIC_ISSET_ID, value);
  }

  public int getProfileWorkexp() {
    return this.profileWorkexp;
  }

  public ProfileCompletenessDO setProfileWorkexp(int profileWorkexp) {
    this.profileWorkexp = profileWorkexp;
    setProfileWorkexpIsSet(true);
    return this;
  }

  public void unsetProfileWorkexp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEWORKEXP_ISSET_ID);
  }

  /** Returns true if field profileWorkexp is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileWorkexp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEWORKEXP_ISSET_ID);
  }

  public void setProfileWorkexpIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEWORKEXP_ISSET_ID, value);
  }

  public int getProfileEducation() {
    return this.profileEducation;
  }

  public ProfileCompletenessDO setProfileEducation(int profileEducation) {
    this.profileEducation = profileEducation;
    setProfileEducationIsSet(true);
    return this;
  }

  public void unsetProfileEducation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEEDUCATION_ISSET_ID);
  }

  /** Returns true if field profileEducation is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileEducation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEEDUCATION_ISSET_ID);
  }

  public void setProfileEducationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEEDUCATION_ISSET_ID, value);
  }

  public int getProfileProjectexp() {
    return this.profileProjectexp;
  }

  public ProfileCompletenessDO setProfileProjectexp(int profileProjectexp) {
    this.profileProjectexp = profileProjectexp;
    setProfileProjectexpIsSet(true);
    return this;
  }

  public void unsetProfileProjectexp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEPROJECTEXP_ISSET_ID);
  }

  /** Returns true if field profileProjectexp is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileProjectexp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEPROJECTEXP_ISSET_ID);
  }

  public void setProfileProjectexpIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEPROJECTEXP_ISSET_ID, value);
  }

  public int getProfileLanguage() {
    return this.profileLanguage;
  }

  public ProfileCompletenessDO setProfileLanguage(int profileLanguage) {
    this.profileLanguage = profileLanguage;
    setProfileLanguageIsSet(true);
    return this;
  }

  public void unsetProfileLanguage() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILELANGUAGE_ISSET_ID);
  }

  /** Returns true if field profileLanguage is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileLanguage() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILELANGUAGE_ISSET_ID);
  }

  public void setProfileLanguageIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILELANGUAGE_ISSET_ID, value);
  }

  public int getProfileSkill() {
    return this.profileSkill;
  }

  public ProfileCompletenessDO setProfileSkill(int profileSkill) {
    this.profileSkill = profileSkill;
    setProfileSkillIsSet(true);
    return this;
  }

  public void unsetProfileSkill() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILESKILL_ISSET_ID);
  }

  /** Returns true if field profileSkill is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileSkill() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILESKILL_ISSET_ID);
  }

  public void setProfileSkillIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILESKILL_ISSET_ID, value);
  }

  public int getProfileCredentials() {
    return this.profileCredentials;
  }

  public ProfileCompletenessDO setProfileCredentials(int profileCredentials) {
    this.profileCredentials = profileCredentials;
    setProfileCredentialsIsSet(true);
    return this;
  }

  public void unsetProfileCredentials() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILECREDENTIALS_ISSET_ID);
  }

  /** Returns true if field profileCredentials is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileCredentials() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILECREDENTIALS_ISSET_ID);
  }

  public void setProfileCredentialsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILECREDENTIALS_ISSET_ID, value);
  }

  public int getProfileAwards() {
    return this.profileAwards;
  }

  public ProfileCompletenessDO setProfileAwards(int profileAwards) {
    this.profileAwards = profileAwards;
    setProfileAwardsIsSet(true);
    return this;
  }

  public void unsetProfileAwards() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEAWARDS_ISSET_ID);
  }

  /** Returns true if field profileAwards is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileAwards() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEAWARDS_ISSET_ID);
  }

  public void setProfileAwardsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEAWARDS_ISSET_ID, value);
  }

  public int getProfileWorks() {
    return this.profileWorks;
  }

  public ProfileCompletenessDO setProfileWorks(int profileWorks) {
    this.profileWorks = profileWorks;
    setProfileWorksIsSet(true);
    return this;
  }

  public void unsetProfileWorks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEWORKS_ISSET_ID);
  }

  /** Returns true if field profileWorks is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileWorks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEWORKS_ISSET_ID);
  }

  public void setProfileWorksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEWORKS_ISSET_ID, value);
  }

  public int getProfileIntention() {
    return this.profileIntention;
  }

  public ProfileCompletenessDO setProfileIntention(int profileIntention) {
    this.profileIntention = profileIntention;
    setProfileIntentionIsSet(true);
    return this;
  }

  public void unsetProfileIntention() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILEINTENTION_ISSET_ID);
  }

  /** Returns true if field profileIntention is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileIntention() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILEINTENTION_ISSET_ID);
  }

  public void setProfileIntentionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILEINTENTION_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROFILE_ID:
      if (value == null) {
        unsetProfileId();
      } else {
        setProfileId((Integer)value);
      }
      break;

    case USER_USER:
      if (value == null) {
        unsetUserUser();
      } else {
        setUserUser((Integer)value);
      }
      break;

    case PROFILE_BASIC:
      if (value == null) {
        unsetProfileBasic();
      } else {
        setProfileBasic((Integer)value);
      }
      break;

    case PROFILE_WORKEXP:
      if (value == null) {
        unsetProfileWorkexp();
      } else {
        setProfileWorkexp((Integer)value);
      }
      break;

    case PROFILE_EDUCATION:
      if (value == null) {
        unsetProfileEducation();
      } else {
        setProfileEducation((Integer)value);
      }
      break;

    case PROFILE_PROJECTEXP:
      if (value == null) {
        unsetProfileProjectexp();
      } else {
        setProfileProjectexp((Integer)value);
      }
      break;

    case PROFILE_LANGUAGE:
      if (value == null) {
        unsetProfileLanguage();
      } else {
        setProfileLanguage((Integer)value);
      }
      break;

    case PROFILE_SKILL:
      if (value == null) {
        unsetProfileSkill();
      } else {
        setProfileSkill((Integer)value);
      }
      break;

    case PROFILE_CREDENTIALS:
      if (value == null) {
        unsetProfileCredentials();
      } else {
        setProfileCredentials((Integer)value);
      }
      break;

    case PROFILE_AWARDS:
      if (value == null) {
        unsetProfileAwards();
      } else {
        setProfileAwards((Integer)value);
      }
      break;

    case PROFILE_WORKS:
      if (value == null) {
        unsetProfileWorks();
      } else {
        setProfileWorks((Integer)value);
      }
      break;

    case PROFILE_INTENTION:
      if (value == null) {
        unsetProfileIntention();
      } else {
        setProfileIntention((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROFILE_ID:
      return getProfileId();

    case USER_USER:
      return getUserUser();

    case PROFILE_BASIC:
      return getProfileBasic();

    case PROFILE_WORKEXP:
      return getProfileWorkexp();

    case PROFILE_EDUCATION:
      return getProfileEducation();

    case PROFILE_PROJECTEXP:
      return getProfileProjectexp();

    case PROFILE_LANGUAGE:
      return getProfileLanguage();

    case PROFILE_SKILL:
      return getProfileSkill();

    case PROFILE_CREDENTIALS:
      return getProfileCredentials();

    case PROFILE_AWARDS:
      return getProfileAwards();

    case PROFILE_WORKS:
      return getProfileWorks();

    case PROFILE_INTENTION:
      return getProfileIntention();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROFILE_ID:
      return isSetProfileId();
    case USER_USER:
      return isSetUserUser();
    case PROFILE_BASIC:
      return isSetProfileBasic();
    case PROFILE_WORKEXP:
      return isSetProfileWorkexp();
    case PROFILE_EDUCATION:
      return isSetProfileEducation();
    case PROFILE_PROJECTEXP:
      return isSetProfileProjectexp();
    case PROFILE_LANGUAGE:
      return isSetProfileLanguage();
    case PROFILE_SKILL:
      return isSetProfileSkill();
    case PROFILE_CREDENTIALS:
      return isSetProfileCredentials();
    case PROFILE_AWARDS:
      return isSetProfileAwards();
    case PROFILE_WORKS:
      return isSetProfileWorks();
    case PROFILE_INTENTION:
      return isSetProfileIntention();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProfileCompletenessDO)
      return this.equals((ProfileCompletenessDO)that);
    return false;
  }

  public boolean equals(ProfileCompletenessDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_profileId = true && this.isSetProfileId();
    boolean that_present_profileId = true && that.isSetProfileId();
    if (this_present_profileId || that_present_profileId) {
      if (!(this_present_profileId && that_present_profileId))
        return false;
      if (this.profileId != that.profileId)
        return false;
    }

    boolean this_present_userUser = true && this.isSetUserUser();
    boolean that_present_userUser = true && that.isSetUserUser();
    if (this_present_userUser || that_present_userUser) {
      if (!(this_present_userUser && that_present_userUser))
        return false;
      if (this.userUser != that.userUser)
        return false;
    }

    boolean this_present_profileBasic = true && this.isSetProfileBasic();
    boolean that_present_profileBasic = true && that.isSetProfileBasic();
    if (this_present_profileBasic || that_present_profileBasic) {
      if (!(this_present_profileBasic && that_present_profileBasic))
        return false;
      if (this.profileBasic != that.profileBasic)
        return false;
    }

    boolean this_present_profileWorkexp = true && this.isSetProfileWorkexp();
    boolean that_present_profileWorkexp = true && that.isSetProfileWorkexp();
    if (this_present_profileWorkexp || that_present_profileWorkexp) {
      if (!(this_present_profileWorkexp && that_present_profileWorkexp))
        return false;
      if (this.profileWorkexp != that.profileWorkexp)
        return false;
    }

    boolean this_present_profileEducation = true && this.isSetProfileEducation();
    boolean that_present_profileEducation = true && that.isSetProfileEducation();
    if (this_present_profileEducation || that_present_profileEducation) {
      if (!(this_present_profileEducation && that_present_profileEducation))
        return false;
      if (this.profileEducation != that.profileEducation)
        return false;
    }

    boolean this_present_profileProjectexp = true && this.isSetProfileProjectexp();
    boolean that_present_profileProjectexp = true && that.isSetProfileProjectexp();
    if (this_present_profileProjectexp || that_present_profileProjectexp) {
      if (!(this_present_profileProjectexp && that_present_profileProjectexp))
        return false;
      if (this.profileProjectexp != that.profileProjectexp)
        return false;
    }

    boolean this_present_profileLanguage = true && this.isSetProfileLanguage();
    boolean that_present_profileLanguage = true && that.isSetProfileLanguage();
    if (this_present_profileLanguage || that_present_profileLanguage) {
      if (!(this_present_profileLanguage && that_present_profileLanguage))
        return false;
      if (this.profileLanguage != that.profileLanguage)
        return false;
    }

    boolean this_present_profileSkill = true && this.isSetProfileSkill();
    boolean that_present_profileSkill = true && that.isSetProfileSkill();
    if (this_present_profileSkill || that_present_profileSkill) {
      if (!(this_present_profileSkill && that_present_profileSkill))
        return false;
      if (this.profileSkill != that.profileSkill)
        return false;
    }

    boolean this_present_profileCredentials = true && this.isSetProfileCredentials();
    boolean that_present_profileCredentials = true && that.isSetProfileCredentials();
    if (this_present_profileCredentials || that_present_profileCredentials) {
      if (!(this_present_profileCredentials && that_present_profileCredentials))
        return false;
      if (this.profileCredentials != that.profileCredentials)
        return false;
    }

    boolean this_present_profileAwards = true && this.isSetProfileAwards();
    boolean that_present_profileAwards = true && that.isSetProfileAwards();
    if (this_present_profileAwards || that_present_profileAwards) {
      if (!(this_present_profileAwards && that_present_profileAwards))
        return false;
      if (this.profileAwards != that.profileAwards)
        return false;
    }

    boolean this_present_profileWorks = true && this.isSetProfileWorks();
    boolean that_present_profileWorks = true && that.isSetProfileWorks();
    if (this_present_profileWorks || that_present_profileWorks) {
      if (!(this_present_profileWorks && that_present_profileWorks))
        return false;
      if (this.profileWorks != that.profileWorks)
        return false;
    }

    boolean this_present_profileIntention = true && this.isSetProfileIntention();
    boolean that_present_profileIntention = true && that.isSetProfileIntention();
    if (this_present_profileIntention || that_present_profileIntention) {
      if (!(this_present_profileIntention && that_present_profileIntention))
        return false;
      if (this.profileIntention != that.profileIntention)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetProfileId()) ? 131071 : 524287);
    if (isSetProfileId())
      hashCode = hashCode * 8191 + profileId;

    hashCode = hashCode * 8191 + ((isSetUserUser()) ? 131071 : 524287);
    if (isSetUserUser())
      hashCode = hashCode * 8191 + userUser;

    hashCode = hashCode * 8191 + ((isSetProfileBasic()) ? 131071 : 524287);
    if (isSetProfileBasic())
      hashCode = hashCode * 8191 + profileBasic;

    hashCode = hashCode * 8191 + ((isSetProfileWorkexp()) ? 131071 : 524287);
    if (isSetProfileWorkexp())
      hashCode = hashCode * 8191 + profileWorkexp;

    hashCode = hashCode * 8191 + ((isSetProfileEducation()) ? 131071 : 524287);
    if (isSetProfileEducation())
      hashCode = hashCode * 8191 + profileEducation;

    hashCode = hashCode * 8191 + ((isSetProfileProjectexp()) ? 131071 : 524287);
    if (isSetProfileProjectexp())
      hashCode = hashCode * 8191 + profileProjectexp;

    hashCode = hashCode * 8191 + ((isSetProfileLanguage()) ? 131071 : 524287);
    if (isSetProfileLanguage())
      hashCode = hashCode * 8191 + profileLanguage;

    hashCode = hashCode * 8191 + ((isSetProfileSkill()) ? 131071 : 524287);
    if (isSetProfileSkill())
      hashCode = hashCode * 8191 + profileSkill;

    hashCode = hashCode * 8191 + ((isSetProfileCredentials()) ? 131071 : 524287);
    if (isSetProfileCredentials())
      hashCode = hashCode * 8191 + profileCredentials;

    hashCode = hashCode * 8191 + ((isSetProfileAwards()) ? 131071 : 524287);
    if (isSetProfileAwards())
      hashCode = hashCode * 8191 + profileAwards;

    hashCode = hashCode * 8191 + ((isSetProfileWorks()) ? 131071 : 524287);
    if (isSetProfileWorks())
      hashCode = hashCode * 8191 + profileWorks;

    hashCode = hashCode * 8191 + ((isSetProfileIntention()) ? 131071 : 524287);
    if (isSetProfileIntention())
      hashCode = hashCode * 8191 + profileIntention;

    return hashCode;
  }

  @Override
  public int compareTo(ProfileCompletenessDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProfileId()).compareTo(other.isSetProfileId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileId, other.profileId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserUser()).compareTo(other.isSetUserUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userUser, other.userUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileBasic()).compareTo(other.isSetProfileBasic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileBasic()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileBasic, other.profileBasic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileWorkexp()).compareTo(other.isSetProfileWorkexp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileWorkexp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileWorkexp, other.profileWorkexp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileEducation()).compareTo(other.isSetProfileEducation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileEducation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileEducation, other.profileEducation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileProjectexp()).compareTo(other.isSetProfileProjectexp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileProjectexp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileProjectexp, other.profileProjectexp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileLanguage()).compareTo(other.isSetProfileLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileLanguage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileLanguage, other.profileLanguage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileSkill()).compareTo(other.isSetProfileSkill());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileSkill()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileSkill, other.profileSkill);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileCredentials()).compareTo(other.isSetProfileCredentials());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileCredentials()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileCredentials, other.profileCredentials);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileAwards()).compareTo(other.isSetProfileAwards());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileAwards()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileAwards, other.profileAwards);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileWorks()).compareTo(other.isSetProfileWorks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileWorks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileWorks, other.profileWorks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileIntention()).compareTo(other.isSetProfileIntention());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileIntention()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileIntention, other.profileIntention);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProfileCompletenessDO(");
    boolean first = true;

    if (isSetProfileId()) {
      sb.append("profileId:");
      sb.append(this.profileId);
      first = false;
    }
    if (isSetUserUser()) {
      if (!first) sb.append(", ");
      sb.append("userUser:");
      sb.append(this.userUser);
      first = false;
    }
    if (isSetProfileBasic()) {
      if (!first) sb.append(", ");
      sb.append("profileBasic:");
      sb.append(this.profileBasic);
      first = false;
    }
    if (isSetProfileWorkexp()) {
      if (!first) sb.append(", ");
      sb.append("profileWorkexp:");
      sb.append(this.profileWorkexp);
      first = false;
    }
    if (isSetProfileEducation()) {
      if (!first) sb.append(", ");
      sb.append("profileEducation:");
      sb.append(this.profileEducation);
      first = false;
    }
    if (isSetProfileProjectexp()) {
      if (!first) sb.append(", ");
      sb.append("profileProjectexp:");
      sb.append(this.profileProjectexp);
      first = false;
    }
    if (isSetProfileLanguage()) {
      if (!first) sb.append(", ");
      sb.append("profileLanguage:");
      sb.append(this.profileLanguage);
      first = false;
    }
    if (isSetProfileSkill()) {
      if (!first) sb.append(", ");
      sb.append("profileSkill:");
      sb.append(this.profileSkill);
      first = false;
    }
    if (isSetProfileCredentials()) {
      if (!first) sb.append(", ");
      sb.append("profileCredentials:");
      sb.append(this.profileCredentials);
      first = false;
    }
    if (isSetProfileAwards()) {
      if (!first) sb.append(", ");
      sb.append("profileAwards:");
      sb.append(this.profileAwards);
      first = false;
    }
    if (isSetProfileWorks()) {
      if (!first) sb.append(", ");
      sb.append("profileWorks:");
      sb.append(this.profileWorks);
      first = false;
    }
    if (isSetProfileIntention()) {
      if (!first) sb.append(", ");
      sb.append("profileIntention:");
      sb.append(this.profileIntention);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProfileCompletenessDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProfileCompletenessDOStandardScheme getScheme() {
      return new ProfileCompletenessDOStandardScheme();
    }
  }

  private static class ProfileCompletenessDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ProfileCompletenessDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROFILE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileId = iprot.readI32();
              struct.setProfileIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userUser = iprot.readI32();
              struct.setUserUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROFILE_BASIC
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileBasic = iprot.readI32();
              struct.setProfileBasicIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROFILE_WORKEXP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileWorkexp = iprot.readI32();
              struct.setProfileWorkexpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROFILE_EDUCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileEducation = iprot.readI32();
              struct.setProfileEducationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROFILE_PROJECTEXP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileProjectexp = iprot.readI32();
              struct.setProfileProjectexpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROFILE_LANGUAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileLanguage = iprot.readI32();
              struct.setProfileLanguageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PROFILE_SKILL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileSkill = iprot.readI32();
              struct.setProfileSkillIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PROFILE_CREDENTIALS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileCredentials = iprot.readI32();
              struct.setProfileCredentialsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PROFILE_AWARDS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileAwards = iprot.readI32();
              struct.setProfileAwardsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PROFILE_WORKS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileWorks = iprot.readI32();
              struct.setProfileWorksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PROFILE_INTENTION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileIntention = iprot.readI32();
              struct.setProfileIntentionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProfileCompletenessDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetProfileId()) {
        oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
        oprot.writeI32(struct.profileId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetUserUser()) {
        oprot.writeFieldBegin(USER_USER_FIELD_DESC);
        oprot.writeI32(struct.userUser);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileBasic()) {
        oprot.writeFieldBegin(PROFILE_BASIC_FIELD_DESC);
        oprot.writeI32(struct.profileBasic);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileWorkexp()) {
        oprot.writeFieldBegin(PROFILE_WORKEXP_FIELD_DESC);
        oprot.writeI32(struct.profileWorkexp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileEducation()) {
        oprot.writeFieldBegin(PROFILE_EDUCATION_FIELD_DESC);
        oprot.writeI32(struct.profileEducation);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileProjectexp()) {
        oprot.writeFieldBegin(PROFILE_PROJECTEXP_FIELD_DESC);
        oprot.writeI32(struct.profileProjectexp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileLanguage()) {
        oprot.writeFieldBegin(PROFILE_LANGUAGE_FIELD_DESC);
        oprot.writeI32(struct.profileLanguage);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileSkill()) {
        oprot.writeFieldBegin(PROFILE_SKILL_FIELD_DESC);
        oprot.writeI32(struct.profileSkill);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileCredentials()) {
        oprot.writeFieldBegin(PROFILE_CREDENTIALS_FIELD_DESC);
        oprot.writeI32(struct.profileCredentials);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileAwards()) {
        oprot.writeFieldBegin(PROFILE_AWARDS_FIELD_DESC);
        oprot.writeI32(struct.profileAwards);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileWorks()) {
        oprot.writeFieldBegin(PROFILE_WORKS_FIELD_DESC);
        oprot.writeI32(struct.profileWorks);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileIntention()) {
        oprot.writeFieldBegin(PROFILE_INTENTION_FIELD_DESC);
        oprot.writeI32(struct.profileIntention);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProfileCompletenessDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProfileCompletenessDOTupleScheme getScheme() {
      return new ProfileCompletenessDOTupleScheme();
    }
  }

  private static class ProfileCompletenessDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ProfileCompletenessDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetProfileId()) {
        optionals.set(0);
      }
      if (struct.isSetUserUser()) {
        optionals.set(1);
      }
      if (struct.isSetProfileBasic()) {
        optionals.set(2);
      }
      if (struct.isSetProfileWorkexp()) {
        optionals.set(3);
      }
      if (struct.isSetProfileEducation()) {
        optionals.set(4);
      }
      if (struct.isSetProfileProjectexp()) {
        optionals.set(5);
      }
      if (struct.isSetProfileLanguage()) {
        optionals.set(6);
      }
      if (struct.isSetProfileSkill()) {
        optionals.set(7);
      }
      if (struct.isSetProfileCredentials()) {
        optionals.set(8);
      }
      if (struct.isSetProfileAwards()) {
        optionals.set(9);
      }
      if (struct.isSetProfileWorks()) {
        optionals.set(10);
      }
      if (struct.isSetProfileIntention()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetProfileId()) {
        oprot.writeI32(struct.profileId);
      }
      if (struct.isSetUserUser()) {
        oprot.writeI32(struct.userUser);
      }
      if (struct.isSetProfileBasic()) {
        oprot.writeI32(struct.profileBasic);
      }
      if (struct.isSetProfileWorkexp()) {
        oprot.writeI32(struct.profileWorkexp);
      }
      if (struct.isSetProfileEducation()) {
        oprot.writeI32(struct.profileEducation);
      }
      if (struct.isSetProfileProjectexp()) {
        oprot.writeI32(struct.profileProjectexp);
      }
      if (struct.isSetProfileLanguage()) {
        oprot.writeI32(struct.profileLanguage);
      }
      if (struct.isSetProfileSkill()) {
        oprot.writeI32(struct.profileSkill);
      }
      if (struct.isSetProfileCredentials()) {
        oprot.writeI32(struct.profileCredentials);
      }
      if (struct.isSetProfileAwards()) {
        oprot.writeI32(struct.profileAwards);
      }
      if (struct.isSetProfileWorks()) {
        oprot.writeI32(struct.profileWorks);
      }
      if (struct.isSetProfileIntention()) {
        oprot.writeI32(struct.profileIntention);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.profileId = iprot.readI32();
        struct.setProfileIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userUser = iprot.readI32();
        struct.setUserUserIsSet(true);
      }
      if (incoming.get(2)) {
        struct.profileBasic = iprot.readI32();
        struct.setProfileBasicIsSet(true);
      }
      if (incoming.get(3)) {
        struct.profileWorkexp = iprot.readI32();
        struct.setProfileWorkexpIsSet(true);
      }
      if (incoming.get(4)) {
        struct.profileEducation = iprot.readI32();
        struct.setProfileEducationIsSet(true);
      }
      if (incoming.get(5)) {
        struct.profileProjectexp = iprot.readI32();
        struct.setProfileProjectexpIsSet(true);
      }
      if (incoming.get(6)) {
        struct.profileLanguage = iprot.readI32();
        struct.setProfileLanguageIsSet(true);
      }
      if (incoming.get(7)) {
        struct.profileSkill = iprot.readI32();
        struct.setProfileSkillIsSet(true);
      }
      if (incoming.get(8)) {
        struct.profileCredentials = iprot.readI32();
        struct.setProfileCredentialsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.profileAwards = iprot.readI32();
        struct.setProfileAwardsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.profileWorks = iprot.readI32();
        struct.setProfileWorksIsSet(true);
      }
      if (incoming.get(11)) {
        struct.profileIntention = iprot.readI32();
        struct.setProfileIntentionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

