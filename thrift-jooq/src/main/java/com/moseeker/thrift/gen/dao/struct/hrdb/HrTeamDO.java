/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-04")
public class HrTeamDO implements org.apache.thrift.TBase<HrTeamDO, HrTeamDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrTeamDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrTeamDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("summary", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SHOW_ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("showOrder", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField JD_MEDIA_FIELD_DESC = new org.apache.thrift.protocol.TField("jdMedia", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField IS_SHOW_FIELD_DESC = new org.apache.thrift.protocol.TField("isShow", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField SLOGAN_FIELD_DESC = new org.apache.thrift.protocol.TField("slogan", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField RES_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("resId", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField TEAM_DETAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("teamDetail", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField SUB_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("subTitle", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrTeamDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrTeamDOTupleSchemeFactory();

  public int id; // optional
  public String name; // optional
  public String summary; // optional
  public String description; // optional
  public int showOrder; // optional
  public String jdMedia; // optional
  public int companyId; // optional
  public String createTime; // optional
  public String updateTime; // optional
  public int isShow; // optional
  public String slogan; // optional
  public int resId; // optional
  public String teamDetail; // optional
  public int disable; // optional
  public String subTitle; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    SUMMARY((short)3, "summary"),
    DESCRIPTION((short)4, "description"),
    SHOW_ORDER((short)5, "showOrder"),
    JD_MEDIA((short)6, "jdMedia"),
    COMPANY_ID((short)7, "companyId"),
    CREATE_TIME((short)8, "createTime"),
    UPDATE_TIME((short)9, "updateTime"),
    IS_SHOW((short)10, "isShow"),
    SLOGAN((short)11, "slogan"),
    RES_ID((short)12, "resId"),
    TEAM_DETAIL((short)13, "teamDetail"),
    DISABLE((short)14, "disable"),
    SUB_TITLE((short)15, "subTitle");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // SUMMARY
          return SUMMARY;
        case 4: // DESCRIPTION
          return DESCRIPTION;
        case 5: // SHOW_ORDER
          return SHOW_ORDER;
        case 6: // JD_MEDIA
          return JD_MEDIA;
        case 7: // COMPANY_ID
          return COMPANY_ID;
        case 8: // CREATE_TIME
          return CREATE_TIME;
        case 9: // UPDATE_TIME
          return UPDATE_TIME;
        case 10: // IS_SHOW
          return IS_SHOW;
        case 11: // SLOGAN
          return SLOGAN;
        case 12: // RES_ID
          return RES_ID;
        case 13: // TEAM_DETAIL
          return TEAM_DETAIL;
        case 14: // DISABLE
          return DISABLE;
        case 15: // SUB_TITLE
          return SUB_TITLE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SHOWORDER_ISSET_ID = 1;
  private static final int __COMPANYID_ISSET_ID = 2;
  private static final int __ISSHOW_ISSET_ID = 3;
  private static final int __RESID_ISSET_ID = 4;
  private static final int __DISABLE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.NAME,_Fields.SUMMARY,_Fields.DESCRIPTION,_Fields.SHOW_ORDER,_Fields.JD_MEDIA,_Fields.COMPANY_ID,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.IS_SHOW,_Fields.SLOGAN,_Fields.RES_ID,_Fields.TEAM_DETAIL,_Fields.DISABLE,_Fields.SUB_TITLE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("summary", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHOW_ORDER, new org.apache.thrift.meta_data.FieldMetaData("showOrder", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JD_MEDIA, new org.apache.thrift.meta_data.FieldMetaData("jdMedia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SHOW, new org.apache.thrift.meta_data.FieldMetaData("isShow", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SLOGAN, new org.apache.thrift.meta_data.FieldMetaData("slogan", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RES_ID, new org.apache.thrift.meta_data.FieldMetaData("resId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEAM_DETAIL, new org.apache.thrift.meta_data.FieldMetaData("teamDetail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUB_TITLE, new org.apache.thrift.meta_data.FieldMetaData("subTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrTeamDO.class, metaDataMap);
  }

  public HrTeamDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrTeamDO(HrTeamDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetSummary()) {
      this.summary = other.summary;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    this.showOrder = other.showOrder;
    if (other.isSetJdMedia()) {
      this.jdMedia = other.jdMedia;
    }
    this.companyId = other.companyId;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.isShow = other.isShow;
    if (other.isSetSlogan()) {
      this.slogan = other.slogan;
    }
    this.resId = other.resId;
    if (other.isSetTeamDetail()) {
      this.teamDetail = other.teamDetail;
    }
    this.disable = other.disable;
    if (other.isSetSubTitle()) {
      this.subTitle = other.subTitle;
    }
  }

  public HrTeamDO deepCopy() {
    return new HrTeamDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.summary = null;
    this.description = null;
    setShowOrderIsSet(false);
    this.showOrder = 0;
    this.jdMedia = null;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.createTime = null;
    this.updateTime = null;
    setIsShowIsSet(false);
    this.isShow = 0;
    this.slogan = null;
    setResIdIsSet(false);
    this.resId = 0;
    this.teamDetail = null;
    setDisableIsSet(false);
    this.disable = 0;
    this.subTitle = null;
  }

  public int getId() {
    return this.id;
  }

  public HrTeamDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public HrTeamDO setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getSummary() {
    return this.summary;
  }

  public HrTeamDO setSummary(String summary) {
    this.summary = summary;
    return this;
  }

  public void unsetSummary() {
    this.summary = null;
  }

  /** Returns true if field summary is set (has been assigned a value) and false otherwise */
  public boolean isSetSummary() {
    return this.summary != null;
  }

  public void setSummaryIsSet(boolean value) {
    if (!value) {
      this.summary = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public HrTeamDO setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public int getShowOrder() {
    return this.showOrder;
  }

  public HrTeamDO setShowOrder(int showOrder) {
    this.showOrder = showOrder;
    setShowOrderIsSet(true);
    return this;
  }

  public void unsetShowOrder() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOWORDER_ISSET_ID);
  }

  /** Returns true if field showOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetShowOrder() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOWORDER_ISSET_ID);
  }

  public void setShowOrderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOWORDER_ISSET_ID, value);
  }

  public String getJdMedia() {
    return this.jdMedia;
  }

  public HrTeamDO setJdMedia(String jdMedia) {
    this.jdMedia = jdMedia;
    return this;
  }

  public void unsetJdMedia() {
    this.jdMedia = null;
  }

  /** Returns true if field jdMedia is set (has been assigned a value) and false otherwise */
  public boolean isSetJdMedia() {
    return this.jdMedia != null;
  }

  public void setJdMediaIsSet(boolean value) {
    if (!value) {
      this.jdMedia = null;
    }
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public HrTeamDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public HrTeamDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public HrTeamDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public int getIsShow() {
    return this.isShow;
  }

  public HrTeamDO setIsShow(int isShow) {
    this.isShow = isShow;
    setIsShowIsSet(true);
    return this;
  }

  public void unsetIsShow() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISSHOW_ISSET_ID);
  }

  /** Returns true if field isShow is set (has been assigned a value) and false otherwise */
  public boolean isSetIsShow() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISSHOW_ISSET_ID);
  }

  public void setIsShowIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISSHOW_ISSET_ID, value);
  }

  public String getSlogan() {
    return this.slogan;
  }

  public HrTeamDO setSlogan(String slogan) {
    this.slogan = slogan;
    return this;
  }

  public void unsetSlogan() {
    this.slogan = null;
  }

  /** Returns true if field slogan is set (has been assigned a value) and false otherwise */
  public boolean isSetSlogan() {
    return this.slogan != null;
  }

  public void setSloganIsSet(boolean value) {
    if (!value) {
      this.slogan = null;
    }
  }

  public int getResId() {
    return this.resId;
  }

  public HrTeamDO setResId(int resId) {
    this.resId = resId;
    setResIdIsSet(true);
    return this;
  }

  public void unsetResId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RESID_ISSET_ID);
  }

  /** Returns true if field resId is set (has been assigned a value) and false otherwise */
  public boolean isSetResId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RESID_ISSET_ID);
  }

  public void setResIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RESID_ISSET_ID, value);
  }

  public String getTeamDetail() {
    return this.teamDetail;
  }

  public HrTeamDO setTeamDetail(String teamDetail) {
    this.teamDetail = teamDetail;
    return this;
  }

  public void unsetTeamDetail() {
    this.teamDetail = null;
  }

  /** Returns true if field teamDetail is set (has been assigned a value) and false otherwise */
  public boolean isSetTeamDetail() {
    return this.teamDetail != null;
  }

  public void setTeamDetailIsSet(boolean value) {
    if (!value) {
      this.teamDetail = null;
    }
  }

  public int getDisable() {
    return this.disable;
  }

  public HrTeamDO setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public String getSubTitle() {
    return this.subTitle;
  }

  public HrTeamDO setSubTitle(String subTitle) {
    this.subTitle = subTitle;
    return this;
  }

  public void unsetSubTitle() {
    this.subTitle = null;
  }

  /** Returns true if field subTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetSubTitle() {
    return this.subTitle != null;
  }

  public void setSubTitleIsSet(boolean value) {
    if (!value) {
      this.subTitle = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case SUMMARY:
      if (value == null) {
        unsetSummary();
      } else {
        setSummary((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case SHOW_ORDER:
      if (value == null) {
        unsetShowOrder();
      } else {
        setShowOrder((Integer)value);
      }
      break;

    case JD_MEDIA:
      if (value == null) {
        unsetJdMedia();
      } else {
        setJdMedia((String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case IS_SHOW:
      if (value == null) {
        unsetIsShow();
      } else {
        setIsShow((Integer)value);
      }
      break;

    case SLOGAN:
      if (value == null) {
        unsetSlogan();
      } else {
        setSlogan((String)value);
      }
      break;

    case RES_ID:
      if (value == null) {
        unsetResId();
      } else {
        setResId((Integer)value);
      }
      break;

    case TEAM_DETAIL:
      if (value == null) {
        unsetTeamDetail();
      } else {
        setTeamDetail((String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((Integer)value);
      }
      break;

    case SUB_TITLE:
      if (value == null) {
        unsetSubTitle();
      } else {
        setSubTitle((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case SUMMARY:
      return getSummary();

    case DESCRIPTION:
      return getDescription();

    case SHOW_ORDER:
      return getShowOrder();

    case JD_MEDIA:
      return getJdMedia();

    case COMPANY_ID:
      return getCompanyId();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case IS_SHOW:
      return getIsShow();

    case SLOGAN:
      return getSlogan();

    case RES_ID:
      return getResId();

    case TEAM_DETAIL:
      return getTeamDetail();

    case DISABLE:
      return getDisable();

    case SUB_TITLE:
      return getSubTitle();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case SUMMARY:
      return isSetSummary();
    case DESCRIPTION:
      return isSetDescription();
    case SHOW_ORDER:
      return isSetShowOrder();
    case JD_MEDIA:
      return isSetJdMedia();
    case COMPANY_ID:
      return isSetCompanyId();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case IS_SHOW:
      return isSetIsShow();
    case SLOGAN:
      return isSetSlogan();
    case RES_ID:
      return isSetResId();
    case TEAM_DETAIL:
      return isSetTeamDetail();
    case DISABLE:
      return isSetDisable();
    case SUB_TITLE:
      return isSetSubTitle();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof HrTeamDO)
      return this.equals((HrTeamDO)that);
    return false;
  }

  public boolean equals(HrTeamDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_summary = true && this.isSetSummary();
    boolean that_present_summary = true && that.isSetSummary();
    if (this_present_summary || that_present_summary) {
      if (!(this_present_summary && that_present_summary))
        return false;
      if (!this.summary.equals(that.summary))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_showOrder = true && this.isSetShowOrder();
    boolean that_present_showOrder = true && that.isSetShowOrder();
    if (this_present_showOrder || that_present_showOrder) {
      if (!(this_present_showOrder && that_present_showOrder))
        return false;
      if (this.showOrder != that.showOrder)
        return false;
    }

    boolean this_present_jdMedia = true && this.isSetJdMedia();
    boolean that_present_jdMedia = true && that.isSetJdMedia();
    if (this_present_jdMedia || that_present_jdMedia) {
      if (!(this_present_jdMedia && that_present_jdMedia))
        return false;
      if (!this.jdMedia.equals(that.jdMedia))
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_isShow = true && this.isSetIsShow();
    boolean that_present_isShow = true && that.isSetIsShow();
    if (this_present_isShow || that_present_isShow) {
      if (!(this_present_isShow && that_present_isShow))
        return false;
      if (this.isShow != that.isShow)
        return false;
    }

    boolean this_present_slogan = true && this.isSetSlogan();
    boolean that_present_slogan = true && that.isSetSlogan();
    if (this_present_slogan || that_present_slogan) {
      if (!(this_present_slogan && that_present_slogan))
        return false;
      if (!this.slogan.equals(that.slogan))
        return false;
    }

    boolean this_present_resId = true && this.isSetResId();
    boolean that_present_resId = true && that.isSetResId();
    if (this_present_resId || that_present_resId) {
      if (!(this_present_resId && that_present_resId))
        return false;
      if (this.resId != that.resId)
        return false;
    }

    boolean this_present_teamDetail = true && this.isSetTeamDetail();
    boolean that_present_teamDetail = true && that.isSetTeamDetail();
    if (this_present_teamDetail || that_present_teamDetail) {
      if (!(this_present_teamDetail && that_present_teamDetail))
        return false;
      if (!this.teamDetail.equals(that.teamDetail))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_subTitle = true && this.isSetSubTitle();
    boolean that_present_subTitle = true && that.isSetSubTitle();
    if (this_present_subTitle || that_present_subTitle) {
      if (!(this_present_subTitle && that_present_subTitle))
        return false;
      if (!this.subTitle.equals(that.subTitle))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetSummary()) ? 131071 : 524287);
    if (isSetSummary())
      hashCode = hashCode * 8191 + summary.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetShowOrder()) ? 131071 : 524287);
    if (isSetShowOrder())
      hashCode = hashCode * 8191 + showOrder;

    hashCode = hashCode * 8191 + ((isSetJdMedia()) ? 131071 : 524287);
    if (isSetJdMedia())
      hashCode = hashCode * 8191 + jdMedia.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsShow()) ? 131071 : 524287);
    if (isSetIsShow())
      hashCode = hashCode * 8191 + isShow;

    hashCode = hashCode * 8191 + ((isSetSlogan()) ? 131071 : 524287);
    if (isSetSlogan())
      hashCode = hashCode * 8191 + slogan.hashCode();

    hashCode = hashCode * 8191 + ((isSetResId()) ? 131071 : 524287);
    if (isSetResId())
      hashCode = hashCode * 8191 + resId;

    hashCode = hashCode * 8191 + ((isSetTeamDetail()) ? 131071 : 524287);
    if (isSetTeamDetail())
      hashCode = hashCode * 8191 + teamDetail.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetSubTitle()) ? 131071 : 524287);
    if (isSetSubTitle())
      hashCode = hashCode * 8191 + subTitle.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrTeamDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary()).compareTo(other.isSetSummary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary, other.summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShowOrder()).compareTo(other.isSetShowOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowOrder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showOrder, other.showOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJdMedia()).compareTo(other.isSetJdMedia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJdMedia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jdMedia, other.jdMedia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsShow()).compareTo(other.isSetIsShow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsShow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isShow, other.isShow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSlogan()).compareTo(other.isSetSlogan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSlogan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.slogan, other.slogan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResId()).compareTo(other.isSetResId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resId, other.resId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeamDetail()).compareTo(other.isSetTeamDetail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeamDetail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teamDetail, other.teamDetail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubTitle()).compareTo(other.isSetSubTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subTitle, other.subTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("HrTeamDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetSummary()) {
      if (!first) sb.append(", ");
      sb.append("summary:");
      if (this.summary == null) {
        sb.append("null");
      } else {
        sb.append(this.summary);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetShowOrder()) {
      if (!first) sb.append(", ");
      sb.append("showOrder:");
      sb.append(this.showOrder);
      first = false;
    }
    if (isSetJdMedia()) {
      if (!first) sb.append(", ");
      sb.append("jdMedia:");
      if (this.jdMedia == null) {
        sb.append("null");
      } else {
        sb.append(this.jdMedia);
      }
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetIsShow()) {
      if (!first) sb.append(", ");
      sb.append("isShow:");
      sb.append(this.isShow);
      first = false;
    }
    if (isSetSlogan()) {
      if (!first) sb.append(", ");
      sb.append("slogan:");
      if (this.slogan == null) {
        sb.append("null");
      } else {
        sb.append(this.slogan);
      }
      first = false;
    }
    if (isSetResId()) {
      if (!first) sb.append(", ");
      sb.append("resId:");
      sb.append(this.resId);
      first = false;
    }
    if (isSetTeamDetail()) {
      if (!first) sb.append(", ");
      sb.append("teamDetail:");
      if (this.teamDetail == null) {
        sb.append("null");
      } else {
        sb.append(this.teamDetail);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetSubTitle()) {
      if (!first) sb.append(", ");
      sb.append("subTitle:");
      if (this.subTitle == null) {
        sb.append("null");
      } else {
        sb.append(this.subTitle);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrTeamDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrTeamDOStandardScheme getScheme() {
      return new HrTeamDOStandardScheme();
    }
  }

  private static class HrTeamDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrTeamDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrTeamDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary = iprot.readString();
              struct.setSummaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SHOW_ORDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.showOrder = iprot.readI32();
              struct.setShowOrderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // JD_MEDIA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jdMedia = iprot.readString();
              struct.setJdMediaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IS_SHOW
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isShow = iprot.readI32();
              struct.setIsShowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SLOGAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.slogan = iprot.readString();
              struct.setSloganIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RES_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resId = iprot.readI32();
              struct.setResIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // TEAM_DETAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.teamDetail = iprot.readString();
              struct.setTeamDetailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SUB_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subTitle = iprot.readString();
              struct.setSubTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrTeamDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary != null) {
        if (struct.isSetSummary()) {
          oprot.writeFieldBegin(SUMMARY_FIELD_DESC);
          oprot.writeString(struct.summary);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetShowOrder()) {
        oprot.writeFieldBegin(SHOW_ORDER_FIELD_DESC);
        oprot.writeI32(struct.showOrder);
        oprot.writeFieldEnd();
      }
      if (struct.jdMedia != null) {
        if (struct.isSetJdMedia()) {
          oprot.writeFieldBegin(JD_MEDIA_FIELD_DESC);
          oprot.writeString(struct.jdMedia);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsShow()) {
        oprot.writeFieldBegin(IS_SHOW_FIELD_DESC);
        oprot.writeI32(struct.isShow);
        oprot.writeFieldEnd();
      }
      if (struct.slogan != null) {
        if (struct.isSetSlogan()) {
          oprot.writeFieldBegin(SLOGAN_FIELD_DESC);
          oprot.writeString(struct.slogan);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetResId()) {
        oprot.writeFieldBegin(RES_ID_FIELD_DESC);
        oprot.writeI32(struct.resId);
        oprot.writeFieldEnd();
      }
      if (struct.teamDetail != null) {
        if (struct.isSetTeamDetail()) {
          oprot.writeFieldBegin(TEAM_DETAIL_FIELD_DESC);
          oprot.writeString(struct.teamDetail);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.subTitle != null) {
        if (struct.isSetSubTitle()) {
          oprot.writeFieldBegin(SUB_TITLE_FIELD_DESC);
          oprot.writeString(struct.subTitle);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrTeamDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrTeamDOTupleScheme getScheme() {
      return new HrTeamDOTupleScheme();
    }
  }

  private static class HrTeamDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrTeamDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrTeamDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetSummary()) {
        optionals.set(2);
      }
      if (struct.isSetDescription()) {
        optionals.set(3);
      }
      if (struct.isSetShowOrder()) {
        optionals.set(4);
      }
      if (struct.isSetJdMedia()) {
        optionals.set(5);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(7);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(8);
      }
      if (struct.isSetIsShow()) {
        optionals.set(9);
      }
      if (struct.isSetSlogan()) {
        optionals.set(10);
      }
      if (struct.isSetResId()) {
        optionals.set(11);
      }
      if (struct.isSetTeamDetail()) {
        optionals.set(12);
      }
      if (struct.isSetDisable()) {
        optionals.set(13);
      }
      if (struct.isSetSubTitle()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetSummary()) {
        oprot.writeString(struct.summary);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetShowOrder()) {
        oprot.writeI32(struct.showOrder);
      }
      if (struct.isSetJdMedia()) {
        oprot.writeString(struct.jdMedia);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetIsShow()) {
        oprot.writeI32(struct.isShow);
      }
      if (struct.isSetSlogan()) {
        oprot.writeString(struct.slogan);
      }
      if (struct.isSetResId()) {
        oprot.writeI32(struct.resId);
      }
      if (struct.isSetTeamDetail()) {
        oprot.writeString(struct.teamDetail);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetSubTitle()) {
        oprot.writeString(struct.subTitle);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrTeamDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.summary = iprot.readString();
        struct.setSummaryIsSet(true);
      }
      if (incoming.get(3)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.showOrder = iprot.readI32();
        struct.setShowOrderIsSet(true);
      }
      if (incoming.get(5)) {
        struct.jdMedia = iprot.readString();
        struct.setJdMediaIsSet(true);
      }
      if (incoming.get(6)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.isShow = iprot.readI32();
        struct.setIsShowIsSet(true);
      }
      if (incoming.get(10)) {
        struct.slogan = iprot.readString();
        struct.setSloganIsSet(true);
      }
      if (incoming.get(11)) {
        struct.resId = iprot.readI32();
        struct.setResIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.teamDetail = iprot.readString();
        struct.setTeamDetailIsSet(true);
      }
      if (incoming.get(13)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(14)) {
        struct.subTitle = iprot.readString();
        struct.setSubTitleIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

