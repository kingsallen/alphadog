/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.analytics;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-15")
public class StJobSimilarityDO implements org.apache.thrift.TBase<StJobSimilarityDO, StJobSimilarityDO._Fields>, java.io.Serializable, Cloneable, Comparable<StJobSimilarityDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("StJobSimilarityDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField POS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("posId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField RECOM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recomId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField REC_SIM_FIELD_DESC = new org.apache.thrift.protocol.TField("recSim", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("departmentId", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new StJobSimilarityDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new StJobSimilarityDOTupleSchemeFactory();

  public int id; // optional
  public int posId; // optional
  public int recomId; // optional
  public double recSim; // optional
  public int departmentId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    POS_ID((short)2, "posId"),
    RECOM_ID((short)3, "recomId"),
    REC_SIM((short)4, "recSim"),
    DEPARTMENT_ID((short)5, "departmentId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // POS_ID
          return POS_ID;
        case 3: // RECOM_ID
          return RECOM_ID;
        case 4: // REC_SIM
          return REC_SIM;
        case 5: // DEPARTMENT_ID
          return DEPARTMENT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __POSID_ISSET_ID = 1;
  private static final int __RECOMID_ISSET_ID = 2;
  private static final int __RECSIM_ISSET_ID = 3;
  private static final int __DEPARTMENTID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.POS_ID,_Fields.RECOM_ID,_Fields.REC_SIM,_Fields.DEPARTMENT_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POS_ID, new org.apache.thrift.meta_data.FieldMetaData("posId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_ID, new org.apache.thrift.meta_data.FieldMetaData("recomId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REC_SIM, new org.apache.thrift.meta_data.FieldMetaData("recSim", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DEPARTMENT_ID, new org.apache.thrift.meta_data.FieldMetaData("departmentId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(StJobSimilarityDO.class, metaDataMap);
  }

  public StJobSimilarityDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public StJobSimilarityDO(StJobSimilarityDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.posId = other.posId;
    this.recomId = other.recomId;
    this.recSim = other.recSim;
    this.departmentId = other.departmentId;
  }

  public StJobSimilarityDO deepCopy() {
    return new StJobSimilarityDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPosIdIsSet(false);
    this.posId = 0;
    setRecomIdIsSet(false);
    this.recomId = 0;
    setRecSimIsSet(false);
    this.recSim = 0.0;
    setDepartmentIdIsSet(false);
    this.departmentId = 0;
  }

  public int getId() {
    return this.id;
  }

  public StJobSimilarityDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPosId() {
    return this.posId;
  }

  public StJobSimilarityDO setPosId(int posId) {
    this.posId = posId;
    setPosIdIsSet(true);
    return this;
  }

  public void unsetPosId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSID_ISSET_ID);
  }

  /** Returns true if field posId is set (has been assigned a value) and false otherwise */
  public boolean isSetPosId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSID_ISSET_ID);
  }

  public void setPosIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSID_ISSET_ID, value);
  }

  public int getRecomId() {
    return this.recomId;
  }

  public StJobSimilarityDO setRecomId(int recomId) {
    this.recomId = recomId;
    setRecomIdIsSet(true);
    return this;
  }

  public void unsetRecomId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMID_ISSET_ID);
  }

  /** Returns true if field recomId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMID_ISSET_ID);
  }

  public void setRecomIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMID_ISSET_ID, value);
  }

  public double getRecSim() {
    return this.recSim;
  }

  public StJobSimilarityDO setRecSim(double recSim) {
    this.recSim = recSim;
    setRecSimIsSet(true);
    return this;
  }

  public void unsetRecSim() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECSIM_ISSET_ID);
  }

  /** Returns true if field recSim is set (has been assigned a value) and false otherwise */
  public boolean isSetRecSim() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECSIM_ISSET_ID);
  }

  public void setRecSimIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECSIM_ISSET_ID, value);
  }

  public int getDepartmentId() {
    return this.departmentId;
  }

  public StJobSimilarityDO setDepartmentId(int departmentId) {
    this.departmentId = departmentId;
    setDepartmentIdIsSet(true);
    return this;
  }

  public void unsetDepartmentId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
  }

  /** Returns true if field departmentId is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartmentId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID);
  }

  public void setDepartmentIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPARTMENTID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case POS_ID:
      if (value == null) {
        unsetPosId();
      } else {
        setPosId((java.lang.Integer)value);
      }
      break;

    case RECOM_ID:
      if (value == null) {
        unsetRecomId();
      } else {
        setRecomId((java.lang.Integer)value);
      }
      break;

    case REC_SIM:
      if (value == null) {
        unsetRecSim();
      } else {
        setRecSim((java.lang.Double)value);
      }
      break;

    case DEPARTMENT_ID:
      if (value == null) {
        unsetDepartmentId();
      } else {
        setDepartmentId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case POS_ID:
      return getPosId();

    case RECOM_ID:
      return getRecomId();

    case REC_SIM:
      return getRecSim();

    case DEPARTMENT_ID:
      return getDepartmentId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case POS_ID:
      return isSetPosId();
    case RECOM_ID:
      return isSetRecomId();
    case REC_SIM:
      return isSetRecSim();
    case DEPARTMENT_ID:
      return isSetDepartmentId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof StJobSimilarityDO)
      return this.equals((StJobSimilarityDO)that);
    return false;
  }

  public boolean equals(StJobSimilarityDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_posId = true && this.isSetPosId();
    boolean that_present_posId = true && that.isSetPosId();
    if (this_present_posId || that_present_posId) {
      if (!(this_present_posId && that_present_posId))
        return false;
      if (this.posId != that.posId)
        return false;
    }

    boolean this_present_recomId = true && this.isSetRecomId();
    boolean that_present_recomId = true && that.isSetRecomId();
    if (this_present_recomId || that_present_recomId) {
      if (!(this_present_recomId && that_present_recomId))
        return false;
      if (this.recomId != that.recomId)
        return false;
    }

    boolean this_present_recSim = true && this.isSetRecSim();
    boolean that_present_recSim = true && that.isSetRecSim();
    if (this_present_recSim || that_present_recSim) {
      if (!(this_present_recSim && that_present_recSim))
        return false;
      if (this.recSim != that.recSim)
        return false;
    }

    boolean this_present_departmentId = true && this.isSetDepartmentId();
    boolean that_present_departmentId = true && that.isSetDepartmentId();
    if (this_present_departmentId || that_present_departmentId) {
      if (!(this_present_departmentId && that_present_departmentId))
        return false;
      if (this.departmentId != that.departmentId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPosId()) ? 131071 : 524287);
    if (isSetPosId())
      hashCode = hashCode * 8191 + posId;

    hashCode = hashCode * 8191 + ((isSetRecomId()) ? 131071 : 524287);
    if (isSetRecomId())
      hashCode = hashCode * 8191 + recomId;

    hashCode = hashCode * 8191 + ((isSetRecSim()) ? 131071 : 524287);
    if (isSetRecSim())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(recSim);

    hashCode = hashCode * 8191 + ((isSetDepartmentId()) ? 131071 : 524287);
    if (isSetDepartmentId())
      hashCode = hashCode * 8191 + departmentId;

    return hashCode;
  }

  @Override
  public int compareTo(StJobSimilarityDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosId()).compareTo(other.isSetPosId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.posId, other.posId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomId()).compareTo(other.isSetRecomId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomId, other.recomId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecSim()).compareTo(other.isSetRecSim());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecSim()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recSim, other.recSim);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartmentId()).compareTo(other.isSetDepartmentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartmentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.departmentId, other.departmentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("StJobSimilarityDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPosId()) {
      if (!first) sb.append(", ");
      sb.append("posId:");
      sb.append(this.posId);
      first = false;
    }
    if (isSetRecomId()) {
      if (!first) sb.append(", ");
      sb.append("recomId:");
      sb.append(this.recomId);
      first = false;
    }
    if (isSetRecSim()) {
      if (!first) sb.append(", ");
      sb.append("recSim:");
      sb.append(this.recSim);
      first = false;
    }
    if (isSetDepartmentId()) {
      if (!first) sb.append(", ");
      sb.append("departmentId:");
      sb.append(this.departmentId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class StJobSimilarityDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StJobSimilarityDOStandardScheme getScheme() {
      return new StJobSimilarityDOStandardScheme();
    }
  }

  private static class StJobSimilarityDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<StJobSimilarityDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, StJobSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.posId = iprot.readI32();
              struct.setPosIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RECOM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recomId = iprot.readI32();
              struct.setRecomIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REC_SIM
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.recSim = iprot.readDouble();
              struct.setRecSimIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DEPARTMENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.departmentId = iprot.readI32();
              struct.setDepartmentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, StJobSimilarityDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPosId()) {
        oprot.writeFieldBegin(POS_ID_FIELD_DESC);
        oprot.writeI32(struct.posId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecomId()) {
        oprot.writeFieldBegin(RECOM_ID_FIELD_DESC);
        oprot.writeI32(struct.recomId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecSim()) {
        oprot.writeFieldBegin(REC_SIM_FIELD_DESC);
        oprot.writeDouble(struct.recSim);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDepartmentId()) {
        oprot.writeFieldBegin(DEPARTMENT_ID_FIELD_DESC);
        oprot.writeI32(struct.departmentId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class StJobSimilarityDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public StJobSimilarityDOTupleScheme getScheme() {
      return new StJobSimilarityDOTupleScheme();
    }
  }

  private static class StJobSimilarityDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<StJobSimilarityDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, StJobSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPosId()) {
        optionals.set(1);
      }
      if (struct.isSetRecomId()) {
        optionals.set(2);
      }
      if (struct.isSetRecSim()) {
        optionals.set(3);
      }
      if (struct.isSetDepartmentId()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPosId()) {
        oprot.writeI32(struct.posId);
      }
      if (struct.isSetRecomId()) {
        oprot.writeI32(struct.recomId);
      }
      if (struct.isSetRecSim()) {
        oprot.writeDouble(struct.recSim);
      }
      if (struct.isSetDepartmentId()) {
        oprot.writeI32(struct.departmentId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, StJobSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.posId = iprot.readI32();
        struct.setPosIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.recomId = iprot.readI32();
        struct.setRecomIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.recSim = iprot.readDouble();
        struct.setRecSimIsSet(true);
      }
      if (incoming.get(4)) {
        struct.departmentId = iprot.readI32();
        struct.setDepartmentIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

