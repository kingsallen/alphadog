/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.candidate.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-06")
public class CandidateListParam implements org.apache.thrift.TBase<CandidateListParam, CandidateListParam._Fields>, java.io.Serializable, Cloneable, Comparable<CandidateListParam> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CandidateListParam");

  private static final org.apache.thrift.protocol.TField POST_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("postUserId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CLICK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("clickTime", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField IS_RECOM_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecom", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CandidateListParamStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CandidateListParamTupleSchemeFactory();

  public int postUserId; // optional
  public java.lang.String clickTime; // optional
  public int isRecom; // optional
  public int companyId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    POST_USER_ID((short)1, "postUserId"),
    CLICK_TIME((short)2, "clickTime"),
    IS_RECOM((short)3, "isRecom"),
    COMPANY_ID((short)4, "companyId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // POST_USER_ID
          return POST_USER_ID;
        case 2: // CLICK_TIME
          return CLICK_TIME;
        case 3: // IS_RECOM
          return IS_RECOM;
        case 4: // COMPANY_ID
          return COMPANY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __POSTUSERID_ISSET_ID = 0;
  private static final int __ISRECOM_ISSET_ID = 1;
  private static final int __COMPANYID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.POST_USER_ID,_Fields.CLICK_TIME,_Fields.IS_RECOM,_Fields.COMPANY_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.POST_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("postUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLICK_TIME, new org.apache.thrift.meta_data.FieldMetaData("clickTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOM, new org.apache.thrift.meta_data.FieldMetaData("isRecom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CandidateListParam.class, metaDataMap);
  }

  public CandidateListParam() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CandidateListParam(CandidateListParam other) {
    __isset_bitfield = other.__isset_bitfield;
    this.postUserId = other.postUserId;
    if (other.isSetClickTime()) {
      this.clickTime = other.clickTime;
    }
    this.isRecom = other.isRecom;
    this.companyId = other.companyId;
  }

  public CandidateListParam deepCopy() {
    return new CandidateListParam(this);
  }

  @Override
  public void clear() {
    setPostUserIdIsSet(false);
    this.postUserId = 0;
    this.clickTime = null;
    setIsRecomIsSet(false);
    this.isRecom = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
  }

  public int getPostUserId() {
    return this.postUserId;
  }

  public CandidateListParam setPostUserId(int postUserId) {
    this.postUserId = postUserId;
    setPostUserIdIsSet(true);
    return this;
  }

  public void unsetPostUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  /** Returns true if field postUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPostUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  public void setPostUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSTUSERID_ISSET_ID, value);
  }

  public java.lang.String getClickTime() {
    return this.clickTime;
  }

  public CandidateListParam setClickTime(java.lang.String clickTime) {
    this.clickTime = clickTime;
    return this;
  }

  public void unsetClickTime() {
    this.clickTime = null;
  }

  /** Returns true if field clickTime is set (has been assigned a value) and false otherwise */
  public boolean isSetClickTime() {
    return this.clickTime != null;
  }

  public void setClickTimeIsSet(boolean value) {
    if (!value) {
      this.clickTime = null;
    }
  }

  public int getIsRecom() {
    return this.isRecom;
  }

  public CandidateListParam setIsRecom(int isRecom) {
    this.isRecom = isRecom;
    setIsRecomIsSet(true);
    return this;
  }

  public void unsetIsRecom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISRECOM_ISSET_ID);
  }

  /** Returns true if field isRecom is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISRECOM_ISSET_ID);
  }

  public void setIsRecomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISRECOM_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public CandidateListParam setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case POST_USER_ID:
      if (value == null) {
        unsetPostUserId();
      } else {
        setPostUserId((java.lang.Integer)value);
      }
      break;

    case CLICK_TIME:
      if (value == null) {
        unsetClickTime();
      } else {
        setClickTime((java.lang.String)value);
      }
      break;

    case IS_RECOM:
      if (value == null) {
        unsetIsRecom();
      } else {
        setIsRecom((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case POST_USER_ID:
      return getPostUserId();

    case CLICK_TIME:
      return getClickTime();

    case IS_RECOM:
      return getIsRecom();

    case COMPANY_ID:
      return getCompanyId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case POST_USER_ID:
      return isSetPostUserId();
    case CLICK_TIME:
      return isSetClickTime();
    case IS_RECOM:
      return isSetIsRecom();
    case COMPANY_ID:
      return isSetCompanyId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CandidateListParam)
      return this.equals((CandidateListParam)that);
    return false;
  }

  public boolean equals(CandidateListParam that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_postUserId = true && this.isSetPostUserId();
    boolean that_present_postUserId = true && that.isSetPostUserId();
    if (this_present_postUserId || that_present_postUserId) {
      if (!(this_present_postUserId && that_present_postUserId))
        return false;
      if (this.postUserId != that.postUserId)
        return false;
    }

    boolean this_present_clickTime = true && this.isSetClickTime();
    boolean that_present_clickTime = true && that.isSetClickTime();
    if (this_present_clickTime || that_present_clickTime) {
      if (!(this_present_clickTime && that_present_clickTime))
        return false;
      if (!this.clickTime.equals(that.clickTime))
        return false;
    }

    boolean this_present_isRecom = true && this.isSetIsRecom();
    boolean that_present_isRecom = true && that.isSetIsRecom();
    if (this_present_isRecom || that_present_isRecom) {
      if (!(this_present_isRecom && that_present_isRecom))
        return false;
      if (this.isRecom != that.isRecom)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPostUserId()) ? 131071 : 524287);
    if (isSetPostUserId())
      hashCode = hashCode * 8191 + postUserId;

    hashCode = hashCode * 8191 + ((isSetClickTime()) ? 131071 : 524287);
    if (isSetClickTime())
      hashCode = hashCode * 8191 + clickTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsRecom()) ? 131071 : 524287);
    if (isSetIsRecom())
      hashCode = hashCode * 8191 + isRecom;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    return hashCode;
  }

  @Override
  public int compareTo(CandidateListParam other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPostUserId()).compareTo(other.isSetPostUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.postUserId, other.postUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClickTime()).compareTo(other.isSetClickTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickTime, other.clickTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsRecom()).compareTo(other.isSetIsRecom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecom, other.isRecom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CandidateListParam(");
    boolean first = true;

    if (isSetPostUserId()) {
      sb.append("postUserId:");
      sb.append(this.postUserId);
      first = false;
    }
    if (isSetClickTime()) {
      if (!first) sb.append(", ");
      sb.append("clickTime:");
      if (this.clickTime == null) {
        sb.append("null");
      } else {
        sb.append(this.clickTime);
      }
      first = false;
    }
    if (isSetIsRecom()) {
      if (!first) sb.append(", ");
      sb.append("isRecom:");
      sb.append(this.isRecom);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CandidateListParamStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateListParamStandardScheme getScheme() {
      return new CandidateListParamStandardScheme();
    }
  }

  private static class CandidateListParamStandardScheme extends org.apache.thrift.scheme.StandardScheme<CandidateListParam> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CandidateListParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // POST_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.postUserId = iprot.readI32();
              struct.setPostUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLICK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickTime = iprot.readString();
              struct.setClickTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_RECOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isRecom = iprot.readI32();
              struct.setIsRecomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CandidateListParam struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetPostUserId()) {
        oprot.writeFieldBegin(POST_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.postUserId);
        oprot.writeFieldEnd();
      }
      if (struct.clickTime != null) {
        if (struct.isSetClickTime()) {
          oprot.writeFieldBegin(CLICK_TIME_FIELD_DESC);
          oprot.writeString(struct.clickTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsRecom()) {
        oprot.writeFieldBegin(IS_RECOM_FIELD_DESC);
        oprot.writeI32(struct.isRecom);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CandidateListParamTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateListParamTupleScheme getScheme() {
      return new CandidateListParamTupleScheme();
    }
  }

  private static class CandidateListParamTupleScheme extends org.apache.thrift.scheme.TupleScheme<CandidateListParam> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CandidateListParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPostUserId()) {
        optionals.set(0);
      }
      if (struct.isSetClickTime()) {
        optionals.set(1);
      }
      if (struct.isSetIsRecom()) {
        optionals.set(2);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetPostUserId()) {
        oprot.writeI32(struct.postUserId);
      }
      if (struct.isSetClickTime()) {
        oprot.writeString(struct.clickTime);
      }
      if (struct.isSetIsRecom()) {
        oprot.writeI32(struct.isRecom);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CandidateListParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.postUserId = iprot.readI32();
        struct.setPostUserIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clickTime = iprot.readString();
        struct.setClickTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.isRecom = iprot.readI32();
        struct.setIsRecomIsSet(true);
      }
      if (incoming.get(3)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

