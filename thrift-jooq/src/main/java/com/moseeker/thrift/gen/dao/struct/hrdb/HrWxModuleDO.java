/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-04")
public class HrWxModuleDO implements org.apache.thrift.TBase<HrWxModuleDO, HrWxModuleDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrWxModuleDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrWxModuleDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.BYTE, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ABILITY_FIELD_DESC = new org.apache.thrift.protocol.TField("ability", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AUTHOR_FIELD_DESC = new org.apache.thrift.protocol.TField("author", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField URL_FIELD_DESC = new org.apache.thrift.protocol.TField("url", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("settings", org.apache.thrift.protocol.TType.BYTE, (short)9);
  private static final org.apache.thrift.protocol.TField SUBSCRIBES_FIELD_DESC = new org.apache.thrift.protocol.TField("subscribes", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField HANDLES_FIELD_DESC = new org.apache.thrift.protocol.TField("handles", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ISRULEFIELDS_FIELD_DESC = new org.apache.thrift.protocol.TField("isrulefields", org.apache.thrift.protocol.TType.BYTE, (short)12);
  private static final org.apache.thrift.protocol.TField HOME_FIELD_DESC = new org.apache.thrift.protocol.TField("home", org.apache.thrift.protocol.TType.BYTE, (short)13);
  private static final org.apache.thrift.protocol.TField ISSYSTEM_FIELD_DESC = new org.apache.thrift.protocol.TField("issystem", org.apache.thrift.protocol.TType.BYTE, (short)14);
  private static final org.apache.thrift.protocol.TField OPTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("options", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("profile", org.apache.thrift.protocol.TType.BYTE, (short)16);
  private static final org.apache.thrift.protocol.TField SITE_MENUS_FIELD_DESC = new org.apache.thrift.protocol.TField("siteMenus", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField PLATFORM_MENUS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformMenus", org.apache.thrift.protocol.TType.STRING, (short)18);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrWxModuleDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrWxModuleDOTupleSchemeFactory();

  public byte id; // optional
  public String name; // optional
  public String title; // optional
  public String version; // optional
  public String ability; // optional
  public String description; // optional
  public String author; // optional
  public String url; // optional
  public byte settings; // optional
  public String subscribes; // optional
  public String handles; // optional
  public byte isrulefields; // optional
  public byte home; // optional
  public byte issystem; // optional
  public String options; // optional
  public byte profile; // optional
  public String siteMenus; // optional
  public String platformMenus; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    TITLE((short)3, "title"),
    VERSION((short)4, "version"),
    ABILITY((short)5, "ability"),
    DESCRIPTION((short)6, "description"),
    AUTHOR((short)7, "author"),
    URL((short)8, "url"),
    SETTINGS((short)9, "settings"),
    SUBSCRIBES((short)10, "subscribes"),
    HANDLES((short)11, "handles"),
    ISRULEFIELDS((short)12, "isrulefields"),
    HOME((short)13, "home"),
    ISSYSTEM((short)14, "issystem"),
    OPTIONS((short)15, "options"),
    PROFILE((short)16, "profile"),
    SITE_MENUS((short)17, "siteMenus"),
    PLATFORM_MENUS((short)18, "platformMenus");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // TITLE
          return TITLE;
        case 4: // VERSION
          return VERSION;
        case 5: // ABILITY
          return ABILITY;
        case 6: // DESCRIPTION
          return DESCRIPTION;
        case 7: // AUTHOR
          return AUTHOR;
        case 8: // URL
          return URL;
        case 9: // SETTINGS
          return SETTINGS;
        case 10: // SUBSCRIBES
          return SUBSCRIBES;
        case 11: // HANDLES
          return HANDLES;
        case 12: // ISRULEFIELDS
          return ISRULEFIELDS;
        case 13: // HOME
          return HOME;
        case 14: // ISSYSTEM
          return ISSYSTEM;
        case 15: // OPTIONS
          return OPTIONS;
        case 16: // PROFILE
          return PROFILE;
        case 17: // SITE_MENUS
          return SITE_MENUS;
        case 18: // PLATFORM_MENUS
          return PLATFORM_MENUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SETTINGS_ISSET_ID = 1;
  private static final int __ISRULEFIELDS_ISSET_ID = 2;
  private static final int __HOME_ISSET_ID = 3;
  private static final int __ISSYSTEM_ISSET_ID = 4;
  private static final int __PROFILE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.NAME,_Fields.TITLE,_Fields.VERSION,_Fields.ABILITY,_Fields.DESCRIPTION,_Fields.AUTHOR,_Fields.URL,_Fields.SETTINGS,_Fields.SUBSCRIBES,_Fields.HANDLES,_Fields.ISRULEFIELDS,_Fields.HOME,_Fields.ISSYSTEM,_Fields.OPTIONS,_Fields.PROFILE,_Fields.SITE_MENUS,_Fields.PLATFORM_MENUS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ABILITY, new org.apache.thrift.meta_data.FieldMetaData("ability", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHOR, new org.apache.thrift.meta_data.FieldMetaData("author", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.URL, new org.apache.thrift.meta_data.FieldMetaData("url", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTINGS, new org.apache.thrift.meta_data.FieldMetaData("settings", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SUBSCRIBES, new org.apache.thrift.meta_data.FieldMetaData("subscribes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HANDLES, new org.apache.thrift.meta_data.FieldMetaData("handles", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ISRULEFIELDS, new org.apache.thrift.meta_data.FieldMetaData("isrulefields", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.HOME, new org.apache.thrift.meta_data.FieldMetaData("home", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ISSYSTEM, new org.apache.thrift.meta_data.FieldMetaData("issystem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.OPTIONS, new org.apache.thrift.meta_data.FieldMetaData("options", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROFILE, new org.apache.thrift.meta_data.FieldMetaData("profile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SITE_MENUS, new org.apache.thrift.meta_data.FieldMetaData("siteMenus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLATFORM_MENUS, new org.apache.thrift.meta_data.FieldMetaData("platformMenus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrWxModuleDO.class, metaDataMap);
  }

  public HrWxModuleDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrWxModuleDO(HrWxModuleDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetVersion()) {
      this.version = other.version;
    }
    if (other.isSetAbility()) {
      this.ability = other.ability;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetAuthor()) {
      this.author = other.author;
    }
    if (other.isSetUrl()) {
      this.url = other.url;
    }
    this.settings = other.settings;
    if (other.isSetSubscribes()) {
      this.subscribes = other.subscribes;
    }
    if (other.isSetHandles()) {
      this.handles = other.handles;
    }
    this.isrulefields = other.isrulefields;
    this.home = other.home;
    this.issystem = other.issystem;
    if (other.isSetOptions()) {
      this.options = other.options;
    }
    this.profile = other.profile;
    if (other.isSetSiteMenus()) {
      this.siteMenus = other.siteMenus;
    }
    if (other.isSetPlatformMenus()) {
      this.platformMenus = other.platformMenus;
    }
  }

  public HrWxModuleDO deepCopy() {
    return new HrWxModuleDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.title = null;
    this.version = null;
    this.ability = null;
    this.description = null;
    this.author = null;
    this.url = null;
    setSettingsIsSet(false);
    this.settings = 0;
    this.subscribes = null;
    this.handles = null;
    setIsrulefieldsIsSet(false);
    this.isrulefields = 0;
    setHomeIsSet(false);
    this.home = 0;
    setIssystemIsSet(false);
    this.issystem = 0;
    this.options = null;
    setProfileIsSet(false);
    this.profile = 0;
    this.siteMenus = null;
    this.platformMenus = null;
  }

  public byte getId() {
    return this.id;
  }

  public HrWxModuleDO setId(byte id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public HrWxModuleDO setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public HrWxModuleDO setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getVersion() {
    return this.version;
  }

  public HrWxModuleDO setVersion(String version) {
    this.version = version;
    return this;
  }

  public void unsetVersion() {
    this.version = null;
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return this.version != null;
  }

  public void setVersionIsSet(boolean value) {
    if (!value) {
      this.version = null;
    }
  }

  public String getAbility() {
    return this.ability;
  }

  public HrWxModuleDO setAbility(String ability) {
    this.ability = ability;
    return this;
  }

  public void unsetAbility() {
    this.ability = null;
  }

  /** Returns true if field ability is set (has been assigned a value) and false otherwise */
  public boolean isSetAbility() {
    return this.ability != null;
  }

  public void setAbilityIsSet(boolean value) {
    if (!value) {
      this.ability = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public HrWxModuleDO setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getAuthor() {
    return this.author;
  }

  public HrWxModuleDO setAuthor(String author) {
    this.author = author;
    return this;
  }

  public void unsetAuthor() {
    this.author = null;
  }

  /** Returns true if field author is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthor() {
    return this.author != null;
  }

  public void setAuthorIsSet(boolean value) {
    if (!value) {
      this.author = null;
    }
  }

  public String getUrl() {
    return this.url;
  }

  public HrWxModuleDO setUrl(String url) {
    this.url = url;
    return this;
  }

  public void unsetUrl() {
    this.url = null;
  }

  /** Returns true if field url is set (has been assigned a value) and false otherwise */
  public boolean isSetUrl() {
    return this.url != null;
  }

  public void setUrlIsSet(boolean value) {
    if (!value) {
      this.url = null;
    }
  }

  public byte getSettings() {
    return this.settings;
  }

  public HrWxModuleDO setSettings(byte settings) {
    this.settings = settings;
    setSettingsIsSet(true);
    return this;
  }

  public void unsetSettings() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SETTINGS_ISSET_ID);
  }

  /** Returns true if field settings is set (has been assigned a value) and false otherwise */
  public boolean isSetSettings() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SETTINGS_ISSET_ID);
  }

  public void setSettingsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SETTINGS_ISSET_ID, value);
  }

  public String getSubscribes() {
    return this.subscribes;
  }

  public HrWxModuleDO setSubscribes(String subscribes) {
    this.subscribes = subscribes;
    return this;
  }

  public void unsetSubscribes() {
    this.subscribes = null;
  }

  /** Returns true if field subscribes is set (has been assigned a value) and false otherwise */
  public boolean isSetSubscribes() {
    return this.subscribes != null;
  }

  public void setSubscribesIsSet(boolean value) {
    if (!value) {
      this.subscribes = null;
    }
  }

  public String getHandles() {
    return this.handles;
  }

  public HrWxModuleDO setHandles(String handles) {
    this.handles = handles;
    return this;
  }

  public void unsetHandles() {
    this.handles = null;
  }

  /** Returns true if field handles is set (has been assigned a value) and false otherwise */
  public boolean isSetHandles() {
    return this.handles != null;
  }

  public void setHandlesIsSet(boolean value) {
    if (!value) {
      this.handles = null;
    }
  }

  public byte getIsrulefields() {
    return this.isrulefields;
  }

  public HrWxModuleDO setIsrulefields(byte isrulefields) {
    this.isrulefields = isrulefields;
    setIsrulefieldsIsSet(true);
    return this;
  }

  public void unsetIsrulefields() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISRULEFIELDS_ISSET_ID);
  }

  /** Returns true if field isrulefields is set (has been assigned a value) and false otherwise */
  public boolean isSetIsrulefields() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISRULEFIELDS_ISSET_ID);
  }

  public void setIsrulefieldsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISRULEFIELDS_ISSET_ID, value);
  }

  public byte getHome() {
    return this.home;
  }

  public HrWxModuleDO setHome(byte home) {
    this.home = home;
    setHomeIsSet(true);
    return this;
  }

  public void unsetHome() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HOME_ISSET_ID);
  }

  /** Returns true if field home is set (has been assigned a value) and false otherwise */
  public boolean isSetHome() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HOME_ISSET_ID);
  }

  public void setHomeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HOME_ISSET_ID, value);
  }

  public byte getIssystem() {
    return this.issystem;
  }

  public HrWxModuleDO setIssystem(byte issystem) {
    this.issystem = issystem;
    setIssystemIsSet(true);
    return this;
  }

  public void unsetIssystem() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISSYSTEM_ISSET_ID);
  }

  /** Returns true if field issystem is set (has been assigned a value) and false otherwise */
  public boolean isSetIssystem() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISSYSTEM_ISSET_ID);
  }

  public void setIssystemIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISSYSTEM_ISSET_ID, value);
  }

  public String getOptions() {
    return this.options;
  }

  public HrWxModuleDO setOptions(String options) {
    this.options = options;
    return this;
  }

  public void unsetOptions() {
    this.options = null;
  }

  /** Returns true if field options is set (has been assigned a value) and false otherwise */
  public boolean isSetOptions() {
    return this.options != null;
  }

  public void setOptionsIsSet(boolean value) {
    if (!value) {
      this.options = null;
    }
  }

  public byte getProfile() {
    return this.profile;
  }

  public HrWxModuleDO setProfile(byte profile) {
    this.profile = profile;
    setProfileIsSet(true);
    return this;
  }

  public void unsetProfile() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILE_ISSET_ID);
  }

  /** Returns true if field profile is set (has been assigned a value) and false otherwise */
  public boolean isSetProfile() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILE_ISSET_ID);
  }

  public void setProfileIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILE_ISSET_ID, value);
  }

  public String getSiteMenus() {
    return this.siteMenus;
  }

  public HrWxModuleDO setSiteMenus(String siteMenus) {
    this.siteMenus = siteMenus;
    return this;
  }

  public void unsetSiteMenus() {
    this.siteMenus = null;
  }

  /** Returns true if field siteMenus is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteMenus() {
    return this.siteMenus != null;
  }

  public void setSiteMenusIsSet(boolean value) {
    if (!value) {
      this.siteMenus = null;
    }
  }

  public String getPlatformMenus() {
    return this.platformMenus;
  }

  public HrWxModuleDO setPlatformMenus(String platformMenus) {
    this.platformMenus = platformMenus;
    return this;
  }

  public void unsetPlatformMenus() {
    this.platformMenus = null;
  }

  /** Returns true if field platformMenus is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformMenus() {
    return this.platformMenus != null;
  }

  public void setPlatformMenusIsSet(boolean value) {
    if (!value) {
      this.platformMenus = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Byte)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((String)value);
      }
      break;

    case ABILITY:
      if (value == null) {
        unsetAbility();
      } else {
        setAbility((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case AUTHOR:
      if (value == null) {
        unsetAuthor();
      } else {
        setAuthor((String)value);
      }
      break;

    case URL:
      if (value == null) {
        unsetUrl();
      } else {
        setUrl((String)value);
      }
      break;

    case SETTINGS:
      if (value == null) {
        unsetSettings();
      } else {
        setSettings((Byte)value);
      }
      break;

    case SUBSCRIBES:
      if (value == null) {
        unsetSubscribes();
      } else {
        setSubscribes((String)value);
      }
      break;

    case HANDLES:
      if (value == null) {
        unsetHandles();
      } else {
        setHandles((String)value);
      }
      break;

    case ISRULEFIELDS:
      if (value == null) {
        unsetIsrulefields();
      } else {
        setIsrulefields((Byte)value);
      }
      break;

    case HOME:
      if (value == null) {
        unsetHome();
      } else {
        setHome((Byte)value);
      }
      break;

    case ISSYSTEM:
      if (value == null) {
        unsetIssystem();
      } else {
        setIssystem((Byte)value);
      }
      break;

    case OPTIONS:
      if (value == null) {
        unsetOptions();
      } else {
        setOptions((String)value);
      }
      break;

    case PROFILE:
      if (value == null) {
        unsetProfile();
      } else {
        setProfile((Byte)value);
      }
      break;

    case SITE_MENUS:
      if (value == null) {
        unsetSiteMenus();
      } else {
        setSiteMenus((String)value);
      }
      break;

    case PLATFORM_MENUS:
      if (value == null) {
        unsetPlatformMenus();
      } else {
        setPlatformMenus((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case TITLE:
      return getTitle();

    case VERSION:
      return getVersion();

    case ABILITY:
      return getAbility();

    case DESCRIPTION:
      return getDescription();

    case AUTHOR:
      return getAuthor();

    case URL:
      return getUrl();

    case SETTINGS:
      return getSettings();

    case SUBSCRIBES:
      return getSubscribes();

    case HANDLES:
      return getHandles();

    case ISRULEFIELDS:
      return getIsrulefields();

    case HOME:
      return getHome();

    case ISSYSTEM:
      return getIssystem();

    case OPTIONS:
      return getOptions();

    case PROFILE:
      return getProfile();

    case SITE_MENUS:
      return getSiteMenus();

    case PLATFORM_MENUS:
      return getPlatformMenus();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case TITLE:
      return isSetTitle();
    case VERSION:
      return isSetVersion();
    case ABILITY:
      return isSetAbility();
    case DESCRIPTION:
      return isSetDescription();
    case AUTHOR:
      return isSetAuthor();
    case URL:
      return isSetUrl();
    case SETTINGS:
      return isSetSettings();
    case SUBSCRIBES:
      return isSetSubscribes();
    case HANDLES:
      return isSetHandles();
    case ISRULEFIELDS:
      return isSetIsrulefields();
    case HOME:
      return isSetHome();
    case ISSYSTEM:
      return isSetIssystem();
    case OPTIONS:
      return isSetOptions();
    case PROFILE:
      return isSetProfile();
    case SITE_MENUS:
      return isSetSiteMenus();
    case PLATFORM_MENUS:
      return isSetPlatformMenus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof HrWxModuleDO)
      return this.equals((HrWxModuleDO)that);
    return false;
  }

  public boolean equals(HrWxModuleDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_version = true && this.isSetVersion();
    boolean that_present_version = true && that.isSetVersion();
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (!this.version.equals(that.version))
        return false;
    }

    boolean this_present_ability = true && this.isSetAbility();
    boolean that_present_ability = true && that.isSetAbility();
    if (this_present_ability || that_present_ability) {
      if (!(this_present_ability && that_present_ability))
        return false;
      if (!this.ability.equals(that.ability))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_author = true && this.isSetAuthor();
    boolean that_present_author = true && that.isSetAuthor();
    if (this_present_author || that_present_author) {
      if (!(this_present_author && that_present_author))
        return false;
      if (!this.author.equals(that.author))
        return false;
    }

    boolean this_present_url = true && this.isSetUrl();
    boolean that_present_url = true && that.isSetUrl();
    if (this_present_url || that_present_url) {
      if (!(this_present_url && that_present_url))
        return false;
      if (!this.url.equals(that.url))
        return false;
    }

    boolean this_present_settings = true && this.isSetSettings();
    boolean that_present_settings = true && that.isSetSettings();
    if (this_present_settings || that_present_settings) {
      if (!(this_present_settings && that_present_settings))
        return false;
      if (this.settings != that.settings)
        return false;
    }

    boolean this_present_subscribes = true && this.isSetSubscribes();
    boolean that_present_subscribes = true && that.isSetSubscribes();
    if (this_present_subscribes || that_present_subscribes) {
      if (!(this_present_subscribes && that_present_subscribes))
        return false;
      if (!this.subscribes.equals(that.subscribes))
        return false;
    }

    boolean this_present_handles = true && this.isSetHandles();
    boolean that_present_handles = true && that.isSetHandles();
    if (this_present_handles || that_present_handles) {
      if (!(this_present_handles && that_present_handles))
        return false;
      if (!this.handles.equals(that.handles))
        return false;
    }

    boolean this_present_isrulefields = true && this.isSetIsrulefields();
    boolean that_present_isrulefields = true && that.isSetIsrulefields();
    if (this_present_isrulefields || that_present_isrulefields) {
      if (!(this_present_isrulefields && that_present_isrulefields))
        return false;
      if (this.isrulefields != that.isrulefields)
        return false;
    }

    boolean this_present_home = true && this.isSetHome();
    boolean that_present_home = true && that.isSetHome();
    if (this_present_home || that_present_home) {
      if (!(this_present_home && that_present_home))
        return false;
      if (this.home != that.home)
        return false;
    }

    boolean this_present_issystem = true && this.isSetIssystem();
    boolean that_present_issystem = true && that.isSetIssystem();
    if (this_present_issystem || that_present_issystem) {
      if (!(this_present_issystem && that_present_issystem))
        return false;
      if (this.issystem != that.issystem)
        return false;
    }

    boolean this_present_options = true && this.isSetOptions();
    boolean that_present_options = true && that.isSetOptions();
    if (this_present_options || that_present_options) {
      if (!(this_present_options && that_present_options))
        return false;
      if (!this.options.equals(that.options))
        return false;
    }

    boolean this_present_profile = true && this.isSetProfile();
    boolean that_present_profile = true && that.isSetProfile();
    if (this_present_profile || that_present_profile) {
      if (!(this_present_profile && that_present_profile))
        return false;
      if (this.profile != that.profile)
        return false;
    }

    boolean this_present_siteMenus = true && this.isSetSiteMenus();
    boolean that_present_siteMenus = true && that.isSetSiteMenus();
    if (this_present_siteMenus || that_present_siteMenus) {
      if (!(this_present_siteMenus && that_present_siteMenus))
        return false;
      if (!this.siteMenus.equals(that.siteMenus))
        return false;
    }

    boolean this_present_platformMenus = true && this.isSetPlatformMenus();
    boolean that_present_platformMenus = true && that.isSetPlatformMenus();
    if (this_present_platformMenus || that_present_platformMenus) {
      if (!(this_present_platformMenus && that_present_platformMenus))
        return false;
      if (!this.platformMenus.equals(that.platformMenus))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + (int) (id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetVersion()) ? 131071 : 524287);
    if (isSetVersion())
      hashCode = hashCode * 8191 + version.hashCode();

    hashCode = hashCode * 8191 + ((isSetAbility()) ? 131071 : 524287);
    if (isSetAbility())
      hashCode = hashCode * 8191 + ability.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthor()) ? 131071 : 524287);
    if (isSetAuthor())
      hashCode = hashCode * 8191 + author.hashCode();

    hashCode = hashCode * 8191 + ((isSetUrl()) ? 131071 : 524287);
    if (isSetUrl())
      hashCode = hashCode * 8191 + url.hashCode();

    hashCode = hashCode * 8191 + ((isSetSettings()) ? 131071 : 524287);
    if (isSetSettings())
      hashCode = hashCode * 8191 + (int) (settings);

    hashCode = hashCode * 8191 + ((isSetSubscribes()) ? 131071 : 524287);
    if (isSetSubscribes())
      hashCode = hashCode * 8191 + subscribes.hashCode();

    hashCode = hashCode * 8191 + ((isSetHandles()) ? 131071 : 524287);
    if (isSetHandles())
      hashCode = hashCode * 8191 + handles.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsrulefields()) ? 131071 : 524287);
    if (isSetIsrulefields())
      hashCode = hashCode * 8191 + (int) (isrulefields);

    hashCode = hashCode * 8191 + ((isSetHome()) ? 131071 : 524287);
    if (isSetHome())
      hashCode = hashCode * 8191 + (int) (home);

    hashCode = hashCode * 8191 + ((isSetIssystem()) ? 131071 : 524287);
    if (isSetIssystem())
      hashCode = hashCode * 8191 + (int) (issystem);

    hashCode = hashCode * 8191 + ((isSetOptions()) ? 131071 : 524287);
    if (isSetOptions())
      hashCode = hashCode * 8191 + options.hashCode();

    hashCode = hashCode * 8191 + ((isSetProfile()) ? 131071 : 524287);
    if (isSetProfile())
      hashCode = hashCode * 8191 + (int) (profile);

    hashCode = hashCode * 8191 + ((isSetSiteMenus()) ? 131071 : 524287);
    if (isSetSiteMenus())
      hashCode = hashCode * 8191 + siteMenus.hashCode();

    hashCode = hashCode * 8191 + ((isSetPlatformMenus()) ? 131071 : 524287);
    if (isSetPlatformMenus())
      hashCode = hashCode * 8191 + platformMenus.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrWxModuleDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAbility()).compareTo(other.isSetAbility());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbility()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ability, other.ability);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthor()).compareTo(other.isSetAuthor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.author, other.author);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUrl()).compareTo(other.isSetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.url, other.url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettings()).compareTo(other.isSetSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settings, other.settings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubscribes()).compareTo(other.isSetSubscribes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubscribes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subscribes, other.subscribes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHandles()).compareTo(other.isSetHandles());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHandles()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.handles, other.handles);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsrulefields()).compareTo(other.isSetIsrulefields());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsrulefields()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isrulefields, other.isrulefields);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHome()).compareTo(other.isSetHome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHome()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.home, other.home);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIssystem()).compareTo(other.isSetIssystem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIssystem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.issystem, other.issystem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOptions()).compareTo(other.isSetOptions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOptions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.options, other.options);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfile()).compareTo(other.isSetProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profile, other.profile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSiteMenus()).compareTo(other.isSetSiteMenus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteMenus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.siteMenus, other.siteMenus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformMenus()).compareTo(other.isSetPlatformMenus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformMenus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformMenus, other.platformMenus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("HrWxModuleDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetTitle()) {
      if (!first) sb.append(", ");
      sb.append("title:");
      if (this.title == null) {
        sb.append("null");
      } else {
        sb.append(this.title);
      }
      first = false;
    }
    if (isSetVersion()) {
      if (!first) sb.append(", ");
      sb.append("version:");
      if (this.version == null) {
        sb.append("null");
      } else {
        sb.append(this.version);
      }
      first = false;
    }
    if (isSetAbility()) {
      if (!first) sb.append(", ");
      sb.append("ability:");
      if (this.ability == null) {
        sb.append("null");
      } else {
        sb.append(this.ability);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetAuthor()) {
      if (!first) sb.append(", ");
      sb.append("author:");
      if (this.author == null) {
        sb.append("null");
      } else {
        sb.append(this.author);
      }
      first = false;
    }
    if (isSetUrl()) {
      if (!first) sb.append(", ");
      sb.append("url:");
      if (this.url == null) {
        sb.append("null");
      } else {
        sb.append(this.url);
      }
      first = false;
    }
    if (isSetSettings()) {
      if (!first) sb.append(", ");
      sb.append("settings:");
      sb.append(this.settings);
      first = false;
    }
    if (isSetSubscribes()) {
      if (!first) sb.append(", ");
      sb.append("subscribes:");
      if (this.subscribes == null) {
        sb.append("null");
      } else {
        sb.append(this.subscribes);
      }
      first = false;
    }
    if (isSetHandles()) {
      if (!first) sb.append(", ");
      sb.append("handles:");
      if (this.handles == null) {
        sb.append("null");
      } else {
        sb.append(this.handles);
      }
      first = false;
    }
    if (isSetIsrulefields()) {
      if (!first) sb.append(", ");
      sb.append("isrulefields:");
      sb.append(this.isrulefields);
      first = false;
    }
    if (isSetHome()) {
      if (!first) sb.append(", ");
      sb.append("home:");
      sb.append(this.home);
      first = false;
    }
    if (isSetIssystem()) {
      if (!first) sb.append(", ");
      sb.append("issystem:");
      sb.append(this.issystem);
      first = false;
    }
    if (isSetOptions()) {
      if (!first) sb.append(", ");
      sb.append("options:");
      if (this.options == null) {
        sb.append("null");
      } else {
        sb.append(this.options);
      }
      first = false;
    }
    if (isSetProfile()) {
      if (!first) sb.append(", ");
      sb.append("profile:");
      sb.append(this.profile);
      first = false;
    }
    if (isSetSiteMenus()) {
      if (!first) sb.append(", ");
      sb.append("siteMenus:");
      if (this.siteMenus == null) {
        sb.append("null");
      } else {
        sb.append(this.siteMenus);
      }
      first = false;
    }
    if (isSetPlatformMenus()) {
      if (!first) sb.append(", ");
      sb.append("platformMenus:");
      if (this.platformMenus == null) {
        sb.append("null");
      } else {
        sb.append(this.platformMenus);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrWxModuleDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxModuleDOStandardScheme getScheme() {
      return new HrWxModuleDOStandardScheme();
    }
  }

  private static class HrWxModuleDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrWxModuleDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrWxModuleDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.id = iprot.readByte();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.version = iprot.readString();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ABILITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ability = iprot.readString();
              struct.setAbilityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AUTHOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.author = iprot.readString();
              struct.setAuthorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.url = iprot.readString();
              struct.setUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.settings = iprot.readByte();
              struct.setSettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SUBSCRIBES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subscribes = iprot.readString();
              struct.setSubscribesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // HANDLES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.handles = iprot.readString();
              struct.setHandlesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ISRULEFIELDS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.isrulefields = iprot.readByte();
              struct.setIsrulefieldsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // HOME
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.home = iprot.readByte();
              struct.setHomeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ISSYSTEM
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.issystem = iprot.readByte();
              struct.setIssystemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // OPTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.options = iprot.readString();
              struct.setOptionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.profile = iprot.readByte();
              struct.setProfileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SITE_MENUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.siteMenus = iprot.readString();
              struct.setSiteMenusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PLATFORM_MENUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.platformMenus = iprot.readString();
              struct.setPlatformMenusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrWxModuleDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeByte(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.title != null) {
        if (struct.isSetTitle()) {
          oprot.writeFieldBegin(TITLE_FIELD_DESC);
          oprot.writeString(struct.title);
          oprot.writeFieldEnd();
        }
      }
      if (struct.version != null) {
        if (struct.isSetVersion()) {
          oprot.writeFieldBegin(VERSION_FIELD_DESC);
          oprot.writeString(struct.version);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ability != null) {
        if (struct.isSetAbility()) {
          oprot.writeFieldBegin(ABILITY_FIELD_DESC);
          oprot.writeString(struct.ability);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.author != null) {
        if (struct.isSetAuthor()) {
          oprot.writeFieldBegin(AUTHOR_FIELD_DESC);
          oprot.writeString(struct.author);
          oprot.writeFieldEnd();
        }
      }
      if (struct.url != null) {
        if (struct.isSetUrl()) {
          oprot.writeFieldBegin(URL_FIELD_DESC);
          oprot.writeString(struct.url);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSettings()) {
        oprot.writeFieldBegin(SETTINGS_FIELD_DESC);
        oprot.writeByte(struct.settings);
        oprot.writeFieldEnd();
      }
      if (struct.subscribes != null) {
        if (struct.isSetSubscribes()) {
          oprot.writeFieldBegin(SUBSCRIBES_FIELD_DESC);
          oprot.writeString(struct.subscribes);
          oprot.writeFieldEnd();
        }
      }
      if (struct.handles != null) {
        if (struct.isSetHandles()) {
          oprot.writeFieldBegin(HANDLES_FIELD_DESC);
          oprot.writeString(struct.handles);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsrulefields()) {
        oprot.writeFieldBegin(ISRULEFIELDS_FIELD_DESC);
        oprot.writeByte(struct.isrulefields);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHome()) {
        oprot.writeFieldBegin(HOME_FIELD_DESC);
        oprot.writeByte(struct.home);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIssystem()) {
        oprot.writeFieldBegin(ISSYSTEM_FIELD_DESC);
        oprot.writeByte(struct.issystem);
        oprot.writeFieldEnd();
      }
      if (struct.options != null) {
        if (struct.isSetOptions()) {
          oprot.writeFieldBegin(OPTIONS_FIELD_DESC);
          oprot.writeString(struct.options);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProfile()) {
        oprot.writeFieldBegin(PROFILE_FIELD_DESC);
        oprot.writeByte(struct.profile);
        oprot.writeFieldEnd();
      }
      if (struct.siteMenus != null) {
        if (struct.isSetSiteMenus()) {
          oprot.writeFieldBegin(SITE_MENUS_FIELD_DESC);
          oprot.writeString(struct.siteMenus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.platformMenus != null) {
        if (struct.isSetPlatformMenus()) {
          oprot.writeFieldBegin(PLATFORM_MENUS_FIELD_DESC);
          oprot.writeString(struct.platformMenus);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrWxModuleDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxModuleDOTupleScheme getScheme() {
      return new HrWxModuleDOTupleScheme();
    }
  }

  private static class HrWxModuleDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrWxModuleDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrWxModuleDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetVersion()) {
        optionals.set(3);
      }
      if (struct.isSetAbility()) {
        optionals.set(4);
      }
      if (struct.isSetDescription()) {
        optionals.set(5);
      }
      if (struct.isSetAuthor()) {
        optionals.set(6);
      }
      if (struct.isSetUrl()) {
        optionals.set(7);
      }
      if (struct.isSetSettings()) {
        optionals.set(8);
      }
      if (struct.isSetSubscribes()) {
        optionals.set(9);
      }
      if (struct.isSetHandles()) {
        optionals.set(10);
      }
      if (struct.isSetIsrulefields()) {
        optionals.set(11);
      }
      if (struct.isSetHome()) {
        optionals.set(12);
      }
      if (struct.isSetIssystem()) {
        optionals.set(13);
      }
      if (struct.isSetOptions()) {
        optionals.set(14);
      }
      if (struct.isSetProfile()) {
        optionals.set(15);
      }
      if (struct.isSetSiteMenus()) {
        optionals.set(16);
      }
      if (struct.isSetPlatformMenus()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetId()) {
        oprot.writeByte(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetVersion()) {
        oprot.writeString(struct.version);
      }
      if (struct.isSetAbility()) {
        oprot.writeString(struct.ability);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetAuthor()) {
        oprot.writeString(struct.author);
      }
      if (struct.isSetUrl()) {
        oprot.writeString(struct.url);
      }
      if (struct.isSetSettings()) {
        oprot.writeByte(struct.settings);
      }
      if (struct.isSetSubscribes()) {
        oprot.writeString(struct.subscribes);
      }
      if (struct.isSetHandles()) {
        oprot.writeString(struct.handles);
      }
      if (struct.isSetIsrulefields()) {
        oprot.writeByte(struct.isrulefields);
      }
      if (struct.isSetHome()) {
        oprot.writeByte(struct.home);
      }
      if (struct.isSetIssystem()) {
        oprot.writeByte(struct.issystem);
      }
      if (struct.isSetOptions()) {
        oprot.writeString(struct.options);
      }
      if (struct.isSetProfile()) {
        oprot.writeByte(struct.profile);
      }
      if (struct.isSetSiteMenus()) {
        oprot.writeString(struct.siteMenus);
      }
      if (struct.isSetPlatformMenus()) {
        oprot.writeString(struct.platformMenus);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrWxModuleDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.id = iprot.readByte();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.version = iprot.readString();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ability = iprot.readString();
        struct.setAbilityIsSet(true);
      }
      if (incoming.get(5)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(6)) {
        struct.author = iprot.readString();
        struct.setAuthorIsSet(true);
      }
      if (incoming.get(7)) {
        struct.url = iprot.readString();
        struct.setUrlIsSet(true);
      }
      if (incoming.get(8)) {
        struct.settings = iprot.readByte();
        struct.setSettingsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.subscribes = iprot.readString();
        struct.setSubscribesIsSet(true);
      }
      if (incoming.get(10)) {
        struct.handles = iprot.readString();
        struct.setHandlesIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isrulefields = iprot.readByte();
        struct.setIsrulefieldsIsSet(true);
      }
      if (incoming.get(12)) {
        struct.home = iprot.readByte();
        struct.setHomeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.issystem = iprot.readByte();
        struct.setIssystemIsSet(true);
      }
      if (incoming.get(14)) {
        struct.options = iprot.readString();
        struct.setOptionsIsSet(true);
      }
      if (incoming.get(15)) {
        struct.profile = iprot.readByte();
        struct.setProfileIsSet(true);
      }
      if (incoming.get(16)) {
        struct.siteMenus = iprot.readString();
        struct.setSiteMenusIsSet(true);
      }
      if (incoming.get(17)) {
        struct.platformMenus = iprot.readString();
        struct.setPlatformMenusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

