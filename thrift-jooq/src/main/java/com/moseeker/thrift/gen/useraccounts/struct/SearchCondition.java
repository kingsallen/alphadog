/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-12-22")
public class SearchCondition implements org.apache.thrift.TBase<SearchCondition, SearchCondition._Fields>, java.io.Serializable, Cloneable, Comparable<SearchCondition> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SearchCondition");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PUBLISHER_FIELD_DESC = new org.apache.thrift.protocol.TField("publisher", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField KEYWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("keyword", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SUBMIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submit_time", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField WORK_YEARS_FIELD_DESC = new org.apache.thrift.protocol.TField("work_years", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("city_name", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PAST_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("past_position", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("in_last_job_search_position", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField MIN_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("min_age", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField MAX_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("max_age", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField INTENTION_CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("intention_city_name", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SEX_FIELD_DESC = new org.apache.thrift.protocol.TField("sex", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField INTENTION_SALARY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("intention_salary_code", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("company_name", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("in_last_job_search_company", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField HR_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_account_id", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField CANDIDATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("candidate_source", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField IS_PUBLIC_FIELD_DESC = new org.apache.thrift.protocol.TField("is_public", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField ORIGINS_FIELD_DESC = new org.apache.thrift.protocol.TField("origins", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("is_recommend", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField TAG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("tag_id", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField FAVORITE_HRS_FIELD_DESC = new org.apache.thrift.protocol.TField("favorite_hrs", org.apache.thrift.protocol.TType.STRING, (short)27);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SearchConditionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SearchConditionTupleSchemeFactory();

  public int id; // required
  public java.lang.String name; // required
  public java.lang.String publisher; // required
  public java.lang.String position_id; // required
  public java.lang.String keyword; // required
  public java.lang.String submit_time; // required
  public java.lang.String work_years; // required
  public java.lang.String city_name; // required
  public java.lang.String degree; // required
  public java.lang.String past_position; // required
  public int in_last_job_search_position; // required
  public int min_age; // required
  public int max_age; // required
  public java.lang.String intention_city_name; // required
  public int sex; // required
  public java.lang.String intention_salary_code; // required
  public java.lang.String company_name; // required
  public int in_last_job_search_company; // required
  public int hr_account_id; // required
  public int update_time; // required
  public int type; // required
  public java.lang.String candidate_source; // required
  public int is_public; // required
  public java.lang.String origins; // required
  public int is_recommend; // required
  public java.lang.String tag_id; // required
  public java.lang.String favorite_hrs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    PUBLISHER((short)3, "publisher"),
    POSITION_ID((short)4, "position_id"),
    KEYWORD((short)5, "keyword"),
    SUBMIT_TIME((short)6, "submit_time"),
    WORK_YEARS((short)7, "work_years"),
    CITY_NAME((short)8, "city_name"),
    DEGREE((short)9, "degree"),
    PAST_POSITION((short)10, "past_position"),
    IN_LAST_JOB_SEARCH_POSITION((short)11, "in_last_job_search_position"),
    MIN_AGE((short)12, "min_age"),
    MAX_AGE((short)13, "max_age"),
    INTENTION_CITY_NAME((short)14, "intention_city_name"),
    SEX((short)15, "sex"),
    INTENTION_SALARY_CODE((short)16, "intention_salary_code"),
    COMPANY_NAME((short)17, "company_name"),
    IN_LAST_JOB_SEARCH_COMPANY((short)18, "in_last_job_search_company"),
    HR_ACCOUNT_ID((short)19, "hr_account_id"),
    UPDATE_TIME((short)20, "update_time"),
    TYPE((short)21, "type"),
    CANDIDATE_SOURCE((short)22, "candidate_source"),
    IS_PUBLIC((short)23, "is_public"),
    ORIGINS((short)24, "origins"),
    IS_RECOMMEND((short)25, "is_recommend"),
    TAG_ID((short)26, "tag_id"),
    FAVORITE_HRS((short)27, "favorite_hrs");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // PUBLISHER
          return PUBLISHER;
        case 4: // POSITION_ID
          return POSITION_ID;
        case 5: // KEYWORD
          return KEYWORD;
        case 6: // SUBMIT_TIME
          return SUBMIT_TIME;
        case 7: // WORK_YEARS
          return WORK_YEARS;
        case 8: // CITY_NAME
          return CITY_NAME;
        case 9: // DEGREE
          return DEGREE;
        case 10: // PAST_POSITION
          return PAST_POSITION;
        case 11: // IN_LAST_JOB_SEARCH_POSITION
          return IN_LAST_JOB_SEARCH_POSITION;
        case 12: // MIN_AGE
          return MIN_AGE;
        case 13: // MAX_AGE
          return MAX_AGE;
        case 14: // INTENTION_CITY_NAME
          return INTENTION_CITY_NAME;
        case 15: // SEX
          return SEX;
        case 16: // INTENTION_SALARY_CODE
          return INTENTION_SALARY_CODE;
        case 17: // COMPANY_NAME
          return COMPANY_NAME;
        case 18: // IN_LAST_JOB_SEARCH_COMPANY
          return IN_LAST_JOB_SEARCH_COMPANY;
        case 19: // HR_ACCOUNT_ID
          return HR_ACCOUNT_ID;
        case 20: // UPDATE_TIME
          return UPDATE_TIME;
        case 21: // TYPE
          return TYPE;
        case 22: // CANDIDATE_SOURCE
          return CANDIDATE_SOURCE;
        case 23: // IS_PUBLIC
          return IS_PUBLIC;
        case 24: // ORIGINS
          return ORIGINS;
        case 25: // IS_RECOMMEND
          return IS_RECOMMEND;
        case 26: // TAG_ID
          return TAG_ID;
        case 27: // FAVORITE_HRS
          return FAVORITE_HRS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID = 1;
  private static final int __MIN_AGE_ISSET_ID = 2;
  private static final int __MAX_AGE_ISSET_ID = 3;
  private static final int __SEX_ISSET_ID = 4;
  private static final int __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID = 5;
  private static final int __HR_ACCOUNT_ID_ISSET_ID = 6;
  private static final int __UPDATE_TIME_ISSET_ID = 7;
  private static final int __TYPE_ISSET_ID = 8;
  private static final int __IS_PUBLIC_ISSET_ID = 9;
  private static final int __IS_RECOMMEND_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUBLISHER, new org.apache.thrift.meta_data.FieldMetaData("publisher", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEYWORD, new org.apache.thrift.meta_data.FieldMetaData("keyword", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUBMIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("submit_time", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORK_YEARS, new org.apache.thrift.meta_data.FieldMetaData("work_years", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("city_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAST_POSITION, new org.apache.thrift.meta_data.FieldMetaData("past_position", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_POSITION, new org.apache.thrift.meta_data.FieldMetaData("in_last_job_search_position", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MIN_AGE, new org.apache.thrift.meta_data.FieldMetaData("min_age", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_AGE, new org.apache.thrift.meta_data.FieldMetaData("max_age", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INTENTION_CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("intention_city_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SEX, new org.apache.thrift.meta_data.FieldMetaData("sex", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INTENTION_SALARY_CODE, new org.apache.thrift.meta_data.FieldMetaData("intention_salary_code", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("company_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("in_last_job_search_company", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_account_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CANDIDATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("candidate_source", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_PUBLIC, new org.apache.thrift.meta_data.FieldMetaData("is_public", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORIGINS, new org.apache.thrift.meta_data.FieldMetaData("origins", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("is_recommend", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TAG_ID, new org.apache.thrift.meta_data.FieldMetaData("tag_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAVORITE_HRS, new org.apache.thrift.meta_data.FieldMetaData("favorite_hrs", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SearchCondition.class, metaDataMap);
  }

  public SearchCondition() {
  }

  public SearchCondition(
          int id,
          java.lang.String name,
          java.lang.String publisher,
          java.lang.String position_id,
          java.lang.String keyword,
          java.lang.String submit_time,
          java.lang.String work_years,
          java.lang.String city_name,
          java.lang.String degree,
          java.lang.String past_position,
          int in_last_job_search_position,
          int min_age,
          int max_age,
          java.lang.String intention_city_name,
          int sex,
          java.lang.String intention_salary_code,
          java.lang.String company_name,
          int in_last_job_search_company,
          int hr_account_id,
          int update_time,
          int type,
          java.lang.String candidate_source,
          int is_public,
          java.lang.String origins,
          int is_recommend,
          java.lang.String tag_id,
          java.lang.String favorite_hrs)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.publisher = publisher;
    this.position_id = position_id;
    this.keyword = keyword;
    this.submit_time = submit_time;
    this.work_years = work_years;
    this.city_name = city_name;
    this.degree = degree;
    this.past_position = past_position;
    this.in_last_job_search_position = in_last_job_search_position;
    setIn_last_job_search_positionIsSet(true);
    this.min_age = min_age;
    setMin_ageIsSet(true);
    this.max_age = max_age;
    setMax_ageIsSet(true);
    this.intention_city_name = intention_city_name;
    this.sex = sex;
    setSexIsSet(true);
    this.intention_salary_code = intention_salary_code;
    this.company_name = company_name;
    this.in_last_job_search_company = in_last_job_search_company;
    setIn_last_job_search_companyIsSet(true);
    this.hr_account_id = hr_account_id;
    setHr_account_idIsSet(true);
    this.update_time = update_time;
    setUpdate_timeIsSet(true);
    this.type = type;
    setTypeIsSet(true);
    this.candidate_source = candidate_source;
    this.is_public = is_public;
    setIs_publicIsSet(true);
    this.origins = origins;
    this.is_recommend = is_recommend;
    setIs_recommendIsSet(true);
    this.tag_id = tag_id;
    this.favorite_hrs = favorite_hrs;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchCondition(SearchCondition other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPublisher()) {
      this.publisher = other.publisher;
    }
    if (other.isSetPosition_id()) {
      this.position_id = other.position_id;
    }
    if (other.isSetKeyword()) {
      this.keyword = other.keyword;
    }
    if (other.isSetSubmit_time()) {
      this.submit_time = other.submit_time;
    }
    if (other.isSetWork_years()) {
      this.work_years = other.work_years;
    }
    if (other.isSetCity_name()) {
      this.city_name = other.city_name;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    if (other.isSetPast_position()) {
      this.past_position = other.past_position;
    }
    this.in_last_job_search_position = other.in_last_job_search_position;
    this.min_age = other.min_age;
    this.max_age = other.max_age;
    if (other.isSetIntention_city_name()) {
      this.intention_city_name = other.intention_city_name;
    }
    this.sex = other.sex;
    if (other.isSetIntention_salary_code()) {
      this.intention_salary_code = other.intention_salary_code;
    }
    if (other.isSetCompany_name()) {
      this.company_name = other.company_name;
    }
    this.in_last_job_search_company = other.in_last_job_search_company;
    this.hr_account_id = other.hr_account_id;
    this.update_time = other.update_time;
    this.type = other.type;
    if (other.isSetCandidate_source()) {
      this.candidate_source = other.candidate_source;
    }
    this.is_public = other.is_public;
    if (other.isSetOrigins()) {
      this.origins = other.origins;
    }
    this.is_recommend = other.is_recommend;
    if (other.isSetTag_id()) {
      this.tag_id = other.tag_id;
    }
    if (other.isSetFavorite_hrs()) {
      this.favorite_hrs = other.favorite_hrs;
    }
  }

  public SearchCondition deepCopy() {
    return new SearchCondition(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.publisher = null;
    this.position_id = null;
    this.keyword = null;
    this.submit_time = null;
    this.work_years = null;
    this.city_name = null;
    this.degree = null;
    this.past_position = null;
    setIn_last_job_search_positionIsSet(false);
    this.in_last_job_search_position = 0;
    setMin_ageIsSet(false);
    this.min_age = 0;
    setMax_ageIsSet(false);
    this.max_age = 0;
    this.intention_city_name = null;
    setSexIsSet(false);
    this.sex = 0;
    this.intention_salary_code = null;
    this.company_name = null;
    setIn_last_job_search_companyIsSet(false);
    this.in_last_job_search_company = 0;
    setHr_account_idIsSet(false);
    this.hr_account_id = 0;
    setUpdate_timeIsSet(false);
    this.update_time = 0;
    setTypeIsSet(false);
    this.type = 0;
    this.candidate_source = null;
    setIs_publicIsSet(false);
    this.is_public = 0;
    this.origins = null;
    setIs_recommendIsSet(false);
    this.is_recommend = 0;
    this.tag_id = null;
    this.favorite_hrs = null;
  }

  public int getId() {
    return this.id;
  }

  public SearchCondition setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public SearchCondition setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getPublisher() {
    return this.publisher;
  }

  public SearchCondition setPublisher(java.lang.String publisher) {
    this.publisher = publisher;
    return this;
  }

  public void unsetPublisher() {
    this.publisher = null;
  }

  /** Returns true if field publisher is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisher() {
    return this.publisher != null;
  }

  public void setPublisherIsSet(boolean value) {
    if (!value) {
      this.publisher = null;
    }
  }

  public java.lang.String getPosition_id() {
    return this.position_id;
  }

  public SearchCondition setPosition_id(java.lang.String position_id) {
    this.position_id = position_id;
    return this;
  }

  public void unsetPosition_id() {
    this.position_id = null;
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return this.position_id != null;
  }

  public void setPosition_idIsSet(boolean value) {
    if (!value) {
      this.position_id = null;
    }
  }

  public java.lang.String getKeyword() {
    return this.keyword;
  }

  public SearchCondition setKeyword(java.lang.String keyword) {
    this.keyword = keyword;
    return this;
  }

  public void unsetKeyword() {
    this.keyword = null;
  }

  /** Returns true if field keyword is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyword() {
    return this.keyword != null;
  }

  public void setKeywordIsSet(boolean value) {
    if (!value) {
      this.keyword = null;
    }
  }

  public java.lang.String getSubmit_time() {
    return this.submit_time;
  }

  public SearchCondition setSubmit_time(java.lang.String submit_time) {
    this.submit_time = submit_time;
    return this;
  }

  public void unsetSubmit_time() {
    this.submit_time = null;
  }

  /** Returns true if field submit_time is set (has been assigned a value) and false otherwise */
  public boolean isSetSubmit_time() {
    return this.submit_time != null;
  }

  public void setSubmit_timeIsSet(boolean value) {
    if (!value) {
      this.submit_time = null;
    }
  }

  public java.lang.String getWork_years() {
    return this.work_years;
  }

  public SearchCondition setWork_years(java.lang.String work_years) {
    this.work_years = work_years;
    return this;
  }

  public void unsetWork_years() {
    this.work_years = null;
  }

  /** Returns true if field work_years is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_years() {
    return this.work_years != null;
  }

  public void setWork_yearsIsSet(boolean value) {
    if (!value) {
      this.work_years = null;
    }
  }

  public java.lang.String getCity_name() {
    return this.city_name;
  }

  public SearchCondition setCity_name(java.lang.String city_name) {
    this.city_name = city_name;
    return this;
  }

  public void unsetCity_name() {
    this.city_name = null;
  }

  /** Returns true if field city_name is set (has been assigned a value) and false otherwise */
  public boolean isSetCity_name() {
    return this.city_name != null;
  }

  public void setCity_nameIsSet(boolean value) {
    if (!value) {
      this.city_name = null;
    }
  }

  public java.lang.String getDegree() {
    return this.degree;
  }

  public SearchCondition setDegree(java.lang.String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public java.lang.String getPast_position() {
    return this.past_position;
  }

  public SearchCondition setPast_position(java.lang.String past_position) {
    this.past_position = past_position;
    return this;
  }

  public void unsetPast_position() {
    this.past_position = null;
  }

  /** Returns true if field past_position is set (has been assigned a value) and false otherwise */
  public boolean isSetPast_position() {
    return this.past_position != null;
  }

  public void setPast_positionIsSet(boolean value) {
    if (!value) {
      this.past_position = null;
    }
  }

  public int getIn_last_job_search_position() {
    return this.in_last_job_search_position;
  }

  public SearchCondition setIn_last_job_search_position(int in_last_job_search_position) {
    this.in_last_job_search_position = in_last_job_search_position;
    setIn_last_job_search_positionIsSet(true);
    return this;
  }

  public void unsetIn_last_job_search_position() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID);
  }

  /** Returns true if field in_last_job_search_position is set (has been assigned a value) and false otherwise */
  public boolean isSetIn_last_job_search_position() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID);
  }

  public void setIn_last_job_search_positionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID, value);
  }

  public int getMin_age() {
    return this.min_age;
  }

  public SearchCondition setMin_age(int min_age) {
    this.min_age = min_age;
    setMin_ageIsSet(true);
    return this;
  }

  public void unsetMin_age() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MIN_AGE_ISSET_ID);
  }

  /** Returns true if field min_age is set (has been assigned a value) and false otherwise */
  public boolean isSetMin_age() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MIN_AGE_ISSET_ID);
  }

  public void setMin_ageIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MIN_AGE_ISSET_ID, value);
  }

  public int getMax_age() {
    return this.max_age;
  }

  public SearchCondition setMax_age(int max_age) {
    this.max_age = max_age;
    setMax_ageIsSet(true);
    return this;
  }

  public void unsetMax_age() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAX_AGE_ISSET_ID);
  }

  /** Returns true if field max_age is set (has been assigned a value) and false otherwise */
  public boolean isSetMax_age() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAX_AGE_ISSET_ID);
  }

  public void setMax_ageIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAX_AGE_ISSET_ID, value);
  }

  public java.lang.String getIntention_city_name() {
    return this.intention_city_name;
  }

  public SearchCondition setIntention_city_name(java.lang.String intention_city_name) {
    this.intention_city_name = intention_city_name;
    return this;
  }

  public void unsetIntention_city_name() {
    this.intention_city_name = null;
  }

  /** Returns true if field intention_city_name is set (has been assigned a value) and false otherwise */
  public boolean isSetIntention_city_name() {
    return this.intention_city_name != null;
  }

  public void setIntention_city_nameIsSet(boolean value) {
    if (!value) {
      this.intention_city_name = null;
    }
  }

  public int getSex() {
    return this.sex;
  }

  public SearchCondition setSex(int sex) {
    this.sex = sex;
    setSexIsSet(true);
    return this;
  }

  public void unsetSex() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  /** Returns true if field sex is set (has been assigned a value) and false otherwise */
  public boolean isSetSex() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  public void setSexIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEX_ISSET_ID, value);
  }

  public java.lang.String getIntention_salary_code() {
    return this.intention_salary_code;
  }

  public SearchCondition setIntention_salary_code(java.lang.String intention_salary_code) {
    this.intention_salary_code = intention_salary_code;
    return this;
  }

  public void unsetIntention_salary_code() {
    this.intention_salary_code = null;
  }

  /** Returns true if field intention_salary_code is set (has been assigned a value) and false otherwise */
  public boolean isSetIntention_salary_code() {
    return this.intention_salary_code != null;
  }

  public void setIntention_salary_codeIsSet(boolean value) {
    if (!value) {
      this.intention_salary_code = null;
    }
  }

  public java.lang.String getCompany_name() {
    return this.company_name;
  }

  public SearchCondition setCompany_name(java.lang.String company_name) {
    this.company_name = company_name;
    return this;
  }

  public void unsetCompany_name() {
    this.company_name = null;
  }

  /** Returns true if field company_name is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_name() {
    return this.company_name != null;
  }

  public void setCompany_nameIsSet(boolean value) {
    if (!value) {
      this.company_name = null;
    }
  }

  public int getIn_last_job_search_company() {
    return this.in_last_job_search_company;
  }

  public SearchCondition setIn_last_job_search_company(int in_last_job_search_company) {
    this.in_last_job_search_company = in_last_job_search_company;
    setIn_last_job_search_companyIsSet(true);
    return this;
  }

  public void unsetIn_last_job_search_company() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID);
  }

  /** Returns true if field in_last_job_search_company is set (has been assigned a value) and false otherwise */
  public boolean isSetIn_last_job_search_company() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID);
  }

  public void setIn_last_job_search_companyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID, value);
  }

  public int getHr_account_id() {
    return this.hr_account_id;
  }

  public SearchCondition setHr_account_id(int hr_account_id) {
    this.hr_account_id = hr_account_id;
    setHr_account_idIsSet(true);
    return this;
  }

  public void unsetHr_account_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID);
  }

  /** Returns true if field hr_account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_account_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID);
  }

  public void setHr_account_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID, value);
  }

  public int getUpdate_time() {
    return this.update_time;
  }

  public SearchCondition setUpdate_time(int update_time) {
    this.update_time = update_time;
    setUpdate_timeIsSet(true);
    return this;
  }

  public void unsetUpdate_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UPDATE_TIME_ISSET_ID);
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UPDATE_TIME_ISSET_ID);
  }

  public void setUpdate_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UPDATE_TIME_ISSET_ID, value);
  }

  public int getType() {
    return this.type;
  }

  public SearchCondition setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public java.lang.String getCandidate_source() {
    return this.candidate_source;
  }

  public SearchCondition setCandidate_source(java.lang.String candidate_source) {
    this.candidate_source = candidate_source;
    return this;
  }

  public void unsetCandidate_source() {
    this.candidate_source = null;
  }

  /** Returns true if field candidate_source is set (has been assigned a value) and false otherwise */
  public boolean isSetCandidate_source() {
    return this.candidate_source != null;
  }

  public void setCandidate_sourceIsSet(boolean value) {
    if (!value) {
      this.candidate_source = null;
    }
  }

  public int getIs_public() {
    return this.is_public;
  }

  public SearchCondition setIs_public(int is_public) {
    this.is_public = is_public;
    setIs_publicIsSet(true);
    return this;
  }

  public void unsetIs_public() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_PUBLIC_ISSET_ID);
  }

  /** Returns true if field is_public is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_public() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_PUBLIC_ISSET_ID);
  }

  public void setIs_publicIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_PUBLIC_ISSET_ID, value);
  }

  public java.lang.String getOrigins() {
    return this.origins;
  }

  public SearchCondition setOrigins(java.lang.String origins) {
    this.origins = origins;
    return this;
  }

  public void unsetOrigins() {
    this.origins = null;
  }

  /** Returns true if field origins is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigins() {
    return this.origins != null;
  }

  public void setOriginsIsSet(boolean value) {
    if (!value) {
      this.origins = null;
    }
  }

  public int getIs_recommend() {
    return this.is_recommend;
  }

  public SearchCondition setIs_recommend(int is_recommend) {
    this.is_recommend = is_recommend;
    setIs_recommendIsSet(true);
    return this;
  }

  public void unsetIs_recommend() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID);
  }

  /** Returns true if field is_recommend is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_recommend() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID);
  }

  public void setIs_recommendIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID, value);
  }

  public java.lang.String getTag_id() {
    return this.tag_id;
  }

  public SearchCondition setTag_id(java.lang.String tag_id) {
    this.tag_id = tag_id;
    return this;
  }

  public void unsetTag_id() {
    this.tag_id = null;
  }

  /** Returns true if field tag_id is set (has been assigned a value) and false otherwise */
  public boolean isSetTag_id() {
    return this.tag_id != null;
  }

  public void setTag_idIsSet(boolean value) {
    if (!value) {
      this.tag_id = null;
    }
  }

  public java.lang.String getFavorite_hrs() {
    return this.favorite_hrs;
  }

  public SearchCondition setFavorite_hrs(java.lang.String favorite_hrs) {
    this.favorite_hrs = favorite_hrs;
    return this;
  }

  public void unsetFavorite_hrs() {
    this.favorite_hrs = null;
  }

  /** Returns true if field favorite_hrs is set (has been assigned a value) and false otherwise */
  public boolean isSetFavorite_hrs() {
    return this.favorite_hrs != null;
  }

  public void setFavorite_hrsIsSet(boolean value) {
    if (!value) {
      this.favorite_hrs = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.Integer)value);
        }
        break;

      case NAME:
        if (value == null) {
          unsetName();
        } else {
          setName((java.lang.String)value);
        }
        break;

      case PUBLISHER:
        if (value == null) {
          unsetPublisher();
        } else {
          setPublisher((java.lang.String)value);
        }
        break;

      case POSITION_ID:
        if (value == null) {
          unsetPosition_id();
        } else {
          setPosition_id((java.lang.String)value);
        }
        break;

      case KEYWORD:
        if (value == null) {
          unsetKeyword();
        } else {
          setKeyword((java.lang.String)value);
        }
        break;

      case SUBMIT_TIME:
        if (value == null) {
          unsetSubmit_time();
        } else {
          setSubmit_time((java.lang.String)value);
        }
        break;

      case WORK_YEARS:
        if (value == null) {
          unsetWork_years();
        } else {
          setWork_years((java.lang.String)value);
        }
        break;

      case CITY_NAME:
        if (value == null) {
          unsetCity_name();
        } else {
          setCity_name((java.lang.String)value);
        }
        break;

      case DEGREE:
        if (value == null) {
          unsetDegree();
        } else {
          setDegree((java.lang.String)value);
        }
        break;

      case PAST_POSITION:
        if (value == null) {
          unsetPast_position();
        } else {
          setPast_position((java.lang.String)value);
        }
        break;

      case IN_LAST_JOB_SEARCH_POSITION:
        if (value == null) {
          unsetIn_last_job_search_position();
        } else {
          setIn_last_job_search_position((java.lang.Integer)value);
        }
        break;

      case MIN_AGE:
        if (value == null) {
          unsetMin_age();
        } else {
          setMin_age((java.lang.Integer)value);
        }
        break;

      case MAX_AGE:
        if (value == null) {
          unsetMax_age();
        } else {
          setMax_age((java.lang.Integer)value);
        }
        break;

      case INTENTION_CITY_NAME:
        if (value == null) {
          unsetIntention_city_name();
        } else {
          setIntention_city_name((java.lang.String)value);
        }
        break;

      case SEX:
        if (value == null) {
          unsetSex();
        } else {
          setSex((java.lang.Integer)value);
        }
        break;

      case INTENTION_SALARY_CODE:
        if (value == null) {
          unsetIntention_salary_code();
        } else {
          setIntention_salary_code((java.lang.String)value);
        }
        break;

      case COMPANY_NAME:
        if (value == null) {
          unsetCompany_name();
        } else {
          setCompany_name((java.lang.String)value);
        }
        break;

      case IN_LAST_JOB_SEARCH_COMPANY:
        if (value == null) {
          unsetIn_last_job_search_company();
        } else {
          setIn_last_job_search_company((java.lang.Integer)value);
        }
        break;

      case HR_ACCOUNT_ID:
        if (value == null) {
          unsetHr_account_id();
        } else {
          setHr_account_id((java.lang.Integer)value);
        }
        break;

      case UPDATE_TIME:
        if (value == null) {
          unsetUpdate_time();
        } else {
          setUpdate_time((java.lang.Integer)value);
        }
        break;

      case TYPE:
        if (value == null) {
          unsetType();
        } else {
          setType((java.lang.Integer)value);
        }
        break;

      case CANDIDATE_SOURCE:
        if (value == null) {
          unsetCandidate_source();
        } else {
          setCandidate_source((java.lang.String)value);
        }
        break;

      case IS_PUBLIC:
        if (value == null) {
          unsetIs_public();
        } else {
          setIs_public((java.lang.Integer)value);
        }
        break;

      case ORIGINS:
        if (value == null) {
          unsetOrigins();
        } else {
          setOrigins((java.lang.String)value);
        }
        break;

      case IS_RECOMMEND:
        if (value == null) {
          unsetIs_recommend();
        } else {
          setIs_recommend((java.lang.Integer)value);
        }
        break;

      case TAG_ID:
        if (value == null) {
          unsetTag_id();
        } else {
          setTag_id((java.lang.String)value);
        }
        break;

      case FAVORITE_HRS:
        if (value == null) {
          unsetFavorite_hrs();
        } else {
          setFavorite_hrs((java.lang.String)value);
        }
        break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
      case ID:
        return getId();

      case NAME:
        return getName();

      case PUBLISHER:
        return getPublisher();

      case POSITION_ID:
        return getPosition_id();

      case KEYWORD:
        return getKeyword();

      case SUBMIT_TIME:
        return getSubmit_time();

      case WORK_YEARS:
        return getWork_years();

      case CITY_NAME:
        return getCity_name();

      case DEGREE:
        return getDegree();

      case PAST_POSITION:
        return getPast_position();

      case IN_LAST_JOB_SEARCH_POSITION:
        return getIn_last_job_search_position();

      case MIN_AGE:
        return getMin_age();

      case MAX_AGE:
        return getMax_age();

      case INTENTION_CITY_NAME:
        return getIntention_city_name();

      case SEX:
        return getSex();

      case INTENTION_SALARY_CODE:
        return getIntention_salary_code();

      case COMPANY_NAME:
        return getCompany_name();

      case IN_LAST_JOB_SEARCH_COMPANY:
        return getIn_last_job_search_company();

      case HR_ACCOUNT_ID:
        return getHr_account_id();

      case UPDATE_TIME:
        return getUpdate_time();

      case TYPE:
        return getType();

      case CANDIDATE_SOURCE:
        return getCandidate_source();

      case IS_PUBLIC:
        return getIs_public();

      case ORIGINS:
        return getOrigins();

      case IS_RECOMMEND:
        return getIs_recommend();

      case TAG_ID:
        return getTag_id();

      case FAVORITE_HRS:
        return getFavorite_hrs();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
      case ID:
        return isSetId();
      case NAME:
        return isSetName();
      case PUBLISHER:
        return isSetPublisher();
      case POSITION_ID:
        return isSetPosition_id();
      case KEYWORD:
        return isSetKeyword();
      case SUBMIT_TIME:
        return isSetSubmit_time();
      case WORK_YEARS:
        return isSetWork_years();
      case CITY_NAME:
        return isSetCity_name();
      case DEGREE:
        return isSetDegree();
      case PAST_POSITION:
        return isSetPast_position();
      case IN_LAST_JOB_SEARCH_POSITION:
        return isSetIn_last_job_search_position();
      case MIN_AGE:
        return isSetMin_age();
      case MAX_AGE:
        return isSetMax_age();
      case INTENTION_CITY_NAME:
        return isSetIntention_city_name();
      case SEX:
        return isSetSex();
      case INTENTION_SALARY_CODE:
        return isSetIntention_salary_code();
      case COMPANY_NAME:
        return isSetCompany_name();
      case IN_LAST_JOB_SEARCH_COMPANY:
        return isSetIn_last_job_search_company();
      case HR_ACCOUNT_ID:
        return isSetHr_account_id();
      case UPDATE_TIME:
        return isSetUpdate_time();
      case TYPE:
        return isSetType();
      case CANDIDATE_SOURCE:
        return isSetCandidate_source();
      case IS_PUBLIC:
        return isSetIs_public();
      case ORIGINS:
        return isSetOrigins();
      case IS_RECOMMEND:
        return isSetIs_recommend();
      case TAG_ID:
        return isSetTag_id();
      case FAVORITE_HRS:
        return isSetFavorite_hrs();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchCondition)
      return this.equals((SearchCondition)that);
    return false;
  }

  public boolean equals(SearchCondition that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_publisher = true && this.isSetPublisher();
    boolean that_present_publisher = true && that.isSetPublisher();
    if (this_present_publisher || that_present_publisher) {
      if (!(this_present_publisher && that_present_publisher))
        return false;
      if (!this.publisher.equals(that.publisher))
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (!this.position_id.equals(that.position_id))
        return false;
    }

    boolean this_present_keyword = true && this.isSetKeyword();
    boolean that_present_keyword = true && that.isSetKeyword();
    if (this_present_keyword || that_present_keyword) {
      if (!(this_present_keyword && that_present_keyword))
        return false;
      if (!this.keyword.equals(that.keyword))
        return false;
    }

    boolean this_present_submit_time = true && this.isSetSubmit_time();
    boolean that_present_submit_time = true && that.isSetSubmit_time();
    if (this_present_submit_time || that_present_submit_time) {
      if (!(this_present_submit_time && that_present_submit_time))
        return false;
      if (!this.submit_time.equals(that.submit_time))
        return false;
    }

    boolean this_present_work_years = true && this.isSetWork_years();
    boolean that_present_work_years = true && that.isSetWork_years();
    if (this_present_work_years || that_present_work_years) {
      if (!(this_present_work_years && that_present_work_years))
        return false;
      if (!this.work_years.equals(that.work_years))
        return false;
    }

    boolean this_present_city_name = true && this.isSetCity_name();
    boolean that_present_city_name = true && that.isSetCity_name();
    if (this_present_city_name || that_present_city_name) {
      if (!(this_present_city_name && that_present_city_name))
        return false;
      if (!this.city_name.equals(that.city_name))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_past_position = true && this.isSetPast_position();
    boolean that_present_past_position = true && that.isSetPast_position();
    if (this_present_past_position || that_present_past_position) {
      if (!(this_present_past_position && that_present_past_position))
        return false;
      if (!this.past_position.equals(that.past_position))
        return false;
    }

    boolean this_present_in_last_job_search_position = true;
    boolean that_present_in_last_job_search_position = true;
    if (this_present_in_last_job_search_position || that_present_in_last_job_search_position) {
      if (!(this_present_in_last_job_search_position && that_present_in_last_job_search_position))
        return false;
      if (this.in_last_job_search_position != that.in_last_job_search_position)
        return false;
    }

    boolean this_present_min_age = true;
    boolean that_present_min_age = true;
    if (this_present_min_age || that_present_min_age) {
      if (!(this_present_min_age && that_present_min_age))
        return false;
      if (this.min_age != that.min_age)
        return false;
    }

    boolean this_present_max_age = true;
    boolean that_present_max_age = true;
    if (this_present_max_age || that_present_max_age) {
      if (!(this_present_max_age && that_present_max_age))
        return false;
      if (this.max_age != that.max_age)
        return false;
    }

    boolean this_present_intention_city_name = true && this.isSetIntention_city_name();
    boolean that_present_intention_city_name = true && that.isSetIntention_city_name();
    if (this_present_intention_city_name || that_present_intention_city_name) {
      if (!(this_present_intention_city_name && that_present_intention_city_name))
        return false;
      if (!this.intention_city_name.equals(that.intention_city_name))
        return false;
    }

    boolean this_present_sex = true;
    boolean that_present_sex = true;
    if (this_present_sex || that_present_sex) {
      if (!(this_present_sex && that_present_sex))
        return false;
      if (this.sex != that.sex)
        return false;
    }

    boolean this_present_intention_salary_code = true && this.isSetIntention_salary_code();
    boolean that_present_intention_salary_code = true && that.isSetIntention_salary_code();
    if (this_present_intention_salary_code || that_present_intention_salary_code) {
      if (!(this_present_intention_salary_code && that_present_intention_salary_code))
        return false;
      if (!this.intention_salary_code.equals(that.intention_salary_code))
        return false;
    }

    boolean this_present_company_name = true && this.isSetCompany_name();
    boolean that_present_company_name = true && that.isSetCompany_name();
    if (this_present_company_name || that_present_company_name) {
      if (!(this_present_company_name && that_present_company_name))
        return false;
      if (!this.company_name.equals(that.company_name))
        return false;
    }

    boolean this_present_in_last_job_search_company = true;
    boolean that_present_in_last_job_search_company = true;
    if (this_present_in_last_job_search_company || that_present_in_last_job_search_company) {
      if (!(this_present_in_last_job_search_company && that_present_in_last_job_search_company))
        return false;
      if (this.in_last_job_search_company != that.in_last_job_search_company)
        return false;
    }

    boolean this_present_hr_account_id = true;
    boolean that_present_hr_account_id = true;
    if (this_present_hr_account_id || that_present_hr_account_id) {
      if (!(this_present_hr_account_id && that_present_hr_account_id))
        return false;
      if (this.hr_account_id != that.hr_account_id)
        return false;
    }

    boolean this_present_update_time = true;
    boolean that_present_update_time = true;
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (this.update_time != that.update_time)
        return false;
    }

    boolean this_present_type = true;
    boolean that_present_type = true;
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_candidate_source = true && this.isSetCandidate_source();
    boolean that_present_candidate_source = true && that.isSetCandidate_source();
    if (this_present_candidate_source || that_present_candidate_source) {
      if (!(this_present_candidate_source && that_present_candidate_source))
        return false;
      if (!this.candidate_source.equals(that.candidate_source))
        return false;
    }

    boolean this_present_is_public = true;
    boolean that_present_is_public = true;
    if (this_present_is_public || that_present_is_public) {
      if (!(this_present_is_public && that_present_is_public))
        return false;
      if (this.is_public != that.is_public)
        return false;
    }

    boolean this_present_origins = true && this.isSetOrigins();
    boolean that_present_origins = true && that.isSetOrigins();
    if (this_present_origins || that_present_origins) {
      if (!(this_present_origins && that_present_origins))
        return false;
      if (!this.origins.equals(that.origins))
        return false;
    }

    boolean this_present_is_recommend = true;
    boolean that_present_is_recommend = true;
    if (this_present_is_recommend || that_present_is_recommend) {
      if (!(this_present_is_recommend && that_present_is_recommend))
        return false;
      if (this.is_recommend != that.is_recommend)
        return false;
    }

    boolean this_present_tag_id = true && this.isSetTag_id();
    boolean that_present_tag_id = true && that.isSetTag_id();
    if (this_present_tag_id || that_present_tag_id) {
      if (!(this_present_tag_id && that_present_tag_id))
        return false;
      if (!this.tag_id.equals(that.tag_id))
        return false;
    }

    boolean this_present_favorite_hrs = true && this.isSetFavorite_hrs();
    boolean that_present_favorite_hrs = true && that.isSetFavorite_hrs();
    if (this_present_favorite_hrs || that_present_favorite_hrs) {
      if (!(this_present_favorite_hrs && that_present_favorite_hrs))
        return false;
      if (!this.favorite_hrs.equals(that.favorite_hrs))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetPublisher()) ? 131071 : 524287);
    if (isSetPublisher())
      hashCode = hashCode * 8191 + publisher.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + position_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyword()) ? 131071 : 524287);
    if (isSetKeyword())
      hashCode = hashCode * 8191 + keyword.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubmit_time()) ? 131071 : 524287);
    if (isSetSubmit_time())
      hashCode = hashCode * 8191 + submit_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetWork_years()) ? 131071 : 524287);
    if (isSetWork_years())
      hashCode = hashCode * 8191 + work_years.hashCode();

    hashCode = hashCode * 8191 + ((isSetCity_name()) ? 131071 : 524287);
    if (isSetCity_name())
      hashCode = hashCode * 8191 + city_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
    if (isSetDegree())
      hashCode = hashCode * 8191 + degree.hashCode();

    hashCode = hashCode * 8191 + ((isSetPast_position()) ? 131071 : 524287);
    if (isSetPast_position())
      hashCode = hashCode * 8191 + past_position.hashCode();

    hashCode = hashCode * 8191 + in_last_job_search_position;

    hashCode = hashCode * 8191 + min_age;

    hashCode = hashCode * 8191 + max_age;

    hashCode = hashCode * 8191 + ((isSetIntention_city_name()) ? 131071 : 524287);
    if (isSetIntention_city_name())
      hashCode = hashCode * 8191 + intention_city_name.hashCode();

    hashCode = hashCode * 8191 + sex;

    hashCode = hashCode * 8191 + ((isSetIntention_salary_code()) ? 131071 : 524287);
    if (isSetIntention_salary_code())
      hashCode = hashCode * 8191 + intention_salary_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany_name()) ? 131071 : 524287);
    if (isSetCompany_name())
      hashCode = hashCode * 8191 + company_name.hashCode();

    hashCode = hashCode * 8191 + in_last_job_search_company;

    hashCode = hashCode * 8191 + hr_account_id;

    hashCode = hashCode * 8191 + update_time;

    hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetCandidate_source()) ? 131071 : 524287);
    if (isSetCandidate_source())
      hashCode = hashCode * 8191 + candidate_source.hashCode();

    hashCode = hashCode * 8191 + is_public;

    hashCode = hashCode * 8191 + ((isSetOrigins()) ? 131071 : 524287);
    if (isSetOrigins())
      hashCode = hashCode * 8191 + origins.hashCode();

    hashCode = hashCode * 8191 + is_recommend;

    hashCode = hashCode * 8191 + ((isSetTag_id()) ? 131071 : 524287);
    if (isSetTag_id())
      hashCode = hashCode * 8191 + tag_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetFavorite_hrs()) ? 131071 : 524287);
    if (isSetFavorite_hrs())
      hashCode = hashCode * 8191 + favorite_hrs.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SearchCondition other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublisher()).compareTo(other.isSetPublisher());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisher()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisher, other.publisher);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyword()).compareTo(other.isSetKeyword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyword, other.keyword);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubmit_time()).compareTo(other.isSetSubmit_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubmit_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submit_time, other.submit_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWork_years()).compareTo(other.isSetWork_years());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_years()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_years, other.work_years);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCity_name()).compareTo(other.isSetCity_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city_name, other.city_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPast_position()).compareTo(other.isSetPast_position());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPast_position()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.past_position, other.past_position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIn_last_job_search_position()).compareTo(other.isSetIn_last_job_search_position());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIn_last_job_search_position()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.in_last_job_search_position, other.in_last_job_search_position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMin_age()).compareTo(other.isSetMin_age());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMin_age()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.min_age, other.min_age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMax_age()).compareTo(other.isSetMax_age());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMax_age()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max_age, other.max_age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntention_city_name()).compareTo(other.isSetIntention_city_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntention_city_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention_city_name, other.intention_city_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSex()).compareTo(other.isSetSex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSex()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sex, other.sex);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntention_salary_code()).compareTo(other.isSetIntention_salary_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntention_salary_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention_salary_code, other.intention_salary_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_name()).compareTo(other.isSetCompany_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_name, other.company_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIn_last_job_search_company()).compareTo(other.isSetIn_last_job_search_company());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIn_last_job_search_company()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.in_last_job_search_company, other.in_last_job_search_company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr_account_id()).compareTo(other.isSetHr_account_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_account_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_account_id, other.hr_account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCandidate_source()).compareTo(other.isSetCandidate_source());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCandidate_source()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.candidate_source, other.candidate_source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_public()).compareTo(other.isSetIs_public());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_public()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_public, other.is_public);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrigins()).compareTo(other.isSetOrigins());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigins()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origins, other.origins);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_recommend()).compareTo(other.isSetIs_recommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_recommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_recommend, other.is_recommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTag_id()).compareTo(other.isSetTag_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTag_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tag_id, other.tag_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFavorite_hrs()).compareTo(other.isSetFavorite_hrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFavorite_hrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.favorite_hrs, other.favorite_hrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SearchCondition(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("publisher:");
    if (this.publisher == null) {
      sb.append("null");
    } else {
      sb.append(this.publisher);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("position_id:");
    if (this.position_id == null) {
      sb.append("null");
    } else {
      sb.append(this.position_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("keyword:");
    if (this.keyword == null) {
      sb.append("null");
    } else {
      sb.append(this.keyword);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("submit_time:");
    if (this.submit_time == null) {
      sb.append("null");
    } else {
      sb.append(this.submit_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("work_years:");
    if (this.work_years == null) {
      sb.append("null");
    } else {
      sb.append(this.work_years);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("city_name:");
    if (this.city_name == null) {
      sb.append("null");
    } else {
      sb.append(this.city_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    if (this.degree == null) {
      sb.append("null");
    } else {
      sb.append(this.degree);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("past_position:");
    if (this.past_position == null) {
      sb.append("null");
    } else {
      sb.append(this.past_position);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("in_last_job_search_position:");
    sb.append(this.in_last_job_search_position);
    first = false;
    if (!first) sb.append(", ");
    sb.append("min_age:");
    sb.append(this.min_age);
    first = false;
    if (!first) sb.append(", ");
    sb.append("max_age:");
    sb.append(this.max_age);
    first = false;
    if (!first) sb.append(", ");
    sb.append("intention_city_name:");
    if (this.intention_city_name == null) {
      sb.append("null");
    } else {
      sb.append(this.intention_city_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sex:");
    sb.append(this.sex);
    first = false;
    if (!first) sb.append(", ");
    sb.append("intention_salary_code:");
    if (this.intention_salary_code == null) {
      sb.append("null");
    } else {
      sb.append(this.intention_salary_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("company_name:");
    if (this.company_name == null) {
      sb.append("null");
    } else {
      sb.append(this.company_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("in_last_job_search_company:");
    sb.append(this.in_last_job_search_company);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hr_account_id:");
    sb.append(this.hr_account_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_time:");
    sb.append(this.update_time);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    sb.append(this.type);
    first = false;
    if (!first) sb.append(", ");
    sb.append("candidate_source:");
    if (this.candidate_source == null) {
      sb.append("null");
    } else {
      sb.append(this.candidate_source);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_public:");
    sb.append(this.is_public);
    first = false;
    if (!first) sb.append(", ");
    sb.append("origins:");
    if (this.origins == null) {
      sb.append("null");
    } else {
      sb.append(this.origins);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_recommend:");
    sb.append(this.is_recommend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("tag_id:");
    if (this.tag_id == null) {
      sb.append("null");
    } else {
      sb.append(this.tag_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("favorite_hrs:");
    if (this.favorite_hrs == null) {
      sb.append("null");
    } else {
      sb.append(this.favorite_hrs);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SearchConditionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchConditionStandardScheme getScheme() {
      return new SearchConditionStandardScheme();
    }
  }

  private static class SearchConditionStandardScheme extends org.apache.thrift.scheme.StandardScheme<SearchCondition> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SearchCondition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PUBLISHER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.publisher = iprot.readString();
              struct.setPublisherIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position_id = iprot.readString();
              struct.setPosition_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // KEYWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.keyword = iprot.readString();
              struct.setKeywordIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SUBMIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.submit_time = iprot.readString();
              struct.setSubmit_timeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // WORK_YEARS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.work_years = iprot.readString();
              struct.setWork_yearsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city_name = iprot.readString();
              struct.setCity_nameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PAST_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.past_position = iprot.readString();
              struct.setPast_positionIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IN_LAST_JOB_SEARCH_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.in_last_job_search_position = iprot.readI32();
              struct.setIn_last_job_search_positionIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MIN_AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.min_age = iprot.readI32();
              struct.setMin_ageIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MAX_AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.max_age = iprot.readI32();
              struct.setMax_ageIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // INTENTION_CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.intention_city_name = iprot.readString();
              struct.setIntention_city_nameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SEX
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sex = iprot.readI32();
              struct.setSexIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // INTENTION_SALARY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.intention_salary_code = iprot.readString();
              struct.setIntention_salary_codeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.company_name = iprot.readString();
              struct.setCompany_nameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IN_LAST_JOB_SEARCH_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.in_last_job_search_company = iprot.readI32();
              struct.setIn_last_job_search_companyIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // HR_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hr_account_id = iprot.readI32();
              struct.setHr_account_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.update_time = iprot.readI32();
              struct.setUpdate_timeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CANDIDATE_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.candidate_source = iprot.readString();
              struct.setCandidate_sourceIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // IS_PUBLIC
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_public = iprot.readI32();
              struct.setIs_publicIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // ORIGINS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.origins = iprot.readString();
              struct.setOriginsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // IS_RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_recommend = iprot.readI32();
              struct.setIs_recommendIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // TAG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tag_id = iprot.readString();
              struct.setTag_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // FAVORITE_HRS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.favorite_hrs = iprot.readString();
              struct.setFavorite_hrsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SearchCondition struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.publisher != null) {
        oprot.writeFieldBegin(PUBLISHER_FIELD_DESC);
        oprot.writeString(struct.publisher);
        oprot.writeFieldEnd();
      }
      if (struct.position_id != null) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeString(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.keyword != null) {
        oprot.writeFieldBegin(KEYWORD_FIELD_DESC);
        oprot.writeString(struct.keyword);
        oprot.writeFieldEnd();
      }
      if (struct.submit_time != null) {
        oprot.writeFieldBegin(SUBMIT_TIME_FIELD_DESC);
        oprot.writeString(struct.submit_time);
        oprot.writeFieldEnd();
      }
      if (struct.work_years != null) {
        oprot.writeFieldBegin(WORK_YEARS_FIELD_DESC);
        oprot.writeString(struct.work_years);
        oprot.writeFieldEnd();
      }
      if (struct.city_name != null) {
        oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
        oprot.writeString(struct.city_name);
        oprot.writeFieldEnd();
      }
      if (struct.degree != null) {
        oprot.writeFieldBegin(DEGREE_FIELD_DESC);
        oprot.writeString(struct.degree);
        oprot.writeFieldEnd();
      }
      if (struct.past_position != null) {
        oprot.writeFieldBegin(PAST_POSITION_FIELD_DESC);
        oprot.writeString(struct.past_position);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC);
      oprot.writeI32(struct.in_last_job_search_position);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MIN_AGE_FIELD_DESC);
      oprot.writeI32(struct.min_age);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_AGE_FIELD_DESC);
      oprot.writeI32(struct.max_age);
      oprot.writeFieldEnd();
      if (struct.intention_city_name != null) {
        oprot.writeFieldBegin(INTENTION_CITY_NAME_FIELD_DESC);
        oprot.writeString(struct.intention_city_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SEX_FIELD_DESC);
      oprot.writeI32(struct.sex);
      oprot.writeFieldEnd();
      if (struct.intention_salary_code != null) {
        oprot.writeFieldBegin(INTENTION_SALARY_CODE_FIELD_DESC);
        oprot.writeString(struct.intention_salary_code);
        oprot.writeFieldEnd();
      }
      if (struct.company_name != null) {
        oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
        oprot.writeString(struct.company_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC);
      oprot.writeI32(struct.in_last_job_search_company);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HR_ACCOUNT_ID_FIELD_DESC);
      oprot.writeI32(struct.hr_account_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
      oprot.writeI32(struct.update_time);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI32(struct.type);
      oprot.writeFieldEnd();
      if (struct.candidate_source != null) {
        oprot.writeFieldBegin(CANDIDATE_SOURCE_FIELD_DESC);
        oprot.writeString(struct.candidate_source);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_PUBLIC_FIELD_DESC);
      oprot.writeI32(struct.is_public);
      oprot.writeFieldEnd();
      if (struct.origins != null) {
        oprot.writeFieldBegin(ORIGINS_FIELD_DESC);
        oprot.writeString(struct.origins);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
      oprot.writeI32(struct.is_recommend);
      oprot.writeFieldEnd();
      if (struct.tag_id != null) {
        oprot.writeFieldBegin(TAG_ID_FIELD_DESC);
        oprot.writeString(struct.tag_id);
        oprot.writeFieldEnd();
      }
      if (struct.favorite_hrs != null) {
        oprot.writeFieldBegin(FAVORITE_HRS_FIELD_DESC);
        oprot.writeString(struct.favorite_hrs);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SearchConditionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchConditionTupleScheme getScheme() {
      return new SearchConditionTupleScheme();
    }
  }

  private static class SearchConditionTupleScheme extends org.apache.thrift.scheme.TupleScheme<SearchCondition> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SearchCondition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetPublisher()) {
        optionals.set(2);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(3);
      }
      if (struct.isSetKeyword()) {
        optionals.set(4);
      }
      if (struct.isSetSubmit_time()) {
        optionals.set(5);
      }
      if (struct.isSetWork_years()) {
        optionals.set(6);
      }
      if (struct.isSetCity_name()) {
        optionals.set(7);
      }
      if (struct.isSetDegree()) {
        optionals.set(8);
      }
      if (struct.isSetPast_position()) {
        optionals.set(9);
      }
      if (struct.isSetIn_last_job_search_position()) {
        optionals.set(10);
      }
      if (struct.isSetMin_age()) {
        optionals.set(11);
      }
      if (struct.isSetMax_age()) {
        optionals.set(12);
      }
      if (struct.isSetIntention_city_name()) {
        optionals.set(13);
      }
      if (struct.isSetSex()) {
        optionals.set(14);
      }
      if (struct.isSetIntention_salary_code()) {
        optionals.set(15);
      }
      if (struct.isSetCompany_name()) {
        optionals.set(16);
      }
      if (struct.isSetIn_last_job_search_company()) {
        optionals.set(17);
      }
      if (struct.isSetHr_account_id()) {
        optionals.set(18);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(19);
      }
      if (struct.isSetType()) {
        optionals.set(20);
      }
      if (struct.isSetCandidate_source()) {
        optionals.set(21);
      }
      if (struct.isSetIs_public()) {
        optionals.set(22);
      }
      if (struct.isSetOrigins()) {
        optionals.set(23);
      }
      if (struct.isSetIs_recommend()) {
        optionals.set(24);
      }
      if (struct.isSetTag_id()) {
        optionals.set(25);
      }
      if (struct.isSetFavorite_hrs()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPublisher()) {
        oprot.writeString(struct.publisher);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeString(struct.position_id);
      }
      if (struct.isSetKeyword()) {
        oprot.writeString(struct.keyword);
      }
      if (struct.isSetSubmit_time()) {
        oprot.writeString(struct.submit_time);
      }
      if (struct.isSetWork_years()) {
        oprot.writeString(struct.work_years);
      }
      if (struct.isSetCity_name()) {
        oprot.writeString(struct.city_name);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetPast_position()) {
        oprot.writeString(struct.past_position);
      }
      if (struct.isSetIn_last_job_search_position()) {
        oprot.writeI32(struct.in_last_job_search_position);
      }
      if (struct.isSetMin_age()) {
        oprot.writeI32(struct.min_age);
      }
      if (struct.isSetMax_age()) {
        oprot.writeI32(struct.max_age);
      }
      if (struct.isSetIntention_city_name()) {
        oprot.writeString(struct.intention_city_name);
      }
      if (struct.isSetSex()) {
        oprot.writeI32(struct.sex);
      }
      if (struct.isSetIntention_salary_code()) {
        oprot.writeString(struct.intention_salary_code);
      }
      if (struct.isSetCompany_name()) {
        oprot.writeString(struct.company_name);
      }
      if (struct.isSetIn_last_job_search_company()) {
        oprot.writeI32(struct.in_last_job_search_company);
      }
      if (struct.isSetHr_account_id()) {
        oprot.writeI32(struct.hr_account_id);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeI32(struct.update_time);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetCandidate_source()) {
        oprot.writeString(struct.candidate_source);
      }
      if (struct.isSetIs_public()) {
        oprot.writeI32(struct.is_public);
      }
      if (struct.isSetOrigins()) {
        oprot.writeString(struct.origins);
      }
      if (struct.isSetIs_recommend()) {
        oprot.writeI32(struct.is_recommend);
      }
      if (struct.isSetTag_id()) {
        oprot.writeString(struct.tag_id);
      }
      if (struct.isSetFavorite_hrs()) {
        oprot.writeString(struct.favorite_hrs);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SearchCondition struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.publisher = iprot.readString();
        struct.setPublisherIsSet(true);
      }
      if (incoming.get(3)) {
        struct.position_id = iprot.readString();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.keyword = iprot.readString();
        struct.setKeywordIsSet(true);
      }
      if (incoming.get(5)) {
        struct.submit_time = iprot.readString();
        struct.setSubmit_timeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.work_years = iprot.readString();
        struct.setWork_yearsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.city_name = iprot.readString();
        struct.setCity_nameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.past_position = iprot.readString();
        struct.setPast_positionIsSet(true);
      }
      if (incoming.get(10)) {
        struct.in_last_job_search_position = iprot.readI32();
        struct.setIn_last_job_search_positionIsSet(true);
      }
      if (incoming.get(11)) {
        struct.min_age = iprot.readI32();
        struct.setMin_ageIsSet(true);
      }
      if (incoming.get(12)) {
        struct.max_age = iprot.readI32();
        struct.setMax_ageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.intention_city_name = iprot.readString();
        struct.setIntention_city_nameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.sex = iprot.readI32();
        struct.setSexIsSet(true);
      }
      if (incoming.get(15)) {
        struct.intention_salary_code = iprot.readString();
        struct.setIntention_salary_codeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.company_name = iprot.readString();
        struct.setCompany_nameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.in_last_job_search_company = iprot.readI32();
        struct.setIn_last_job_search_companyIsSet(true);
      }
      if (incoming.get(18)) {
        struct.hr_account_id = iprot.readI32();
        struct.setHr_account_idIsSet(true);
      }
      if (incoming.get(19)) {
        struct.update_time = iprot.readI32();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.candidate_source = iprot.readString();
        struct.setCandidate_sourceIsSet(true);
      }
      if (incoming.get(22)) {
        struct.is_public = iprot.readI32();
        struct.setIs_publicIsSet(true);
      }
      if (incoming.get(23)) {
        struct.origins = iprot.readString();
        struct.setOriginsIsSet(true);
      }
      if (incoming.get(24)) {
        struct.is_recommend = iprot.readI32();
        struct.setIs_recommendIsSet(true);
      }
      if (incoming.get(25)) {
        struct.tag_id = iprot.readString();
        struct.setTag_idIsSet(true);
      }
      if (incoming.get(26)) {
        struct.favorite_hrs = iprot.readString();
        struct.setFavorite_hrsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

