/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-04-09")
public class TalentpoolCompanyTagDO implements org.apache.thrift.TBase<TalentpoolCompanyTagDO, TalentpoolCompanyTagDO._Fields>, java.io.Serializable, Cloneable, Comparable<TalentpoolCompanyTagDO> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TalentpoolCompanyTagDO");

    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField COLOR_FIELD_DESC = new org.apache.thrift.protocol.TField("color", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField WORK_YEARS_FIELD_DESC = new org.apache.thrift.protocol.TField("work_years", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField SUBMIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submit_time", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("city_name", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField CITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("city_code", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField PAST_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("past_position", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("in_last_job_search_position", org.apache.thrift.protocol.TType.I32, (short)11);
    private static final org.apache.thrift.protocol.TField MIN_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("min_age", org.apache.thrift.protocol.TType.I32, (short)12);
    private static final org.apache.thrift.protocol.TField MAX_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("max_age", org.apache.thrift.protocol.TType.I32, (short)13);
    private static final org.apache.thrift.protocol.TField INTENTION_CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("intention_city_name", org.apache.thrift.protocol.TType.STRING, (short)14);
    private static final org.apache.thrift.protocol.TField INTENTION_CITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("intention_city_code", org.apache.thrift.protocol.TType.STRING, (short)15);
    private static final org.apache.thrift.protocol.TField INTENTION_SALARY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("intention_salary_code", org.apache.thrift.protocol.TType.STRING, (short)16);
    private static final org.apache.thrift.protocol.TField SEX_FIELD_DESC = new org.apache.thrift.protocol.TField("sex", org.apache.thrift.protocol.TType.I32, (short)17);
    private static final org.apache.thrift.protocol.TField IS_RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("is_recommend", org.apache.thrift.protocol.TType.I32, (short)18);
    private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("company_name", org.apache.thrift.protocol.TType.STRING, (short)19);
    private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("in_last_job_search_company", org.apache.thrift.protocol.TType.I32, (short)20);
    private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)21);
    private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)22);
    private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)23);
    private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)24);
    private static final org.apache.thrift.protocol.TField ORIGINS_FIELD_DESC = new org.apache.thrift.protocol.TField("origins", org.apache.thrift.protocol.TType.STRING, (short)25);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TalentpoolCompanyTagDOStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TalentpoolCompanyTagDOTupleSchemeFactory();

    public int id; // optional
    public int company_id; // optional
    public java.lang.String name; // optional
    public java.lang.String color; // optional
    public java.lang.String work_years; // optional
    public java.lang.String submit_time; // optional
    public java.lang.String city_name; // optional
    public java.lang.String city_code; // optional
    public java.lang.String degree; // optional
    public java.lang.String past_position; // optional
    public int in_last_job_search_position; // optional
    public int min_age; // optional
    public int max_age; // optional
    public java.lang.String intention_city_name; // optional
    public java.lang.String intention_city_code; // optional
    public java.lang.String intention_salary_code; // optional
    public int sex; // optional
    public int is_recommend; // optional
    public java.lang.String company_name; // optional
    public int in_last_job_search_company; // optional
    public int source; // optional
    public java.lang.String create_time; // optional
    public java.lang.String update_time; // optional
    public int disable; // optional
    public java.lang.String origins; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        ID((short)1, "id"),
        COMPANY_ID((short)2, "company_id"),
        NAME((short)3, "name"),
        COLOR((short)4, "color"),
        WORK_YEARS((short)5, "work_years"),
        SUBMIT_TIME((short)6, "submit_time"),
        CITY_NAME((short)7, "city_name"),
        CITY_CODE((short)8, "city_code"),
        DEGREE((short)9, "degree"),
        PAST_POSITION((short)10, "past_position"),
        IN_LAST_JOB_SEARCH_POSITION((short)11, "in_last_job_search_position"),
        MIN_AGE((short)12, "min_age"),
        MAX_AGE((short)13, "max_age"),
        INTENTION_CITY_NAME((short)14, "intention_city_name"),
        INTENTION_CITY_CODE((short)15, "intention_city_code"),
        INTENTION_SALARY_CODE((short)16, "intention_salary_code"),
        SEX((short)17, "sex"),
        IS_RECOMMEND((short)18, "is_recommend"),
        COMPANY_NAME((short)19, "company_name"),
        IN_LAST_JOB_SEARCH_COMPANY((short)20, "in_last_job_search_company"),
        SOURCE((short)21, "source"),
        CREATE_TIME((short)22, "create_time"),
        UPDATE_TIME((short)23, "update_time"),
        DISABLE((short)24, "disable"),
        ORIGINS((short)25, "origins");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // ID
                    return ID;
                case 2: // COMPANY_ID
                    return COMPANY_ID;
                case 3: // NAME
                    return NAME;
                case 4: // COLOR
                    return COLOR;
                case 5: // WORK_YEARS
                    return WORK_YEARS;
                case 6: // SUBMIT_TIME
                    return SUBMIT_TIME;
                case 7: // CITY_NAME
                    return CITY_NAME;
                case 8: // CITY_CODE
                    return CITY_CODE;
                case 9: // DEGREE
                    return DEGREE;
                case 10: // PAST_POSITION
                    return PAST_POSITION;
                case 11: // IN_LAST_JOB_SEARCH_POSITION
                    return IN_LAST_JOB_SEARCH_POSITION;
                case 12: // MIN_AGE
                    return MIN_AGE;
                case 13: // MAX_AGE
                    return MAX_AGE;
                case 14: // INTENTION_CITY_NAME
                    return INTENTION_CITY_NAME;
                case 15: // INTENTION_CITY_CODE
                    return INTENTION_CITY_CODE;
                case 16: // INTENTION_SALARY_CODE
                    return INTENTION_SALARY_CODE;
                case 17: // SEX
                    return SEX;
                case 18: // IS_RECOMMEND
                    return IS_RECOMMEND;
                case 19: // COMPANY_NAME
                    return COMPANY_NAME;
                case 20: // IN_LAST_JOB_SEARCH_COMPANY
                    return IN_LAST_JOB_SEARCH_COMPANY;
                case 21: // SOURCE
                    return SOURCE;
                case 22: // CREATE_TIME
                    return CREATE_TIME;
                case 23: // UPDATE_TIME
                    return UPDATE_TIME;
                case 24: // DISABLE
                    return DISABLE;
                case 25: // ORIGINS
                    return ORIGINS;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private static final int __COMPANY_ID_ISSET_ID = 1;
    private static final int __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID = 2;
    private static final int __MIN_AGE_ISSET_ID = 3;
    private static final int __MAX_AGE_ISSET_ID = 4;
    private static final int __SEX_ISSET_ID = 5;
    private static final int __IS_RECOMMEND_ISSET_ID = 6;
    private static final int __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID = 7;
    private static final int __SOURCE_ISSET_ID = 8;
    private static final int __DISABLE_ISSET_ID = 9;
    private short __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.NAME,_Fields.COLOR,_Fields.WORK_YEARS,_Fields.SUBMIT_TIME,_Fields.CITY_NAME,_Fields.CITY_CODE,_Fields.DEGREE,_Fields.PAST_POSITION,_Fields.IN_LAST_JOB_SEARCH_POSITION,_Fields.MIN_AGE,_Fields.MAX_AGE,_Fields.INTENTION_CITY_NAME,_Fields.INTENTION_CITY_CODE,_Fields.INTENTION_SALARY_CODE,_Fields.SEX,_Fields.IS_RECOMMEND,_Fields.COMPANY_NAME,_Fields.IN_LAST_JOB_SEARCH_COMPANY,_Fields.SOURCE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.DISABLE,_Fields.ORIGINS};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COLOR, new org.apache.thrift.meta_data.FieldMetaData("color", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.WORK_YEARS, new org.apache.thrift.meta_data.FieldMetaData("work_years", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SUBMIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("submit_time", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("city_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("city_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.PAST_POSITION, new org.apache.thrift.meta_data.FieldMetaData("past_position", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_POSITION, new org.apache.thrift.meta_data.FieldMetaData("in_last_job_search_position", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.MIN_AGE, new org.apache.thrift.meta_data.FieldMetaData("min_age", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.MAX_AGE, new org.apache.thrift.meta_data.FieldMetaData("max_age", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.INTENTION_CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("intention_city_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.INTENTION_CITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("intention_city_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.INTENTION_SALARY_CODE, new org.apache.thrift.meta_data.FieldMetaData("intention_salary_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SEX, new org.apache.thrift.meta_data.FieldMetaData("sex", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.IS_RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("is_recommend", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("company_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("in_last_job_search_company", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
        tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.ORIGINS, new org.apache.thrift.meta_data.FieldMetaData("origins", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TalentpoolCompanyTagDO.class, metaDataMap);
    }

    public TalentpoolCompanyTagDO() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public TalentpoolCompanyTagDO(TalentpoolCompanyTagDO other) {
        __isset_bitfield = other.__isset_bitfield;
        this.id = other.id;
        this.company_id = other.company_id;
        if (other.isSetName()) {
            this.name = other.name;
        }
        if (other.isSetColor()) {
            this.color = other.color;
        }
        if (other.isSetWork_years()) {
            this.work_years = other.work_years;
        }
        if (other.isSetSubmit_time()) {
            this.submit_time = other.submit_time;
        }
        if (other.isSetCity_name()) {
            this.city_name = other.city_name;
        }
        if (other.isSetCity_code()) {
            this.city_code = other.city_code;
        }
        if (other.isSetDegree()) {
            this.degree = other.degree;
        }
        if (other.isSetPast_position()) {
            this.past_position = other.past_position;
        }
        this.in_last_job_search_position = other.in_last_job_search_position;
        this.min_age = other.min_age;
        this.max_age = other.max_age;
        if (other.isSetIntention_city_name()) {
            this.intention_city_name = other.intention_city_name;
        }
        if (other.isSetIntention_city_code()) {
            this.intention_city_code = other.intention_city_code;
        }
        if (other.isSetIntention_salary_code()) {
            this.intention_salary_code = other.intention_salary_code;
        }
        this.sex = other.sex;
        this.is_recommend = other.is_recommend;
        if (other.isSetCompany_name()) {
            this.company_name = other.company_name;
        }
        this.in_last_job_search_company = other.in_last_job_search_company;
        this.source = other.source;
        if (other.isSetCreate_time()) {
            this.create_time = other.create_time;
        }
        if (other.isSetUpdate_time()) {
            this.update_time = other.update_time;
        }
        this.disable = other.disable;
        if (other.isSetOrigins()) {
            this.origins = other.origins;
        }
    }

    public TalentpoolCompanyTagDO deepCopy() {
        return new TalentpoolCompanyTagDO(this);
    }

    @Override
    public void clear() {
        setIdIsSet(false);
        this.id = 0;
        setCompany_idIsSet(false);
        this.company_id = 0;
        this.name = null;
        this.color = null;
        this.work_years = null;
        this.submit_time = null;
        this.city_name = null;
        this.city_code = null;
        this.degree = null;
        this.past_position = null;
        setIn_last_job_search_positionIsSet(false);
        this.in_last_job_search_position = 0;
        setMin_ageIsSet(false);
        this.min_age = 0;
        setMax_ageIsSet(false);
        this.max_age = 0;
        this.intention_city_name = null;
        this.intention_city_code = null;
        this.intention_salary_code = null;
        setSexIsSet(false);
        this.sex = 0;
        setIs_recommendIsSet(false);
        this.is_recommend = 0;
        this.company_name = null;
        setIn_last_job_search_companyIsSet(false);
        this.in_last_job_search_company = 0;
        setSourceIsSet(false);
        this.source = 0;
        this.create_time = null;
        this.update_time = null;
        setDisableIsSet(false);
        this.disable = 0;
        this.origins = null;
    }

    public int getId() {
        return this.id;
    }

    public TalentpoolCompanyTagDO setId(int id) {
        this.id = id;
        setIdIsSet(true);
        return this;
    }

    public void unsetId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public int getCompany_id() {
        return this.company_id;
    }

    public TalentpoolCompanyTagDO setCompany_id(int company_id) {
        this.company_id = company_id;
        setCompany_idIsSet(true);
        return this;
    }

    public void unsetCompany_id() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
    }

    /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
    public boolean isSetCompany_id() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
    }

    public void setCompany_idIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
    }

    public java.lang.String getName() {
        return this.name;
    }

    public TalentpoolCompanyTagDO setName(java.lang.String name) {
        this.name = name;
        return this;
    }

    public void unsetName() {
        this.name = null;
    }

    /** Returns true if field name is set (has been assigned a value) and false otherwise */
    public boolean isSetName() {
        return this.name != null;
    }

    public void setNameIsSet(boolean value) {
        if (!value) {
            this.name = null;
        }
    }

    public java.lang.String getColor() {
        return this.color;
    }

    public TalentpoolCompanyTagDO setColor(java.lang.String color) {
        this.color = color;
        return this;
    }

    public void unsetColor() {
        this.color = null;
    }

    /** Returns true if field color is set (has been assigned a value) and false otherwise */
    public boolean isSetColor() {
        return this.color != null;
    }

    public void setColorIsSet(boolean value) {
        if (!value) {
            this.color = null;
        }
    }

    public java.lang.String getWork_years() {
        return this.work_years;
    }

    public TalentpoolCompanyTagDO setWork_years(java.lang.String work_years) {
        this.work_years = work_years;
        return this;
    }

    public void unsetWork_years() {
        this.work_years = null;
    }

    /** Returns true if field work_years is set (has been assigned a value) and false otherwise */
    public boolean isSetWork_years() {
        return this.work_years != null;
    }

    public void setWork_yearsIsSet(boolean value) {
        if (!value) {
            this.work_years = null;
        }
    }

    public java.lang.String getSubmit_time() {
        return this.submit_time;
    }

    public TalentpoolCompanyTagDO setSubmit_time(java.lang.String submit_time) {
        this.submit_time = submit_time;
        return this;
    }

    public void unsetSubmit_time() {
        this.submit_time = null;
    }

    /** Returns true if field submit_time is set (has been assigned a value) and false otherwise */
    public boolean isSetSubmit_time() {
        return this.submit_time != null;
    }

    public void setSubmit_timeIsSet(boolean value) {
        if (!value) {
            this.submit_time = null;
        }
    }

    public java.lang.String getCity_name() {
        return this.city_name;
    }

    public TalentpoolCompanyTagDO setCity_name(java.lang.String city_name) {
        this.city_name = city_name;
        return this;
    }

    public void unsetCity_name() {
        this.city_name = null;
    }

    /** Returns true if field city_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCity_name() {
        return this.city_name != null;
    }

    public void setCity_nameIsSet(boolean value) {
        if (!value) {
            this.city_name = null;
        }
    }

    public java.lang.String getCity_code() {
        return this.city_code;
    }

    public TalentpoolCompanyTagDO setCity_code(java.lang.String city_code) {
        this.city_code = city_code;
        return this;
    }

    public void unsetCity_code() {
        this.city_code = null;
    }

    /** Returns true if field city_code is set (has been assigned a value) and false otherwise */
    public boolean isSetCity_code() {
        return this.city_code != null;
    }

    public void setCity_codeIsSet(boolean value) {
        if (!value) {
            this.city_code = null;
        }
    }

    public java.lang.String getDegree() {
        return this.degree;
    }

    public TalentpoolCompanyTagDO setDegree(java.lang.String degree) {
        this.degree = degree;
        return this;
    }

    public void unsetDegree() {
        this.degree = null;
    }

    /** Returns true if field degree is set (has been assigned a value) and false otherwise */
    public boolean isSetDegree() {
        return this.degree != null;
    }

    public void setDegreeIsSet(boolean value) {
        if (!value) {
            this.degree = null;
        }
    }

    public java.lang.String getPast_position() {
        return this.past_position;
    }

    public TalentpoolCompanyTagDO setPast_position(java.lang.String past_position) {
        this.past_position = past_position;
        return this;
    }

    public void unsetPast_position() {
        this.past_position = null;
    }

    /** Returns true if field past_position is set (has been assigned a value) and false otherwise */
    public boolean isSetPast_position() {
        return this.past_position != null;
    }

    public void setPast_positionIsSet(boolean value) {
        if (!value) {
            this.past_position = null;
        }
    }

    public int getIn_last_job_search_position() {
        return this.in_last_job_search_position;
    }

    public TalentpoolCompanyTagDO setIn_last_job_search_position(int in_last_job_search_position) {
        this.in_last_job_search_position = in_last_job_search_position;
        setIn_last_job_search_positionIsSet(true);
        return this;
    }

    public void unsetIn_last_job_search_position() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID);
    }

    /** Returns true if field in_last_job_search_position is set (has been assigned a value) and false otherwise */
    public boolean isSetIn_last_job_search_position() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID);
    }

    public void setIn_last_job_search_positionIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_POSITION_ISSET_ID, value);
    }

    public int getMin_age() {
        return this.min_age;
    }

    public TalentpoolCompanyTagDO setMin_age(int min_age) {
        this.min_age = min_age;
        setMin_ageIsSet(true);
        return this;
    }

    public void unsetMin_age() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MIN_AGE_ISSET_ID);
    }

    /** Returns true if field min_age is set (has been assigned a value) and false otherwise */
    public boolean isSetMin_age() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MIN_AGE_ISSET_ID);
    }

    public void setMin_ageIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MIN_AGE_ISSET_ID, value);
    }

    public int getMax_age() {
        return this.max_age;
    }

    public TalentpoolCompanyTagDO setMax_age(int max_age) {
        this.max_age = max_age;
        setMax_ageIsSet(true);
        return this;
    }

    public void unsetMax_age() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAX_AGE_ISSET_ID);
    }

    /** Returns true if field max_age is set (has been assigned a value) and false otherwise */
    public boolean isSetMax_age() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAX_AGE_ISSET_ID);
    }

    public void setMax_ageIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAX_AGE_ISSET_ID, value);
    }

    public java.lang.String getIntention_city_name() {
        return this.intention_city_name;
    }

    public TalentpoolCompanyTagDO setIntention_city_name(java.lang.String intention_city_name) {
        this.intention_city_name = intention_city_name;
        return this;
    }

    public void unsetIntention_city_name() {
        this.intention_city_name = null;
    }

    /** Returns true if field intention_city_name is set (has been assigned a value) and false otherwise */
    public boolean isSetIntention_city_name() {
        return this.intention_city_name != null;
    }

    public void setIntention_city_nameIsSet(boolean value) {
        if (!value) {
            this.intention_city_name = null;
        }
    }

    public java.lang.String getIntention_city_code() {
        return this.intention_city_code;
    }

    public TalentpoolCompanyTagDO setIntention_city_code(java.lang.String intention_city_code) {
        this.intention_city_code = intention_city_code;
        return this;
    }

    public void unsetIntention_city_code() {
        this.intention_city_code = null;
    }

    /** Returns true if field intention_city_code is set (has been assigned a value) and false otherwise */
    public boolean isSetIntention_city_code() {
        return this.intention_city_code != null;
    }

    public void setIntention_city_codeIsSet(boolean value) {
        if (!value) {
            this.intention_city_code = null;
        }
    }

    public java.lang.String getIntention_salary_code() {
        return this.intention_salary_code;
    }

    public TalentpoolCompanyTagDO setIntention_salary_code(java.lang.String intention_salary_code) {
        this.intention_salary_code = intention_salary_code;
        return this;
    }

    public void unsetIntention_salary_code() {
        this.intention_salary_code = null;
    }

    /** Returns true if field intention_salary_code is set (has been assigned a value) and false otherwise */
    public boolean isSetIntention_salary_code() {
        return this.intention_salary_code != null;
    }

    public void setIntention_salary_codeIsSet(boolean value) {
        if (!value) {
            this.intention_salary_code = null;
        }
    }

    public int getSex() {
        return this.sex;
    }

    public TalentpoolCompanyTagDO setSex(int sex) {
        this.sex = sex;
        setSexIsSet(true);
        return this;
    }

    public void unsetSex() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEX_ISSET_ID);
    }

    /** Returns true if field sex is set (has been assigned a value) and false otherwise */
    public boolean isSetSex() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEX_ISSET_ID);
    }

    public void setSexIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEX_ISSET_ID, value);
    }

    public int getIs_recommend() {
        return this.is_recommend;
    }

    public TalentpoolCompanyTagDO setIs_recommend(int is_recommend) {
        this.is_recommend = is_recommend;
        setIs_recommendIsSet(true);
        return this;
    }

    public void unsetIs_recommend() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID);
    }

    /** Returns true if field is_recommend is set (has been assigned a value) and false otherwise */
    public boolean isSetIs_recommend() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID);
    }

    public void setIs_recommendIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_RECOMMEND_ISSET_ID, value);
    }

    public java.lang.String getCompany_name() {
        return this.company_name;
    }

    public TalentpoolCompanyTagDO setCompany_name(java.lang.String company_name) {
        this.company_name = company_name;
        return this;
    }

    public void unsetCompany_name() {
        this.company_name = null;
    }

    /** Returns true if field company_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCompany_name() {
        return this.company_name != null;
    }

    public void setCompany_nameIsSet(boolean value) {
        if (!value) {
            this.company_name = null;
        }
    }

    public int getIn_last_job_search_company() {
        return this.in_last_job_search_company;
    }

    public TalentpoolCompanyTagDO setIn_last_job_search_company(int in_last_job_search_company) {
        this.in_last_job_search_company = in_last_job_search_company;
        setIn_last_job_search_companyIsSet(true);
        return this;
    }

    public void unsetIn_last_job_search_company() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID);
    }

    /** Returns true if field in_last_job_search_company is set (has been assigned a value) and false otherwise */
    public boolean isSetIn_last_job_search_company() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID);
    }

    public void setIn_last_job_search_companyIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IN_LAST_JOB_SEARCH_COMPANY_ISSET_ID, value);
    }

    public int getSource() {
        return this.source;
    }

    public TalentpoolCompanyTagDO setSource(int source) {
        this.source = source;
        setSourceIsSet(true);
        return this;
    }

    public void unsetSource() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
    }

    /** Returns true if field source is set (has been assigned a value) and false otherwise */
    public boolean isSetSource() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
    }

    public void setSourceIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
    }

    public java.lang.String getCreate_time() {
        return this.create_time;
    }

    public TalentpoolCompanyTagDO setCreate_time(java.lang.String create_time) {
        this.create_time = create_time;
        return this;
    }

    public void unsetCreate_time() {
        this.create_time = null;
    }

    /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
    public boolean isSetCreate_time() {
        return this.create_time != null;
    }

    public void setCreate_timeIsSet(boolean value) {
        if (!value) {
            this.create_time = null;
        }
    }

    public java.lang.String getUpdate_time() {
        return this.update_time;
    }

    public TalentpoolCompanyTagDO setUpdate_time(java.lang.String update_time) {
        this.update_time = update_time;
        return this;
    }

    public void unsetUpdate_time() {
        this.update_time = null;
    }

    /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
    public boolean isSetUpdate_time() {
        return this.update_time != null;
    }

    public void setUpdate_timeIsSet(boolean value) {
        if (!value) {
            this.update_time = null;
        }
    }

    public int getDisable() {
        return this.disable;
    }

    public TalentpoolCompanyTagDO setDisable(int disable) {
        this.disable = disable;
        setDisableIsSet(true);
        return this;
    }

    public void unsetDisable() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
    }

    /** Returns true if field disable is set (has been assigned a value) and false otherwise */
    public boolean isSetDisable() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
    }

    public void setDisableIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
    }

    public java.lang.String getOrigins() {
        return this.origins;
    }

    public TalentpoolCompanyTagDO setOrigins(java.lang.String origins) {
        this.origins = origins;
        return this;
    }

    public void unsetOrigins() {
        this.origins = null;
    }

    /** Returns true if field origins is set (has been assigned a value) and false otherwise */
    public boolean isSetOrigins() {
        return this.origins != null;
    }

    public void setOriginsIsSet(boolean value) {
        if (!value) {
            this.origins = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case ID:
                if (value == null) {
                    unsetId();
                } else {
                    setId((java.lang.Integer)value);
                }
                break;

            case COMPANY_ID:
                if (value == null) {
                    unsetCompany_id();
                } else {
                    setCompany_id((java.lang.Integer)value);
                }
                break;

            case NAME:
                if (value == null) {
                    unsetName();
                } else {
                    setName((java.lang.String)value);
                }
                break;

            case COLOR:
                if (value == null) {
                    unsetColor();
                } else {
                    setColor((java.lang.String)value);
                }
                break;

            case WORK_YEARS:
                if (value == null) {
                    unsetWork_years();
                } else {
                    setWork_years((java.lang.String)value);
                }
                break;

            case SUBMIT_TIME:
                if (value == null) {
                    unsetSubmit_time();
                } else {
                    setSubmit_time((java.lang.String)value);
                }
                break;

            case CITY_NAME:
                if (value == null) {
                    unsetCity_name();
                } else {
                    setCity_name((java.lang.String)value);
                }
                break;

            case CITY_CODE:
                if (value == null) {
                    unsetCity_code();
                } else {
                    setCity_code((java.lang.String)value);
                }
                break;

            case DEGREE:
                if (value == null) {
                    unsetDegree();
                } else {
                    setDegree((java.lang.String)value);
                }
                break;

            case PAST_POSITION:
                if (value == null) {
                    unsetPast_position();
                } else {
                    setPast_position((java.lang.String)value);
                }
                break;

            case IN_LAST_JOB_SEARCH_POSITION:
                if (value == null) {
                    unsetIn_last_job_search_position();
                } else {
                    setIn_last_job_search_position((java.lang.Integer)value);
                }
                break;

            case MIN_AGE:
                if (value == null) {
                    unsetMin_age();
                } else {
                    setMin_age((java.lang.Integer)value);
                }
                break;

            case MAX_AGE:
                if (value == null) {
                    unsetMax_age();
                } else {
                    setMax_age((java.lang.Integer)value);
                }
                break;

            case INTENTION_CITY_NAME:
                if (value == null) {
                    unsetIntention_city_name();
                } else {
                    setIntention_city_name((java.lang.String)value);
                }
                break;

            case INTENTION_CITY_CODE:
                if (value == null) {
                    unsetIntention_city_code();
                } else {
                    setIntention_city_code((java.lang.String)value);
                }
                break;

            case INTENTION_SALARY_CODE:
                if (value == null) {
                    unsetIntention_salary_code();
                } else {
                    setIntention_salary_code((java.lang.String)value);
                }
                break;

            case SEX:
                if (value == null) {
                    unsetSex();
                } else {
                    setSex((java.lang.Integer)value);
                }
                break;

            case IS_RECOMMEND:
                if (value == null) {
                    unsetIs_recommend();
                } else {
                    setIs_recommend((java.lang.Integer)value);
                }
                break;

            case COMPANY_NAME:
                if (value == null) {
                    unsetCompany_name();
                } else {
                    setCompany_name((java.lang.String)value);
                }
                break;

            case IN_LAST_JOB_SEARCH_COMPANY:
                if (value == null) {
                    unsetIn_last_job_search_company();
                } else {
                    setIn_last_job_search_company((java.lang.Integer)value);
                }
                break;

            case SOURCE:
                if (value == null) {
                    unsetSource();
                } else {
                    setSource((java.lang.Integer)value);
                }
                break;

            case CREATE_TIME:
                if (value == null) {
                    unsetCreate_time();
                } else {
                    setCreate_time((java.lang.String)value);
                }
                break;

            case UPDATE_TIME:
                if (value == null) {
                    unsetUpdate_time();
                } else {
                    setUpdate_time((java.lang.String)value);
                }
                break;

            case DISABLE:
                if (value == null) {
                    unsetDisable();
                } else {
                    setDisable((java.lang.Integer)value);
                }
                break;

            case ORIGINS:
                if (value == null) {
                    unsetOrigins();
                } else {
                    setOrigins((java.lang.String)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case ID:
                return getId();

            case COMPANY_ID:
                return getCompany_id();

            case NAME:
                return getName();

            case COLOR:
                return getColor();

            case WORK_YEARS:
                return getWork_years();

            case SUBMIT_TIME:
                return getSubmit_time();

            case CITY_NAME:
                return getCity_name();

            case CITY_CODE:
                return getCity_code();

            case DEGREE:
                return getDegree();

            case PAST_POSITION:
                return getPast_position();

            case IN_LAST_JOB_SEARCH_POSITION:
                return getIn_last_job_search_position();

            case MIN_AGE:
                return getMin_age();

            case MAX_AGE:
                return getMax_age();

            case INTENTION_CITY_NAME:
                return getIntention_city_name();

            case INTENTION_CITY_CODE:
                return getIntention_city_code();

            case INTENTION_SALARY_CODE:
                return getIntention_salary_code();

            case SEX:
                return getSex();

            case IS_RECOMMEND:
                return getIs_recommend();

            case COMPANY_NAME:
                return getCompany_name();

            case IN_LAST_JOB_SEARCH_COMPANY:
                return getIn_last_job_search_company();

            case SOURCE:
                return getSource();

            case CREATE_TIME:
                return getCreate_time();

            case UPDATE_TIME:
                return getUpdate_time();

            case DISABLE:
                return getDisable();

            case ORIGINS:
                return getOrigins();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case ID:
                return isSetId();
            case COMPANY_ID:
                return isSetCompany_id();
            case NAME:
                return isSetName();
            case COLOR:
                return isSetColor();
            case WORK_YEARS:
                return isSetWork_years();
            case SUBMIT_TIME:
                return isSetSubmit_time();
            case CITY_NAME:
                return isSetCity_name();
            case CITY_CODE:
                return isSetCity_code();
            case DEGREE:
                return isSetDegree();
            case PAST_POSITION:
                return isSetPast_position();
            case IN_LAST_JOB_SEARCH_POSITION:
                return isSetIn_last_job_search_position();
            case MIN_AGE:
                return isSetMin_age();
            case MAX_AGE:
                return isSetMax_age();
            case INTENTION_CITY_NAME:
                return isSetIntention_city_name();
            case INTENTION_CITY_CODE:
                return isSetIntention_city_code();
            case INTENTION_SALARY_CODE:
                return isSetIntention_salary_code();
            case SEX:
                return isSetSex();
            case IS_RECOMMEND:
                return isSetIs_recommend();
            case COMPANY_NAME:
                return isSetCompany_name();
            case IN_LAST_JOB_SEARCH_COMPANY:
                return isSetIn_last_job_search_company();
            case SOURCE:
                return isSetSource();
            case CREATE_TIME:
                return isSetCreate_time();
            case UPDATE_TIME:
                return isSetUpdate_time();
            case DISABLE:
                return isSetDisable();
            case ORIGINS:
                return isSetOrigins();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof TalentpoolCompanyTagDO)
            return this.equals((TalentpoolCompanyTagDO)that);
        return false;
    }

    public boolean equals(TalentpoolCompanyTagDO that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_id = true && this.isSetId();
        boolean that_present_id = true && that.isSetId();
        if (this_present_id || that_present_id) {
            if (!(this_present_id && that_present_id))
                return false;
            if (this.id != that.id)
                return false;
        }

        boolean this_present_company_id = true && this.isSetCompany_id();
        boolean that_present_company_id = true && that.isSetCompany_id();
        if (this_present_company_id || that_present_company_id) {
            if (!(this_present_company_id && that_present_company_id))
                return false;
            if (this.company_id != that.company_id)
                return false;
        }

        boolean this_present_name = true && this.isSetName();
        boolean that_present_name = true && that.isSetName();
        if (this_present_name || that_present_name) {
            if (!(this_present_name && that_present_name))
                return false;
            if (!this.name.equals(that.name))
                return false;
        }

        boolean this_present_color = true && this.isSetColor();
        boolean that_present_color = true && that.isSetColor();
        if (this_present_color || that_present_color) {
            if (!(this_present_color && that_present_color))
                return false;
            if (!this.color.equals(that.color))
                return false;
        }

        boolean this_present_work_years = true && this.isSetWork_years();
        boolean that_present_work_years = true && that.isSetWork_years();
        if (this_present_work_years || that_present_work_years) {
            if (!(this_present_work_years && that_present_work_years))
                return false;
            if (!this.work_years.equals(that.work_years))
                return false;
        }

        boolean this_present_submit_time = true && this.isSetSubmit_time();
        boolean that_present_submit_time = true && that.isSetSubmit_time();
        if (this_present_submit_time || that_present_submit_time) {
            if (!(this_present_submit_time && that_present_submit_time))
                return false;
            if (!this.submit_time.equals(that.submit_time))
                return false;
        }

        boolean this_present_city_name = true && this.isSetCity_name();
        boolean that_present_city_name = true && that.isSetCity_name();
        if (this_present_city_name || that_present_city_name) {
            if (!(this_present_city_name && that_present_city_name))
                return false;
            if (!this.city_name.equals(that.city_name))
                return false;
        }

        boolean this_present_city_code = true && this.isSetCity_code();
        boolean that_present_city_code = true && that.isSetCity_code();
        if (this_present_city_code || that_present_city_code) {
            if (!(this_present_city_code && that_present_city_code))
                return false;
            if (!this.city_code.equals(that.city_code))
                return false;
        }

        boolean this_present_degree = true && this.isSetDegree();
        boolean that_present_degree = true && that.isSetDegree();
        if (this_present_degree || that_present_degree) {
            if (!(this_present_degree && that_present_degree))
                return false;
            if (!this.degree.equals(that.degree))
                return false;
        }

        boolean this_present_past_position = true && this.isSetPast_position();
        boolean that_present_past_position = true && that.isSetPast_position();
        if (this_present_past_position || that_present_past_position) {
            if (!(this_present_past_position && that_present_past_position))
                return false;
            if (!this.past_position.equals(that.past_position))
                return false;
        }

        boolean this_present_in_last_job_search_position = true && this.isSetIn_last_job_search_position();
        boolean that_present_in_last_job_search_position = true && that.isSetIn_last_job_search_position();
        if (this_present_in_last_job_search_position || that_present_in_last_job_search_position) {
            if (!(this_present_in_last_job_search_position && that_present_in_last_job_search_position))
                return false;
            if (this.in_last_job_search_position != that.in_last_job_search_position)
                return false;
        }

        boolean this_present_min_age = true && this.isSetMin_age();
        boolean that_present_min_age = true && that.isSetMin_age();
        if (this_present_min_age || that_present_min_age) {
            if (!(this_present_min_age && that_present_min_age))
                return false;
            if (this.min_age != that.min_age)
                return false;
        }

        boolean this_present_max_age = true && this.isSetMax_age();
        boolean that_present_max_age = true && that.isSetMax_age();
        if (this_present_max_age || that_present_max_age) {
            if (!(this_present_max_age && that_present_max_age))
                return false;
            if (this.max_age != that.max_age)
                return false;
        }

        boolean this_present_intention_city_name = true && this.isSetIntention_city_name();
        boolean that_present_intention_city_name = true && that.isSetIntention_city_name();
        if (this_present_intention_city_name || that_present_intention_city_name) {
            if (!(this_present_intention_city_name && that_present_intention_city_name))
                return false;
            if (!this.intention_city_name.equals(that.intention_city_name))
                return false;
        }

        boolean this_present_intention_city_code = true && this.isSetIntention_city_code();
        boolean that_present_intention_city_code = true && that.isSetIntention_city_code();
        if (this_present_intention_city_code || that_present_intention_city_code) {
            if (!(this_present_intention_city_code && that_present_intention_city_code))
                return false;
            if (!this.intention_city_code.equals(that.intention_city_code))
                return false;
        }

        boolean this_present_intention_salary_code = true && this.isSetIntention_salary_code();
        boolean that_present_intention_salary_code = true && that.isSetIntention_salary_code();
        if (this_present_intention_salary_code || that_present_intention_salary_code) {
            if (!(this_present_intention_salary_code && that_present_intention_salary_code))
                return false;
            if (!this.intention_salary_code.equals(that.intention_salary_code))
                return false;
        }

        boolean this_present_sex = true && this.isSetSex();
        boolean that_present_sex = true && that.isSetSex();
        if (this_present_sex || that_present_sex) {
            if (!(this_present_sex && that_present_sex))
                return false;
            if (this.sex != that.sex)
                return false;
        }

        boolean this_present_is_recommend = true && this.isSetIs_recommend();
        boolean that_present_is_recommend = true && that.isSetIs_recommend();
        if (this_present_is_recommend || that_present_is_recommend) {
            if (!(this_present_is_recommend && that_present_is_recommend))
                return false;
            if (this.is_recommend != that.is_recommend)
                return false;
        }

        boolean this_present_company_name = true && this.isSetCompany_name();
        boolean that_present_company_name = true && that.isSetCompany_name();
        if (this_present_company_name || that_present_company_name) {
            if (!(this_present_company_name && that_present_company_name))
                return false;
            if (!this.company_name.equals(that.company_name))
                return false;
        }

        boolean this_present_in_last_job_search_company = true && this.isSetIn_last_job_search_company();
        boolean that_present_in_last_job_search_company = true && that.isSetIn_last_job_search_company();
        if (this_present_in_last_job_search_company || that_present_in_last_job_search_company) {
            if (!(this_present_in_last_job_search_company && that_present_in_last_job_search_company))
                return false;
            if (this.in_last_job_search_company != that.in_last_job_search_company)
                return false;
        }

        boolean this_present_source = true && this.isSetSource();
        boolean that_present_source = true && that.isSetSource();
        if (this_present_source || that_present_source) {
            if (!(this_present_source && that_present_source))
                return false;
            if (this.source != that.source)
                return false;
        }

        boolean this_present_create_time = true && this.isSetCreate_time();
        boolean that_present_create_time = true && that.isSetCreate_time();
        if (this_present_create_time || that_present_create_time) {
            if (!(this_present_create_time && that_present_create_time))
                return false;
            if (!this.create_time.equals(that.create_time))
                return false;
        }

        boolean this_present_update_time = true && this.isSetUpdate_time();
        boolean that_present_update_time = true && that.isSetUpdate_time();
        if (this_present_update_time || that_present_update_time) {
            if (!(this_present_update_time && that_present_update_time))
                return false;
            if (!this.update_time.equals(that.update_time))
                return false;
        }

        boolean this_present_disable = true && this.isSetDisable();
        boolean that_present_disable = true && that.isSetDisable();
        if (this_present_disable || that_present_disable) {
            if (!(this_present_disable && that_present_disable))
                return false;
            if (this.disable != that.disable)
                return false;
        }

        boolean this_present_origins = true && this.isSetOrigins();
        boolean that_present_origins = true && that.isSetOrigins();
        if (this_present_origins || that_present_origins) {
            if (!(this_present_origins && that_present_origins))
                return false;
            if (!this.origins.equals(that.origins))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
        if (isSetId())
            hashCode = hashCode * 8191 + id;

        hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
        if (isSetCompany_id())
            hashCode = hashCode * 8191 + company_id;

        hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
        if (isSetName())
            hashCode = hashCode * 8191 + name.hashCode();

        hashCode = hashCode * 8191 + ((isSetColor()) ? 131071 : 524287);
        if (isSetColor())
            hashCode = hashCode * 8191 + color.hashCode();

        hashCode = hashCode * 8191 + ((isSetWork_years()) ? 131071 : 524287);
        if (isSetWork_years())
            hashCode = hashCode * 8191 + work_years.hashCode();

        hashCode = hashCode * 8191 + ((isSetSubmit_time()) ? 131071 : 524287);
        if (isSetSubmit_time())
            hashCode = hashCode * 8191 + submit_time.hashCode();

        hashCode = hashCode * 8191 + ((isSetCity_name()) ? 131071 : 524287);
        if (isSetCity_name())
            hashCode = hashCode * 8191 + city_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetCity_code()) ? 131071 : 524287);
        if (isSetCity_code())
            hashCode = hashCode * 8191 + city_code.hashCode();

        hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
        if (isSetDegree())
            hashCode = hashCode * 8191 + degree.hashCode();

        hashCode = hashCode * 8191 + ((isSetPast_position()) ? 131071 : 524287);
        if (isSetPast_position())
            hashCode = hashCode * 8191 + past_position.hashCode();

        hashCode = hashCode * 8191 + ((isSetIn_last_job_search_position()) ? 131071 : 524287);
        if (isSetIn_last_job_search_position())
            hashCode = hashCode * 8191 + in_last_job_search_position;

        hashCode = hashCode * 8191 + ((isSetMin_age()) ? 131071 : 524287);
        if (isSetMin_age())
            hashCode = hashCode * 8191 + min_age;

        hashCode = hashCode * 8191 + ((isSetMax_age()) ? 131071 : 524287);
        if (isSetMax_age())
            hashCode = hashCode * 8191 + max_age;

        hashCode = hashCode * 8191 + ((isSetIntention_city_name()) ? 131071 : 524287);
        if (isSetIntention_city_name())
            hashCode = hashCode * 8191 + intention_city_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetIntention_city_code()) ? 131071 : 524287);
        if (isSetIntention_city_code())
            hashCode = hashCode * 8191 + intention_city_code.hashCode();

        hashCode = hashCode * 8191 + ((isSetIntention_salary_code()) ? 131071 : 524287);
        if (isSetIntention_salary_code())
            hashCode = hashCode * 8191 + intention_salary_code.hashCode();

        hashCode = hashCode * 8191 + ((isSetSex()) ? 131071 : 524287);
        if (isSetSex())
            hashCode = hashCode * 8191 + sex;

        hashCode = hashCode * 8191 + ((isSetIs_recommend()) ? 131071 : 524287);
        if (isSetIs_recommend())
            hashCode = hashCode * 8191 + is_recommend;

        hashCode = hashCode * 8191 + ((isSetCompany_name()) ? 131071 : 524287);
        if (isSetCompany_name())
            hashCode = hashCode * 8191 + company_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetIn_last_job_search_company()) ? 131071 : 524287);
        if (isSetIn_last_job_search_company())
            hashCode = hashCode * 8191 + in_last_job_search_company;

        hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
        if (isSetSource())
            hashCode = hashCode * 8191 + source;

        hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
        if (isSetCreate_time())
            hashCode = hashCode * 8191 + create_time.hashCode();

        hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
        if (isSetUpdate_time())
            hashCode = hashCode * 8191 + update_time.hashCode();

        hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
        if (isSetDisable())
            hashCode = hashCode * 8191 + disable;

        hashCode = hashCode * 8191 + ((isSetOrigins()) ? 131071 : 524287);
        if (isSetOrigins())
            hashCode = hashCode * 8191 + origins.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(TalentpoolCompanyTagDO other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompany_id()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetName()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetColor()).compareTo(other.isSetColor());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetColor()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.color, other.color);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetWork_years()).compareTo(other.isSetWork_years());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetWork_years()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_years, other.work_years);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSubmit_time()).compareTo(other.isSetSubmit_time());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSubmit_time()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submit_time, other.submit_time);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCity_name()).compareTo(other.isSetCity_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCity_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city_name, other.city_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCity_code()).compareTo(other.isSetCity_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCity_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city_code, other.city_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDegree()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetPast_position()).compareTo(other.isSetPast_position());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPast_position()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.past_position, other.past_position);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIn_last_job_search_position()).compareTo(other.isSetIn_last_job_search_position());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIn_last_job_search_position()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.in_last_job_search_position, other.in_last_job_search_position);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMin_age()).compareTo(other.isSetMin_age());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMin_age()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.min_age, other.min_age);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMax_age()).compareTo(other.isSetMax_age());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMax_age()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.max_age, other.max_age);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIntention_city_name()).compareTo(other.isSetIntention_city_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIntention_city_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention_city_name, other.intention_city_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIntention_city_code()).compareTo(other.isSetIntention_city_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIntention_city_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention_city_code, other.intention_city_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIntention_salary_code()).compareTo(other.isSetIntention_salary_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIntention_salary_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention_salary_code, other.intention_salary_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSex()).compareTo(other.isSetSex());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSex()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sex, other.sex);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIs_recommend()).compareTo(other.isSetIs_recommend());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIs_recommend()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_recommend, other.is_recommend);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompany_name()).compareTo(other.isSetCompany_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompany_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_name, other.company_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIn_last_job_search_company()).compareTo(other.isSetIn_last_job_search_company());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIn_last_job_search_company()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.in_last_job_search_company, other.in_last_job_search_company);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSource()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCreate_time()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUpdate_time()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDisable()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetOrigins()).compareTo(other.isSetOrigins());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetOrigins()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origins, other.origins);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("TalentpoolCompanyTagDO(");
        boolean first = true;

        if (isSetId()) {
            sb.append("id:");
            sb.append(this.id);
            first = false;
        }
        if (isSetCompany_id()) {
            if (!first) sb.append(", ");
            sb.append("company_id:");
            sb.append(this.company_id);
            first = false;
        }
        if (isSetName()) {
            if (!first) sb.append(", ");
            sb.append("name:");
            if (this.name == null) {
                sb.append("null");
            } else {
                sb.append(this.name);
            }
            first = false;
        }
        if (isSetColor()) {
            if (!first) sb.append(", ");
            sb.append("color:");
            if (this.color == null) {
                sb.append("null");
            } else {
                sb.append(this.color);
            }
            first = false;
        }
        if (isSetWork_years()) {
            if (!first) sb.append(", ");
            sb.append("work_years:");
            if (this.work_years == null) {
                sb.append("null");
            } else {
                sb.append(this.work_years);
            }
            first = false;
        }
        if (isSetSubmit_time()) {
            if (!first) sb.append(", ");
            sb.append("submit_time:");
            if (this.submit_time == null) {
                sb.append("null");
            } else {
                sb.append(this.submit_time);
            }
            first = false;
        }
        if (isSetCity_name()) {
            if (!first) sb.append(", ");
            sb.append("city_name:");
            if (this.city_name == null) {
                sb.append("null");
            } else {
                sb.append(this.city_name);
            }
            first = false;
        }
        if (isSetCity_code()) {
            if (!first) sb.append(", ");
            sb.append("city_code:");
            if (this.city_code == null) {
                sb.append("null");
            } else {
                sb.append(this.city_code);
            }
            first = false;
        }
        if (isSetDegree()) {
            if (!first) sb.append(", ");
            sb.append("degree:");
            if (this.degree == null) {
                sb.append("null");
            } else {
                sb.append(this.degree);
            }
            first = false;
        }
        if (isSetPast_position()) {
            if (!first) sb.append(", ");
            sb.append("past_position:");
            if (this.past_position == null) {
                sb.append("null");
            } else {
                sb.append(this.past_position);
            }
            first = false;
        }
        if (isSetIn_last_job_search_position()) {
            if (!first) sb.append(", ");
            sb.append("in_last_job_search_position:");
            sb.append(this.in_last_job_search_position);
            first = false;
        }
        if (isSetMin_age()) {
            if (!first) sb.append(", ");
            sb.append("min_age:");
            sb.append(this.min_age);
            first = false;
        }
        if (isSetMax_age()) {
            if (!first) sb.append(", ");
            sb.append("max_age:");
            sb.append(this.max_age);
            first = false;
        }
        if (isSetIntention_city_name()) {
            if (!first) sb.append(", ");
            sb.append("intention_city_name:");
            if (this.intention_city_name == null) {
                sb.append("null");
            } else {
                sb.append(this.intention_city_name);
            }
            first = false;
        }
        if (isSetIntention_city_code()) {
            if (!first) sb.append(", ");
            sb.append("intention_city_code:");
            if (this.intention_city_code == null) {
                sb.append("null");
            } else {
                sb.append(this.intention_city_code);
            }
            first = false;
        }
        if (isSetIntention_salary_code()) {
            if (!first) sb.append(", ");
            sb.append("intention_salary_code:");
            if (this.intention_salary_code == null) {
                sb.append("null");
            } else {
                sb.append(this.intention_salary_code);
            }
            first = false;
        }
        if (isSetSex()) {
            if (!first) sb.append(", ");
            sb.append("sex:");
            sb.append(this.sex);
            first = false;
        }
        if (isSetIs_recommend()) {
            if (!first) sb.append(", ");
            sb.append("is_recommend:");
            sb.append(this.is_recommend);
            first = false;
        }
        if (isSetCompany_name()) {
            if (!first) sb.append(", ");
            sb.append("company_name:");
            if (this.company_name == null) {
                sb.append("null");
            } else {
                sb.append(this.company_name);
            }
            first = false;
        }
        if (isSetIn_last_job_search_company()) {
            if (!first) sb.append(", ");
            sb.append("in_last_job_search_company:");
            sb.append(this.in_last_job_search_company);
            first = false;
        }
        if (isSetSource()) {
            if (!first) sb.append(", ");
            sb.append("source:");
            sb.append(this.source);
            first = false;
        }
        if (isSetCreate_time()) {
            if (!first) sb.append(", ");
            sb.append("create_time:");
            if (this.create_time == null) {
                sb.append("null");
            } else {
                sb.append(this.create_time);
            }
            first = false;
        }
        if (isSetUpdate_time()) {
            if (!first) sb.append(", ");
            sb.append("update_time:");
            if (this.update_time == null) {
                sb.append("null");
            } else {
                sb.append(this.update_time);
            }
            first = false;
        }
        if (isSetDisable()) {
            if (!first) sb.append(", ");
            sb.append("disable:");
            sb.append(this.disable);
            first = false;
        }
        if (isSetOrigins()) {
            if (!first) sb.append(", ");
            sb.append("origins:");
            if (this.origins == null) {
                sb.append("null");
            } else {
                sb.append(this.origins);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class TalentpoolCompanyTagDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public TalentpoolCompanyTagDOStandardScheme getScheme() {
            return new TalentpoolCompanyTagDOStandardScheme();
        }
    }

    private static class TalentpoolCompanyTagDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<TalentpoolCompanyTagDO> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, TalentpoolCompanyTagDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.id = iprot.readI32();
                            struct.setIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // COMPANY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.company_id = iprot.readI32();
                            struct.setCompany_idIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.name = iprot.readString();
                            struct.setNameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // COLOR
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.color = iprot.readString();
                            struct.setColorIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // WORK_YEARS
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.work_years = iprot.readString();
                            struct.setWork_yearsIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // SUBMIT_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.submit_time = iprot.readString();
                            struct.setSubmit_timeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // CITY_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.city_name = iprot.readString();
                            struct.setCity_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // CITY_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.city_code = iprot.readString();
                            struct.setCity_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // DEGREE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.degree = iprot.readString();
                            struct.setDegreeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 10: // PAST_POSITION
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.past_position = iprot.readString();
                            struct.setPast_positionIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 11: // IN_LAST_JOB_SEARCH_POSITION
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.in_last_job_search_position = iprot.readI32();
                            struct.setIn_last_job_search_positionIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 12: // MIN_AGE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.min_age = iprot.readI32();
                            struct.setMin_ageIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 13: // MAX_AGE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.max_age = iprot.readI32();
                            struct.setMax_ageIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 14: // INTENTION_CITY_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.intention_city_name = iprot.readString();
                            struct.setIntention_city_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 15: // INTENTION_CITY_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.intention_city_code = iprot.readString();
                            struct.setIntention_city_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 16: // INTENTION_SALARY_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.intention_salary_code = iprot.readString();
                            struct.setIntention_salary_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 17: // SEX
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.sex = iprot.readI32();
                            struct.setSexIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 18: // IS_RECOMMEND
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.is_recommend = iprot.readI32();
                            struct.setIs_recommendIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 19: // COMPANY_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.company_name = iprot.readString();
                            struct.setCompany_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 20: // IN_LAST_JOB_SEARCH_COMPANY
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.in_last_job_search_company = iprot.readI32();
                            struct.setIn_last_job_search_companyIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 21: // SOURCE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.source = iprot.readI32();
                            struct.setSourceIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 22: // CREATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.create_time = iprot.readString();
                            struct.setCreate_timeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 23: // UPDATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.update_time = iprot.readString();
                            struct.setUpdate_timeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 24: // DISABLE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.disable = iprot.readI32();
                            struct.setDisableIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 25: // ORIGINS
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.origins = iprot.readString();
                            struct.setOriginsIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, TalentpoolCompanyTagDO struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetId()) {
                oprot.writeFieldBegin(ID_FIELD_DESC);
                oprot.writeI32(struct.id);
                oprot.writeFieldEnd();
            }
            if (struct.isSetCompany_id()) {
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.company_id);
                oprot.writeFieldEnd();
            }
            if (struct.name != null) {
                if (struct.isSetName()) {
                    oprot.writeFieldBegin(NAME_FIELD_DESC);
                    oprot.writeString(struct.name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.color != null) {
                if (struct.isSetColor()) {
                    oprot.writeFieldBegin(COLOR_FIELD_DESC);
                    oprot.writeString(struct.color);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.work_years != null) {
                if (struct.isSetWork_years()) {
                    oprot.writeFieldBegin(WORK_YEARS_FIELD_DESC);
                    oprot.writeString(struct.work_years);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.submit_time != null) {
                if (struct.isSetSubmit_time()) {
                    oprot.writeFieldBegin(SUBMIT_TIME_FIELD_DESC);
                    oprot.writeString(struct.submit_time);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.city_name != null) {
                if (struct.isSetCity_name()) {
                    oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
                    oprot.writeString(struct.city_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.city_code != null) {
                if (struct.isSetCity_code()) {
                    oprot.writeFieldBegin(CITY_CODE_FIELD_DESC);
                    oprot.writeString(struct.city_code);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.degree != null) {
                if (struct.isSetDegree()) {
                    oprot.writeFieldBegin(DEGREE_FIELD_DESC);
                    oprot.writeString(struct.degree);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.past_position != null) {
                if (struct.isSetPast_position()) {
                    oprot.writeFieldBegin(PAST_POSITION_FIELD_DESC);
                    oprot.writeString(struct.past_position);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetIn_last_job_search_position()) {
                oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC);
                oprot.writeI32(struct.in_last_job_search_position);
                oprot.writeFieldEnd();
            }
            if (struct.isSetMin_age()) {
                oprot.writeFieldBegin(MIN_AGE_FIELD_DESC);
                oprot.writeI32(struct.min_age);
                oprot.writeFieldEnd();
            }
            if (struct.isSetMax_age()) {
                oprot.writeFieldBegin(MAX_AGE_FIELD_DESC);
                oprot.writeI32(struct.max_age);
                oprot.writeFieldEnd();
            }
            if (struct.intention_city_name != null) {
                if (struct.isSetIntention_city_name()) {
                    oprot.writeFieldBegin(INTENTION_CITY_NAME_FIELD_DESC);
                    oprot.writeString(struct.intention_city_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.intention_city_code != null) {
                if (struct.isSetIntention_city_code()) {
                    oprot.writeFieldBegin(INTENTION_CITY_CODE_FIELD_DESC);
                    oprot.writeString(struct.intention_city_code);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.intention_salary_code != null) {
                if (struct.isSetIntention_salary_code()) {
                    oprot.writeFieldBegin(INTENTION_SALARY_CODE_FIELD_DESC);
                    oprot.writeString(struct.intention_salary_code);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetSex()) {
                oprot.writeFieldBegin(SEX_FIELD_DESC);
                oprot.writeI32(struct.sex);
                oprot.writeFieldEnd();
            }
            if (struct.isSetIs_recommend()) {
                oprot.writeFieldBegin(IS_RECOMMEND_FIELD_DESC);
                oprot.writeI32(struct.is_recommend);
                oprot.writeFieldEnd();
            }
            if (struct.company_name != null) {
                if (struct.isSetCompany_name()) {
                    oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
                    oprot.writeString(struct.company_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetIn_last_job_search_company()) {
                oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC);
                oprot.writeI32(struct.in_last_job_search_company);
                oprot.writeFieldEnd();
            }
            if (struct.isSetSource()) {
                oprot.writeFieldBegin(SOURCE_FIELD_DESC);
                oprot.writeI32(struct.source);
                oprot.writeFieldEnd();
            }
            if (struct.create_time != null) {
                if (struct.isSetCreate_time()) {
                    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.create_time);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.update_time != null) {
                if (struct.isSetUpdate_time()) {
                    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.update_time);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetDisable()) {
                oprot.writeFieldBegin(DISABLE_FIELD_DESC);
                oprot.writeI32(struct.disable);
                oprot.writeFieldEnd();
            }
            if (struct.origins != null) {
                if (struct.isSetOrigins()) {
                    oprot.writeFieldBegin(ORIGINS_FIELD_DESC);
                    oprot.writeString(struct.origins);
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class TalentpoolCompanyTagDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public TalentpoolCompanyTagDOTupleScheme getScheme() {
            return new TalentpoolCompanyTagDOTupleScheme();
        }
    }

    private static class TalentpoolCompanyTagDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<TalentpoolCompanyTagDO> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, TalentpoolCompanyTagDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetId()) {
                optionals.set(0);
            }
            if (struct.isSetCompany_id()) {
                optionals.set(1);
            }
            if (struct.isSetName()) {
                optionals.set(2);
            }
            if (struct.isSetColor()) {
                optionals.set(3);
            }
            if (struct.isSetWork_years()) {
                optionals.set(4);
            }
            if (struct.isSetSubmit_time()) {
                optionals.set(5);
            }
            if (struct.isSetCity_name()) {
                optionals.set(6);
            }
            if (struct.isSetCity_code()) {
                optionals.set(7);
            }
            if (struct.isSetDegree()) {
                optionals.set(8);
            }
            if (struct.isSetPast_position()) {
                optionals.set(9);
            }
            if (struct.isSetIn_last_job_search_position()) {
                optionals.set(10);
            }
            if (struct.isSetMin_age()) {
                optionals.set(11);
            }
            if (struct.isSetMax_age()) {
                optionals.set(12);
            }
            if (struct.isSetIntention_city_name()) {
                optionals.set(13);
            }
            if (struct.isSetIntention_city_code()) {
                optionals.set(14);
            }
            if (struct.isSetIntention_salary_code()) {
                optionals.set(15);
            }
            if (struct.isSetSex()) {
                optionals.set(16);
            }
            if (struct.isSetIs_recommend()) {
                optionals.set(17);
            }
            if (struct.isSetCompany_name()) {
                optionals.set(18);
            }
            if (struct.isSetIn_last_job_search_company()) {
                optionals.set(19);
            }
            if (struct.isSetSource()) {
                optionals.set(20);
            }
            if (struct.isSetCreate_time()) {
                optionals.set(21);
            }
            if (struct.isSetUpdate_time()) {
                optionals.set(22);
            }
            if (struct.isSetDisable()) {
                optionals.set(23);
            }
            if (struct.isSetOrigins()) {
                optionals.set(24);
            }
            oprot.writeBitSet(optionals, 25);
            if (struct.isSetId()) {
                oprot.writeI32(struct.id);
            }
            if (struct.isSetCompany_id()) {
                oprot.writeI32(struct.company_id);
            }
            if (struct.isSetName()) {
                oprot.writeString(struct.name);
            }
            if (struct.isSetColor()) {
                oprot.writeString(struct.color);
            }
            if (struct.isSetWork_years()) {
                oprot.writeString(struct.work_years);
            }
            if (struct.isSetSubmit_time()) {
                oprot.writeString(struct.submit_time);
            }
            if (struct.isSetCity_name()) {
                oprot.writeString(struct.city_name);
            }
            if (struct.isSetCity_code()) {
                oprot.writeString(struct.city_code);
            }
            if (struct.isSetDegree()) {
                oprot.writeString(struct.degree);
            }
            if (struct.isSetPast_position()) {
                oprot.writeString(struct.past_position);
            }
            if (struct.isSetIn_last_job_search_position()) {
                oprot.writeI32(struct.in_last_job_search_position);
            }
            if (struct.isSetMin_age()) {
                oprot.writeI32(struct.min_age);
            }
            if (struct.isSetMax_age()) {
                oprot.writeI32(struct.max_age);
            }
            if (struct.isSetIntention_city_name()) {
                oprot.writeString(struct.intention_city_name);
            }
            if (struct.isSetIntention_city_code()) {
                oprot.writeString(struct.intention_city_code);
            }
            if (struct.isSetIntention_salary_code()) {
                oprot.writeString(struct.intention_salary_code);
            }
            if (struct.isSetSex()) {
                oprot.writeI32(struct.sex);
            }
            if (struct.isSetIs_recommend()) {
                oprot.writeI32(struct.is_recommend);
            }
            if (struct.isSetCompany_name()) {
                oprot.writeString(struct.company_name);
            }
            if (struct.isSetIn_last_job_search_company()) {
                oprot.writeI32(struct.in_last_job_search_company);
            }
            if (struct.isSetSource()) {
                oprot.writeI32(struct.source);
            }
            if (struct.isSetCreate_time()) {
                oprot.writeString(struct.create_time);
            }
            if (struct.isSetUpdate_time()) {
                oprot.writeString(struct.update_time);
            }
            if (struct.isSetDisable()) {
                oprot.writeI32(struct.disable);
            }
            if (struct.isSetOrigins()) {
                oprot.writeString(struct.origins);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, TalentpoolCompanyTagDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(25);
            if (incoming.get(0)) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.company_id = iprot.readI32();
                struct.setCompany_idIsSet(true);
            }
            if (incoming.get(2)) {
                struct.name = iprot.readString();
                struct.setNameIsSet(true);
            }
            if (incoming.get(3)) {
                struct.color = iprot.readString();
                struct.setColorIsSet(true);
            }
            if (incoming.get(4)) {
                struct.work_years = iprot.readString();
                struct.setWork_yearsIsSet(true);
            }
            if (incoming.get(5)) {
                struct.submit_time = iprot.readString();
                struct.setSubmit_timeIsSet(true);
            }
            if (incoming.get(6)) {
                struct.city_name = iprot.readString();
                struct.setCity_nameIsSet(true);
            }
            if (incoming.get(7)) {
                struct.city_code = iprot.readString();
                struct.setCity_codeIsSet(true);
            }
            if (incoming.get(8)) {
                struct.degree = iprot.readString();
                struct.setDegreeIsSet(true);
            }
            if (incoming.get(9)) {
                struct.past_position = iprot.readString();
                struct.setPast_positionIsSet(true);
            }
            if (incoming.get(10)) {
                struct.in_last_job_search_position = iprot.readI32();
                struct.setIn_last_job_search_positionIsSet(true);
            }
            if (incoming.get(11)) {
                struct.min_age = iprot.readI32();
                struct.setMin_ageIsSet(true);
            }
            if (incoming.get(12)) {
                struct.max_age = iprot.readI32();
                struct.setMax_ageIsSet(true);
            }
            if (incoming.get(13)) {
                struct.intention_city_name = iprot.readString();
                struct.setIntention_city_nameIsSet(true);
            }
            if (incoming.get(14)) {
                struct.intention_city_code = iprot.readString();
                struct.setIntention_city_codeIsSet(true);
            }
            if (incoming.get(15)) {
                struct.intention_salary_code = iprot.readString();
                struct.setIntention_salary_codeIsSet(true);
            }
            if (incoming.get(16)) {
                struct.sex = iprot.readI32();
                struct.setSexIsSet(true);
            }
            if (incoming.get(17)) {
                struct.is_recommend = iprot.readI32();
                struct.setIs_recommendIsSet(true);
            }
            if (incoming.get(18)) {
                struct.company_name = iprot.readString();
                struct.setCompany_nameIsSet(true);
            }
            if (incoming.get(19)) {
                struct.in_last_job_search_company = iprot.readI32();
                struct.setIn_last_job_search_companyIsSet(true);
            }
            if (incoming.get(20)) {
                struct.source = iprot.readI32();
                struct.setSourceIsSet(true);
            }
            if (incoming.get(21)) {
                struct.create_time = iprot.readString();
                struct.setCreate_timeIsSet(true);
            }
            if (incoming.get(22)) {
                struct.update_time = iprot.readString();
                struct.setUpdate_timeIsSet(true);
            }
            if (incoming.get(23)) {
                struct.disable = iprot.readI32();
                struct.setDisableIsSet(true);
            }
            if (incoming.get(24)) {
                struct.origins = iprot.readString();
                struct.setOriginsIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

