/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.userdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-12")
public class UserEmployeePointsRecordDO implements org.apache.thrift.TBase<UserEmployeePointsRecordDO, UserEmployeePointsRecordDO._Fields>, java.io.Serializable, Cloneable, Comparable<UserEmployeePointsRecordDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEmployeePointsRecordDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeId", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("reason", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("award", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField APPLICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationId", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField RECOM_WXUSER_FIELD_DESC = new org.apache.thrift.protocol.TField("recomWxuser", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField BERECOM_WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("berecomWxuserId", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField AWARD_CONFIG_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("awardConfigId", org.apache.thrift.protocol.TType.DOUBLE, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserEmployeePointsRecordDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserEmployeePointsRecordDOTupleSchemeFactory();

  public int id; // optional
  public double employeeId; // optional
  public java.lang.String reason; // optional
  public int award; // optional
  public java.lang.String createTime; // optional
  public double applicationId; // optional
  public double recomWxuser; // optional
  public java.lang.String updateTime; // optional
  public double positionId; // optional
  public double berecomWxuserId; // optional
  public double awardConfigId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    EMPLOYEE_ID((short)2, "employeeId"),
    REASON((short)3, "reason"),
    AWARD((short)4, "award"),
    CREATE_TIME((short)5, "createTime"),
    APPLICATION_ID((short)6, "applicationId"),
    RECOM_WXUSER((short)7, "recomWxuser"),
    UPDATE_TIME((short)8, "updateTime"),
    POSITION_ID((short)9, "positionId"),
    BERECOM_WXUSER_ID((short)10, "berecomWxuserId"),
    AWARD_CONFIG_ID((short)11, "awardConfigId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // EMPLOYEE_ID
          return EMPLOYEE_ID;
        case 3: // REASON
          return REASON;
        case 4: // AWARD
          return AWARD;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // APPLICATION_ID
          return APPLICATION_ID;
        case 7: // RECOM_WXUSER
          return RECOM_WXUSER;
        case 8: // UPDATE_TIME
          return UPDATE_TIME;
        case 9: // POSITION_ID
          return POSITION_ID;
        case 10: // BERECOM_WXUSER_ID
          return BERECOM_WXUSER_ID;
        case 11: // AWARD_CONFIG_ID
          return AWARD_CONFIG_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __EMPLOYEEID_ISSET_ID = 1;
  private static final int __AWARD_ISSET_ID = 2;
  private static final int __APPLICATIONID_ISSET_ID = 3;
  private static final int __RECOMWXUSER_ISSET_ID = 4;
  private static final int __POSITIONID_ISSET_ID = 5;
  private static final int __BERECOMWXUSERID_ISSET_ID = 6;
  private static final int __AWARDCONFIGID_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.EMPLOYEE_ID,_Fields.REASON,_Fields.AWARD,_Fields.CREATE_TIME,_Fields.APPLICATION_ID,_Fields.RECOM_WXUSER,_Fields.UPDATE_TIME,_Fields.POSITION_ID,_Fields.BERECOM_WXUSER_ID,_Fields.AWARD_CONFIG_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REASON, new org.apache.thrift.meta_data.FieldMetaData("reason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AWARD, new org.apache.thrift.meta_data.FieldMetaData("award", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("applicationId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RECOM_WXUSER, new org.apache.thrift.meta_data.FieldMetaData("recomWxuser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BERECOM_WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("berecomWxuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.AWARD_CONFIG_ID, new org.apache.thrift.meta_data.FieldMetaData("awardConfigId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEmployeePointsRecordDO.class, metaDataMap);
  }

  public UserEmployeePointsRecordDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEmployeePointsRecordDO(UserEmployeePointsRecordDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.employeeId = other.employeeId;
    if (other.isSetReason()) {
      this.reason = other.reason;
    }
    this.award = other.award;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.applicationId = other.applicationId;
    this.recomWxuser = other.recomWxuser;
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.positionId = other.positionId;
    this.berecomWxuserId = other.berecomWxuserId;
    this.awardConfigId = other.awardConfigId;
  }

  public UserEmployeePointsRecordDO deepCopy() {
    return new UserEmployeePointsRecordDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setEmployeeIdIsSet(false);
    this.employeeId = 0.0;
    this.reason = null;
    setAwardIsSet(false);
    this.award = 0;
    this.createTime = null;
    setApplicationIdIsSet(false);
    this.applicationId = 0.0;
    setRecomWxuserIsSet(false);
    this.recomWxuser = 0.0;
    this.updateTime = null;
    setPositionIdIsSet(false);
    this.positionId = 0.0;
    setBerecomWxuserIdIsSet(false);
    this.berecomWxuserId = 0.0;
    setAwardConfigIdIsSet(false);
    this.awardConfigId = 0.0;
  }

  public int getId() {
    return this.id;
  }

  public UserEmployeePointsRecordDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public double getEmployeeId() {
    return this.employeeId;
  }

  public UserEmployeePointsRecordDO setEmployeeId(double employeeId) {
    this.employeeId = employeeId;
    setEmployeeIdIsSet(true);
    return this;
  }

  public void unsetEmployeeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
  }

  /** Returns true if field employeeId is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
  }

  public void setEmployeeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID, value);
  }

  public java.lang.String getReason() {
    return this.reason;
  }

  public UserEmployeePointsRecordDO setReason(java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  public void unsetReason() {
    this.reason = null;
  }

  /** Returns true if field reason is set (has been assigned a value) and false otherwise */
  public boolean isSetReason() {
    return this.reason != null;
  }

  public void setReasonIsSet(boolean value) {
    if (!value) {
      this.reason = null;
    }
  }

  public int getAward() {
    return this.award;
  }

  public UserEmployeePointsRecordDO setAward(int award) {
    this.award = award;
    setAwardIsSet(true);
    return this;
  }

  public void unsetAward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  /** Returns true if field award is set (has been assigned a value) and false otherwise */
  public boolean isSetAward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  public void setAwardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public UserEmployeePointsRecordDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public double getApplicationId() {
    return this.applicationId;
  }

  public UserEmployeePointsRecordDO setApplicationId(double applicationId) {
    this.applicationId = applicationId;
    setApplicationIdIsSet(true);
    return this;
  }

  public void unsetApplicationId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATIONID_ISSET_ID);
  }

  /** Returns true if field applicationId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATIONID_ISSET_ID);
  }

  public void setApplicationIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATIONID_ISSET_ID, value);
  }

  public double getRecomWxuser() {
    return this.recomWxuser;
  }

  public UserEmployeePointsRecordDO setRecomWxuser(double recomWxuser) {
    this.recomWxuser = recomWxuser;
    setRecomWxuserIsSet(true);
    return this;
  }

  public void unsetRecomWxuser() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMWXUSER_ISSET_ID);
  }

  /** Returns true if field recomWxuser is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomWxuser() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMWXUSER_ISSET_ID);
  }

  public void setRecomWxuserIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMWXUSER_ISSET_ID, value);
  }

  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public UserEmployeePointsRecordDO setUpdateTime(java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public double getPositionId() {
    return this.positionId;
  }

  public UserEmployeePointsRecordDO setPositionId(double positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public double getBerecomWxuserId() {
    return this.berecomWxuserId;
  }

  public UserEmployeePointsRecordDO setBerecomWxuserId(double berecomWxuserId) {
    this.berecomWxuserId = berecomWxuserId;
    setBerecomWxuserIdIsSet(true);
    return this;
  }

  public void unsetBerecomWxuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BERECOMWXUSERID_ISSET_ID);
  }

  /** Returns true if field berecomWxuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetBerecomWxuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BERECOMWXUSERID_ISSET_ID);
  }

  public void setBerecomWxuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BERECOMWXUSERID_ISSET_ID, value);
  }

  public double getAwardConfigId() {
    return this.awardConfigId;
  }

  public UserEmployeePointsRecordDO setAwardConfigId(double awardConfigId) {
    this.awardConfigId = awardConfigId;
    setAwardConfigIdIsSet(true);
    return this;
  }

  public void unsetAwardConfigId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARDCONFIGID_ISSET_ID);
  }

  /** Returns true if field awardConfigId is set (has been assigned a value) and false otherwise */
  public boolean isSetAwardConfigId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARDCONFIGID_ISSET_ID);
  }

  public void setAwardConfigIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARDCONFIGID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_ID:
      if (value == null) {
        unsetEmployeeId();
      } else {
        setEmployeeId((java.lang.Double)value);
      }
      break;

    case REASON:
      if (value == null) {
        unsetReason();
      } else {
        setReason((java.lang.String)value);
      }
      break;

    case AWARD:
      if (value == null) {
        unsetAward();
      } else {
        setAward((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case APPLICATION_ID:
      if (value == null) {
        unsetApplicationId();
      } else {
        setApplicationId((java.lang.Double)value);
      }
      break;

    case RECOM_WXUSER:
      if (value == null) {
        unsetRecomWxuser();
      } else {
        setRecomWxuser((java.lang.Double)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Double)value);
      }
      break;

    case BERECOM_WXUSER_ID:
      if (value == null) {
        unsetBerecomWxuserId();
      } else {
        setBerecomWxuserId((java.lang.Double)value);
      }
      break;

    case AWARD_CONFIG_ID:
      if (value == null) {
        unsetAwardConfigId();
      } else {
        setAwardConfigId((java.lang.Double)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case EMPLOYEE_ID:
      return getEmployeeId();

    case REASON:
      return getReason();

    case AWARD:
      return getAward();

    case CREATE_TIME:
      return getCreateTime();

    case APPLICATION_ID:
      return getApplicationId();

    case RECOM_WXUSER:
      return getRecomWxuser();

    case UPDATE_TIME:
      return getUpdateTime();

    case POSITION_ID:
      return getPositionId();

    case BERECOM_WXUSER_ID:
      return getBerecomWxuserId();

    case AWARD_CONFIG_ID:
      return getAwardConfigId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case EMPLOYEE_ID:
      return isSetEmployeeId();
    case REASON:
      return isSetReason();
    case AWARD:
      return isSetAward();
    case CREATE_TIME:
      return isSetCreateTime();
    case APPLICATION_ID:
      return isSetApplicationId();
    case RECOM_WXUSER:
      return isSetRecomWxuser();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case POSITION_ID:
      return isSetPositionId();
    case BERECOM_WXUSER_ID:
      return isSetBerecomWxuserId();
    case AWARD_CONFIG_ID:
      return isSetAwardConfigId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEmployeePointsRecordDO)
      return this.equals((UserEmployeePointsRecordDO)that);
    return false;
  }

  public boolean equals(UserEmployeePointsRecordDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_employeeId = true && this.isSetEmployeeId();
    boolean that_present_employeeId = true && that.isSetEmployeeId();
    if (this_present_employeeId || that_present_employeeId) {
      if (!(this_present_employeeId && that_present_employeeId))
        return false;
      if (this.employeeId != that.employeeId)
        return false;
    }

    boolean this_present_reason = true && this.isSetReason();
    boolean that_present_reason = true && that.isSetReason();
    if (this_present_reason || that_present_reason) {
      if (!(this_present_reason && that_present_reason))
        return false;
      if (!this.reason.equals(that.reason))
        return false;
    }

    boolean this_present_award = true && this.isSetAward();
    boolean that_present_award = true && that.isSetAward();
    if (this_present_award || that_present_award) {
      if (!(this_present_award && that_present_award))
        return false;
      if (this.award != that.award)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_applicationId = true && this.isSetApplicationId();
    boolean that_present_applicationId = true && that.isSetApplicationId();
    if (this_present_applicationId || that_present_applicationId) {
      if (!(this_present_applicationId && that_present_applicationId))
        return false;
      if (this.applicationId != that.applicationId)
        return false;
    }

    boolean this_present_recomWxuser = true && this.isSetRecomWxuser();
    boolean that_present_recomWxuser = true && that.isSetRecomWxuser();
    if (this_present_recomWxuser || that_present_recomWxuser) {
      if (!(this_present_recomWxuser && that_present_recomWxuser))
        return false;
      if (this.recomWxuser != that.recomWxuser)
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_berecomWxuserId = true && this.isSetBerecomWxuserId();
    boolean that_present_berecomWxuserId = true && that.isSetBerecomWxuserId();
    if (this_present_berecomWxuserId || that_present_berecomWxuserId) {
      if (!(this_present_berecomWxuserId && that_present_berecomWxuserId))
        return false;
      if (this.berecomWxuserId != that.berecomWxuserId)
        return false;
    }

    boolean this_present_awardConfigId = true && this.isSetAwardConfigId();
    boolean that_present_awardConfigId = true && that.isSetAwardConfigId();
    if (this_present_awardConfigId || that_present_awardConfigId) {
      if (!(this_present_awardConfigId && that_present_awardConfigId))
        return false;
      if (this.awardConfigId != that.awardConfigId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetEmployeeId()) ? 131071 : 524287);
    if (isSetEmployeeId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(employeeId);

    hashCode = hashCode * 8191 + ((isSetReason()) ? 131071 : 524287);
    if (isSetReason())
      hashCode = hashCode * 8191 + reason.hashCode();

    hashCode = hashCode * 8191 + ((isSetAward()) ? 131071 : 524287);
    if (isSetAward())
      hashCode = hashCode * 8191 + award;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplicationId()) ? 131071 : 524287);
    if (isSetApplicationId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(applicationId);

    hashCode = hashCode * 8191 + ((isSetRecomWxuser()) ? 131071 : 524287);
    if (isSetRecomWxuser())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(recomWxuser);

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(positionId);

    hashCode = hashCode * 8191 + ((isSetBerecomWxuserId()) ? 131071 : 524287);
    if (isSetBerecomWxuserId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(berecomWxuserId);

    hashCode = hashCode * 8191 + ((isSetAwardConfigId()) ? 131071 : 524287);
    if (isSetAwardConfigId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(awardConfigId);

    return hashCode;
  }

  @Override
  public int compareTo(UserEmployeePointsRecordDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeId()).compareTo(other.isSetEmployeeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeId, other.employeeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReason()).compareTo(other.isSetReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reason, other.reason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAward()).compareTo(other.isSetAward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award, other.award);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplicationId()).compareTo(other.isSetApplicationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationId, other.applicationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomWxuser()).compareTo(other.isSetRecomWxuser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomWxuser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomWxuser, other.recomWxuser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBerecomWxuserId()).compareTo(other.isSetBerecomWxuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBerecomWxuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.berecomWxuserId, other.berecomWxuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAwardConfigId()).compareTo(other.isSetAwardConfigId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAwardConfigId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.awardConfigId, other.awardConfigId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserEmployeePointsRecordDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetEmployeeId()) {
      if (!first) sb.append(", ");
      sb.append("employeeId:");
      sb.append(this.employeeId);
      first = false;
    }
    if (isSetReason()) {
      if (!first) sb.append(", ");
      sb.append("reason:");
      if (this.reason == null) {
        sb.append("null");
      } else {
        sb.append(this.reason);
      }
      first = false;
    }
    if (isSetAward()) {
      if (!first) sb.append(", ");
      sb.append("award:");
      sb.append(this.award);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetApplicationId()) {
      if (!first) sb.append(", ");
      sb.append("applicationId:");
      sb.append(this.applicationId);
      first = false;
    }
    if (isSetRecomWxuser()) {
      if (!first) sb.append(", ");
      sb.append("recomWxuser:");
      sb.append(this.recomWxuser);
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetBerecomWxuserId()) {
      if (!first) sb.append(", ");
      sb.append("berecomWxuserId:");
      sb.append(this.berecomWxuserId);
      first = false;
    }
    if (isSetAwardConfigId()) {
      if (!first) sb.append(", ");
      sb.append("awardConfigId:");
      sb.append(this.awardConfigId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEmployeePointsRecordDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeePointsRecordDOStandardScheme getScheme() {
      return new UserEmployeePointsRecordDOStandardScheme();
    }
  }

  private static class UserEmployeePointsRecordDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserEmployeePointsRecordDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.employeeId = iprot.readDouble();
              struct.setEmployeeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reason = iprot.readString();
              struct.setReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.award = iprot.readI32();
              struct.setAwardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // APPLICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.applicationId = iprot.readDouble();
              struct.setApplicationIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RECOM_WXUSER
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.recomWxuser = iprot.readDouble();
              struct.setRecomWxuserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.positionId = iprot.readDouble();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BERECOM_WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.berecomWxuserId = iprot.readDouble();
              struct.setBerecomWxuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AWARD_CONFIG_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.awardConfigId = iprot.readDouble();
              struct.setAwardConfigIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployeeId()) {
        oprot.writeFieldBegin(EMPLOYEE_ID_FIELD_DESC);
        oprot.writeDouble(struct.employeeId);
        oprot.writeFieldEnd();
      }
      if (struct.reason != null) {
        if (struct.isSetReason()) {
          oprot.writeFieldBegin(REASON_FIELD_DESC);
          oprot.writeString(struct.reason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAward()) {
        oprot.writeFieldBegin(AWARD_FIELD_DESC);
        oprot.writeI32(struct.award);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApplicationId()) {
        oprot.writeFieldBegin(APPLICATION_ID_FIELD_DESC);
        oprot.writeDouble(struct.applicationId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecomWxuser()) {
        oprot.writeFieldBegin(RECOM_WXUSER_FIELD_DESC);
        oprot.writeDouble(struct.recomWxuser);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeDouble(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBerecomWxuserId()) {
        oprot.writeFieldBegin(BERECOM_WXUSER_ID_FIELD_DESC);
        oprot.writeDouble(struct.berecomWxuserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAwardConfigId()) {
        oprot.writeFieldBegin(AWARD_CONFIG_ID_FIELD_DESC);
        oprot.writeDouble(struct.awardConfigId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEmployeePointsRecordDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeePointsRecordDOTupleScheme getScheme() {
      return new UserEmployeePointsRecordDOTupleScheme();
    }
  }

  private static class UserEmployeePointsRecordDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserEmployeePointsRecordDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetEmployeeId()) {
        optionals.set(1);
      }
      if (struct.isSetReason()) {
        optionals.set(2);
      }
      if (struct.isSetAward()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetApplicationId()) {
        optionals.set(5);
      }
      if (struct.isSetRecomWxuser()) {
        optionals.set(6);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(7);
      }
      if (struct.isSetPositionId()) {
        optionals.set(8);
      }
      if (struct.isSetBerecomWxuserId()) {
        optionals.set(9);
      }
      if (struct.isSetAwardConfigId()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetEmployeeId()) {
        oprot.writeDouble(struct.employeeId);
      }
      if (struct.isSetReason()) {
        oprot.writeString(struct.reason);
      }
      if (struct.isSetAward()) {
        oprot.writeI32(struct.award);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetApplicationId()) {
        oprot.writeDouble(struct.applicationId);
      }
      if (struct.isSetRecomWxuser()) {
        oprot.writeDouble(struct.recomWxuser);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetPositionId()) {
        oprot.writeDouble(struct.positionId);
      }
      if (struct.isSetBerecomWxuserId()) {
        oprot.writeDouble(struct.berecomWxuserId);
      }
      if (struct.isSetAwardConfigId()) {
        oprot.writeDouble(struct.awardConfigId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEmployeePointsRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employeeId = iprot.readDouble();
        struct.setEmployeeIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.reason = iprot.readString();
        struct.setReasonIsSet(true);
      }
      if (incoming.get(3)) {
        struct.award = iprot.readI32();
        struct.setAwardIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.applicationId = iprot.readDouble();
        struct.setApplicationIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.recomWxuser = iprot.readDouble();
        struct.setRecomWxuserIsSet(true);
      }
      if (incoming.get(7)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.positionId = iprot.readDouble();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.berecomWxuserId = iprot.readDouble();
        struct.setBerecomWxuserIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.awardConfigId = iprot.readDouble();
        struct.setAwardConfigIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

