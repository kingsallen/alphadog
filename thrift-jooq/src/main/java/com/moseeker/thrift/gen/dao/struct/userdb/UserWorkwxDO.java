/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.userdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-08-08")
public class UserWorkwxDO implements org.apache.thrift.TBase<UserWorkwxDO, UserWorkwxDO._Fields>, java.io.Serializable, Cloneable, Comparable<UserWorkwxDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserWorkwxDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField SYSUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sysuserId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField WORK_WECHAT_CORPID_FIELD_DESC = new org.apache.thrift.protocol.TField("workWechatCorpid", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField WORK_WECHAT_USERID_FIELD_DESC = new org.apache.thrift.protocol.TField("workWechatUserid", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField HEADIMG_FIELD_DESC = new org.apache.thrift.protocol.TField("headimg", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("department_names", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("gender", org.apache.thrift.protocol.TType.BYTE, (short)15);
  private static final org.apache.thrift.protocol.TField TELEPHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("telephone", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("enable", org.apache.thrift.protocol.TType.BYTE, (short)18);
  private static final org.apache.thrift.protocol.TField EXTATTR_FIELD_DESC = new org.apache.thrift.protocol.TField("extattr", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)20);
  private static final org.apache.thrift.protocol.TField EXTERNAL_PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("external_profile", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField EXTERNAL_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("external_position", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField IS_DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("isDisable", org.apache.thrift.protocol.TType.BYTE, (short)23);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)25);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserWorkwxDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserWorkwxDOTupleSchemeFactory();

  public int id; // optional
  public int companyId; // optional
  public int sysuserId; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String workWechatCorpid; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String workWechatUserid; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String name; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String headimg; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String mobile; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String email; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String department; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String department_names; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String position; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String address; // optional
  public byte gender; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String telephone; // optional
  public byte enable; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String extattr; // optional
  public byte status; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String external_profile; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String external_position; // optional
  public byte isDisable; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String createTime; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "companyId"),
    SYSUSER_ID((short)3, "sysuserId"),
    WORK_WECHAT_CORPID((short)4, "workWechatCorpid"),
    WORK_WECHAT_USERID((short)5, "workWechatUserid"),
    NAME((short)6, "name"),
    HEADIMG((short)7, "headimg"),
    MOBILE((short)8, "mobile"),
    EMAIL((short)9, "email"),
    DEPARTMENT((short)10, "department"),
    DEPARTMENT_NAMES((short)11, "department_names"),
    POSITION((short)12, "position"),
    ADDRESS((short)14, "address"),
    GENDER((short)15, "gender"),
    TELEPHONE((short)17, "telephone"),
    ENABLE((short)18, "enable"),
    EXTATTR((short)19, "extattr"),
    STATUS((short)20, "status"),
    EXTERNAL_PROFILE((short)21, "external_profile"),
    EXTERNAL_POSITION((short)22, "external_position"),
    IS_DISABLE((short)23, "isDisable"),
    CREATE_TIME((short)24, "createTime"),
    UPDATE_TIME((short)25, "updateTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // SYSUSER_ID
          return SYSUSER_ID;
        case 4: // WORK_WECHAT_CORPID
          return WORK_WECHAT_CORPID;
        case 5: // WORK_WECHAT_USERID
          return WORK_WECHAT_USERID;
        case 6: // NAME
          return NAME;
        case 7: // HEADIMG
          return HEADIMG;
        case 8: // MOBILE
          return MOBILE;
        case 9: // EMAIL
          return EMAIL;
        case 10: // DEPARTMENT
          return DEPARTMENT;
        case 11: // DEPARTMENT_NAMES
          return DEPARTMENT_NAMES;
        case 12: // POSITION
          return POSITION;
        case 14: // ADDRESS
          return ADDRESS;
        case 15: // GENDER
          return GENDER;
        case 17: // TELEPHONE
          return TELEPHONE;
        case 18: // ENABLE
          return ENABLE;
        case 19: // EXTATTR
          return EXTATTR;
        case 20: // STATUS
          return STATUS;
        case 21: // EXTERNAL_PROFILE
          return EXTERNAL_PROFILE;
        case 22: // EXTERNAL_POSITION
          return EXTERNAL_POSITION;
        case 23: // IS_DISABLE
          return IS_DISABLE;
        case 24: // CREATE_TIME
          return CREATE_TIME;
        case 25: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __SYSUSERID_ISSET_ID = 2;
  private static final int __GENDER_ISSET_ID = 3;
  private static final int __ENABLE_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __ISDISABLE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.SYSUSER_ID,_Fields.WORK_WECHAT_CORPID,_Fields.WORK_WECHAT_USERID,_Fields.NAME,_Fields.HEADIMG,_Fields.MOBILE,_Fields.EMAIL,_Fields.DEPARTMENT,_Fields.DEPARTMENT_NAMES,_Fields.POSITION,_Fields.ADDRESS,_Fields.GENDER,_Fields.TELEPHONE,_Fields.ENABLE,_Fields.EXTATTR,_Fields.STATUS,_Fields.EXTERNAL_PROFILE,_Fields.EXTERNAL_POSITION,_Fields.IS_DISABLE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SYSUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("sysuserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORK_WECHAT_CORPID, new org.apache.thrift.meta_data.FieldMetaData("workWechatCorpid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORK_WECHAT_USERID, new org.apache.thrift.meta_data.FieldMetaData("workWechatUserid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HEADIMG, new org.apache.thrift.meta_data.FieldMetaData("headimg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT_NAMES, new org.apache.thrift.meta_data.FieldMetaData("department_names", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GENDER, new org.apache.thrift.meta_data.FieldMetaData("gender", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TELEPHONE, new org.apache.thrift.meta_data.FieldMetaData("telephone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENABLE, new org.apache.thrift.meta_data.FieldMetaData("enable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.EXTATTR, new org.apache.thrift.meta_data.FieldMetaData("extattr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.EXTERNAL_PROFILE, new org.apache.thrift.meta_data.FieldMetaData("external_profile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTERNAL_POSITION, new org.apache.thrift.meta_data.FieldMetaData("external_position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DISABLE, new org.apache.thrift.meta_data.FieldMetaData("isDisable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserWorkwxDO.class, metaDataMap);
  }

  public UserWorkwxDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserWorkwxDO(UserWorkwxDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.companyId = other.companyId;
    this.sysuserId = other.sysuserId;
    if (other.isSetWorkWechatCorpid()) {
      this.workWechatCorpid = other.workWechatCorpid;
    }
    if (other.isSetWorkWechatUserid()) {
      this.workWechatUserid = other.workWechatUserid;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetHeadimg()) {
      this.headimg = other.headimg;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    if (other.isSetDepartment_names()) {
      this.department_names = other.department_names;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.gender = other.gender;
    if (other.isSetTelephone()) {
      this.telephone = other.telephone;
    }
    this.enable = other.enable;
    if (other.isSetExtattr()) {
      this.extattr = other.extattr;
    }
    this.status = other.status;
    if (other.isSetExternal_profile()) {
      this.external_profile = other.external_profile;
    }
    if (other.isSetExternal_position()) {
      this.external_position = other.external_position;
    }
    this.isDisable = other.isDisable;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public UserWorkwxDO deepCopy() {
    return new UserWorkwxDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setSysuserIdIsSet(false);
    this.sysuserId = 0;
    this.workWechatCorpid = null;
    this.workWechatUserid = null;
    this.name = null;
    this.headimg = null;
    this.mobile = null;
    this.email = null;
    this.department = null;
    this.department_names = null;
    this.position = null;
    this.address = null;
    setGenderIsSet(false);
    this.gender = 0;
    this.telephone = null;
    setEnableIsSet(false);
    this.enable = 0;
    this.extattr = null;
    setStatusIsSet(false);
    this.status = 0;
    this.external_profile = null;
    this.external_position = null;
    setIsDisableIsSet(false);
    this.isDisable = 0;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public UserWorkwxDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public UserWorkwxDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getSysuserId() {
    return this.sysuserId;
  }

  public UserWorkwxDO setSysuserId(int sysuserId) {
    this.sysuserId = sysuserId;
    setSysuserIdIsSet(true);
    return this;
  }

  public void unsetSysuserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  /** Returns true if field sysuserId is set (has been assigned a value) and false otherwise */
  public boolean isSetSysuserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYSUSERID_ISSET_ID);
  }

  public void setSysuserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYSUSERID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getWorkWechatCorpid() {
    return this.workWechatCorpid;
  }

  public UserWorkwxDO setWorkWechatCorpid(@org.apache.thrift.annotation.Nullable java.lang.String workWechatCorpid) {
    this.workWechatCorpid = workWechatCorpid;
    return this;
  }

  public void unsetWorkWechatCorpid() {
    this.workWechatCorpid = null;
  }

  /** Returns true if field workWechatCorpid is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkWechatCorpid() {
    return this.workWechatCorpid != null;
  }

  public void setWorkWechatCorpidIsSet(boolean value) {
    if (!value) {
      this.workWechatCorpid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getWorkWechatUserid() {
    return this.workWechatUserid;
  }

  public UserWorkwxDO setWorkWechatUserid(@org.apache.thrift.annotation.Nullable java.lang.String workWechatUserid) {
    this.workWechatUserid = workWechatUserid;
    return this;
  }

  public void unsetWorkWechatUserid() {
    this.workWechatUserid = null;
  }

  /** Returns true if field workWechatUserid is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkWechatUserid() {
    return this.workWechatUserid != null;
  }

  public void setWorkWechatUseridIsSet(boolean value) {
    if (!value) {
      this.workWechatUserid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public UserWorkwxDO setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getHeadimg() {
    return this.headimg;
  }

  public UserWorkwxDO setHeadimg(@org.apache.thrift.annotation.Nullable java.lang.String headimg) {
    this.headimg = headimg;
    return this;
  }

  public void unsetHeadimg() {
    this.headimg = null;
  }

  /** Returns true if field headimg is set (has been assigned a value) and false otherwise */
  public boolean isSetHeadimg() {
    return this.headimg != null;
  }

  public void setHeadimgIsSet(boolean value) {
    if (!value) {
      this.headimg = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMobile() {
    return this.mobile;
  }

  public UserWorkwxDO setMobile(@org.apache.thrift.annotation.Nullable java.lang.String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEmail() {
    return this.email;
  }

  public UserWorkwxDO setEmail(@org.apache.thrift.annotation.Nullable java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDepartment() {
    return this.department;
  }

  public UserWorkwxDO setDepartment(@org.apache.thrift.annotation.Nullable java.lang.String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDepartment_names() {
    return this.department_names;
  }

  public UserWorkwxDO setDepartment_names(@org.apache.thrift.annotation.Nullable java.lang.String department_names) {
    this.department_names = department_names;
    return this;
  }

  public void unsetDepartment_names() {
    this.department_names = null;
  }

  /** Returns true if field department_names is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment_names() {
    return this.department_names != null;
  }

  public void setDepartment_namesIsSet(boolean value) {
    if (!value) {
      this.department_names = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPosition() {
    return this.position;
  }

  public UserWorkwxDO setPosition(@org.apache.thrift.annotation.Nullable java.lang.String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAddress() {
    return this.address;
  }

  public UserWorkwxDO setAddress(@org.apache.thrift.annotation.Nullable java.lang.String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public byte getGender() {
    return this.gender;
  }

  public UserWorkwxDO setGender(byte gender) {
    this.gender = gender;
    setGenderIsSet(true);
    return this;
  }

  public void unsetGender() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  /** Returns true if field gender is set (has been assigned a value) and false otherwise */
  public boolean isSetGender() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  public void setGenderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GENDER_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTelephone() {
    return this.telephone;
  }

  public UserWorkwxDO setTelephone(@org.apache.thrift.annotation.Nullable java.lang.String telephone) {
    this.telephone = telephone;
    return this;
  }

  public void unsetTelephone() {
    this.telephone = null;
  }

  /** Returns true if field telephone is set (has been assigned a value) and false otherwise */
  public boolean isSetTelephone() {
    return this.telephone != null;
  }

  public void setTelephoneIsSet(boolean value) {
    if (!value) {
      this.telephone = null;
    }
  }

  public byte getEnable() {
    return this.enable;
  }

  public UserWorkwxDO setEnable(byte enable) {
    this.enable = enable;
    setEnableIsSet(true);
    return this;
  }

  public void unsetEnable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENABLE_ISSET_ID);
  }

  /** Returns true if field enable is set (has been assigned a value) and false otherwise */
  public boolean isSetEnable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENABLE_ISSET_ID);
  }

  public void setEnableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENABLE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExtattr() {
    return this.extattr;
  }

  public UserWorkwxDO setExtattr(@org.apache.thrift.annotation.Nullable java.lang.String extattr) {
    this.extattr = extattr;
    return this;
  }

  public void unsetExtattr() {
    this.extattr = null;
  }

  /** Returns true if field extattr is set (has been assigned a value) and false otherwise */
  public boolean isSetExtattr() {
    return this.extattr != null;
  }

  public void setExtattrIsSet(boolean value) {
    if (!value) {
      this.extattr = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public UserWorkwxDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExternal_profile() {
    return this.external_profile;
  }

  public UserWorkwxDO setExternal_profile(@org.apache.thrift.annotation.Nullable java.lang.String external_profile) {
    this.external_profile = external_profile;
    return this;
  }

  public void unsetExternal_profile() {
    this.external_profile = null;
  }

  /** Returns true if field external_profile is set (has been assigned a value) and false otherwise */
  public boolean isSetExternal_profile() {
    return this.external_profile != null;
  }

  public void setExternal_profileIsSet(boolean value) {
    if (!value) {
      this.external_profile = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExternal_position() {
    return this.external_position;
  }

  public UserWorkwxDO setExternal_position(@org.apache.thrift.annotation.Nullable java.lang.String external_position) {
    this.external_position = external_position;
    return this;
  }

  public void unsetExternal_position() {
    this.external_position = null;
  }

  /** Returns true if field external_position is set (has been assigned a value) and false otherwise */
  public boolean isSetExternal_position() {
    return this.external_position != null;
  }

  public void setExternal_positionIsSet(boolean value) {
    if (!value) {
      this.external_position = null;
    }
  }

  public byte getIsDisable() {
    return this.isDisable;
  }

  public UserWorkwxDO setIsDisable(byte isDisable) {
    this.isDisable = isDisable;
    setIsDisableIsSet(true);
    return this;
  }

  public void unsetIsDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISDISABLE_ISSET_ID);
  }

  /** Returns true if field isDisable is set (has been assigned a value) and false otherwise */
  public boolean isSetIsDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISDISABLE_ISSET_ID);
  }

  public void setIsDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISDISABLE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public UserWorkwxDO setCreateTime(@org.apache.thrift.annotation.Nullable java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public UserWorkwxDO setUpdateTime(@org.apache.thrift.annotation.Nullable java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case SYSUSER_ID:
      if (value == null) {
        unsetSysuserId();
      } else {
        setSysuserId((java.lang.Integer)value);
      }
      break;

    case WORK_WECHAT_CORPID:
      if (value == null) {
        unsetWorkWechatCorpid();
      } else {
        setWorkWechatCorpid((java.lang.String)value);
      }
      break;

    case WORK_WECHAT_USERID:
      if (value == null) {
        unsetWorkWechatUserid();
      } else {
        setWorkWechatUserid((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case HEADIMG:
      if (value == null) {
        unsetHeadimg();
      } else {
        setHeadimg((java.lang.String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((java.lang.String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((java.lang.String)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((java.lang.String)value);
      }
      break;

    case DEPARTMENT_NAMES:
      if (value == null) {
        unsetDepartment_names();
      } else {
        setDepartment_names((java.lang.String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((java.lang.String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.lang.String)value);
      }
      break;

    case GENDER:
      if (value == null) {
        unsetGender();
      } else {
        setGender((java.lang.Byte)value);
      }
      break;

    case TELEPHONE:
      if (value == null) {
        unsetTelephone();
      } else {
        setTelephone((java.lang.String)value);
      }
      break;

    case ENABLE:
      if (value == null) {
        unsetEnable();
      } else {
        setEnable((java.lang.Byte)value);
      }
      break;

    case EXTATTR:
      if (value == null) {
        unsetExtattr();
      } else {
        setExtattr((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Byte)value);
      }
      break;

    case EXTERNAL_PROFILE:
      if (value == null) {
        unsetExternal_profile();
      } else {
        setExternal_profile((java.lang.String)value);
      }
      break;

    case EXTERNAL_POSITION:
      if (value == null) {
        unsetExternal_position();
      } else {
        setExternal_position((java.lang.String)value);
      }
      break;

    case IS_DISABLE:
      if (value == null) {
        unsetIsDisable();
      } else {
        setIsDisable((java.lang.Byte)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompanyId();

    case SYSUSER_ID:
      return getSysuserId();

    case WORK_WECHAT_CORPID:
      return getWorkWechatCorpid();

    case WORK_WECHAT_USERID:
      return getWorkWechatUserid();

    case NAME:
      return getName();

    case HEADIMG:
      return getHeadimg();

    case MOBILE:
      return getMobile();

    case EMAIL:
      return getEmail();

    case DEPARTMENT:
      return getDepartment();

    case DEPARTMENT_NAMES:
      return getDepartment_names();

    case POSITION:
      return getPosition();

    case ADDRESS:
      return getAddress();

    case GENDER:
      return getGender();

    case TELEPHONE:
      return getTelephone();

    case ENABLE:
      return getEnable();

    case EXTATTR:
      return getExtattr();

    case STATUS:
      return getStatus();

    case EXTERNAL_PROFILE:
      return getExternal_profile();

    case EXTERNAL_POSITION:
      return getExternal_position();

    case IS_DISABLE:
      return getIsDisable();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompanyId();
    case SYSUSER_ID:
      return isSetSysuserId();
    case WORK_WECHAT_CORPID:
      return isSetWorkWechatCorpid();
    case WORK_WECHAT_USERID:
      return isSetWorkWechatUserid();
    case NAME:
      return isSetName();
    case HEADIMG:
      return isSetHeadimg();
    case MOBILE:
      return isSetMobile();
    case EMAIL:
      return isSetEmail();
    case DEPARTMENT:
      return isSetDepartment();
    case DEPARTMENT_NAMES:
      return isSetDepartment_names();
    case POSITION:
      return isSetPosition();
    case ADDRESS:
      return isSetAddress();
    case GENDER:
      return isSetGender();
    case TELEPHONE:
      return isSetTelephone();
    case ENABLE:
      return isSetEnable();
    case EXTATTR:
      return isSetExtattr();
    case STATUS:
      return isSetStatus();
    case EXTERNAL_PROFILE:
      return isSetExternal_profile();
    case EXTERNAL_POSITION:
      return isSetExternal_position();
    case IS_DISABLE:
      return isSetIsDisable();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserWorkwxDO)
      return this.equals((UserWorkwxDO)that);
    return false;
  }

  public boolean equals(UserWorkwxDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_sysuserId = true && this.isSetSysuserId();
    boolean that_present_sysuserId = true && that.isSetSysuserId();
    if (this_present_sysuserId || that_present_sysuserId) {
      if (!(this_present_sysuserId && that_present_sysuserId))
        return false;
      if (this.sysuserId != that.sysuserId)
        return false;
    }

    boolean this_present_workWechatCorpid = true && this.isSetWorkWechatCorpid();
    boolean that_present_workWechatCorpid = true && that.isSetWorkWechatCorpid();
    if (this_present_workWechatCorpid || that_present_workWechatCorpid) {
      if (!(this_present_workWechatCorpid && that_present_workWechatCorpid))
        return false;
      if (!this.workWechatCorpid.equals(that.workWechatCorpid))
        return false;
    }

    boolean this_present_workWechatUserid = true && this.isSetWorkWechatUserid();
    boolean that_present_workWechatUserid = true && that.isSetWorkWechatUserid();
    if (this_present_workWechatUserid || that_present_workWechatUserid) {
      if (!(this_present_workWechatUserid && that_present_workWechatUserid))
        return false;
      if (!this.workWechatUserid.equals(that.workWechatUserid))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_headimg = true && this.isSetHeadimg();
    boolean that_present_headimg = true && that.isSetHeadimg();
    if (this_present_headimg || that_present_headimg) {
      if (!(this_present_headimg && that_present_headimg))
        return false;
      if (!this.headimg.equals(that.headimg))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_department_names = true && this.isSetDepartment_names();
    boolean that_present_department_names = true && that.isSetDepartment_names();
    if (this_present_department_names || that_present_department_names) {
      if (!(this_present_department_names && that_present_department_names))
        return false;
      if (!this.department_names.equals(that.department_names))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_gender = true && this.isSetGender();
    boolean that_present_gender = true && that.isSetGender();
    if (this_present_gender || that_present_gender) {
      if (!(this_present_gender && that_present_gender))
        return false;
      if (this.gender != that.gender)
        return false;
    }

    boolean this_present_telephone = true && this.isSetTelephone();
    boolean that_present_telephone = true && that.isSetTelephone();
    if (this_present_telephone || that_present_telephone) {
      if (!(this_present_telephone && that_present_telephone))
        return false;
      if (!this.telephone.equals(that.telephone))
        return false;
    }

    boolean this_present_enable = true && this.isSetEnable();
    boolean that_present_enable = true && that.isSetEnable();
    if (this_present_enable || that_present_enable) {
      if (!(this_present_enable && that_present_enable))
        return false;
      if (this.enable != that.enable)
        return false;
    }

    boolean this_present_extattr = true && this.isSetExtattr();
    boolean that_present_extattr = true && that.isSetExtattr();
    if (this_present_extattr || that_present_extattr) {
      if (!(this_present_extattr && that_present_extattr))
        return false;
      if (!this.extattr.equals(that.extattr))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_external_profile = true && this.isSetExternal_profile();
    boolean that_present_external_profile = true && that.isSetExternal_profile();
    if (this_present_external_profile || that_present_external_profile) {
      if (!(this_present_external_profile && that_present_external_profile))
        return false;
      if (!this.external_profile.equals(that.external_profile))
        return false;
    }

    boolean this_present_external_position = true && this.isSetExternal_position();
    boolean that_present_external_position = true && that.isSetExternal_position();
    if (this_present_external_position || that_present_external_position) {
      if (!(this_present_external_position && that_present_external_position))
        return false;
      if (!this.external_position.equals(that.external_position))
        return false;
    }

    boolean this_present_isDisable = true && this.isSetIsDisable();
    boolean that_present_isDisable = true && that.isSetIsDisable();
    if (this_present_isDisable || that_present_isDisable) {
      if (!(this_present_isDisable && that_present_isDisable))
        return false;
      if (this.isDisable != that.isDisable)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetSysuserId()) ? 131071 : 524287);
    if (isSetSysuserId())
      hashCode = hashCode * 8191 + sysuserId;

    hashCode = hashCode * 8191 + ((isSetWorkWechatCorpid()) ? 131071 : 524287);
    if (isSetWorkWechatCorpid())
      hashCode = hashCode * 8191 + workWechatCorpid.hashCode();

    hashCode = hashCode * 8191 + ((isSetWorkWechatUserid()) ? 131071 : 524287);
    if (isSetWorkWechatUserid())
      hashCode = hashCode * 8191 + workWechatUserid.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetHeadimg()) ? 131071 : 524287);
    if (isSetHeadimg())
      hashCode = hashCode * 8191 + headimg.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment_names()) ? 131071 : 524287);
    if (isSetDepartment_names())
      hashCode = hashCode * 8191 + department_names.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetGender()) ? 131071 : 524287);
    if (isSetGender())
      hashCode = hashCode * 8191 + (int) (gender);

    hashCode = hashCode * 8191 + ((isSetTelephone()) ? 131071 : 524287);
    if (isSetTelephone())
      hashCode = hashCode * 8191 + telephone.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnable()) ? 131071 : 524287);
    if (isSetEnable())
      hashCode = hashCode * 8191 + (int) (enable);

    hashCode = hashCode * 8191 + ((isSetExtattr()) ? 131071 : 524287);
    if (isSetExtattr())
      hashCode = hashCode * 8191 + extattr.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetExternal_profile()) ? 131071 : 524287);
    if (isSetExternal_profile())
      hashCode = hashCode * 8191 + external_profile.hashCode();

    hashCode = hashCode * 8191 + ((isSetExternal_position()) ? 131071 : 524287);
    if (isSetExternal_position())
      hashCode = hashCode * 8191 + external_position.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsDisable()) ? 131071 : 524287);
    if (isSetIsDisable())
      hashCode = hashCode * 8191 + (int) (isDisable);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UserWorkwxDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSysuserId()).compareTo(other.isSetSysuserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysuserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysuserId, other.sysuserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWorkWechatCorpid()).compareTo(other.isSetWorkWechatCorpid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkWechatCorpid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workWechatCorpid, other.workWechatCorpid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWorkWechatUserid()).compareTo(other.isSetWorkWechatUserid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkWechatUserid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workWechatUserid, other.workWechatUserid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHeadimg()).compareTo(other.isSetHeadimg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeadimg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headimg, other.headimg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment_names()).compareTo(other.isSetDepartment_names());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment_names()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department_names, other.department_names);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGender()).compareTo(other.isSetGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gender, other.gender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTelephone()).compareTo(other.isSetTelephone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelephone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telephone, other.telephone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnable()).compareTo(other.isSetEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enable, other.enable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExtattr()).compareTo(other.isSetExtattr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtattr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extattr, other.extattr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExternal_profile()).compareTo(other.isSetExternal_profile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternal_profile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.external_profile, other.external_profile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExternal_position()).compareTo(other.isSetExternal_position());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternal_position()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.external_position, other.external_position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsDisable()).compareTo(other.isSetIsDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDisable, other.isDisable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserWorkwxDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetSysuserId()) {
      if (!first) sb.append(", ");
      sb.append("sysuserId:");
      sb.append(this.sysuserId);
      first = false;
    }
    if (isSetWorkWechatCorpid()) {
      if (!first) sb.append(", ");
      sb.append("workWechatCorpid:");
      if (this.workWechatCorpid == null) {
        sb.append("null");
      } else {
        sb.append(this.workWechatCorpid);
      }
      first = false;
    }
    if (isSetWorkWechatUserid()) {
      if (!first) sb.append(", ");
      sb.append("workWechatUserid:");
      if (this.workWechatUserid == null) {
        sb.append("null");
      } else {
        sb.append(this.workWechatUserid);
      }
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetHeadimg()) {
      if (!first) sb.append(", ");
      sb.append("headimg:");
      if (this.headimg == null) {
        sb.append("null");
      } else {
        sb.append(this.headimg);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetDepartment()) {
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
    }
    if (isSetDepartment_names()) {
      if (!first) sb.append(", ");
      sb.append("department_names:");
      if (this.department_names == null) {
        sb.append("null");
      } else {
        sb.append(this.department_names);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetGender()) {
      if (!first) sb.append(", ");
      sb.append("gender:");
      sb.append(this.gender);
      first = false;
    }
    if (isSetTelephone()) {
      if (!first) sb.append(", ");
      sb.append("telephone:");
      if (this.telephone == null) {
        sb.append("null");
      } else {
        sb.append(this.telephone);
      }
      first = false;
    }
    if (isSetEnable()) {
      if (!first) sb.append(", ");
      sb.append("enable:");
      sb.append(this.enable);
      first = false;
    }
    if (isSetExtattr()) {
      if (!first) sb.append(", ");
      sb.append("extattr:");
      if (this.extattr == null) {
        sb.append("null");
      } else {
        sb.append(this.extattr);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetExternal_profile()) {
      if (!first) sb.append(", ");
      sb.append("external_profile:");
      if (this.external_profile == null) {
        sb.append("null");
      } else {
        sb.append(this.external_profile);
      }
      first = false;
    }
    if (isSetExternal_position()) {
      if (!first) sb.append(", ");
      sb.append("external_position:");
      if (this.external_position == null) {
        sb.append("null");
      } else {
        sb.append(this.external_position);
      }
      first = false;
    }
    if (isSetIsDisable()) {
      if (!first) sb.append(", ");
      sb.append("isDisable:");
      sb.append(this.isDisable);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserWorkwxDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserWorkwxDOStandardScheme getScheme() {
      return new UserWorkwxDOStandardScheme();
    }
  }

  private static class UserWorkwxDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserWorkwxDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserWorkwxDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SYSUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sysuserId = iprot.readI32();
              struct.setSysuserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WORK_WECHAT_CORPID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workWechatCorpid = iprot.readString();
              struct.setWorkWechatCorpidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WORK_WECHAT_USERID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workWechatUserid = iprot.readString();
              struct.setWorkWechatUseridIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // HEADIMG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.headimg = iprot.readString();
              struct.setHeadimgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DEPARTMENT_NAMES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department_names = iprot.readString();
              struct.setDepartment_namesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.gender = iprot.readByte();
              struct.setGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // TELEPHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telephone = iprot.readString();
              struct.setTelephoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.enable = iprot.readByte();
              struct.setEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // EXTATTR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extattr = iprot.readString();
              struct.setExtattrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // EXTERNAL_PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.external_profile = iprot.readString();
              struct.setExternal_profileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // EXTERNAL_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.external_position = iprot.readString();
              struct.setExternal_positionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // IS_DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.isDisable = iprot.readByte();
              struct.setIsDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserWorkwxDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSysuserId()) {
        oprot.writeFieldBegin(SYSUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.sysuserId);
        oprot.writeFieldEnd();
      }
      if (struct.workWechatCorpid != null) {
        if (struct.isSetWorkWechatCorpid()) {
          oprot.writeFieldBegin(WORK_WECHAT_CORPID_FIELD_DESC);
          oprot.writeString(struct.workWechatCorpid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.workWechatUserid != null) {
        if (struct.isSetWorkWechatUserid()) {
          oprot.writeFieldBegin(WORK_WECHAT_USERID_FIELD_DESC);
          oprot.writeString(struct.workWechatUserid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.headimg != null) {
        if (struct.isSetHeadimg()) {
          oprot.writeFieldBegin(HEADIMG_FIELD_DESC);
          oprot.writeString(struct.headimg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.department != null) {
        if (struct.isSetDepartment()) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          oprot.writeString(struct.department);
          oprot.writeFieldEnd();
        }
      }
      if (struct.department_names != null) {
        if (struct.isSetDepartment_names()) {
          oprot.writeFieldBegin(DEPARTMENT_NAMES_FIELD_DESC);
          oprot.writeString(struct.department_names);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetGender()) {
        oprot.writeFieldBegin(GENDER_FIELD_DESC);
        oprot.writeByte(struct.gender);
        oprot.writeFieldEnd();
      }
      if (struct.telephone != null) {
        if (struct.isSetTelephone()) {
          oprot.writeFieldBegin(TELEPHONE_FIELD_DESC);
          oprot.writeString(struct.telephone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEnable()) {
        oprot.writeFieldBegin(ENABLE_FIELD_DESC);
        oprot.writeByte(struct.enable);
        oprot.writeFieldEnd();
      }
      if (struct.extattr != null) {
        if (struct.isSetExtattr()) {
          oprot.writeFieldBegin(EXTATTR_FIELD_DESC);
          oprot.writeString(struct.extattr);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.external_profile != null) {
        if (struct.isSetExternal_profile()) {
          oprot.writeFieldBegin(EXTERNAL_PROFILE_FIELD_DESC);
          oprot.writeString(struct.external_profile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.external_position != null) {
        if (struct.isSetExternal_position()) {
          oprot.writeFieldBegin(EXTERNAL_POSITION_FIELD_DESC);
          oprot.writeString(struct.external_position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsDisable()) {
        oprot.writeFieldBegin(IS_DISABLE_FIELD_DESC);
        oprot.writeByte(struct.isDisable);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserWorkwxDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserWorkwxDOTupleScheme getScheme() {
      return new UserWorkwxDOTupleScheme();
    }
  }

  private static class UserWorkwxDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserWorkwxDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserWorkwxDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(1);
      }
      if (struct.isSetSysuserId()) {
        optionals.set(2);
      }
      if (struct.isSetWorkWechatCorpid()) {
        optionals.set(3);
      }
      if (struct.isSetWorkWechatUserid()) {
        optionals.set(4);
      }
      if (struct.isSetName()) {
        optionals.set(5);
      }
      if (struct.isSetHeadimg()) {
        optionals.set(6);
      }
      if (struct.isSetMobile()) {
        optionals.set(7);
      }
      if (struct.isSetEmail()) {
        optionals.set(8);
      }
      if (struct.isSetDepartment()) {
        optionals.set(9);
      }
      if (struct.isSetDepartment_names()) {
        optionals.set(10);
      }
      if (struct.isSetPosition()) {
        optionals.set(11);
      }
      if (struct.isSetAddress()) {
        optionals.set(12);
      }
      if (struct.isSetGender()) {
        optionals.set(13);
      }
      if (struct.isSetTelephone()) {
        optionals.set(14);
      }
      if (struct.isSetEnable()) {
        optionals.set(15);
      }
      if (struct.isSetExtattr()) {
        optionals.set(16);
      }
      if (struct.isSetStatus()) {
        optionals.set(17);
      }
      if (struct.isSetExternal_profile()) {
        optionals.set(18);
      }
      if (struct.isSetExternal_position()) {
        optionals.set(19);
      }
      if (struct.isSetIsDisable()) {
        optionals.set(20);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(21);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(22);
      }
      oprot.writeBitSet(optionals, 23);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetSysuserId()) {
        oprot.writeI32(struct.sysuserId);
      }
      if (struct.isSetWorkWechatCorpid()) {
        oprot.writeString(struct.workWechatCorpid);
      }
      if (struct.isSetWorkWechatUserid()) {
        oprot.writeString(struct.workWechatUserid);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetHeadimg()) {
        oprot.writeString(struct.headimg);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetDepartment_names()) {
        oprot.writeString(struct.department_names);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetGender()) {
        oprot.writeByte(struct.gender);
      }
      if (struct.isSetTelephone()) {
        oprot.writeString(struct.telephone);
      }
      if (struct.isSetEnable()) {
        oprot.writeByte(struct.enable);
      }
      if (struct.isSetExtattr()) {
        oprot.writeString(struct.extattr);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetExternal_profile()) {
        oprot.writeString(struct.external_profile);
      }
      if (struct.isSetExternal_position()) {
        oprot.writeString(struct.external_position);
      }
      if (struct.isSetIsDisable()) {
        oprot.writeByte(struct.isDisable);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserWorkwxDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(23);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.sysuserId = iprot.readI32();
        struct.setSysuserIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.workWechatCorpid = iprot.readString();
        struct.setWorkWechatCorpidIsSet(true);
      }
      if (incoming.get(4)) {
        struct.workWechatUserid = iprot.readString();
        struct.setWorkWechatUseridIsSet(true);
      }
      if (incoming.get(5)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.headimg = iprot.readString();
        struct.setHeadimgIsSet(true);
      }
      if (incoming.get(7)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(8)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(9)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(10)) {
        struct.department_names = iprot.readString();
        struct.setDepartment_namesIsSet(true);
      }
      if (incoming.get(11)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(12)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(13)) {
        struct.gender = iprot.readByte();
        struct.setGenderIsSet(true);
      }
      if (incoming.get(14)) {
        struct.telephone = iprot.readString();
        struct.setTelephoneIsSet(true);
      }
      if (incoming.get(15)) {
        struct.enable = iprot.readByte();
        struct.setEnableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.extattr = iprot.readString();
        struct.setExtattrIsSet(true);
      }
      if (incoming.get(17)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(18)) {
        struct.external_profile = iprot.readString();
        struct.setExternal_profileIsSet(true);
      }
      if (incoming.get(19)) {
        struct.external_position = iprot.readString();
        struct.setExternal_positionIsSet(true);
      }
      if (incoming.get(20)) {
        struct.isDisable = iprot.readByte();
        struct.setIsDisableIsSet(true);
      }
      if (incoming.get(21)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

