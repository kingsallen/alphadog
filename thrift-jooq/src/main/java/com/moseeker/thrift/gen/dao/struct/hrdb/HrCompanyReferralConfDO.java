/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-07-17")
public class HrCompanyReferralConfDO implements org.apache.thrift.TBase<HrCompanyReferralConfDO, HrCompanyReferralConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrCompanyReferralConfDO> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrCompanyReferralConfDO");

    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField LINK_FIELD_DESC = new org.apache.thrift.protocol.TField("link", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("text", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.BYTE, (short)5);
    private static final org.apache.thrift.protocol.TField TEXT_UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("textUpdateTime", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)8);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrCompanyReferralConfDOStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrCompanyReferralConfDOTupleSchemeFactory();

    public int id; // optional
    public int companyId; // optional
    public java.lang.String link; // optional
    public java.lang.String text; // optional
    public byte priority; // optional
    public java.lang.String textUpdateTime; // optional
    public java.lang.String createTime; // optional
    public java.lang.String updateTime; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        ID((short)1, "id"),
        COMPANY_ID((short)2, "companyId"),
        LINK((short)3, "link"),
        TEXT((short)4, "text"),
        PRIORITY((short)5, "priority"),
        TEXT_UPDATE_TIME((short)6, "textUpdateTime"),
        CREATE_TIME((short)7, "createTime"),
        UPDATE_TIME((short)8, "updateTime");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // ID
                    return ID;
                case 2: // COMPANY_ID
                    return COMPANY_ID;
                case 3: // LINK
                    return LINK;
                case 4: // TEXT
                    return TEXT;
                case 5: // PRIORITY
                    return PRIORITY;
                case 6: // TEXT_UPDATE_TIME
                    return TEXT_UPDATE_TIME;
                case 7: // CREATE_TIME
                    return CREATE_TIME;
                case 8: // UPDATE_TIME
                    return UPDATE_TIME;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private static final int __COMPANYID_ISSET_ID = 1;
    private static final int __PRIORITY_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.LINK,_Fields.TEXT,_Fields.PRIORITY,_Fields.TEXT_UPDATE_TIME,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.LINK, new org.apache.thrift.meta_data.FieldMetaData("link", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.TEXT, new org.apache.thrift.meta_data.FieldMetaData("text", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("priority", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
        tmpMap.put(_Fields.TEXT_UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("textUpdateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrCompanyReferralConfDO.class, metaDataMap);
    }

    public HrCompanyReferralConfDO() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public HrCompanyReferralConfDO(HrCompanyReferralConfDO other) {
        __isset_bitfield = other.__isset_bitfield;
        this.id = other.id;
        this.companyId = other.companyId;
        if (other.isSetLink()) {
            this.link = other.link;
        }
        if (other.isSetText()) {
            this.text = other.text;
        }
        this.priority = other.priority;
        if (other.isSetTextUpdateTime()) {
            this.textUpdateTime = other.textUpdateTime;
        }
        if (other.isSetCreateTime()) {
            this.createTime = other.createTime;
        }
        if (other.isSetUpdateTime()) {
            this.updateTime = other.updateTime;
        }
    }

    public HrCompanyReferralConfDO deepCopy() {
        return new HrCompanyReferralConfDO(this);
    }

    @Override
    public void clear() {
        setIdIsSet(false);
        this.id = 0;
        setCompanyIdIsSet(false);
        this.companyId = 0;
        this.link = null;
        this.text = null;
        setPriorityIsSet(false);
        this.priority = 0;
        this.textUpdateTime = null;
        this.createTime = null;
        this.updateTime = null;
    }

    public int getId() {
        return this.id;
    }

    public HrCompanyReferralConfDO setId(int id) {
        this.id = id;
        setIdIsSet(true);
        return this;
    }

    public void unsetId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public int getCompanyId() {
        return this.companyId;
    }

    public HrCompanyReferralConfDO setCompanyId(int companyId) {
        this.companyId = companyId;
        setCompanyIdIsSet(true);
        return this;
    }

    public void unsetCompanyId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public java.lang.String getLink() {
        return this.link;
    }

    public HrCompanyReferralConfDO setLink(java.lang.String link) {
        this.link = link;
        return this;
    }

    public void unsetLink() {
        this.link = null;
    }

    /** Returns true if field link is set (has been assigned a value) and false otherwise */
    public boolean isSetLink() {
        return this.link != null;
    }

    public void setLinkIsSet(boolean value) {
        if (!value) {
            this.link = null;
        }
    }

    public java.lang.String getText() {
        return this.text;
    }

    public HrCompanyReferralConfDO setText(java.lang.String text) {
        this.text = text;
        return this;
    }

    public void unsetText() {
        this.text = null;
    }

    /** Returns true if field text is set (has been assigned a value) and false otherwise */
    public boolean isSetText() {
        return this.text != null;
    }

    public void setTextIsSet(boolean value) {
        if (!value) {
            this.text = null;
        }
    }

    public byte getPriority() {
        return this.priority;
    }

    public HrCompanyReferralConfDO setPriority(byte priority) {
        this.priority = priority;
        setPriorityIsSet(true);
        return this;
    }

    public void unsetPriority() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRIORITY_ISSET_ID);
    }

    /** Returns true if field priority is set (has been assigned a value) and false otherwise */
    public boolean isSetPriority() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRIORITY_ISSET_ID);
    }

    public void setPriorityIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRIORITY_ISSET_ID, value);
    }

    public java.lang.String getTextUpdateTime() {
        return this.textUpdateTime;
    }

    public HrCompanyReferralConfDO setTextUpdateTime(java.lang.String textUpdateTime) {
        this.textUpdateTime = textUpdateTime;
        return this;
    }

    public void unsetTextUpdateTime() {
        this.textUpdateTime = null;
    }

    /** Returns true if field textUpdateTime is set (has been assigned a value) and false otherwise */
    public boolean isSetTextUpdateTime() {
        return this.textUpdateTime != null;
    }

    public void setTextUpdateTimeIsSet(boolean value) {
        if (!value) {
            this.textUpdateTime = null;
        }
    }

    public java.lang.String getCreateTime() {
        return this.createTime;
    }

    public HrCompanyReferralConfDO setCreateTime(java.lang.String createTime) {
        this.createTime = createTime;
        return this;
    }

    public void unsetCreateTime() {
        this.createTime = null;
    }

    /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
    public boolean isSetCreateTime() {
        return this.createTime != null;
    }

    public void setCreateTimeIsSet(boolean value) {
        if (!value) {
            this.createTime = null;
        }
    }

    public java.lang.String getUpdateTime() {
        return this.updateTime;
    }

    public HrCompanyReferralConfDO setUpdateTime(java.lang.String updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    public void unsetUpdateTime() {
        this.updateTime = null;
    }

    /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
    public boolean isSetUpdateTime() {
        return this.updateTime != null;
    }

    public void setUpdateTimeIsSet(boolean value) {
        if (!value) {
            this.updateTime = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case ID:
                if (value == null) {
                    unsetId();
                } else {
                    setId((java.lang.Integer)value);
                }
                break;

            case COMPANY_ID:
                if (value == null) {
                    unsetCompanyId();
                } else {
                    setCompanyId((java.lang.Integer)value);
                }
                break;

            case LINK:
                if (value == null) {
                    unsetLink();
                } else {
                    setLink((java.lang.String)value);
                }
                break;

            case TEXT:
                if (value == null) {
                    unsetText();
                } else {
                    setText((java.lang.String)value);
                }
                break;

            case PRIORITY:
                if (value == null) {
                    unsetPriority();
                } else {
                    setPriority((java.lang.Byte)value);
                }
                break;

            case TEXT_UPDATE_TIME:
                if (value == null) {
                    unsetTextUpdateTime();
                } else {
                    setTextUpdateTime((java.lang.String)value);
                }
                break;

            case CREATE_TIME:
                if (value == null) {
                    unsetCreateTime();
                } else {
                    setCreateTime((java.lang.String)value);
                }
                break;

            case UPDATE_TIME:
                if (value == null) {
                    unsetUpdateTime();
                } else {
                    setUpdateTime((java.lang.String)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case ID:
                return getId();

            case COMPANY_ID:
                return getCompanyId();

            case LINK:
                return getLink();

            case TEXT:
                return getText();

            case PRIORITY:
                return getPriority();

            case TEXT_UPDATE_TIME:
                return getTextUpdateTime();

            case CREATE_TIME:
                return getCreateTime();

            case UPDATE_TIME:
                return getUpdateTime();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case ID:
                return isSetId();
            case COMPANY_ID:
                return isSetCompanyId();
            case LINK:
                return isSetLink();
            case TEXT:
                return isSetText();
            case PRIORITY:
                return isSetPriority();
            case TEXT_UPDATE_TIME:
                return isSetTextUpdateTime();
            case CREATE_TIME:
                return isSetCreateTime();
            case UPDATE_TIME:
                return isSetUpdateTime();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof HrCompanyReferralConfDO)
            return this.equals((HrCompanyReferralConfDO)that);
        return false;
    }

    public boolean equals(HrCompanyReferralConfDO that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_id = true && this.isSetId();
        boolean that_present_id = true && that.isSetId();
        if (this_present_id || that_present_id) {
            if (!(this_present_id && that_present_id))
                return false;
            if (this.id != that.id)
                return false;
        }

        boolean this_present_companyId = true && this.isSetCompanyId();
        boolean that_present_companyId = true && that.isSetCompanyId();
        if (this_present_companyId || that_present_companyId) {
            if (!(this_present_companyId && that_present_companyId))
                return false;
            if (this.companyId != that.companyId)
                return false;
        }

        boolean this_present_link = true && this.isSetLink();
        boolean that_present_link = true && that.isSetLink();
        if (this_present_link || that_present_link) {
            if (!(this_present_link && that_present_link))
                return false;
            if (!this.link.equals(that.link))
                return false;
        }

        boolean this_present_text = true && this.isSetText();
        boolean that_present_text = true && that.isSetText();
        if (this_present_text || that_present_text) {
            if (!(this_present_text && that_present_text))
                return false;
            if (!this.text.equals(that.text))
                return false;
        }

        boolean this_present_priority = true && this.isSetPriority();
        boolean that_present_priority = true && that.isSetPriority();
        if (this_present_priority || that_present_priority) {
            if (!(this_present_priority && that_present_priority))
                return false;
            if (this.priority != that.priority)
                return false;
        }

        boolean this_present_textUpdateTime = true && this.isSetTextUpdateTime();
        boolean that_present_textUpdateTime = true && that.isSetTextUpdateTime();
        if (this_present_textUpdateTime || that_present_textUpdateTime) {
            if (!(this_present_textUpdateTime && that_present_textUpdateTime))
                return false;
            if (!this.textUpdateTime.equals(that.textUpdateTime))
                return false;
        }

        boolean this_present_createTime = true && this.isSetCreateTime();
        boolean that_present_createTime = true && that.isSetCreateTime();
        if (this_present_createTime || that_present_createTime) {
            if (!(this_present_createTime && that_present_createTime))
                return false;
            if (!this.createTime.equals(that.createTime))
                return false;
        }

        boolean this_present_updateTime = true && this.isSetUpdateTime();
        boolean that_present_updateTime = true && that.isSetUpdateTime();
        if (this_present_updateTime || that_present_updateTime) {
            if (!(this_present_updateTime && that_present_updateTime))
                return false;
            if (!this.updateTime.equals(that.updateTime))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
        if (isSetId())
            hashCode = hashCode * 8191 + id;

        hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
        if (isSetCompanyId())
            hashCode = hashCode * 8191 + companyId;

        hashCode = hashCode * 8191 + ((isSetLink()) ? 131071 : 524287);
        if (isSetLink())
            hashCode = hashCode * 8191 + link.hashCode();

        hashCode = hashCode * 8191 + ((isSetText()) ? 131071 : 524287);
        if (isSetText())
            hashCode = hashCode * 8191 + text.hashCode();

        hashCode = hashCode * 8191 + ((isSetPriority()) ? 131071 : 524287);
        if (isSetPriority())
            hashCode = hashCode * 8191 + (int) (priority);

        hashCode = hashCode * 8191 + ((isSetTextUpdateTime()) ? 131071 : 524287);
        if (isSetTextUpdateTime())
            hashCode = hashCode * 8191 + textUpdateTime.hashCode();

        hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
        if (isSetCreateTime())
            hashCode = hashCode * 8191 + createTime.hashCode();

        hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
        if (isSetUpdateTime())
            hashCode = hashCode * 8191 + updateTime.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(HrCompanyReferralConfDO other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompanyId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetLink()).compareTo(other.isSetLink());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetLink()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.link, other.link);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetText()).compareTo(other.isSetText());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetText()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.text, other.text);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetPriority()).compareTo(other.isSetPriority());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPriority()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priority, other.priority);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetTextUpdateTime()).compareTo(other.isSetTextUpdateTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetTextUpdateTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.textUpdateTime, other.textUpdateTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCreateTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUpdateTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("HrCompanyReferralConfDO(");
        boolean first = true;

        if (isSetId()) {
            sb.append("id:");
            sb.append(this.id);
            first = false;
        }
        if (isSetCompanyId()) {
            if (!first) sb.append(", ");
            sb.append("companyId:");
            sb.append(this.companyId);
            first = false;
        }
        if (isSetLink()) {
            if (!first) sb.append(", ");
            sb.append("link:");
            if (this.link == null) {
                sb.append("null");
            } else {
                sb.append(this.link);
            }
            first = false;
        }
        if (isSetText()) {
            if (!first) sb.append(", ");
            sb.append("text:");
            if (this.text == null) {
                sb.append("null");
            } else {
                sb.append(this.text);
            }
            first = false;
        }
        if (isSetPriority()) {
            if (!first) sb.append(", ");
            sb.append("priority:");
            sb.append(this.priority);
            first = false;
        }
        if (isSetTextUpdateTime()) {
            if (!first) sb.append(", ");
            sb.append("textUpdateTime:");
            if (this.textUpdateTime == null) {
                sb.append("null");
            } else {
                sb.append(this.textUpdateTime);
            }
            first = false;
        }
        if (isSetCreateTime()) {
            if (!first) sb.append(", ");
            sb.append("createTime:");
            if (this.createTime == null) {
                sb.append("null");
            } else {
                sb.append(this.createTime);
            }
            first = false;
        }
        if (isSetUpdateTime()) {
            if (!first) sb.append(", ");
            sb.append("updateTime:");
            if (this.updateTime == null) {
                sb.append("null");
            } else {
                sb.append(this.updateTime);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class HrCompanyReferralConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HrCompanyReferralConfDOStandardScheme getScheme() {
            return new HrCompanyReferralConfDOStandardScheme();
        }
    }

    private static class HrCompanyReferralConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrCompanyReferralConfDO> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, HrCompanyReferralConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.id = iprot.readI32();
                            struct.setIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // COMPANY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.companyId = iprot.readI32();
                            struct.setCompanyIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // LINK
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.link = iprot.readString();
                            struct.setLinkIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // TEXT
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.text = iprot.readString();
                            struct.setTextIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // PRIORITY
                        if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
                            struct.priority = iprot.readByte();
                            struct.setPriorityIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // TEXT_UPDATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.textUpdateTime = iprot.readString();
                            struct.setTextUpdateTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // CREATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.createTime = iprot.readString();
                            struct.setCreateTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // UPDATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.updateTime = iprot.readString();
                            struct.setUpdateTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, HrCompanyReferralConfDO struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetId()) {
                oprot.writeFieldBegin(ID_FIELD_DESC);
                oprot.writeI32(struct.id);
                oprot.writeFieldEnd();
            }
            if (struct.isSetCompanyId()) {
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.companyId);
                oprot.writeFieldEnd();
            }
            if (struct.link != null) {
                if (struct.isSetLink()) {
                    oprot.writeFieldBegin(LINK_FIELD_DESC);
                    oprot.writeString(struct.link);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.text != null) {
                if (struct.isSetText()) {
                    oprot.writeFieldBegin(TEXT_FIELD_DESC);
                    oprot.writeString(struct.text);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetPriority()) {
                oprot.writeFieldBegin(PRIORITY_FIELD_DESC);
                oprot.writeByte(struct.priority);
                oprot.writeFieldEnd();
            }
            if (struct.textUpdateTime != null) {
                if (struct.isSetTextUpdateTime()) {
                    oprot.writeFieldBegin(TEXT_UPDATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.textUpdateTime);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.createTime != null) {
                if (struct.isSetCreateTime()) {
                    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.createTime);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.updateTime != null) {
                if (struct.isSetUpdateTime()) {
                    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.updateTime);
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class HrCompanyReferralConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HrCompanyReferralConfDOTupleScheme getScheme() {
            return new HrCompanyReferralConfDOTupleScheme();
        }
    }

    private static class HrCompanyReferralConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrCompanyReferralConfDO> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, HrCompanyReferralConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetId()) {
                optionals.set(0);
            }
            if (struct.isSetCompanyId()) {
                optionals.set(1);
            }
            if (struct.isSetLink()) {
                optionals.set(2);
            }
            if (struct.isSetText()) {
                optionals.set(3);
            }
            if (struct.isSetPriority()) {
                optionals.set(4);
            }
            if (struct.isSetTextUpdateTime()) {
                optionals.set(5);
            }
            if (struct.isSetCreateTime()) {
                optionals.set(6);
            }
            if (struct.isSetUpdateTime()) {
                optionals.set(7);
            }
            oprot.writeBitSet(optionals, 8);
            if (struct.isSetId()) {
                oprot.writeI32(struct.id);
            }
            if (struct.isSetCompanyId()) {
                oprot.writeI32(struct.companyId);
            }
            if (struct.isSetLink()) {
                oprot.writeString(struct.link);
            }
            if (struct.isSetText()) {
                oprot.writeString(struct.text);
            }
            if (struct.isSetPriority()) {
                oprot.writeByte(struct.priority);
            }
            if (struct.isSetTextUpdateTime()) {
                oprot.writeString(struct.textUpdateTime);
            }
            if (struct.isSetCreateTime()) {
                oprot.writeString(struct.createTime);
            }
            if (struct.isSetUpdateTime()) {
                oprot.writeString(struct.updateTime);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, HrCompanyReferralConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(8);
            if (incoming.get(0)) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
            }
            if (incoming.get(2)) {
                struct.link = iprot.readString();
                struct.setLinkIsSet(true);
            }
            if (incoming.get(3)) {
                struct.text = iprot.readString();
                struct.setTextIsSet(true);
            }
            if (incoming.get(4)) {
                struct.priority = iprot.readByte();
                struct.setPriorityIsSet(true);
            }
            if (incoming.get(5)) {
                struct.textUpdateTime = iprot.readString();
                struct.setTextUpdateTimeIsSet(true);
            }
            if (incoming.get(6)) {
                struct.createTime = iprot.readString();
                struct.setCreateTimeIsSet(true);
            }
            if (incoming.get(7)) {
                struct.updateTime = iprot.readString();
                struct.setUpdateTimeIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

