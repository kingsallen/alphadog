/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-10")
public class HrEmployeeCertConfDO implements org.apache.thrift.TBase<HrEmployeeCertConfDO, HrEmployeeCertConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrEmployeeCertConfDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrEmployeeCertConfDO");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField IS_STRICT_FIELD_DESC = new org.apache.thrift.protocol.TField("is_strict", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField EMAIL_SUFFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("email_suffix", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BD_ADD_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("bd_add_group", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField BD_USE_GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bd_use_group_id", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField AUTH_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auth_mode", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField AUTH_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("auth_code", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField QUESTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("questions", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CUSTOM_HINT_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_hint", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrEmployeeCertConfDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrEmployeeCertConfDOTupleSchemeFactory();

  public int company_id; // optional
  public int is_strict; // optional
  public java.lang.String email_suffix; // optional
  public java.lang.String create_time; // optional
  public java.lang.String update_time; // optional
  public int disable; // optional
  public int bd_add_group; // optional
  public int bd_use_group_id; // optional
  public int auth_mode; // optional
  public java.lang.String auth_code; // optional
  public java.lang.String custom; // optional
  public java.lang.String questions; // optional
  public java.lang.String custom_hint; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "company_id"),
    IS_STRICT((short)2, "is_strict"),
    EMAIL_SUFFIX((short)3, "email_suffix"),
    CREATE_TIME((short)4, "create_time"),
    UPDATE_TIME((short)5, "update_time"),
    DISABLE((short)6, "disable"),
    BD_ADD_GROUP((short)7, "bd_add_group"),
    BD_USE_GROUP_ID((short)8, "bd_use_group_id"),
    AUTH_MODE((short)9, "auth_mode"),
    AUTH_CODE((short)10, "auth_code"),
    CUSTOM((short)11, "custom"),
    QUESTIONS((short)12, "questions"),
    CUSTOM_HINT((short)13, "custom_hint");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // IS_STRICT
          return IS_STRICT;
        case 3: // EMAIL_SUFFIX
          return EMAIL_SUFFIX;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // UPDATE_TIME
          return UPDATE_TIME;
        case 6: // DISABLE
          return DISABLE;
        case 7: // BD_ADD_GROUP
          return BD_ADD_GROUP;
        case 8: // BD_USE_GROUP_ID
          return BD_USE_GROUP_ID;
        case 9: // AUTH_MODE
          return AUTH_MODE;
        case 10: // AUTH_CODE
          return AUTH_CODE;
        case 11: // CUSTOM
          return CUSTOM;
        case 12: // QUESTIONS
          return QUESTIONS;
        case 13: // CUSTOM_HINT
          return CUSTOM_HINT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANY_ID_ISSET_ID = 0;
  private static final int __IS_STRICT_ISSET_ID = 1;
  private static final int __DISABLE_ISSET_ID = 2;
  private static final int __BD_ADD_GROUP_ISSET_ID = 3;
  private static final int __BD_USE_GROUP_ID_ISSET_ID = 4;
  private static final int __AUTH_MODE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.IS_STRICT,_Fields.EMAIL_SUFFIX,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.DISABLE,_Fields.BD_ADD_GROUP,_Fields.BD_USE_GROUP_ID,_Fields.AUTH_MODE,_Fields.AUTH_CODE,_Fields.CUSTOM,_Fields.QUESTIONS,_Fields.CUSTOM_HINT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_STRICT, new org.apache.thrift.meta_data.FieldMetaData("is_strict", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_SUFFIX, new org.apache.thrift.meta_data.FieldMetaData("email_suffix", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BD_ADD_GROUP, new org.apache.thrift.meta_data.FieldMetaData("bd_add_group", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BD_USE_GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("bd_use_group_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AUTH_MODE, new org.apache.thrift.meta_data.FieldMetaData("auth_mode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AUTH_CODE, new org.apache.thrift.meta_data.FieldMetaData("auth_code", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUESTIONS, new org.apache.thrift.meta_data.FieldMetaData("questions", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM_HINT, new org.apache.thrift.meta_data.FieldMetaData("custom_hint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrEmployeeCertConfDO.class, metaDataMap);
  }

  public HrEmployeeCertConfDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrEmployeeCertConfDO(HrEmployeeCertConfDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.company_id = other.company_id;
    this.is_strict = other.is_strict;
    if (other.isSetEmail_suffix()) {
      this.email_suffix = other.email_suffix;
    }
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    this.disable = other.disable;
    this.bd_add_group = other.bd_add_group;
    this.bd_use_group_id = other.bd_use_group_id;
    this.auth_mode = other.auth_mode;
    if (other.isSetAuth_code()) {
      this.auth_code = other.auth_code;
    }
    if (other.isSetCustom()) {
      this.custom = other.custom;
    }
    if (other.isSetQuestions()) {
      this.questions = other.questions;
    }
    if (other.isSetCustom_hint()) {
      this.custom_hint = other.custom_hint;
    }
  }

  public HrEmployeeCertConfDO deepCopy() {
    return new HrEmployeeCertConfDO(this);
  }

  @Override
  public void clear() {
    setCompany_idIsSet(false);
    this.company_id = 0;
    setIs_strictIsSet(false);
    this.is_strict = 0;
    this.email_suffix = null;
    this.create_time = null;
    this.update_time = null;
    setDisableIsSet(false);
    this.disable = 0;
    setBd_add_groupIsSet(false);
    this.bd_add_group = 0;
    setBd_use_group_idIsSet(false);
    this.bd_use_group_id = 0;
    setAuth_modeIsSet(false);
    this.auth_mode = 0;
    this.auth_code = null;
    this.custom = null;
    this.questions = null;
    this.custom_hint = null;
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public HrEmployeeCertConfDO setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getIs_strict() {
    return this.is_strict;
  }

  public HrEmployeeCertConfDO setIs_strict(int is_strict) {
    this.is_strict = is_strict;
    setIs_strictIsSet(true);
    return this;
  }

  public void unsetIs_strict() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_STRICT_ISSET_ID);
  }

  /** Returns true if field is_strict is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_strict() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_STRICT_ISSET_ID);
  }

  public void setIs_strictIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_STRICT_ISSET_ID, value);
  }

  public java.lang.String getEmail_suffix() {
    return this.email_suffix;
  }

  public HrEmployeeCertConfDO setEmail_suffix(java.lang.String email_suffix) {
    this.email_suffix = email_suffix;
    return this;
  }

  public void unsetEmail_suffix() {
    this.email_suffix = null;
  }

  /** Returns true if field email_suffix is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_suffix() {
    return this.email_suffix != null;
  }

  public void setEmail_suffixIsSet(boolean value) {
    if (!value) {
      this.email_suffix = null;
    }
  }

  public java.lang.String getCreate_time() {
    return this.create_time;
  }

  public HrEmployeeCertConfDO setCreate_time(java.lang.String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public java.lang.String getUpdate_time() {
    return this.update_time;
  }

  public HrEmployeeCertConfDO setUpdate_time(java.lang.String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public int getDisable() {
    return this.disable;
  }

  public HrEmployeeCertConfDO setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public int getBd_add_group() {
    return this.bd_add_group;
  }

  public HrEmployeeCertConfDO setBd_add_group(int bd_add_group) {
    this.bd_add_group = bd_add_group;
    setBd_add_groupIsSet(true);
    return this;
  }

  public void unsetBd_add_group() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BD_ADD_GROUP_ISSET_ID);
  }

  /** Returns true if field bd_add_group is set (has been assigned a value) and false otherwise */
  public boolean isSetBd_add_group() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BD_ADD_GROUP_ISSET_ID);
  }

  public void setBd_add_groupIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BD_ADD_GROUP_ISSET_ID, value);
  }

  public int getBd_use_group_id() {
    return this.bd_use_group_id;
  }

  public HrEmployeeCertConfDO setBd_use_group_id(int bd_use_group_id) {
    this.bd_use_group_id = bd_use_group_id;
    setBd_use_group_idIsSet(true);
    return this;
  }

  public void unsetBd_use_group_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BD_USE_GROUP_ID_ISSET_ID);
  }

  /** Returns true if field bd_use_group_id is set (has been assigned a value) and false otherwise */
  public boolean isSetBd_use_group_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BD_USE_GROUP_ID_ISSET_ID);
  }

  public void setBd_use_group_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BD_USE_GROUP_ID_ISSET_ID, value);
  }

  public int getAuth_mode() {
    return this.auth_mode;
  }

  public HrEmployeeCertConfDO setAuth_mode(int auth_mode) {
    this.auth_mode = auth_mode;
    setAuth_modeIsSet(true);
    return this;
  }

  public void unsetAuth_mode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTH_MODE_ISSET_ID);
  }

  /** Returns true if field auth_mode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuth_mode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTH_MODE_ISSET_ID);
  }

  public void setAuth_modeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTH_MODE_ISSET_ID, value);
  }

  public java.lang.String getAuth_code() {
    return this.auth_code;
  }

  public HrEmployeeCertConfDO setAuth_code(java.lang.String auth_code) {
    this.auth_code = auth_code;
    return this;
  }

  public void unsetAuth_code() {
    this.auth_code = null;
  }

  /** Returns true if field auth_code is set (has been assigned a value) and false otherwise */
  public boolean isSetAuth_code() {
    return this.auth_code != null;
  }

  public void setAuth_codeIsSet(boolean value) {
    if (!value) {
      this.auth_code = null;
    }
  }

  public java.lang.String getCustom() {
    return this.custom;
  }

  public HrEmployeeCertConfDO setCustom(java.lang.String custom) {
    this.custom = custom;
    return this;
  }

  public void unsetCustom() {
    this.custom = null;
  }

  /** Returns true if field custom is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom() {
    return this.custom != null;
  }

  public void setCustomIsSet(boolean value) {
    if (!value) {
      this.custom = null;
    }
  }

  public java.lang.String getQuestions() {
    return this.questions;
  }

  public HrEmployeeCertConfDO setQuestions(java.lang.String questions) {
    this.questions = questions;
    return this;
  }

  public void unsetQuestions() {
    this.questions = null;
  }

  /** Returns true if field questions is set (has been assigned a value) and false otherwise */
  public boolean isSetQuestions() {
    return this.questions != null;
  }

  public void setQuestionsIsSet(boolean value) {
    if (!value) {
      this.questions = null;
    }
  }

  public java.lang.String getCustom_hint() {
    return this.custom_hint;
  }

  public HrEmployeeCertConfDO setCustom_hint(java.lang.String custom_hint) {
    this.custom_hint = custom_hint;
    return this;
  }

  public void unsetCustom_hint() {
    this.custom_hint = null;
  }

  /** Returns true if field custom_hint is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_hint() {
    return this.custom_hint != null;
  }

  public void setCustom_hintIsSet(boolean value) {
    if (!value) {
      this.custom_hint = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case IS_STRICT:
      if (value == null) {
        unsetIs_strict();
      } else {
        setIs_strict((java.lang.Integer)value);
      }
      break;

    case EMAIL_SUFFIX:
      if (value == null) {
        unsetEmail_suffix();
      } else {
        setEmail_suffix((java.lang.String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((java.lang.String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((java.lang.Integer)value);
      }
      break;

    case BD_ADD_GROUP:
      if (value == null) {
        unsetBd_add_group();
      } else {
        setBd_add_group((java.lang.Integer)value);
      }
      break;

    case BD_USE_GROUP_ID:
      if (value == null) {
        unsetBd_use_group_id();
      } else {
        setBd_use_group_id((java.lang.Integer)value);
      }
      break;

    case AUTH_MODE:
      if (value == null) {
        unsetAuth_mode();
      } else {
        setAuth_mode((java.lang.Integer)value);
      }
      break;

    case AUTH_CODE:
      if (value == null) {
        unsetAuth_code();
      } else {
        setAuth_code((java.lang.String)value);
      }
      break;

    case CUSTOM:
      if (value == null) {
        unsetCustom();
      } else {
        setCustom((java.lang.String)value);
      }
      break;

    case QUESTIONS:
      if (value == null) {
        unsetQuestions();
      } else {
        setQuestions((java.lang.String)value);
      }
      break;

    case CUSTOM_HINT:
      if (value == null) {
        unsetCustom_hint();
      } else {
        setCustom_hint((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return getCompany_id();

    case IS_STRICT:
      return getIs_strict();

    case EMAIL_SUFFIX:
      return getEmail_suffix();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    case DISABLE:
      return getDisable();

    case BD_ADD_GROUP:
      return getBd_add_group();

    case BD_USE_GROUP_ID:
      return getBd_use_group_id();

    case AUTH_MODE:
      return getAuth_mode();

    case AUTH_CODE:
      return getAuth_code();

    case CUSTOM:
      return getCustom();

    case QUESTIONS:
      return getQuestions();

    case CUSTOM_HINT:
      return getCustom_hint();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompany_id();
    case IS_STRICT:
      return isSetIs_strict();
    case EMAIL_SUFFIX:
      return isSetEmail_suffix();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case DISABLE:
      return isSetDisable();
    case BD_ADD_GROUP:
      return isSetBd_add_group();
    case BD_USE_GROUP_ID:
      return isSetBd_use_group_id();
    case AUTH_MODE:
      return isSetAuth_mode();
    case AUTH_CODE:
      return isSetAuth_code();
    case CUSTOM:
      return isSetCustom();
    case QUESTIONS:
      return isSetQuestions();
    case CUSTOM_HINT:
      return isSetCustom_hint();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrEmployeeCertConfDO)
      return this.equals((HrEmployeeCertConfDO)that);
    return false;
  }

  public boolean equals(HrEmployeeCertConfDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_is_strict = true && this.isSetIs_strict();
    boolean that_present_is_strict = true && that.isSetIs_strict();
    if (this_present_is_strict || that_present_is_strict) {
      if (!(this_present_is_strict && that_present_is_strict))
        return false;
      if (this.is_strict != that.is_strict)
        return false;
    }

    boolean this_present_email_suffix = true && this.isSetEmail_suffix();
    boolean that_present_email_suffix = true && that.isSetEmail_suffix();
    if (this_present_email_suffix || that_present_email_suffix) {
      if (!(this_present_email_suffix && that_present_email_suffix))
        return false;
      if (!this.email_suffix.equals(that.email_suffix))
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_bd_add_group = true && this.isSetBd_add_group();
    boolean that_present_bd_add_group = true && that.isSetBd_add_group();
    if (this_present_bd_add_group || that_present_bd_add_group) {
      if (!(this_present_bd_add_group && that_present_bd_add_group))
        return false;
      if (this.bd_add_group != that.bd_add_group)
        return false;
    }

    boolean this_present_bd_use_group_id = true && this.isSetBd_use_group_id();
    boolean that_present_bd_use_group_id = true && that.isSetBd_use_group_id();
    if (this_present_bd_use_group_id || that_present_bd_use_group_id) {
      if (!(this_present_bd_use_group_id && that_present_bd_use_group_id))
        return false;
      if (this.bd_use_group_id != that.bd_use_group_id)
        return false;
    }

    boolean this_present_auth_mode = true && this.isSetAuth_mode();
    boolean that_present_auth_mode = true && that.isSetAuth_mode();
    if (this_present_auth_mode || that_present_auth_mode) {
      if (!(this_present_auth_mode && that_present_auth_mode))
        return false;
      if (this.auth_mode != that.auth_mode)
        return false;
    }

    boolean this_present_auth_code = true && this.isSetAuth_code();
    boolean that_present_auth_code = true && that.isSetAuth_code();
    if (this_present_auth_code || that_present_auth_code) {
      if (!(this_present_auth_code && that_present_auth_code))
        return false;
      if (!this.auth_code.equals(that.auth_code))
        return false;
    }

    boolean this_present_custom = true && this.isSetCustom();
    boolean that_present_custom = true && that.isSetCustom();
    if (this_present_custom || that_present_custom) {
      if (!(this_present_custom && that_present_custom))
        return false;
      if (!this.custom.equals(that.custom))
        return false;
    }

    boolean this_present_questions = true && this.isSetQuestions();
    boolean that_present_questions = true && that.isSetQuestions();
    if (this_present_questions || that_present_questions) {
      if (!(this_present_questions && that_present_questions))
        return false;
      if (!this.questions.equals(that.questions))
        return false;
    }

    boolean this_present_custom_hint = true && this.isSetCustom_hint();
    boolean that_present_custom_hint = true && that.isSetCustom_hint();
    if (this_present_custom_hint || that_present_custom_hint) {
      if (!(this_present_custom_hint && that_present_custom_hint))
        return false;
      if (!this.custom_hint.equals(that.custom_hint))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetIs_strict()) ? 131071 : 524287);
    if (isSetIs_strict())
      hashCode = hashCode * 8191 + is_strict;

    hashCode = hashCode * 8191 + ((isSetEmail_suffix()) ? 131071 : 524287);
    if (isSetEmail_suffix())
      hashCode = hashCode * 8191 + email_suffix.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetBd_add_group()) ? 131071 : 524287);
    if (isSetBd_add_group())
      hashCode = hashCode * 8191 + bd_add_group;

    hashCode = hashCode * 8191 + ((isSetBd_use_group_id()) ? 131071 : 524287);
    if (isSetBd_use_group_id())
      hashCode = hashCode * 8191 + bd_use_group_id;

    hashCode = hashCode * 8191 + ((isSetAuth_mode()) ? 131071 : 524287);
    if (isSetAuth_mode())
      hashCode = hashCode * 8191 + auth_mode;

    hashCode = hashCode * 8191 + ((isSetAuth_code()) ? 131071 : 524287);
    if (isSetAuth_code())
      hashCode = hashCode * 8191 + auth_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
    if (isSetCustom())
      hashCode = hashCode * 8191 + custom.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuestions()) ? 131071 : 524287);
    if (isSetQuestions())
      hashCode = hashCode * 8191 + questions.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustom_hint()) ? 131071 : 524287);
    if (isSetCustom_hint())
      hashCode = hashCode * 8191 + custom_hint.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrEmployeeCertConfDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_strict()).compareTo(other.isSetIs_strict());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_strict()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_strict, other.is_strict);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail_suffix()).compareTo(other.isSetEmail_suffix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_suffix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_suffix, other.email_suffix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBd_add_group()).compareTo(other.isSetBd_add_group());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBd_add_group()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bd_add_group, other.bd_add_group);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBd_use_group_id()).compareTo(other.isSetBd_use_group_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBd_use_group_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bd_use_group_id, other.bd_use_group_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuth_mode()).compareTo(other.isSetAuth_mode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuth_mode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auth_mode, other.auth_mode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuth_code()).compareTo(other.isSetAuth_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuth_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auth_code, other.auth_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetQuestions()).compareTo(other.isSetQuestions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuestions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.questions, other.questions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustom_hint()).compareTo(other.isSetCustom_hint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_hint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_hint, other.custom_hint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrEmployeeCertConfDO(");
    boolean first = true;

    if (isSetCompany_id()) {
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetIs_strict()) {
      if (!first) sb.append(", ");
      sb.append("is_strict:");
      sb.append(this.is_strict);
      first = false;
    }
    if (isSetEmail_suffix()) {
      if (!first) sb.append(", ");
      sb.append("email_suffix:");
      if (this.email_suffix == null) {
        sb.append("null");
      } else {
        sb.append(this.email_suffix);
      }
      first = false;
    }
    if (isSetCreate_time()) {
      if (!first) sb.append(", ");
      sb.append("create_time:");
      if (this.create_time == null) {
        sb.append("null");
      } else {
        sb.append(this.create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetBd_add_group()) {
      if (!first) sb.append(", ");
      sb.append("bd_add_group:");
      sb.append(this.bd_add_group);
      first = false;
    }
    if (isSetBd_use_group_id()) {
      if (!first) sb.append(", ");
      sb.append("bd_use_group_id:");
      sb.append(this.bd_use_group_id);
      first = false;
    }
    if (isSetAuth_mode()) {
      if (!first) sb.append(", ");
      sb.append("auth_mode:");
      sb.append(this.auth_mode);
      first = false;
    }
    if (isSetAuth_code()) {
      if (!first) sb.append(", ");
      sb.append("auth_code:");
      if (this.auth_code == null) {
        sb.append("null");
      } else {
        sb.append(this.auth_code);
      }
      first = false;
    }
    if (isSetCustom()) {
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
    }
    if (isSetQuestions()) {
      if (!first) sb.append(", ");
      sb.append("questions:");
      if (this.questions == null) {
        sb.append("null");
      } else {
        sb.append(this.questions);
      }
      first = false;
    }
    if (isSetCustom_hint()) {
      if (!first) sb.append(", ");
      sb.append("custom_hint:");
      if (this.custom_hint == null) {
        sb.append("null");
      } else {
        sb.append(this.custom_hint);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrEmployeeCertConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrEmployeeCertConfDOStandardScheme getScheme() {
      return new HrEmployeeCertConfDOStandardScheme();
    }
  }

  private static class HrEmployeeCertConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrEmployeeCertConfDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // IS_STRICT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_strict = iprot.readI32();
              struct.setIs_strictIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EMAIL_SUFFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email_suffix = iprot.readString();
              struct.setEmail_suffixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BD_ADD_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bd_add_group = iprot.readI32();
              struct.setBd_add_groupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BD_USE_GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bd_use_group_id = iprot.readI32();
              struct.setBd_use_group_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // AUTH_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.auth_mode = iprot.readI32();
              struct.setAuth_modeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AUTH_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auth_code = iprot.readString();
              struct.setAuth_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CUSTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom = iprot.readString();
              struct.setCustomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // QUESTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.questions = iprot.readString();
              struct.setQuestionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CUSTOM_HINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_hint = iprot.readString();
              struct.setCustom_hintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIs_strict()) {
        oprot.writeFieldBegin(IS_STRICT_FIELD_DESC);
        oprot.writeI32(struct.is_strict);
        oprot.writeFieldEnd();
      }
      if (struct.email_suffix != null) {
        if (struct.isSetEmail_suffix()) {
          oprot.writeFieldBegin(EMAIL_SUFFIX_FIELD_DESC);
          oprot.writeString(struct.email_suffix);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_time != null) {
        if (struct.isSetCreate_time()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBd_add_group()) {
        oprot.writeFieldBegin(BD_ADD_GROUP_FIELD_DESC);
        oprot.writeI32(struct.bd_add_group);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBd_use_group_id()) {
        oprot.writeFieldBegin(BD_USE_GROUP_ID_FIELD_DESC);
        oprot.writeI32(struct.bd_use_group_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAuth_mode()) {
        oprot.writeFieldBegin(AUTH_MODE_FIELD_DESC);
        oprot.writeI32(struct.auth_mode);
        oprot.writeFieldEnd();
      }
      if (struct.auth_code != null) {
        if (struct.isSetAuth_code()) {
          oprot.writeFieldBegin(AUTH_CODE_FIELD_DESC);
          oprot.writeString(struct.auth_code);
          oprot.writeFieldEnd();
        }
      }
      if (struct.custom != null) {
        if (struct.isSetCustom()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
      }
      if (struct.questions != null) {
        if (struct.isSetQuestions()) {
          oprot.writeFieldBegin(QUESTIONS_FIELD_DESC);
          oprot.writeString(struct.questions);
          oprot.writeFieldEnd();
        }
      }
      if (struct.custom_hint != null) {
        if (struct.isSetCustom_hint()) {
          oprot.writeFieldBegin(CUSTOM_HINT_FIELD_DESC);
          oprot.writeString(struct.custom_hint);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrEmployeeCertConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrEmployeeCertConfDOTupleScheme getScheme() {
      return new HrEmployeeCertConfDOTupleScheme();
    }
  }

  private static class HrEmployeeCertConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrEmployeeCertConfDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCompany_id()) {
        optionals.set(0);
      }
      if (struct.isSetIs_strict()) {
        optionals.set(1);
      }
      if (struct.isSetEmail_suffix()) {
        optionals.set(2);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(3);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(4);
      }
      if (struct.isSetDisable()) {
        optionals.set(5);
      }
      if (struct.isSetBd_add_group()) {
        optionals.set(6);
      }
      if (struct.isSetBd_use_group_id()) {
        optionals.set(7);
      }
      if (struct.isSetAuth_mode()) {
        optionals.set(8);
      }
      if (struct.isSetAuth_code()) {
        optionals.set(9);
      }
      if (struct.isSetCustom()) {
        optionals.set(10);
      }
      if (struct.isSetQuestions()) {
        optionals.set(11);
      }
      if (struct.isSetCustom_hint()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetIs_strict()) {
        oprot.writeI32(struct.is_strict);
      }
      if (struct.isSetEmail_suffix()) {
        oprot.writeString(struct.email_suffix);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetBd_add_group()) {
        oprot.writeI32(struct.bd_add_group);
      }
      if (struct.isSetBd_use_group_id()) {
        oprot.writeI32(struct.bd_use_group_id);
      }
      if (struct.isSetAuth_mode()) {
        oprot.writeI32(struct.auth_mode);
      }
      if (struct.isSetAuth_code()) {
        oprot.writeString(struct.auth_code);
      }
      if (struct.isSetCustom()) {
        oprot.writeString(struct.custom);
      }
      if (struct.isSetQuestions()) {
        oprot.writeString(struct.questions);
      }
      if (struct.isSetCustom_hint()) {
        oprot.writeString(struct.custom_hint);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.is_strict = iprot.readI32();
        struct.setIs_strictIsSet(true);
      }
      if (incoming.get(2)) {
        struct.email_suffix = iprot.readString();
        struct.setEmail_suffixIsSet(true);
      }
      if (incoming.get(3)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(6)) {
        struct.bd_add_group = iprot.readI32();
        struct.setBd_add_groupIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bd_use_group_id = iprot.readI32();
        struct.setBd_use_group_idIsSet(true);
      }
      if (incoming.get(8)) {
        struct.auth_mode = iprot.readI32();
        struct.setAuth_modeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.auth_code = iprot.readString();
        struct.setAuth_codeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.custom = iprot.readString();
        struct.setCustomIsSet(true);
      }
      if (incoming.get(11)) {
        struct.questions = iprot.readString();
        struct.setQuestionsIsSet(true);
      }
      if (incoming.get(12)) {
        struct.custom_hint = iprot.readString();
        struct.setCustom_hintIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

