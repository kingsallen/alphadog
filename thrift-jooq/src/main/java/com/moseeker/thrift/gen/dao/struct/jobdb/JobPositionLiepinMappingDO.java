/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.jobdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-06-25")
public class JobPositionLiepinMappingDO implements org.apache.thrift.TBase<JobPositionLiepinMappingDO, JobPositionLiepinMappingDO._Fields>, java.io.Serializable, Cloneable, Comparable<JobPositionLiepinMappingDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobPositionLiepinMappingDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LIEPIN_JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("liepinJobId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cityCode", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField JOB_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobTitle", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ERR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("errMsg", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.BYTE, (short)7);
  private static final org.apache.thrift.protocol.TField LIEPIN_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("liepinUserId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobPositionLiepinMappingDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobPositionLiepinMappingDOTupleSchemeFactory();

  public int id; // optional
  public int positionId; // optional
  public int liepinJobId; // optional
  public int cityCode; // optional
  public String jobTitle; // optional
  public String errMsg; // optional
  public byte state; // optional
  public int liepinUserId; // optional
  public String createTime; // optional
  public String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    POSITION_ID((short)2, "positionId"),
    LIEPIN_JOB_ID((short)3, "liepinJobId"),
    CITY_CODE((short)4, "cityCode"),
    JOB_TITLE((short)5, "jobTitle"),
    ERR_MSG((short)6, "errMsg"),
    STATE((short)7, "state"),
    LIEPIN_USER_ID((short)8, "liepinUserId"),
    CREATE_TIME((short)9, "createTime"),
    UPDATE_TIME((short)10, "updateTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // POSITION_ID
          return POSITION_ID;
        case 3: // LIEPIN_JOB_ID
          return LIEPIN_JOB_ID;
        case 4: // CITY_CODE
          return CITY_CODE;
        case 5: // JOB_TITLE
          return JOB_TITLE;
        case 6: // ERR_MSG
          return ERR_MSG;
        case 7: // STATE
          return STATE;
        case 8: // LIEPIN_USER_ID
          return LIEPIN_USER_ID;
        case 9: // CREATE_TIME
          return CREATE_TIME;
        case 10: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __POSITIONID_ISSET_ID = 1;
  private static final int __LIEPINJOBID_ISSET_ID = 2;
  private static final int __CITYCODE_ISSET_ID = 3;
  private static final int __STATE_ISSET_ID = 4;
  private static final int __LIEPINUSERID_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.POSITION_ID,_Fields.LIEPIN_JOB_ID,_Fields.CITY_CODE,_Fields.JOB_TITLE,_Fields.ERR_MSG,_Fields.STATE,_Fields.LIEPIN_USER_ID,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LIEPIN_JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("liepinJobId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("cityCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JOB_TITLE, new org.apache.thrift.meta_data.FieldMetaData("jobTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERR_MSG, new org.apache.thrift.meta_data.FieldMetaData("errMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.LIEPIN_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("liepinUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobPositionLiepinMappingDO.class, metaDataMap);
  }

  public JobPositionLiepinMappingDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobPositionLiepinMappingDO(JobPositionLiepinMappingDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.positionId = other.positionId;
    this.liepinJobId = other.liepinJobId;
    this.cityCode = other.cityCode;
    if (other.isSetJobTitle()) {
      this.jobTitle = other.jobTitle;
    }
    if (other.isSetErrMsg()) {
      this.errMsg = other.errMsg;
    }
    this.state = other.state;
    this.liepinUserId = other.liepinUserId;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public JobPositionLiepinMappingDO deepCopy() {
    return new JobPositionLiepinMappingDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setLiepinJobIdIsSet(false);
    this.liepinJobId = 0;
    setCityCodeIsSet(false);
    this.cityCode = 0;
    this.jobTitle = null;
    this.errMsg = null;
    setStateIsSet(false);
    this.state = 0;
    setLiepinUserIdIsSet(false);
    this.liepinUserId = 0;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public JobPositionLiepinMappingDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public JobPositionLiepinMappingDO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public int getLiepinJobId() {
    return this.liepinJobId;
  }

  public JobPositionLiepinMappingDO setLiepinJobId(int liepinJobId) {
    this.liepinJobId = liepinJobId;
    setLiepinJobIdIsSet(true);
    return this;
  }

  public void unsetLiepinJobId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LIEPINJOBID_ISSET_ID);
  }

  /** Returns true if field liepinJobId is set (has been assigned a value) and false otherwise */
  public boolean isSetLiepinJobId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LIEPINJOBID_ISSET_ID);
  }

  public void setLiepinJobIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LIEPINJOBID_ISSET_ID, value);
  }

  public int getCityCode() {
    return this.cityCode;
  }

  public JobPositionLiepinMappingDO setCityCode(int cityCode) {
    this.cityCode = cityCode;
    setCityCodeIsSet(true);
    return this;
  }

  public void unsetCityCode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CITYCODE_ISSET_ID);
  }

  /** Returns true if field cityCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCityCode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CITYCODE_ISSET_ID);
  }

  public void setCityCodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CITYCODE_ISSET_ID, value);
  }

  public String getJobTitle() {
    return this.jobTitle;
  }

  public JobPositionLiepinMappingDO setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

  public void unsetJobTitle() {
    this.jobTitle = null;
  }

  /** Returns true if field jobTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetJobTitle() {
    return this.jobTitle != null;
  }

  public void setJobTitleIsSet(boolean value) {
    if (!value) {
      this.jobTitle = null;
    }
  }

  public String getErrMsg() {
    return this.errMsg;
  }

  public JobPositionLiepinMappingDO setErrMsg(String errMsg) {
    this.errMsg = errMsg;
    return this;
  }

  public void unsetErrMsg() {
    this.errMsg = null;
  }

  /** Returns true if field errMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetErrMsg() {
    return this.errMsg != null;
  }

  public void setErrMsgIsSet(boolean value) {
    if (!value) {
      this.errMsg = null;
    }
  }

  public byte getState() {
    return this.state;
  }

  public JobPositionLiepinMappingDO setState(byte state) {
    this.state = state;
    setStateIsSet(true);
    return this;
  }

  public void unsetState() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATE_ISSET_ID);
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATE_ISSET_ID);
  }

  public void setStateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATE_ISSET_ID, value);
  }

  public int getLiepinUserId() {
    return this.liepinUserId;
  }

  public JobPositionLiepinMappingDO setLiepinUserId(int liepinUserId) {
    this.liepinUserId = liepinUserId;
    setLiepinUserIdIsSet(true);
    return this;
  }

  public void unsetLiepinUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LIEPINUSERID_ISSET_ID);
  }

  /** Returns true if field liepinUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetLiepinUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LIEPINUSERID_ISSET_ID);
  }

  public void setLiepinUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LIEPINUSERID_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public JobPositionLiepinMappingDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public JobPositionLiepinMappingDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((Integer)value);
      }
      break;

    case LIEPIN_JOB_ID:
      if (value == null) {
        unsetLiepinJobId();
      } else {
        setLiepinJobId((Integer)value);
      }
      break;

    case CITY_CODE:
      if (value == null) {
        unsetCityCode();
      } else {
        setCityCode((Integer)value);
      }
      break;

    case JOB_TITLE:
      if (value == null) {
        unsetJobTitle();
      } else {
        setJobTitle((String)value);
      }
      break;

    case ERR_MSG:
      if (value == null) {
        unsetErrMsg();
      } else {
        setErrMsg((String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((Byte)value);
      }
      break;

    case LIEPIN_USER_ID:
      if (value == null) {
        unsetLiepinUserId();
      } else {
        setLiepinUserId((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case POSITION_ID:
      return getPositionId();

    case LIEPIN_JOB_ID:
      return getLiepinJobId();

    case CITY_CODE:
      return getCityCode();

    case JOB_TITLE:
      return getJobTitle();

    case ERR_MSG:
      return getErrMsg();

    case STATE:
      return getState();

    case LIEPIN_USER_ID:
      return getLiepinUserId();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case POSITION_ID:
      return isSetPositionId();
    case LIEPIN_JOB_ID:
      return isSetLiepinJobId();
    case CITY_CODE:
      return isSetCityCode();
    case JOB_TITLE:
      return isSetJobTitle();
    case ERR_MSG:
      return isSetErrMsg();
    case STATE:
      return isSetState();
    case LIEPIN_USER_ID:
      return isSetLiepinUserId();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof JobPositionLiepinMappingDO)
      return this.equals((JobPositionLiepinMappingDO)that);
    return false;
  }

  public boolean equals(JobPositionLiepinMappingDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_liepinJobId = true && this.isSetLiepinJobId();
    boolean that_present_liepinJobId = true && that.isSetLiepinJobId();
    if (this_present_liepinJobId || that_present_liepinJobId) {
      if (!(this_present_liepinJobId && that_present_liepinJobId))
        return false;
      if (this.liepinJobId != that.liepinJobId)
        return false;
    }

    boolean this_present_cityCode = true && this.isSetCityCode();
    boolean that_present_cityCode = true && that.isSetCityCode();
    if (this_present_cityCode || that_present_cityCode) {
      if (!(this_present_cityCode && that_present_cityCode))
        return false;
      if (this.cityCode != that.cityCode)
        return false;
    }

    boolean this_present_jobTitle = true && this.isSetJobTitle();
    boolean that_present_jobTitle = true && that.isSetJobTitle();
    if (this_present_jobTitle || that_present_jobTitle) {
      if (!(this_present_jobTitle && that_present_jobTitle))
        return false;
      if (!this.jobTitle.equals(that.jobTitle))
        return false;
    }

    boolean this_present_errMsg = true && this.isSetErrMsg();
    boolean that_present_errMsg = true && that.isSetErrMsg();
    if (this_present_errMsg || that_present_errMsg) {
      if (!(this_present_errMsg && that_present_errMsg))
        return false;
      if (!this.errMsg.equals(that.errMsg))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (this.state != that.state)
        return false;
    }

    boolean this_present_liepinUserId = true && this.isSetLiepinUserId();
    boolean that_present_liepinUserId = true && that.isSetLiepinUserId();
    if (this_present_liepinUserId || that_present_liepinUserId) {
      if (!(this_present_liepinUserId && that_present_liepinUserId))
        return false;
      if (this.liepinUserId != that.liepinUserId)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetLiepinJobId()) ? 131071 : 524287);
    if (isSetLiepinJobId())
      hashCode = hashCode * 8191 + liepinJobId;

    hashCode = hashCode * 8191 + ((isSetCityCode()) ? 131071 : 524287);
    if (isSetCityCode())
      hashCode = hashCode * 8191 + cityCode;

    hashCode = hashCode * 8191 + ((isSetJobTitle()) ? 131071 : 524287);
    if (isSetJobTitle())
      hashCode = hashCode * 8191 + jobTitle.hashCode();

    hashCode = hashCode * 8191 + ((isSetErrMsg()) ? 131071 : 524287);
    if (isSetErrMsg())
      hashCode = hashCode * 8191 + errMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + (int) (state);

    hashCode = hashCode * 8191 + ((isSetLiepinUserId()) ? 131071 : 524287);
    if (isSetLiepinUserId())
      hashCode = hashCode * 8191 + liepinUserId;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(JobPositionLiepinMappingDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLiepinJobId()).compareTo(other.isSetLiepinJobId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLiepinJobId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.liepinJobId, other.liepinJobId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCityCode()).compareTo(other.isSetCityCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityCode, other.cityCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobTitle()).compareTo(other.isSetJobTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobTitle, other.jobTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErrMsg()).compareTo(other.isSetErrMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errMsg, other.errMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLiepinUserId()).compareTo(other.isSetLiepinUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLiepinUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.liepinUserId, other.liepinUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("JobPositionLiepinMappingDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetLiepinJobId()) {
      if (!first) sb.append(", ");
      sb.append("liepinJobId:");
      sb.append(this.liepinJobId);
      first = false;
    }
    if (isSetCityCode()) {
      if (!first) sb.append(", ");
      sb.append("cityCode:");
      sb.append(this.cityCode);
      first = false;
    }
    if (isSetJobTitle()) {
      if (!first) sb.append(", ");
      sb.append("jobTitle:");
      if (this.jobTitle == null) {
        sb.append("null");
      } else {
        sb.append(this.jobTitle);
      }
      first = false;
    }
    if (isSetErrMsg()) {
      if (!first) sb.append(", ");
      sb.append("errMsg:");
      if (this.errMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.errMsg);
      }
      first = false;
    }
    if (isSetState()) {
      if (!first) sb.append(", ");
      sb.append("state:");
      sb.append(this.state);
      first = false;
    }
    if (isSetLiepinUserId()) {
      if (!first) sb.append(", ");
      sb.append("liepinUserId:");
      sb.append(this.liepinUserId);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobPositionLiepinMappingDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobPositionLiepinMappingDOStandardScheme getScheme() {
      return new JobPositionLiepinMappingDOStandardScheme();
    }
  }

  private static class JobPositionLiepinMappingDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobPositionLiepinMappingDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobPositionLiepinMappingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LIEPIN_JOB_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.liepinJobId = iprot.readI32();
              struct.setLiepinJobIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CITY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cityCode = iprot.readI32();
              struct.setCityCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // JOB_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobTitle = iprot.readString();
              struct.setJobTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ERR_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errMsg = iprot.readString();
              struct.setErrMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.state = iprot.readByte();
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LIEPIN_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.liepinUserId = iprot.readI32();
              struct.setLiepinUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobPositionLiepinMappingDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLiepinJobId()) {
        oprot.writeFieldBegin(LIEPIN_JOB_ID_FIELD_DESC);
        oprot.writeI32(struct.liepinJobId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCityCode()) {
        oprot.writeFieldBegin(CITY_CODE_FIELD_DESC);
        oprot.writeI32(struct.cityCode);
        oprot.writeFieldEnd();
      }
      if (struct.jobTitle != null) {
        if (struct.isSetJobTitle()) {
          oprot.writeFieldBegin(JOB_TITLE_FIELD_DESC);
          oprot.writeString(struct.jobTitle);
          oprot.writeFieldEnd();
        }
      }
      if (struct.errMsg != null) {
        if (struct.isSetErrMsg()) {
          oprot.writeFieldBegin(ERR_MSG_FIELD_DESC);
          oprot.writeString(struct.errMsg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetState()) {
        oprot.writeFieldBegin(STATE_FIELD_DESC);
        oprot.writeByte(struct.state);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLiepinUserId()) {
        oprot.writeFieldBegin(LIEPIN_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.liepinUserId);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobPositionLiepinMappingDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobPositionLiepinMappingDOTupleScheme getScheme() {
      return new JobPositionLiepinMappingDOTupleScheme();
    }
  }

  private static class JobPositionLiepinMappingDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobPositionLiepinMappingDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobPositionLiepinMappingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPositionId()) {
        optionals.set(1);
      }
      if (struct.isSetLiepinJobId()) {
        optionals.set(2);
      }
      if (struct.isSetCityCode()) {
        optionals.set(3);
      }
      if (struct.isSetJobTitle()) {
        optionals.set(4);
      }
      if (struct.isSetErrMsg()) {
        optionals.set(5);
      }
      if (struct.isSetState()) {
        optionals.set(6);
      }
      if (struct.isSetLiepinUserId()) {
        optionals.set(7);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(8);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetLiepinJobId()) {
        oprot.writeI32(struct.liepinJobId);
      }
      if (struct.isSetCityCode()) {
        oprot.writeI32(struct.cityCode);
      }
      if (struct.isSetJobTitle()) {
        oprot.writeString(struct.jobTitle);
      }
      if (struct.isSetErrMsg()) {
        oprot.writeString(struct.errMsg);
      }
      if (struct.isSetState()) {
        oprot.writeByte(struct.state);
      }
      if (struct.isSetLiepinUserId()) {
        oprot.writeI32(struct.liepinUserId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobPositionLiepinMappingDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.liepinJobId = iprot.readI32();
        struct.setLiepinJobIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cityCode = iprot.readI32();
        struct.setCityCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.jobTitle = iprot.readString();
        struct.setJobTitleIsSet(true);
      }
      if (incoming.get(5)) {
        struct.errMsg = iprot.readString();
        struct.setErrMsgIsSet(true);
      }
      if (incoming.get(6)) {
        struct.state = iprot.readByte();
        struct.setStateIsSet(true);
      }
      if (incoming.get(7)) {
        struct.liepinUserId = iprot.readI32();
        struct.setLiepinUserIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

