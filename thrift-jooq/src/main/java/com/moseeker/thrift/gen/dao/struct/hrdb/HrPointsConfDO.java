/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-26")
public class HrPointsConfDO implements org.apache.thrift.TBase<HrPointsConfDO, HrPointsConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrPointsConfDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrPointsConfDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("statusName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField REWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("reward", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField IS_USING_FIELD_DESC = new org.apache.thrift.protocol.TField("isUsing", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("orderNum", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TAG_FIELD_DESC = new org.apache.thrift.protocol.TField("tag", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField IS_APPLIER_SEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isApplierSend", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField APPLIER_FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("applierFirst", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField APPLIER_REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("applierRemark", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField IS_RECOM_SEND_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecomSend", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField RECOM_FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("recomFirst", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField RECOM_REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("recomRemark", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("templateId", org.apache.thrift.protocol.TType.I32, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrPointsConfDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrPointsConfDOTupleSchemeFactory();

  public int id; // optional
  public int companyId; // optional
  public java.lang.String statusName; // optional
  public double reward; // optional
  public java.lang.String description; // optional
  public double isUsing; // optional
  public double orderNum; // optional
  public java.lang.String updateTime; // optional
  public java.lang.String tag; // optional
  public double isApplierSend; // optional
  public java.lang.String applierFirst; // optional
  public java.lang.String applierRemark; // optional
  public double isRecomSend; // optional
  public java.lang.String recomFirst; // optional
  public java.lang.String recomRemark; // optional
  public int templateId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "companyId"),
    STATUS_NAME((short)3, "statusName"),
    REWARD((short)4, "reward"),
    DESCRIPTION((short)5, "description"),
    IS_USING((short)6, "isUsing"),
    ORDER_NUM((short)7, "orderNum"),
    UPDATE_TIME((short)8, "updateTime"),
    TAG((short)9, "tag"),
    IS_APPLIER_SEND((short)10, "isApplierSend"),
    APPLIER_FIRST((short)11, "applierFirst"),
    APPLIER_REMARK((short)12, "applierRemark"),
    IS_RECOM_SEND((short)13, "isRecomSend"),
    RECOM_FIRST((short)14, "recomFirst"),
    RECOM_REMARK((short)15, "recomRemark"),
    TEMPLATE_ID((short)16, "templateId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // STATUS_NAME
          return STATUS_NAME;
        case 4: // REWARD
          return REWARD;
        case 5: // DESCRIPTION
          return DESCRIPTION;
        case 6: // IS_USING
          return IS_USING;
        case 7: // ORDER_NUM
          return ORDER_NUM;
        case 8: // UPDATE_TIME
          return UPDATE_TIME;
        case 9: // TAG
          return TAG;
        case 10: // IS_APPLIER_SEND
          return IS_APPLIER_SEND;
        case 11: // APPLIER_FIRST
          return APPLIER_FIRST;
        case 12: // APPLIER_REMARK
          return APPLIER_REMARK;
        case 13: // IS_RECOM_SEND
          return IS_RECOM_SEND;
        case 14: // RECOM_FIRST
          return RECOM_FIRST;
        case 15: // RECOM_REMARK
          return RECOM_REMARK;
        case 16: // TEMPLATE_ID
          return TEMPLATE_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __REWARD_ISSET_ID = 2;
  private static final int __ISUSING_ISSET_ID = 3;
  private static final int __ORDERNUM_ISSET_ID = 4;
  private static final int __ISAPPLIERSEND_ISSET_ID = 5;
  private static final int __ISRECOMSEND_ISSET_ID = 6;
  private static final int __TEMPLATEID_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.STATUS_NAME,_Fields.REWARD,_Fields.DESCRIPTION,_Fields.IS_USING,_Fields.ORDER_NUM,_Fields.UPDATE_TIME,_Fields.TAG,_Fields.IS_APPLIER_SEND,_Fields.APPLIER_FIRST,_Fields.APPLIER_REMARK,_Fields.IS_RECOM_SEND,_Fields.RECOM_FIRST,_Fields.RECOM_REMARK,_Fields.TEMPLATE_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("statusName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REWARD, new org.apache.thrift.meta_data.FieldMetaData("reward", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_USING, new org.apache.thrift.meta_data.FieldMetaData("isUsing", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORDER_NUM, new org.apache.thrift.meta_data.FieldMetaData("orderNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAG, new org.apache.thrift.meta_data.FieldMetaData("tag", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_APPLIER_SEND, new org.apache.thrift.meta_data.FieldMetaData("isApplierSend", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APPLIER_FIRST, new org.apache.thrift.meta_data.FieldMetaData("applierFirst", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLIER_REMARK, new org.apache.thrift.meta_data.FieldMetaData("applierRemark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOM_SEND, new org.apache.thrift.meta_data.FieldMetaData("isRecomSend", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RECOM_FIRST, new org.apache.thrift.meta_data.FieldMetaData("recomFirst", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_REMARK, new org.apache.thrift.meta_data.FieldMetaData("recomRemark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("templateId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrPointsConfDO.class, metaDataMap);
  }

  public HrPointsConfDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrPointsConfDO(HrPointsConfDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.companyId = other.companyId;
    if (other.isSetStatusName()) {
      this.statusName = other.statusName;
    }
    this.reward = other.reward;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    this.isUsing = other.isUsing;
    this.orderNum = other.orderNum;
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    if (other.isSetTag()) {
      this.tag = other.tag;
    }
    this.isApplierSend = other.isApplierSend;
    if (other.isSetApplierFirst()) {
      this.applierFirst = other.applierFirst;
    }
    if (other.isSetApplierRemark()) {
      this.applierRemark = other.applierRemark;
    }
    this.isRecomSend = other.isRecomSend;
    if (other.isSetRecomFirst()) {
      this.recomFirst = other.recomFirst;
    }
    if (other.isSetRecomRemark()) {
      this.recomRemark = other.recomRemark;
    }
    this.templateId = other.templateId;
  }

  public HrPointsConfDO deepCopy() {
    return new HrPointsConfDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.statusName = null;
    setRewardIsSet(false);
    this.reward = 0.0;
    this.description = null;
    setIsUsingIsSet(false);
    this.isUsing = 0.0;
    setOrderNumIsSet(false);
    this.orderNum = 0.0;
    this.updateTime = null;
    this.tag = null;
    setIsApplierSendIsSet(false);
    this.isApplierSend = 0.0;
    this.applierFirst = null;
    this.applierRemark = null;
    setIsRecomSendIsSet(false);
    this.isRecomSend = 0.0;
    this.recomFirst = null;
    this.recomRemark = null;
    setTemplateIdIsSet(false);
    this.templateId = 0;
  }

  public int getId() {
    return this.id;
  }

  public HrPointsConfDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public HrPointsConfDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public java.lang.String getStatusName() {
    return this.statusName;
  }

  public HrPointsConfDO setStatusName(java.lang.String statusName) {
    this.statusName = statusName;
    return this;
  }

  public void unsetStatusName() {
    this.statusName = null;
  }

  /** Returns true if field statusName is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusName() {
    return this.statusName != null;
  }

  public void setStatusNameIsSet(boolean value) {
    if (!value) {
      this.statusName = null;
    }
  }

  public double getReward() {
    return this.reward;
  }

  public HrPointsConfDO setReward(double reward) {
    this.reward = reward;
    setRewardIsSet(true);
    return this;
  }

  public void unsetReward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  /** Returns true if field reward is set (has been assigned a value) and false otherwise */
  public boolean isSetReward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  public void setRewardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REWARD_ISSET_ID, value);
  }

  public java.lang.String getDescription() {
    return this.description;
  }

  public HrPointsConfDO setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public double getIsUsing() {
    return this.isUsing;
  }

  public HrPointsConfDO setIsUsing(double isUsing) {
    this.isUsing = isUsing;
    setIsUsingIsSet(true);
    return this;
  }

  public void unsetIsUsing() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISUSING_ISSET_ID);
  }

  /** Returns true if field isUsing is set (has been assigned a value) and false otherwise */
  public boolean isSetIsUsing() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISUSING_ISSET_ID);
  }

  public void setIsUsingIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISUSING_ISSET_ID, value);
  }

  public double getOrderNum() {
    return this.orderNum;
  }

  public HrPointsConfDO setOrderNum(double orderNum) {
    this.orderNum = orderNum;
    setOrderNumIsSet(true);
    return this;
  }

  public void unsetOrderNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDERNUM_ISSET_ID);
  }

  /** Returns true if field orderNum is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDERNUM_ISSET_ID);
  }

  public void setOrderNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDERNUM_ISSET_ID, value);
  }

  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public HrPointsConfDO setUpdateTime(java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public java.lang.String getTag() {
    return this.tag;
  }

  public HrPointsConfDO setTag(java.lang.String tag) {
    this.tag = tag;
    return this;
  }

  public void unsetTag() {
    this.tag = null;
  }

  /** Returns true if field tag is set (has been assigned a value) and false otherwise */
  public boolean isSetTag() {
    return this.tag != null;
  }

  public void setTagIsSet(boolean value) {
    if (!value) {
      this.tag = null;
    }
  }

  public double getIsApplierSend() {
    return this.isApplierSend;
  }

  public HrPointsConfDO setIsApplierSend(double isApplierSend) {
    this.isApplierSend = isApplierSend;
    setIsApplierSendIsSet(true);
    return this;
  }

  public void unsetIsApplierSend() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISAPPLIERSEND_ISSET_ID);
  }

  /** Returns true if field isApplierSend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsApplierSend() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISAPPLIERSEND_ISSET_ID);
  }

  public void setIsApplierSendIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISAPPLIERSEND_ISSET_ID, value);
  }

  public java.lang.String getApplierFirst() {
    return this.applierFirst;
  }

  public HrPointsConfDO setApplierFirst(java.lang.String applierFirst) {
    this.applierFirst = applierFirst;
    return this;
  }

  public void unsetApplierFirst() {
    this.applierFirst = null;
  }

  /** Returns true if field applierFirst is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierFirst() {
    return this.applierFirst != null;
  }

  public void setApplierFirstIsSet(boolean value) {
    if (!value) {
      this.applierFirst = null;
    }
  }

  public java.lang.String getApplierRemark() {
    return this.applierRemark;
  }

  public HrPointsConfDO setApplierRemark(java.lang.String applierRemark) {
    this.applierRemark = applierRemark;
    return this;
  }

  public void unsetApplierRemark() {
    this.applierRemark = null;
  }

  /** Returns true if field applierRemark is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierRemark() {
    return this.applierRemark != null;
  }

  public void setApplierRemarkIsSet(boolean value) {
    if (!value) {
      this.applierRemark = null;
    }
  }

  public double getIsRecomSend() {
    return this.isRecomSend;
  }

  public HrPointsConfDO setIsRecomSend(double isRecomSend) {
    this.isRecomSend = isRecomSend;
    setIsRecomSendIsSet(true);
    return this;
  }

  public void unsetIsRecomSend() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISRECOMSEND_ISSET_ID);
  }

  /** Returns true if field isRecomSend is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecomSend() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISRECOMSEND_ISSET_ID);
  }

  public void setIsRecomSendIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISRECOMSEND_ISSET_ID, value);
  }

  public java.lang.String getRecomFirst() {
    return this.recomFirst;
  }

  public HrPointsConfDO setRecomFirst(java.lang.String recomFirst) {
    this.recomFirst = recomFirst;
    return this;
  }

  public void unsetRecomFirst() {
    this.recomFirst = null;
  }

  /** Returns true if field recomFirst is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomFirst() {
    return this.recomFirst != null;
  }

  public void setRecomFirstIsSet(boolean value) {
    if (!value) {
      this.recomFirst = null;
    }
  }

  public java.lang.String getRecomRemark() {
    return this.recomRemark;
  }

  public HrPointsConfDO setRecomRemark(java.lang.String recomRemark) {
    this.recomRemark = recomRemark;
    return this;
  }

  public void unsetRecomRemark() {
    this.recomRemark = null;
  }

  /** Returns true if field recomRemark is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomRemark() {
    return this.recomRemark != null;
  }

  public void setRecomRemarkIsSet(boolean value) {
    if (!value) {
      this.recomRemark = null;
    }
  }

  public int getTemplateId() {
    return this.templateId;
  }

  public HrPointsConfDO setTemplateId(int templateId) {
    this.templateId = templateId;
    setTemplateIdIsSet(true);
    return this;
  }

  public void unsetTemplateId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
  }

  /** Returns true if field templateId is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplateId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
  }

  public void setTemplateIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TEMPLATEID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case STATUS_NAME:
      if (value == null) {
        unsetStatusName();
      } else {
        setStatusName((java.lang.String)value);
      }
      break;

    case REWARD:
      if (value == null) {
        unsetReward();
      } else {
        setReward((java.lang.Double)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case IS_USING:
      if (value == null) {
        unsetIsUsing();
      } else {
        setIsUsing((java.lang.Double)value);
      }
      break;

    case ORDER_NUM:
      if (value == null) {
        unsetOrderNum();
      } else {
        setOrderNum((java.lang.Double)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    case TAG:
      if (value == null) {
        unsetTag();
      } else {
        setTag((java.lang.String)value);
      }
      break;

    case IS_APPLIER_SEND:
      if (value == null) {
        unsetIsApplierSend();
      } else {
        setIsApplierSend((java.lang.Double)value);
      }
      break;

    case APPLIER_FIRST:
      if (value == null) {
        unsetApplierFirst();
      } else {
        setApplierFirst((java.lang.String)value);
      }
      break;

    case APPLIER_REMARK:
      if (value == null) {
        unsetApplierRemark();
      } else {
        setApplierRemark((java.lang.String)value);
      }
      break;

    case IS_RECOM_SEND:
      if (value == null) {
        unsetIsRecomSend();
      } else {
        setIsRecomSend((java.lang.Double)value);
      }
      break;

    case RECOM_FIRST:
      if (value == null) {
        unsetRecomFirst();
      } else {
        setRecomFirst((java.lang.String)value);
      }
      break;

    case RECOM_REMARK:
      if (value == null) {
        unsetRecomRemark();
      } else {
        setRecomRemark((java.lang.String)value);
      }
      break;

    case TEMPLATE_ID:
      if (value == null) {
        unsetTemplateId();
      } else {
        setTemplateId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompanyId();

    case STATUS_NAME:
      return getStatusName();

    case REWARD:
      return getReward();

    case DESCRIPTION:
      return getDescription();

    case IS_USING:
      return getIsUsing();

    case ORDER_NUM:
      return getOrderNum();

    case UPDATE_TIME:
      return getUpdateTime();

    case TAG:
      return getTag();

    case IS_APPLIER_SEND:
      return getIsApplierSend();

    case APPLIER_FIRST:
      return getApplierFirst();

    case APPLIER_REMARK:
      return getApplierRemark();

    case IS_RECOM_SEND:
      return getIsRecomSend();

    case RECOM_FIRST:
      return getRecomFirst();

    case RECOM_REMARK:
      return getRecomRemark();

    case TEMPLATE_ID:
      return getTemplateId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompanyId();
    case STATUS_NAME:
      return isSetStatusName();
    case REWARD:
      return isSetReward();
    case DESCRIPTION:
      return isSetDescription();
    case IS_USING:
      return isSetIsUsing();
    case ORDER_NUM:
      return isSetOrderNum();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case TAG:
      return isSetTag();
    case IS_APPLIER_SEND:
      return isSetIsApplierSend();
    case APPLIER_FIRST:
      return isSetApplierFirst();
    case APPLIER_REMARK:
      return isSetApplierRemark();
    case IS_RECOM_SEND:
      return isSetIsRecomSend();
    case RECOM_FIRST:
      return isSetRecomFirst();
    case RECOM_REMARK:
      return isSetRecomRemark();
    case TEMPLATE_ID:
      return isSetTemplateId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrPointsConfDO)
      return this.equals((HrPointsConfDO)that);
    return false;
  }

  public boolean equals(HrPointsConfDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_statusName = true && this.isSetStatusName();
    boolean that_present_statusName = true && that.isSetStatusName();
    if (this_present_statusName || that_present_statusName) {
      if (!(this_present_statusName && that_present_statusName))
        return false;
      if (!this.statusName.equals(that.statusName))
        return false;
    }

    boolean this_present_reward = true && this.isSetReward();
    boolean that_present_reward = true && that.isSetReward();
    if (this_present_reward || that_present_reward) {
      if (!(this_present_reward && that_present_reward))
        return false;
      if (this.reward != that.reward)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_isUsing = true && this.isSetIsUsing();
    boolean that_present_isUsing = true && that.isSetIsUsing();
    if (this_present_isUsing || that_present_isUsing) {
      if (!(this_present_isUsing && that_present_isUsing))
        return false;
      if (this.isUsing != that.isUsing)
        return false;
    }

    boolean this_present_orderNum = true && this.isSetOrderNum();
    boolean that_present_orderNum = true && that.isSetOrderNum();
    if (this_present_orderNum || that_present_orderNum) {
      if (!(this_present_orderNum && that_present_orderNum))
        return false;
      if (this.orderNum != that.orderNum)
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_tag = true && this.isSetTag();
    boolean that_present_tag = true && that.isSetTag();
    if (this_present_tag || that_present_tag) {
      if (!(this_present_tag && that_present_tag))
        return false;
      if (!this.tag.equals(that.tag))
        return false;
    }

    boolean this_present_isApplierSend = true && this.isSetIsApplierSend();
    boolean that_present_isApplierSend = true && that.isSetIsApplierSend();
    if (this_present_isApplierSend || that_present_isApplierSend) {
      if (!(this_present_isApplierSend && that_present_isApplierSend))
        return false;
      if (this.isApplierSend != that.isApplierSend)
        return false;
    }

    boolean this_present_applierFirst = true && this.isSetApplierFirst();
    boolean that_present_applierFirst = true && that.isSetApplierFirst();
    if (this_present_applierFirst || that_present_applierFirst) {
      if (!(this_present_applierFirst && that_present_applierFirst))
        return false;
      if (!this.applierFirst.equals(that.applierFirst))
        return false;
    }

    boolean this_present_applierRemark = true && this.isSetApplierRemark();
    boolean that_present_applierRemark = true && that.isSetApplierRemark();
    if (this_present_applierRemark || that_present_applierRemark) {
      if (!(this_present_applierRemark && that_present_applierRemark))
        return false;
      if (!this.applierRemark.equals(that.applierRemark))
        return false;
    }

    boolean this_present_isRecomSend = true && this.isSetIsRecomSend();
    boolean that_present_isRecomSend = true && that.isSetIsRecomSend();
    if (this_present_isRecomSend || that_present_isRecomSend) {
      if (!(this_present_isRecomSend && that_present_isRecomSend))
        return false;
      if (this.isRecomSend != that.isRecomSend)
        return false;
    }

    boolean this_present_recomFirst = true && this.isSetRecomFirst();
    boolean that_present_recomFirst = true && that.isSetRecomFirst();
    if (this_present_recomFirst || that_present_recomFirst) {
      if (!(this_present_recomFirst && that_present_recomFirst))
        return false;
      if (!this.recomFirst.equals(that.recomFirst))
        return false;
    }

    boolean this_present_recomRemark = true && this.isSetRecomRemark();
    boolean that_present_recomRemark = true && that.isSetRecomRemark();
    if (this_present_recomRemark || that_present_recomRemark) {
      if (!(this_present_recomRemark && that_present_recomRemark))
        return false;
      if (!this.recomRemark.equals(that.recomRemark))
        return false;
    }

    boolean this_present_templateId = true && this.isSetTemplateId();
    boolean that_present_templateId = true && that.isSetTemplateId();
    if (this_present_templateId || that_present_templateId) {
      if (!(this_present_templateId && that_present_templateId))
        return false;
      if (this.templateId != that.templateId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetStatusName()) ? 131071 : 524287);
    if (isSetStatusName())
      hashCode = hashCode * 8191 + statusName.hashCode();

    hashCode = hashCode * 8191 + ((isSetReward()) ? 131071 : 524287);
    if (isSetReward())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(reward);

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsUsing()) ? 131071 : 524287);
    if (isSetIsUsing())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(isUsing);

    hashCode = hashCode * 8191 + ((isSetOrderNum()) ? 131071 : 524287);
    if (isSetOrderNum())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(orderNum);

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetTag()) ? 131071 : 524287);
    if (isSetTag())
      hashCode = hashCode * 8191 + tag.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsApplierSend()) ? 131071 : 524287);
    if (isSetIsApplierSend())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(isApplierSend);

    hashCode = hashCode * 8191 + ((isSetApplierFirst()) ? 131071 : 524287);
    if (isSetApplierFirst())
      hashCode = hashCode * 8191 + applierFirst.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplierRemark()) ? 131071 : 524287);
    if (isSetApplierRemark())
      hashCode = hashCode * 8191 + applierRemark.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsRecomSend()) ? 131071 : 524287);
    if (isSetIsRecomSend())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(isRecomSend);

    hashCode = hashCode * 8191 + ((isSetRecomFirst()) ? 131071 : 524287);
    if (isSetRecomFirst())
      hashCode = hashCode * 8191 + recomFirst.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecomRemark()) ? 131071 : 524287);
    if (isSetRecomRemark())
      hashCode = hashCode * 8191 + recomRemark.hashCode();

    hashCode = hashCode * 8191 + ((isSetTemplateId()) ? 131071 : 524287);
    if (isSetTemplateId())
      hashCode = hashCode * 8191 + templateId;

    return hashCode;
  }

  @Override
  public int compareTo(HrPointsConfDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatusName()).compareTo(other.isSetStatusName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusName, other.statusName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReward()).compareTo(other.isSetReward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reward, other.reward);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsUsing()).compareTo(other.isSetIsUsing());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsUsing()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isUsing, other.isUsing);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrderNum()).compareTo(other.isSetOrderNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderNum, other.orderNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTag()).compareTo(other.isSetTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tag, other.tag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsApplierSend()).compareTo(other.isSetIsApplierSend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsApplierSend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isApplierSend, other.isApplierSend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplierFirst()).compareTo(other.isSetApplierFirst());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierFirst()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierFirst, other.applierFirst);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplierRemark()).compareTo(other.isSetApplierRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierRemark, other.applierRemark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsRecomSend()).compareTo(other.isSetIsRecomSend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecomSend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecomSend, other.isRecomSend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomFirst()).compareTo(other.isSetRecomFirst());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomFirst()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomFirst, other.recomFirst);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomRemark()).compareTo(other.isSetRecomRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomRemark, other.recomRemark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTemplateId()).compareTo(other.isSetTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.templateId, other.templateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrPointsConfDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetStatusName()) {
      if (!first) sb.append(", ");
      sb.append("statusName:");
      if (this.statusName == null) {
        sb.append("null");
      } else {
        sb.append(this.statusName);
      }
      first = false;
    }
    if (isSetReward()) {
      if (!first) sb.append(", ");
      sb.append("reward:");
      sb.append(this.reward);
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetIsUsing()) {
      if (!first) sb.append(", ");
      sb.append("isUsing:");
      sb.append(this.isUsing);
      first = false;
    }
    if (isSetOrderNum()) {
      if (!first) sb.append(", ");
      sb.append("orderNum:");
      sb.append(this.orderNum);
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetTag()) {
      if (!first) sb.append(", ");
      sb.append("tag:");
      if (this.tag == null) {
        sb.append("null");
      } else {
        sb.append(this.tag);
      }
      first = false;
    }
    if (isSetIsApplierSend()) {
      if (!first) sb.append(", ");
      sb.append("isApplierSend:");
      sb.append(this.isApplierSend);
      first = false;
    }
    if (isSetApplierFirst()) {
      if (!first) sb.append(", ");
      sb.append("applierFirst:");
      if (this.applierFirst == null) {
        sb.append("null");
      } else {
        sb.append(this.applierFirst);
      }
      first = false;
    }
    if (isSetApplierRemark()) {
      if (!first) sb.append(", ");
      sb.append("applierRemark:");
      if (this.applierRemark == null) {
        sb.append("null");
      } else {
        sb.append(this.applierRemark);
      }
      first = false;
    }
    if (isSetIsRecomSend()) {
      if (!first) sb.append(", ");
      sb.append("isRecomSend:");
      sb.append(this.isRecomSend);
      first = false;
    }
    if (isSetRecomFirst()) {
      if (!first) sb.append(", ");
      sb.append("recomFirst:");
      if (this.recomFirst == null) {
        sb.append("null");
      } else {
        sb.append(this.recomFirst);
      }
      first = false;
    }
    if (isSetRecomRemark()) {
      if (!first) sb.append(", ");
      sb.append("recomRemark:");
      if (this.recomRemark == null) {
        sb.append("null");
      } else {
        sb.append(this.recomRemark);
      }
      first = false;
    }
    if (isSetTemplateId()) {
      if (!first) sb.append(", ");
      sb.append("templateId:");
      sb.append(this.templateId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrPointsConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrPointsConfDOStandardScheme getScheme() {
      return new HrPointsConfDOStandardScheme();
    }
  }

  private static class HrPointsConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrPointsConfDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.statusName = iprot.readString();
              struct.setStatusNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.reward = iprot.readDouble();
              struct.setRewardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IS_USING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.isUsing = iprot.readDouble();
              struct.setIsUsingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.orderNum = iprot.readDouble();
              struct.setOrderNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tag = iprot.readString();
              struct.setTagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IS_APPLIER_SEND
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.isApplierSend = iprot.readDouble();
              struct.setIsApplierSendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPLIER_FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applierFirst = iprot.readString();
              struct.setApplierFirstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPLIER_REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applierRemark = iprot.readString();
              struct.setApplierRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // IS_RECOM_SEND
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.isRecomSend = iprot.readDouble();
              struct.setIsRecomSendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // RECOM_FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomFirst = iprot.readString();
              struct.setRecomFirstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RECOM_REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomRemark = iprot.readString();
              struct.setRecomRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.templateId = iprot.readI32();
              struct.setTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.statusName != null) {
        if (struct.isSetStatusName()) {
          oprot.writeFieldBegin(STATUS_NAME_FIELD_DESC);
          oprot.writeString(struct.statusName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetReward()) {
        oprot.writeFieldBegin(REWARD_FIELD_DESC);
        oprot.writeDouble(struct.reward);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsUsing()) {
        oprot.writeFieldBegin(IS_USING_FIELD_DESC);
        oprot.writeDouble(struct.isUsing);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOrderNum()) {
        oprot.writeFieldBegin(ORDER_NUM_FIELD_DESC);
        oprot.writeDouble(struct.orderNum);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tag != null) {
        if (struct.isSetTag()) {
          oprot.writeFieldBegin(TAG_FIELD_DESC);
          oprot.writeString(struct.tag);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsApplierSend()) {
        oprot.writeFieldBegin(IS_APPLIER_SEND_FIELD_DESC);
        oprot.writeDouble(struct.isApplierSend);
        oprot.writeFieldEnd();
      }
      if (struct.applierFirst != null) {
        if (struct.isSetApplierFirst()) {
          oprot.writeFieldBegin(APPLIER_FIRST_FIELD_DESC);
          oprot.writeString(struct.applierFirst);
          oprot.writeFieldEnd();
        }
      }
      if (struct.applierRemark != null) {
        if (struct.isSetApplierRemark()) {
          oprot.writeFieldBegin(APPLIER_REMARK_FIELD_DESC);
          oprot.writeString(struct.applierRemark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsRecomSend()) {
        oprot.writeFieldBegin(IS_RECOM_SEND_FIELD_DESC);
        oprot.writeDouble(struct.isRecomSend);
        oprot.writeFieldEnd();
      }
      if (struct.recomFirst != null) {
        if (struct.isSetRecomFirst()) {
          oprot.writeFieldBegin(RECOM_FIRST_FIELD_DESC);
          oprot.writeString(struct.recomFirst);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recomRemark != null) {
        if (struct.isSetRecomRemark()) {
          oprot.writeFieldBegin(RECOM_REMARK_FIELD_DESC);
          oprot.writeString(struct.recomRemark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTemplateId()) {
        oprot.writeFieldBegin(TEMPLATE_ID_FIELD_DESC);
        oprot.writeI32(struct.templateId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrPointsConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrPointsConfDOTupleScheme getScheme() {
      return new HrPointsConfDOTupleScheme();
    }
  }

  private static class HrPointsConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrPointsConfDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(1);
      }
      if (struct.isSetStatusName()) {
        optionals.set(2);
      }
      if (struct.isSetReward()) {
        optionals.set(3);
      }
      if (struct.isSetDescription()) {
        optionals.set(4);
      }
      if (struct.isSetIsUsing()) {
        optionals.set(5);
      }
      if (struct.isSetOrderNum()) {
        optionals.set(6);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(7);
      }
      if (struct.isSetTag()) {
        optionals.set(8);
      }
      if (struct.isSetIsApplierSend()) {
        optionals.set(9);
      }
      if (struct.isSetApplierFirst()) {
        optionals.set(10);
      }
      if (struct.isSetApplierRemark()) {
        optionals.set(11);
      }
      if (struct.isSetIsRecomSend()) {
        optionals.set(12);
      }
      if (struct.isSetRecomFirst()) {
        optionals.set(13);
      }
      if (struct.isSetRecomRemark()) {
        optionals.set(14);
      }
      if (struct.isSetTemplateId()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetStatusName()) {
        oprot.writeString(struct.statusName);
      }
      if (struct.isSetReward()) {
        oprot.writeDouble(struct.reward);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetIsUsing()) {
        oprot.writeDouble(struct.isUsing);
      }
      if (struct.isSetOrderNum()) {
        oprot.writeDouble(struct.orderNum);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetTag()) {
        oprot.writeString(struct.tag);
      }
      if (struct.isSetIsApplierSend()) {
        oprot.writeDouble(struct.isApplierSend);
      }
      if (struct.isSetApplierFirst()) {
        oprot.writeString(struct.applierFirst);
      }
      if (struct.isSetApplierRemark()) {
        oprot.writeString(struct.applierRemark);
      }
      if (struct.isSetIsRecomSend()) {
        oprot.writeDouble(struct.isRecomSend);
      }
      if (struct.isSetRecomFirst()) {
        oprot.writeString(struct.recomFirst);
      }
      if (struct.isSetRecomRemark()) {
        oprot.writeString(struct.recomRemark);
      }
      if (struct.isSetTemplateId()) {
        oprot.writeI32(struct.templateId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.statusName = iprot.readString();
        struct.setStatusNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.reward = iprot.readDouble();
        struct.setRewardIsSet(true);
      }
      if (incoming.get(4)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.isUsing = iprot.readDouble();
        struct.setIsUsingIsSet(true);
      }
      if (incoming.get(6)) {
        struct.orderNum = iprot.readDouble();
        struct.setOrderNumIsSet(true);
      }
      if (incoming.get(7)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.tag = iprot.readString();
        struct.setTagIsSet(true);
      }
      if (incoming.get(9)) {
        struct.isApplierSend = iprot.readDouble();
        struct.setIsApplierSendIsSet(true);
      }
      if (incoming.get(10)) {
        struct.applierFirst = iprot.readString();
        struct.setApplierFirstIsSet(true);
      }
      if (incoming.get(11)) {
        struct.applierRemark = iprot.readString();
        struct.setApplierRemarkIsSet(true);
      }
      if (incoming.get(12)) {
        struct.isRecomSend = iprot.readDouble();
        struct.setIsRecomSendIsSet(true);
      }
      if (incoming.get(13)) {
        struct.recomFirst = iprot.readString();
        struct.setRecomFirstIsSet(true);
      }
      if (incoming.get(14)) {
        struct.recomRemark = iprot.readString();
        struct.setRecomRemarkIsSet(true);
      }
      if (incoming.get(15)) {
        struct.templateId = iprot.readI32();
        struct.setTemplateIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

