/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-02")
public class HrNpsInfo implements org.apache.thrift.TBase<HrNpsInfo, HrNpsInfo._Fields>, java.io.Serializable, Cloneable, Comparable<HrNpsInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrNpsInfo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("date", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField HR_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_account_id", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField HR_MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_mobile", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField HR_ACCOUNT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_account_type", org.apache.thrift.protocol.TType.BYTE, (short)5);
  private static final org.apache.thrift.protocol.TField COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("company", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField INTENTION_FIELD_DESC = new org.apache.thrift.protocol.TField("intention", org.apache.thrift.protocol.TType.BYTE, (short)7);
  private static final org.apache.thrift.protocol.TField ACCEPT_CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("accept_contact", org.apache.thrift.protocol.TType.BYTE, (short)8);
  private static final org.apache.thrift.protocol.TField RECOMMEND_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend_user", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField RECOMMEND_MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend_mobile", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField RECOMMEND_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend_company", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrNpsInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrNpsInfoTupleSchemeFactory();

  public int id; // optional
  public java.lang.String date; // optional
  public int hr_account_id; // optional
  public java.lang.String hr_mobile; // optional
  public byte hr_account_type; // optional
  public java.lang.String company; // optional
  public byte intention; // optional
  public byte accept_contact; // optional
  public java.lang.String recommend_user; // optional
  public java.lang.String recommend_mobile; // optional
  public java.lang.String recommend_company; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    DATE((short)2, "date"),
    HR_ACCOUNT_ID((short)3, "hr_account_id"),
    HR_MOBILE((short)4, "hr_mobile"),
    HR_ACCOUNT_TYPE((short)5, "hr_account_type"),
    COMPANY((short)6, "company"),
    INTENTION((short)7, "intention"),
    ACCEPT_CONTACT((short)8, "accept_contact"),
    RECOMMEND_USER((short)9, "recommend_user"),
    RECOMMEND_MOBILE((short)10, "recommend_mobile"),
    RECOMMEND_COMPANY((short)11, "recommend_company");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // DATE
          return DATE;
        case 3: // HR_ACCOUNT_ID
          return HR_ACCOUNT_ID;
        case 4: // HR_MOBILE
          return HR_MOBILE;
        case 5: // HR_ACCOUNT_TYPE
          return HR_ACCOUNT_TYPE;
        case 6: // COMPANY
          return COMPANY;
        case 7: // INTENTION
          return INTENTION;
        case 8: // ACCEPT_CONTACT
          return ACCEPT_CONTACT;
        case 9: // RECOMMEND_USER
          return RECOMMEND_USER;
        case 10: // RECOMMEND_MOBILE
          return RECOMMEND_MOBILE;
        case 11: // RECOMMEND_COMPANY
          return RECOMMEND_COMPANY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __HR_ACCOUNT_ID_ISSET_ID = 1;
  private static final int __HR_ACCOUNT_TYPE_ISSET_ID = 2;
  private static final int __INTENTION_ISSET_ID = 3;
  private static final int __ACCEPT_CONTACT_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.DATE,_Fields.HR_ACCOUNT_ID,_Fields.HR_MOBILE,_Fields.HR_ACCOUNT_TYPE,_Fields.COMPANY,_Fields.INTENTION,_Fields.ACCEPT_CONTACT,_Fields.RECOMMEND_USER,_Fields.RECOMMEND_MOBILE,_Fields.RECOMMEND_COMPANY};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DATE, new org.apache.thrift.meta_data.FieldMetaData("date", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_account_id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_MOBILE, new org.apache.thrift.meta_data.FieldMetaData("hr_mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_ACCOUNT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("hr_account_type", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.COMPANY, new org.apache.thrift.meta_data.FieldMetaData("company", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTENTION, new org.apache.thrift.meta_data.FieldMetaData("intention", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ACCEPT_CONTACT, new org.apache.thrift.meta_data.FieldMetaData("accept_contact", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.RECOMMEND_USER, new org.apache.thrift.meta_data.FieldMetaData("recommend_user", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_MOBILE, new org.apache.thrift.meta_data.FieldMetaData("recommend_mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMEND_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("recommend_company", org.apache.thrift.TFieldRequirementType.OPTIONAL,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrNpsInfo.class, metaDataMap);
  }

  public HrNpsInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrNpsInfo(HrNpsInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetDate()) {
      this.date = other.date;
    }
    this.hr_account_id = other.hr_account_id;
    if (other.isSetHr_mobile()) {
      this.hr_mobile = other.hr_mobile;
    }
    this.hr_account_type = other.hr_account_type;
    if (other.isSetCompany()) {
      this.company = other.company;
    }
    this.intention = other.intention;
    this.accept_contact = other.accept_contact;
    if (other.isSetRecommend_user()) {
      this.recommend_user = other.recommend_user;
    }
    if (other.isSetRecommend_mobile()) {
      this.recommend_mobile = other.recommend_mobile;
    }
    if (other.isSetRecommend_company()) {
      this.recommend_company = other.recommend_company;
    }
  }

  public HrNpsInfo deepCopy() {
    return new HrNpsInfo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.date = null;
    setHr_account_idIsSet(false);
    this.hr_account_id = 0;
    this.hr_mobile = null;
    setHr_account_typeIsSet(false);
    this.hr_account_type = 0;
    this.company = null;
    setIntentionIsSet(false);
    this.intention = 0;
    setAccept_contactIsSet(false);
    this.accept_contact = 0;
    this.recommend_user = null;
    this.recommend_mobile = null;
    this.recommend_company = null;
  }

  public int getId() {
    return this.id;
  }

  public HrNpsInfo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getDate() {
    return this.date;
  }

  public HrNpsInfo setDate(java.lang.String date) {
    this.date = date;
    return this;
  }

  public void unsetDate() {
    this.date = null;
  }

  /** Returns true if field date is set (has been assigned a value) and false otherwise */
  public boolean isSetDate() {
    return this.date != null;
  }

  public void setDateIsSet(boolean value) {
    if (!value) {
      this.date = null;
    }
  }

  public int getHr_account_id() {
    return this.hr_account_id;
  }

  public HrNpsInfo setHr_account_id(int hr_account_id) {
    this.hr_account_id = hr_account_id;
    setHr_account_idIsSet(true);
    return this;
  }

  public void unsetHr_account_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID);
  }

  /** Returns true if field hr_account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_account_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID);
  }

  public void setHr_account_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ACCOUNT_ID_ISSET_ID, value);
  }

  public java.lang.String getHr_mobile() {
    return this.hr_mobile;
  }

  public HrNpsInfo setHr_mobile(java.lang.String hr_mobile) {
    this.hr_mobile = hr_mobile;
    return this;
  }

  public void unsetHr_mobile() {
    this.hr_mobile = null;
  }

  /** Returns true if field hr_mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_mobile() {
    return this.hr_mobile != null;
  }

  public void setHr_mobileIsSet(boolean value) {
    if (!value) {
      this.hr_mobile = null;
    }
  }

  public byte getHr_account_type() {
    return this.hr_account_type;
  }

  public HrNpsInfo setHr_account_type(byte hr_account_type) {
    this.hr_account_type = hr_account_type;
    setHr_account_typeIsSet(true);
    return this;
  }

  public void unsetHr_account_type() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_ACCOUNT_TYPE_ISSET_ID);
  }

  /** Returns true if field hr_account_type is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_account_type() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_ACCOUNT_TYPE_ISSET_ID);
  }

  public void setHr_account_typeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_ACCOUNT_TYPE_ISSET_ID, value);
  }

  public java.lang.String getCompany() {
    return this.company;
  }

  public HrNpsInfo setCompany(java.lang.String company) {
    this.company = company;
    return this;
  }

  public void unsetCompany() {
    this.company = null;
  }

  /** Returns true if field company is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany() {
    return this.company != null;
  }

  public void setCompanyIsSet(boolean value) {
    if (!value) {
      this.company = null;
    }
  }

  public byte getIntention() {
    return this.intention;
  }

  public HrNpsInfo setIntention(byte intention) {
    this.intention = intention;
    setIntentionIsSet(true);
    return this;
  }

  public void unsetIntention() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INTENTION_ISSET_ID);
  }

  /** Returns true if field intention is set (has been assigned a value) and false otherwise */
  public boolean isSetIntention() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INTENTION_ISSET_ID);
  }

  public void setIntentionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INTENTION_ISSET_ID, value);
  }

  public byte getAccept_contact() {
    return this.accept_contact;
  }

  public HrNpsInfo setAccept_contact(byte accept_contact) {
    this.accept_contact = accept_contact;
    setAccept_contactIsSet(true);
    return this;
  }

  public void unsetAccept_contact() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCEPT_CONTACT_ISSET_ID);
  }

  /** Returns true if field accept_contact is set (has been assigned a value) and false otherwise */
  public boolean isSetAccept_contact() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCEPT_CONTACT_ISSET_ID);
  }

  public void setAccept_contactIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCEPT_CONTACT_ISSET_ID, value);
  }

  public java.lang.String getRecommend_user() {
    return this.recommend_user;
  }

  public HrNpsInfo setRecommend_user(java.lang.String recommend_user) {
    this.recommend_user = recommend_user;
    return this;
  }

  public void unsetRecommend_user() {
    this.recommend_user = null;
  }

  /** Returns true if field recommend_user is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend_user() {
    return this.recommend_user != null;
  }

  public void setRecommend_userIsSet(boolean value) {
    if (!value) {
      this.recommend_user = null;
    }
  }

  public java.lang.String getRecommend_mobile() {
    return this.recommend_mobile;
  }

  public HrNpsInfo setRecommend_mobile(java.lang.String recommend_mobile) {
    this.recommend_mobile = recommend_mobile;
    return this;
  }

  public void unsetRecommend_mobile() {
    this.recommend_mobile = null;
  }

  /** Returns true if field recommend_mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend_mobile() {
    return this.recommend_mobile != null;
  }

  public void setRecommend_mobileIsSet(boolean value) {
    if (!value) {
      this.recommend_mobile = null;
    }
  }

  public java.lang.String getRecommend_company() {
    return this.recommend_company;
  }

  public HrNpsInfo setRecommend_company(java.lang.String recommend_company) {
    this.recommend_company = recommend_company;
    return this;
  }

  public void unsetRecommend_company() {
    this.recommend_company = null;
  }

  /** Returns true if field recommend_company is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend_company() {
    return this.recommend_company != null;
  }

  public void setRecommend_companyIsSet(boolean value) {
    if (!value) {
      this.recommend_company = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((java.lang.Integer)value);
        }
        break;

      case DATE:
        if (value == null) {
          unsetDate();
        } else {
          setDate((java.lang.String)value);
        }
        break;

      case HR_ACCOUNT_ID:
        if (value == null) {
          unsetHr_account_id();
        } else {
          setHr_account_id((java.lang.Integer)value);
        }
        break;

      case HR_MOBILE:
        if (value == null) {
          unsetHr_mobile();
        } else {
          setHr_mobile((java.lang.String)value);
        }
        break;

      case HR_ACCOUNT_TYPE:
        if (value == null) {
          unsetHr_account_type();
        } else {
          setHr_account_type((java.lang.Byte)value);
        }
        break;

      case COMPANY:
        if (value == null) {
          unsetCompany();
        } else {
          setCompany((java.lang.String)value);
        }
        break;

      case INTENTION:
        if (value == null) {
          unsetIntention();
        } else {
          setIntention((java.lang.Byte)value);
        }
        break;

      case ACCEPT_CONTACT:
        if (value == null) {
          unsetAccept_contact();
        } else {
          setAccept_contact((java.lang.Byte)value);
        }
        break;

      case RECOMMEND_USER:
        if (value == null) {
          unsetRecommend_user();
        } else {
          setRecommend_user((java.lang.String)value);
        }
        break;

      case RECOMMEND_MOBILE:
        if (value == null) {
          unsetRecommend_mobile();
        } else {
          setRecommend_mobile((java.lang.String)value);
        }
        break;

      case RECOMMEND_COMPANY:
        if (value == null) {
          unsetRecommend_company();
        } else {
          setRecommend_company((java.lang.String)value);
        }
        break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
      case ID:
        return getId();

      case DATE:
        return getDate();

      case HR_ACCOUNT_ID:
        return getHr_account_id();

      case HR_MOBILE:
        return getHr_mobile();

      case HR_ACCOUNT_TYPE:
        return getHr_account_type();

      case COMPANY:
        return getCompany();

      case INTENTION:
        return getIntention();

      case ACCEPT_CONTACT:
        return getAccept_contact();

      case RECOMMEND_USER:
        return getRecommend_user();

      case RECOMMEND_MOBILE:
        return getRecommend_mobile();

      case RECOMMEND_COMPANY:
        return getRecommend_company();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
      case ID:
        return isSetId();
      case DATE:
        return isSetDate();
      case HR_ACCOUNT_ID:
        return isSetHr_account_id();
      case HR_MOBILE:
        return isSetHr_mobile();
      case HR_ACCOUNT_TYPE:
        return isSetHr_account_type();
      case COMPANY:
        return isSetCompany();
      case INTENTION:
        return isSetIntention();
      case ACCEPT_CONTACT:
        return isSetAccept_contact();
      case RECOMMEND_USER:
        return isSetRecommend_user();
      case RECOMMEND_MOBILE:
        return isSetRecommend_mobile();
      case RECOMMEND_COMPANY:
        return isSetRecommend_company();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrNpsInfo)
      return this.equals((HrNpsInfo)that);
    return false;
  }

  public boolean equals(HrNpsInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_date = true && this.isSetDate();
    boolean that_present_date = true && that.isSetDate();
    if (this_present_date || that_present_date) {
      if (!(this_present_date && that_present_date))
        return false;
      if (!this.date.equals(that.date))
        return false;
    }

    boolean this_present_hr_account_id = true && this.isSetHr_account_id();
    boolean that_present_hr_account_id = true && that.isSetHr_account_id();
    if (this_present_hr_account_id || that_present_hr_account_id) {
      if (!(this_present_hr_account_id && that_present_hr_account_id))
        return false;
      if (this.hr_account_id != that.hr_account_id)
        return false;
    }

    boolean this_present_hr_mobile = true && this.isSetHr_mobile();
    boolean that_present_hr_mobile = true && that.isSetHr_mobile();
    if (this_present_hr_mobile || that_present_hr_mobile) {
      if (!(this_present_hr_mobile && that_present_hr_mobile))
        return false;
      if (!this.hr_mobile.equals(that.hr_mobile))
        return false;
    }

    boolean this_present_hr_account_type = true && this.isSetHr_account_type();
    boolean that_present_hr_account_type = true && that.isSetHr_account_type();
    if (this_present_hr_account_type || that_present_hr_account_type) {
      if (!(this_present_hr_account_type && that_present_hr_account_type))
        return false;
      if (this.hr_account_type != that.hr_account_type)
        return false;
    }

    boolean this_present_company = true && this.isSetCompany();
    boolean that_present_company = true && that.isSetCompany();
    if (this_present_company || that_present_company) {
      if (!(this_present_company && that_present_company))
        return false;
      if (!this.company.equals(that.company))
        return false;
    }

    boolean this_present_intention = true && this.isSetIntention();
    boolean that_present_intention = true && that.isSetIntention();
    if (this_present_intention || that_present_intention) {
      if (!(this_present_intention && that_present_intention))
        return false;
      if (this.intention != that.intention)
        return false;
    }

    boolean this_present_accept_contact = true && this.isSetAccept_contact();
    boolean that_present_accept_contact = true && that.isSetAccept_contact();
    if (this_present_accept_contact || that_present_accept_contact) {
      if (!(this_present_accept_contact && that_present_accept_contact))
        return false;
      if (this.accept_contact != that.accept_contact)
        return false;
    }

    boolean this_present_recommend_user = true && this.isSetRecommend_user();
    boolean that_present_recommend_user = true && that.isSetRecommend_user();
    if (this_present_recommend_user || that_present_recommend_user) {
      if (!(this_present_recommend_user && that_present_recommend_user))
        return false;
      if (!this.recommend_user.equals(that.recommend_user))
        return false;
    }

    boolean this_present_recommend_mobile = true && this.isSetRecommend_mobile();
    boolean that_present_recommend_mobile = true && that.isSetRecommend_mobile();
    if (this_present_recommend_mobile || that_present_recommend_mobile) {
      if (!(this_present_recommend_mobile && that_present_recommend_mobile))
        return false;
      if (!this.recommend_mobile.equals(that.recommend_mobile))
        return false;
    }

    boolean this_present_recommend_company = true && this.isSetRecommend_company();
    boolean that_present_recommend_company = true && that.isSetRecommend_company();
    if (this_present_recommend_company || that_present_recommend_company) {
      if (!(this_present_recommend_company && that_present_recommend_company))
        return false;
      if (!this.recommend_company.equals(that.recommend_company))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetDate()) ? 131071 : 524287);
    if (isSetDate())
      hashCode = hashCode * 8191 + date.hashCode();

    hashCode = hashCode * 8191 + ((isSetHr_account_id()) ? 131071 : 524287);
    if (isSetHr_account_id())
      hashCode = hashCode * 8191 + hr_account_id;

    hashCode = hashCode * 8191 + ((isSetHr_mobile()) ? 131071 : 524287);
    if (isSetHr_mobile())
      hashCode = hashCode * 8191 + hr_mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetHr_account_type()) ? 131071 : 524287);
    if (isSetHr_account_type())
      hashCode = hashCode * 8191 + (int) (hr_account_type);

    hashCode = hashCode * 8191 + ((isSetCompany()) ? 131071 : 524287);
    if (isSetCompany())
      hashCode = hashCode * 8191 + company.hashCode();

    hashCode = hashCode * 8191 + ((isSetIntention()) ? 131071 : 524287);
    if (isSetIntention())
      hashCode = hashCode * 8191 + (int) (intention);

    hashCode = hashCode * 8191 + ((isSetAccept_contact()) ? 131071 : 524287);
    if (isSetAccept_contact())
      hashCode = hashCode * 8191 + (int) (accept_contact);

    hashCode = hashCode * 8191 + ((isSetRecommend_user()) ? 131071 : 524287);
    if (isSetRecommend_user())
      hashCode = hashCode * 8191 + recommend_user.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecommend_mobile()) ? 131071 : 524287);
    if (isSetRecommend_mobile())
      hashCode = hashCode * 8191 + recommend_mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecommend_company()) ? 131071 : 524287);
    if (isSetRecommend_company())
      hashCode = hashCode * 8191 + recommend_company.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrNpsInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDate()).compareTo(other.isSetDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.date, other.date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr_account_id()).compareTo(other.isSetHr_account_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_account_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_account_id, other.hr_account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr_mobile()).compareTo(other.isSetHr_mobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_mobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_mobile, other.hr_mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr_account_type()).compareTo(other.isSetHr_account_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_account_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_account_type, other.hr_account_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany()).compareTo(other.isSetCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company, other.company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntention()).compareTo(other.isSetIntention());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntention()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intention, other.intention);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccept_contact()).compareTo(other.isSetAccept_contact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccept_contact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accept_contact, other.accept_contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommend_user()).compareTo(other.isSetRecommend_user());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend_user()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend_user, other.recommend_user);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommend_mobile()).compareTo(other.isSetRecommend_mobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend_mobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend_mobile, other.recommend_mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommend_company()).compareTo(other.isSetRecommend_company());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend_company()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend_company, other.recommend_company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrNpsInfo(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetDate()) {
      if (!first) sb.append(", ");
      sb.append("date:");
      if (this.date == null) {
        sb.append("null");
      } else {
        sb.append(this.date);
      }
      first = false;
    }
    if (isSetHr_account_id()) {
      if (!first) sb.append(", ");
      sb.append("hr_account_id:");
      sb.append(this.hr_account_id);
      first = false;
    }
    if (isSetHr_mobile()) {
      if (!first) sb.append(", ");
      sb.append("hr_mobile:");
      if (this.hr_mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.hr_mobile);
      }
      first = false;
    }
    if (isSetHr_account_type()) {
      if (!first) sb.append(", ");
      sb.append("hr_account_type:");
      sb.append(this.hr_account_type);
      first = false;
    }
    if (isSetCompany()) {
      if (!first) sb.append(", ");
      sb.append("company:");
      if (this.company == null) {
        sb.append("null");
      } else {
        sb.append(this.company);
      }
      first = false;
    }
    if (isSetIntention()) {
      if (!first) sb.append(", ");
      sb.append("intention:");
      sb.append(this.intention);
      first = false;
    }
    if (isSetAccept_contact()) {
      if (!first) sb.append(", ");
      sb.append("accept_contact:");
      sb.append(this.accept_contact);
      first = false;
    }
    if (isSetRecommend_user()) {
      if (!first) sb.append(", ");
      sb.append("recommend_user:");
      if (this.recommend_user == null) {
        sb.append("null");
      } else {
        sb.append(this.recommend_user);
      }
      first = false;
    }
    if (isSetRecommend_mobile()) {
      if (!first) sb.append(", ");
      sb.append("recommend_mobile:");
      if (this.recommend_mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.recommend_mobile);
      }
      first = false;
    }
    if (isSetRecommend_company()) {
      if (!first) sb.append(", ");
      sb.append("recommend_company:");
      if (this.recommend_company == null) {
        sb.append("null");
      } else {
        sb.append(this.recommend_company);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrNpsInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrNpsInfoStandardScheme getScheme() {
      return new HrNpsInfoStandardScheme();
    }
  }

  private static class HrNpsInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrNpsInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrNpsInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.date = iprot.readString();
              struct.setDateIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HR_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hr_account_id = iprot.readI32();
              struct.setHr_account_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // HR_MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hr_mobile = iprot.readString();
              struct.setHr_mobileIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HR_ACCOUNT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.hr_account_type = iprot.readByte();
              struct.setHr_account_typeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.company = iprot.readString();
              struct.setCompanyIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // INTENTION
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.intention = iprot.readByte();
              struct.setIntentionIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ACCEPT_CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.accept_contact = iprot.readByte();
              struct.setAccept_contactIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RECOMMEND_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommend_user = iprot.readString();
              struct.setRecommend_userIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // RECOMMEND_MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommend_mobile = iprot.readString();
              struct.setRecommend_mobileIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RECOMMEND_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommend_company = iprot.readString();
              struct.setRecommend_companyIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrNpsInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.date != null) {
        if (struct.isSetDate()) {
          oprot.writeFieldBegin(DATE_FIELD_DESC);
          oprot.writeString(struct.date);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHr_account_id()) {
        oprot.writeFieldBegin(HR_ACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.hr_account_id);
        oprot.writeFieldEnd();
      }
      if (struct.hr_mobile != null) {
        if (struct.isSetHr_mobile()) {
          oprot.writeFieldBegin(HR_MOBILE_FIELD_DESC);
          oprot.writeString(struct.hr_mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHr_account_type()) {
        oprot.writeFieldBegin(HR_ACCOUNT_TYPE_FIELD_DESC);
        oprot.writeByte(struct.hr_account_type);
        oprot.writeFieldEnd();
      }
      if (struct.company != null) {
        if (struct.isSetCompany()) {
          oprot.writeFieldBegin(COMPANY_FIELD_DESC);
          oprot.writeString(struct.company);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIntention()) {
        oprot.writeFieldBegin(INTENTION_FIELD_DESC);
        oprot.writeByte(struct.intention);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAccept_contact()) {
        oprot.writeFieldBegin(ACCEPT_CONTACT_FIELD_DESC);
        oprot.writeByte(struct.accept_contact);
        oprot.writeFieldEnd();
      }
      if (struct.recommend_user != null) {
        if (struct.isSetRecommend_user()) {
          oprot.writeFieldBegin(RECOMMEND_USER_FIELD_DESC);
          oprot.writeString(struct.recommend_user);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recommend_mobile != null) {
        if (struct.isSetRecommend_mobile()) {
          oprot.writeFieldBegin(RECOMMEND_MOBILE_FIELD_DESC);
          oprot.writeString(struct.recommend_mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recommend_company != null) {
        if (struct.isSetRecommend_company()) {
          oprot.writeFieldBegin(RECOMMEND_COMPANY_FIELD_DESC);
          oprot.writeString(struct.recommend_company);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrNpsInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrNpsInfoTupleScheme getScheme() {
      return new HrNpsInfoTupleScheme();
    }
  }

  private static class HrNpsInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrNpsInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrNpsInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetDate()) {
        optionals.set(1);
      }
      if (struct.isSetHr_account_id()) {
        optionals.set(2);
      }
      if (struct.isSetHr_mobile()) {
        optionals.set(3);
      }
      if (struct.isSetHr_account_type()) {
        optionals.set(4);
      }
      if (struct.isSetCompany()) {
        optionals.set(5);
      }
      if (struct.isSetIntention()) {
        optionals.set(6);
      }
      if (struct.isSetAccept_contact()) {
        optionals.set(7);
      }
      if (struct.isSetRecommend_user()) {
        optionals.set(8);
      }
      if (struct.isSetRecommend_mobile()) {
        optionals.set(9);
      }
      if (struct.isSetRecommend_company()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetDate()) {
        oprot.writeString(struct.date);
      }
      if (struct.isSetHr_account_id()) {
        oprot.writeI32(struct.hr_account_id);
      }
      if (struct.isSetHr_mobile()) {
        oprot.writeString(struct.hr_mobile);
      }
      if (struct.isSetHr_account_type()) {
        oprot.writeByte(struct.hr_account_type);
      }
      if (struct.isSetCompany()) {
        oprot.writeString(struct.company);
      }
      if (struct.isSetIntention()) {
        oprot.writeByte(struct.intention);
      }
      if (struct.isSetAccept_contact()) {
        oprot.writeByte(struct.accept_contact);
      }
      if (struct.isSetRecommend_user()) {
        oprot.writeString(struct.recommend_user);
      }
      if (struct.isSetRecommend_mobile()) {
        oprot.writeString(struct.recommend_mobile);
      }
      if (struct.isSetRecommend_company()) {
        oprot.writeString(struct.recommend_company);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrNpsInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.date = iprot.readString();
        struct.setDateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hr_account_id = iprot.readI32();
        struct.setHr_account_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.hr_mobile = iprot.readString();
        struct.setHr_mobileIsSet(true);
      }
      if (incoming.get(4)) {
        struct.hr_account_type = iprot.readByte();
        struct.setHr_account_typeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.company = iprot.readString();
        struct.setCompanyIsSet(true);
      }
      if (incoming.get(6)) {
        struct.intention = iprot.readByte();
        struct.setIntentionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.accept_contact = iprot.readByte();
        struct.setAccept_contactIsSet(true);
      }
      if (incoming.get(8)) {
        struct.recommend_user = iprot.readString();
        struct.setRecommend_userIsSet(true);
      }
      if (incoming.get(9)) {
        struct.recommend_mobile = iprot.readString();
        struct.setRecommend_mobileIsSet(true);
      }
      if (incoming.get(10)) {
        struct.recommend_company = iprot.readString();
        struct.setRecommend_companyIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

