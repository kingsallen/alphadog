/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.position.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-17")
public class WechatPositionListQuery implements org.apache.thrift.TBase<WechatPositionListQuery, WechatPositionListQuery._Fields>, java.io.Serializable, Cloneable, Comparable<WechatPositionListQuery> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WechatPositionListQuery");

  private static final org.apache.thrift.protocol.TField PAGE_FROM_FIELD_DESC = new org.apache.thrift.protocol.TField("page_from", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("page_size", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField KEYWORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keywords", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("cities", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField INDUSTRIES_FIELD_DESC = new org.apache.thrift.protocol.TField("industries", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OCCUPATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("occupations", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CANDIDATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("candidate_source", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EMPLOYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("employment_type", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SALARY_FIELD_DESC = new org.apache.thrift.protocol.TField("salary", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField DID_FIELD_DESC = new org.apache.thrift.protocol.TField("did", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ORDER_BY_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("order_by_priority", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)17);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WechatPositionListQueryStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WechatPositionListQueryTupleSchemeFactory();

  public int page_from; // optional
  public int page_size; // optional
  public java.lang.String keywords; // optional
  public java.lang.String cities; // optional
  public java.lang.String industries; // optional
  public java.lang.String occupations; // optional
  public java.lang.String scale; // optional
  public java.lang.String candidate_source; // optional
  public java.lang.String employment_type; // optional
  public java.lang.String experience; // optional
  public java.lang.String salary; // optional
  public java.lang.String degree; // optional
  public int company_id; // optional
  public int did; // optional
  public java.lang.String department; // optional
  public boolean order_by_priority; // optional
  public java.lang.String custom; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PAGE_FROM((short)1, "page_from"),
    PAGE_SIZE((short)2, "page_size"),
    KEYWORDS((short)3, "keywords"),
    CITIES((short)4, "cities"),
    INDUSTRIES((short)5, "industries"),
    OCCUPATIONS((short)6, "occupations"),
    SCALE((short)7, "scale"),
    CANDIDATE_SOURCE((short)8, "candidate_source"),
    EMPLOYMENT_TYPE((short)9, "employment_type"),
    EXPERIENCE((short)10, "experience"),
    SALARY((short)11, "salary"),
    DEGREE((short)12, "degree"),
    COMPANY_ID((short)13, "company_id"),
    DID((short)14, "did"),
    DEPARTMENT((short)15, "department"),
    ORDER_BY_PRIORITY((short)16, "order_by_priority"),
    CUSTOM((short)17, "custom");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PAGE_FROM
          return PAGE_FROM;
        case 2: // PAGE_SIZE
          return PAGE_SIZE;
        case 3: // KEYWORDS
          return KEYWORDS;
        case 4: // CITIES
          return CITIES;
        case 5: // INDUSTRIES
          return INDUSTRIES;
        case 6: // OCCUPATIONS
          return OCCUPATIONS;
        case 7: // SCALE
          return SCALE;
        case 8: // CANDIDATE_SOURCE
          return CANDIDATE_SOURCE;
        case 9: // EMPLOYMENT_TYPE
          return EMPLOYMENT_TYPE;
        case 10: // EXPERIENCE
          return EXPERIENCE;
        case 11: // SALARY
          return SALARY;
        case 12: // DEGREE
          return DEGREE;
        case 13: // COMPANY_ID
          return COMPANY_ID;
        case 14: // DID
          return DID;
        case 15: // DEPARTMENT
          return DEPARTMENT;
        case 16: // ORDER_BY_PRIORITY
          return ORDER_BY_PRIORITY;
        case 17: // CUSTOM
          return CUSTOM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAGE_FROM_ISSET_ID = 0;
  private static final int __PAGE_SIZE_ISSET_ID = 1;
  private static final int __COMPANY_ID_ISSET_ID = 2;
  private static final int __DID_ISSET_ID = 3;
  private static final int __ORDER_BY_PRIORITY_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.PAGE_FROM,_Fields.PAGE_SIZE,_Fields.KEYWORDS,_Fields.CITIES,_Fields.INDUSTRIES,_Fields.OCCUPATIONS,_Fields.SCALE,_Fields.CANDIDATE_SOURCE,_Fields.EMPLOYMENT_TYPE,_Fields.EXPERIENCE,_Fields.SALARY,_Fields.DEGREE,_Fields.COMPANY_ID,_Fields.DID,_Fields.DEPARTMENT,_Fields.ORDER_BY_PRIORITY,_Fields.CUSTOM};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PAGE_FROM, new org.apache.thrift.meta_data.FieldMetaData("page_from", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("page_size", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.KEYWORDS, new org.apache.thrift.meta_data.FieldMetaData("keywords", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITIES, new org.apache.thrift.meta_data.FieldMetaData("cities", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INDUSTRIES, new org.apache.thrift.meta_data.FieldMetaData("industries", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OCCUPATIONS, new org.apache.thrift.meta_data.FieldMetaData("occupations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CANDIDATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("candidate_source", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("employment_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY, new org.apache.thrift.meta_data.FieldMetaData("salary", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DID, new org.apache.thrift.meta_data.FieldMetaData("did", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_BY_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("order_by_priority", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WechatPositionListQuery.class, metaDataMap);
  }

  public WechatPositionListQuery() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WechatPositionListQuery(WechatPositionListQuery other) {
    __isset_bitfield = other.__isset_bitfield;
    this.page_from = other.page_from;
    this.page_size = other.page_size;
    if (other.isSetKeywords()) {
      this.keywords = other.keywords;
    }
    if (other.isSetCities()) {
      this.cities = other.cities;
    }
    if (other.isSetIndustries()) {
      this.industries = other.industries;
    }
    if (other.isSetOccupations()) {
      this.occupations = other.occupations;
    }
    if (other.isSetScale()) {
      this.scale = other.scale;
    }
    if (other.isSetCandidate_source()) {
      this.candidate_source = other.candidate_source;
    }
    if (other.isSetEmployment_type()) {
      this.employment_type = other.employment_type;
    }
    if (other.isSetExperience()) {
      this.experience = other.experience;
    }
    if (other.isSetSalary()) {
      this.salary = other.salary;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    this.company_id = other.company_id;
    this.did = other.did;
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    this.order_by_priority = other.order_by_priority;
    if (other.isSetCustom()) {
      this.custom = other.custom;
    }
  }

  public WechatPositionListQuery deepCopy() {
    return new WechatPositionListQuery(this);
  }

  @Override
  public void clear() {
    setPage_fromIsSet(false);
    this.page_from = 0;
    setPage_sizeIsSet(false);
    this.page_size = 0;
    this.keywords = null;
    this.cities = null;
    this.industries = null;
    this.occupations = null;
    this.scale = null;
    this.candidate_source = null;
    this.employment_type = null;
    this.experience = null;
    this.salary = null;
    this.degree = null;
    setCompany_idIsSet(false);
    this.company_id = 0;
    setDidIsSet(false);
    this.did = 0;
    this.department = null;
    setOrder_by_priorityIsSet(false);
    this.order_by_priority = false;
    this.custom = null;
  }

  public int getPage_from() {
    return this.page_from;
  }

  public WechatPositionListQuery setPage_from(int page_from) {
    this.page_from = page_from;
    setPage_fromIsSet(true);
    return this;
  }

  public void unsetPage_from() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
  }

  /** Returns true if field page_from is set (has been assigned a value) and false otherwise */
  public boolean isSetPage_from() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
  }

  public void setPage_fromIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_FROM_ISSET_ID, value);
  }

  public int getPage_size() {
    return this.page_size;
  }

  public WechatPositionListQuery setPage_size(int page_size) {
    this.page_size = page_size;
    setPage_sizeIsSet(true);
    return this;
  }

  public void unsetPage_size() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
  }

  /** Returns true if field page_size is set (has been assigned a value) and false otherwise */
  public boolean isSetPage_size() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
  }

  public void setPage_sizeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID, value);
  }

  public java.lang.String getKeywords() {
    return this.keywords;
  }

  public WechatPositionListQuery setKeywords(java.lang.String keywords) {
    this.keywords = keywords;
    return this;
  }

  public void unsetKeywords() {
    this.keywords = null;
  }

  /** Returns true if field keywords is set (has been assigned a value) and false otherwise */
  public boolean isSetKeywords() {
    return this.keywords != null;
  }

  public void setKeywordsIsSet(boolean value) {
    if (!value) {
      this.keywords = null;
    }
  }

  public java.lang.String getCities() {
    return this.cities;
  }

  public WechatPositionListQuery setCities(java.lang.String cities) {
    this.cities = cities;
    return this;
  }

  public void unsetCities() {
    this.cities = null;
  }

  /** Returns true if field cities is set (has been assigned a value) and false otherwise */
  public boolean isSetCities() {
    return this.cities != null;
  }

  public void setCitiesIsSet(boolean value) {
    if (!value) {
      this.cities = null;
    }
  }

  public java.lang.String getIndustries() {
    return this.industries;
  }

  public WechatPositionListQuery setIndustries(java.lang.String industries) {
    this.industries = industries;
    return this;
  }

  public void unsetIndustries() {
    this.industries = null;
  }

  /** Returns true if field industries is set (has been assigned a value) and false otherwise */
  public boolean isSetIndustries() {
    return this.industries != null;
  }

  public void setIndustriesIsSet(boolean value) {
    if (!value) {
      this.industries = null;
    }
  }

  public java.lang.String getOccupations() {
    return this.occupations;
  }

  public WechatPositionListQuery setOccupations(java.lang.String occupations) {
    this.occupations = occupations;
    return this;
  }

  public void unsetOccupations() {
    this.occupations = null;
  }

  /** Returns true if field occupations is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupations() {
    return this.occupations != null;
  }

  public void setOccupationsIsSet(boolean value) {
    if (!value) {
      this.occupations = null;
    }
  }

  public java.lang.String getScale() {
    return this.scale;
  }

  public WechatPositionListQuery setScale(java.lang.String scale) {
    this.scale = scale;
    return this;
  }

  public void unsetScale() {
    this.scale = null;
  }

  /** Returns true if field scale is set (has been assigned a value) and false otherwise */
  public boolean isSetScale() {
    return this.scale != null;
  }

  public void setScaleIsSet(boolean value) {
    if (!value) {
      this.scale = null;
    }
  }

  public java.lang.String getCandidate_source() {
    return this.candidate_source;
  }

  public WechatPositionListQuery setCandidate_source(java.lang.String candidate_source) {
    this.candidate_source = candidate_source;
    return this;
  }

  public void unsetCandidate_source() {
    this.candidate_source = null;
  }

  /** Returns true if field candidate_source is set (has been assigned a value) and false otherwise */
  public boolean isSetCandidate_source() {
    return this.candidate_source != null;
  }

  public void setCandidate_sourceIsSet(boolean value) {
    if (!value) {
      this.candidate_source = null;
    }
  }

  public java.lang.String getEmployment_type() {
    return this.employment_type;
  }

  public WechatPositionListQuery setEmployment_type(java.lang.String employment_type) {
    this.employment_type = employment_type;
    return this;
  }

  public void unsetEmployment_type() {
    this.employment_type = null;
  }

  /** Returns true if field employment_type is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployment_type() {
    return this.employment_type != null;
  }

  public void setEmployment_typeIsSet(boolean value) {
    if (!value) {
      this.employment_type = null;
    }
  }

  public java.lang.String getExperience() {
    return this.experience;
  }

  public WechatPositionListQuery setExperience(java.lang.String experience) {
    this.experience = experience;
    return this;
  }

  public void unsetExperience() {
    this.experience = null;
  }

  /** Returns true if field experience is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience() {
    return this.experience != null;
  }

  public void setExperienceIsSet(boolean value) {
    if (!value) {
      this.experience = null;
    }
  }

  public java.lang.String getSalary() {
    return this.salary;
  }

  public WechatPositionListQuery setSalary(java.lang.String salary) {
    this.salary = salary;
    return this;
  }

  public void unsetSalary() {
    this.salary = null;
  }

  /** Returns true if field salary is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary() {
    return this.salary != null;
  }

  public void setSalaryIsSet(boolean value) {
    if (!value) {
      this.salary = null;
    }
  }

  public java.lang.String getDegree() {
    return this.degree;
  }

  public WechatPositionListQuery setDegree(java.lang.String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public WechatPositionListQuery setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getDid() {
    return this.did;
  }

  public WechatPositionListQuery setDid(int did) {
    this.did = did;
    setDidIsSet(true);
    return this;
  }

  public void unsetDid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DID_ISSET_ID);
  }

  /** Returns true if field did is set (has been assigned a value) and false otherwise */
  public boolean isSetDid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DID_ISSET_ID);
  }

  public void setDidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DID_ISSET_ID, value);
  }

  public java.lang.String getDepartment() {
    return this.department;
  }

  public WechatPositionListQuery setDepartment(java.lang.String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public boolean isOrder_by_priority() {
    return this.order_by_priority;
  }

  public WechatPositionListQuery setOrder_by_priority(boolean order_by_priority) {
    this.order_by_priority = order_by_priority;
    setOrder_by_priorityIsSet(true);
    return this;
  }

  public void unsetOrder_by_priority() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
  }

  /** Returns true if field order_by_priority is set (has been assigned a value) and false otherwise */
  public boolean isSetOrder_by_priority() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
  }

  public void setOrder_by_priorityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID, value);
  }

  public java.lang.String getCustom() {
    return this.custom;
  }

  public WechatPositionListQuery setCustom(java.lang.String custom) {
    this.custom = custom;
    return this;
  }

  public void unsetCustom() {
    this.custom = null;
  }

  /** Returns true if field custom is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom() {
    return this.custom != null;
  }

  public void setCustomIsSet(boolean value) {
    if (!value) {
      this.custom = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case PAGE_FROM:
      if (value == null) {
        unsetPage_from();
      } else {
        setPage_from((java.lang.Integer)value);
      }
      break;

    case PAGE_SIZE:
      if (value == null) {
        unsetPage_size();
      } else {
        setPage_size((java.lang.Integer)value);
      }
      break;

    case KEYWORDS:
      if (value == null) {
        unsetKeywords();
      } else {
        setKeywords((java.lang.String)value);
      }
      break;

    case CITIES:
      if (value == null) {
        unsetCities();
      } else {
        setCities((java.lang.String)value);
      }
      break;

    case INDUSTRIES:
      if (value == null) {
        unsetIndustries();
      } else {
        setIndustries((java.lang.String)value);
      }
      break;

    case OCCUPATIONS:
      if (value == null) {
        unsetOccupations();
      } else {
        setOccupations((java.lang.String)value);
      }
      break;

    case SCALE:
      if (value == null) {
        unsetScale();
      } else {
        setScale((java.lang.String)value);
      }
      break;

    case CANDIDATE_SOURCE:
      if (value == null) {
        unsetCandidate_source();
      } else {
        setCandidate_source((java.lang.String)value);
      }
      break;

    case EMPLOYMENT_TYPE:
      if (value == null) {
        unsetEmployment_type();
      } else {
        setEmployment_type((java.lang.String)value);
      }
      break;

    case EXPERIENCE:
      if (value == null) {
        unsetExperience();
      } else {
        setExperience((java.lang.String)value);
      }
      break;

    case SALARY:
      if (value == null) {
        unsetSalary();
      } else {
        setSalary((java.lang.String)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((java.lang.String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case DID:
      if (value == null) {
        unsetDid();
      } else {
        setDid((java.lang.Integer)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((java.lang.String)value);
      }
      break;

    case ORDER_BY_PRIORITY:
      if (value == null) {
        unsetOrder_by_priority();
      } else {
        setOrder_by_priority((java.lang.Boolean)value);
      }
      break;

    case CUSTOM:
      if (value == null) {
        unsetCustom();
      } else {
        setCustom((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PAGE_FROM:
      return getPage_from();

    case PAGE_SIZE:
      return getPage_size();

    case KEYWORDS:
      return getKeywords();

    case CITIES:
      return getCities();

    case INDUSTRIES:
      return getIndustries();

    case OCCUPATIONS:
      return getOccupations();

    case SCALE:
      return getScale();

    case CANDIDATE_SOURCE:
      return getCandidate_source();

    case EMPLOYMENT_TYPE:
      return getEmployment_type();

    case EXPERIENCE:
      return getExperience();

    case SALARY:
      return getSalary();

    case DEGREE:
      return getDegree();

    case COMPANY_ID:
      return getCompany_id();

    case DID:
      return getDid();

    case DEPARTMENT:
      return getDepartment();

    case ORDER_BY_PRIORITY:
      return isOrder_by_priority();

    case CUSTOM:
      return getCustom();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PAGE_FROM:
      return isSetPage_from();
    case PAGE_SIZE:
      return isSetPage_size();
    case KEYWORDS:
      return isSetKeywords();
    case CITIES:
      return isSetCities();
    case INDUSTRIES:
      return isSetIndustries();
    case OCCUPATIONS:
      return isSetOccupations();
    case SCALE:
      return isSetScale();
    case CANDIDATE_SOURCE:
      return isSetCandidate_source();
    case EMPLOYMENT_TYPE:
      return isSetEmployment_type();
    case EXPERIENCE:
      return isSetExperience();
    case SALARY:
      return isSetSalary();
    case DEGREE:
      return isSetDegree();
    case COMPANY_ID:
      return isSetCompany_id();
    case DID:
      return isSetDid();
    case DEPARTMENT:
      return isSetDepartment();
    case ORDER_BY_PRIORITY:
      return isSetOrder_by_priority();
    case CUSTOM:
      return isSetCustom();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WechatPositionListQuery)
      return this.equals((WechatPositionListQuery)that);
    return false;
  }

  public boolean equals(WechatPositionListQuery that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_page_from = true && this.isSetPage_from();
    boolean that_present_page_from = true && that.isSetPage_from();
    if (this_present_page_from || that_present_page_from) {
      if (!(this_present_page_from && that_present_page_from))
        return false;
      if (this.page_from != that.page_from)
        return false;
    }

    boolean this_present_page_size = true && this.isSetPage_size();
    boolean that_present_page_size = true && that.isSetPage_size();
    if (this_present_page_size || that_present_page_size) {
      if (!(this_present_page_size && that_present_page_size))
        return false;
      if (this.page_size != that.page_size)
        return false;
    }

    boolean this_present_keywords = true && this.isSetKeywords();
    boolean that_present_keywords = true && that.isSetKeywords();
    if (this_present_keywords || that_present_keywords) {
      if (!(this_present_keywords && that_present_keywords))
        return false;
      if (!this.keywords.equals(that.keywords))
        return false;
    }

    boolean this_present_cities = true && this.isSetCities();
    boolean that_present_cities = true && that.isSetCities();
    if (this_present_cities || that_present_cities) {
      if (!(this_present_cities && that_present_cities))
        return false;
      if (!this.cities.equals(that.cities))
        return false;
    }

    boolean this_present_industries = true && this.isSetIndustries();
    boolean that_present_industries = true && that.isSetIndustries();
    if (this_present_industries || that_present_industries) {
      if (!(this_present_industries && that_present_industries))
        return false;
      if (!this.industries.equals(that.industries))
        return false;
    }

    boolean this_present_occupations = true && this.isSetOccupations();
    boolean that_present_occupations = true && that.isSetOccupations();
    if (this_present_occupations || that_present_occupations) {
      if (!(this_present_occupations && that_present_occupations))
        return false;
      if (!this.occupations.equals(that.occupations))
        return false;
    }

    boolean this_present_scale = true && this.isSetScale();
    boolean that_present_scale = true && that.isSetScale();
    if (this_present_scale || that_present_scale) {
      if (!(this_present_scale && that_present_scale))
        return false;
      if (!this.scale.equals(that.scale))
        return false;
    }

    boolean this_present_candidate_source = true && this.isSetCandidate_source();
    boolean that_present_candidate_source = true && that.isSetCandidate_source();
    if (this_present_candidate_source || that_present_candidate_source) {
      if (!(this_present_candidate_source && that_present_candidate_source))
        return false;
      if (!this.candidate_source.equals(that.candidate_source))
        return false;
    }

    boolean this_present_employment_type = true && this.isSetEmployment_type();
    boolean that_present_employment_type = true && that.isSetEmployment_type();
    if (this_present_employment_type || that_present_employment_type) {
      if (!(this_present_employment_type && that_present_employment_type))
        return false;
      if (!this.employment_type.equals(that.employment_type))
        return false;
    }

    boolean this_present_experience = true && this.isSetExperience();
    boolean that_present_experience = true && that.isSetExperience();
    if (this_present_experience || that_present_experience) {
      if (!(this_present_experience && that_present_experience))
        return false;
      if (!this.experience.equals(that.experience))
        return false;
    }

    boolean this_present_salary = true && this.isSetSalary();
    boolean that_present_salary = true && that.isSetSalary();
    if (this_present_salary || that_present_salary) {
      if (!(this_present_salary && that_present_salary))
        return false;
      if (!this.salary.equals(that.salary))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_did = true && this.isSetDid();
    boolean that_present_did = true && that.isSetDid();
    if (this_present_did || that_present_did) {
      if (!(this_present_did && that_present_did))
        return false;
      if (this.did != that.did)
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_order_by_priority = true && this.isSetOrder_by_priority();
    boolean that_present_order_by_priority = true && that.isSetOrder_by_priority();
    if (this_present_order_by_priority || that_present_order_by_priority) {
      if (!(this_present_order_by_priority && that_present_order_by_priority))
        return false;
      if (this.order_by_priority != that.order_by_priority)
        return false;
    }

    boolean this_present_custom = true && this.isSetCustom();
    boolean that_present_custom = true && that.isSetCustom();
    if (this_present_custom || that_present_custom) {
      if (!(this_present_custom && that_present_custom))
        return false;
      if (!this.custom.equals(that.custom))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPage_from()) ? 131071 : 524287);
    if (isSetPage_from())
      hashCode = hashCode * 8191 + page_from;

    hashCode = hashCode * 8191 + ((isSetPage_size()) ? 131071 : 524287);
    if (isSetPage_size())
      hashCode = hashCode * 8191 + page_size;

    hashCode = hashCode * 8191 + ((isSetKeywords()) ? 131071 : 524287);
    if (isSetKeywords())
      hashCode = hashCode * 8191 + keywords.hashCode();

    hashCode = hashCode * 8191 + ((isSetCities()) ? 131071 : 524287);
    if (isSetCities())
      hashCode = hashCode * 8191 + cities.hashCode();

    hashCode = hashCode * 8191 + ((isSetIndustries()) ? 131071 : 524287);
    if (isSetIndustries())
      hashCode = hashCode * 8191 + industries.hashCode();

    hashCode = hashCode * 8191 + ((isSetOccupations()) ? 131071 : 524287);
    if (isSetOccupations())
      hashCode = hashCode * 8191 + occupations.hashCode();

    hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
    if (isSetScale())
      hashCode = hashCode * 8191 + scale.hashCode();

    hashCode = hashCode * 8191 + ((isSetCandidate_source()) ? 131071 : 524287);
    if (isSetCandidate_source())
      hashCode = hashCode * 8191 + candidate_source.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmployment_type()) ? 131071 : 524287);
    if (isSetEmployment_type())
      hashCode = hashCode * 8191 + employment_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetExperience()) ? 131071 : 524287);
    if (isSetExperience())
      hashCode = hashCode * 8191 + experience.hashCode();

    hashCode = hashCode * 8191 + ((isSetSalary()) ? 131071 : 524287);
    if (isSetSalary())
      hashCode = hashCode * 8191 + salary.hashCode();

    hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
    if (isSetDegree())
      hashCode = hashCode * 8191 + degree.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetDid()) ? 131071 : 524287);
    if (isSetDid())
      hashCode = hashCode * 8191 + did;

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrder_by_priority()) ? 131071 : 524287);
    if (isSetOrder_by_priority())
      hashCode = hashCode * 8191 + ((order_by_priority) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
    if (isSetCustom())
      hashCode = hashCode * 8191 + custom.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WechatPositionListQuery other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPage_from()).compareTo(other.isSetPage_from());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage_from()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_from, other.page_from);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPage_size()).compareTo(other.isSetPage_size());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPage_size()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_size, other.page_size);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeywords()).compareTo(other.isSetKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeywords()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keywords, other.keywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCities()).compareTo(other.isSetCities());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCities()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cities, other.cities);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIndustries()).compareTo(other.isSetIndustries());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIndustries()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industries, other.industries);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOccupations()).compareTo(other.isSetOccupations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupations, other.occupations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCandidate_source()).compareTo(other.isSetCandidate_source());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCandidate_source()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.candidate_source, other.candidate_source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployment_type()).compareTo(other.isSetEmployment_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployment_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employment_type, other.employment_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary()).compareTo(other.isSetSalary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary, other.salary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDid()).compareTo(other.isSetDid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.did, other.did);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrder_by_priority()).compareTo(other.isSetOrder_by_priority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrder_by_priority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_by_priority, other.order_by_priority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WechatPositionListQuery(");
    boolean first = true;

    if (isSetPage_from()) {
      sb.append("page_from:");
      sb.append(this.page_from);
      first = false;
    }
    if (isSetPage_size()) {
      if (!first) sb.append(", ");
      sb.append("page_size:");
      sb.append(this.page_size);
      first = false;
    }
    if (isSetKeywords()) {
      if (!first) sb.append(", ");
      sb.append("keywords:");
      if (this.keywords == null) {
        sb.append("null");
      } else {
        sb.append(this.keywords);
      }
      first = false;
    }
    if (isSetCities()) {
      if (!first) sb.append(", ");
      sb.append("cities:");
      if (this.cities == null) {
        sb.append("null");
      } else {
        sb.append(this.cities);
      }
      first = false;
    }
    if (isSetIndustries()) {
      if (!first) sb.append(", ");
      sb.append("industries:");
      if (this.industries == null) {
        sb.append("null");
      } else {
        sb.append(this.industries);
      }
      first = false;
    }
    if (isSetOccupations()) {
      if (!first) sb.append(", ");
      sb.append("occupations:");
      if (this.occupations == null) {
        sb.append("null");
      } else {
        sb.append(this.occupations);
      }
      first = false;
    }
    if (isSetScale()) {
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
    }
    if (isSetCandidate_source()) {
      if (!first) sb.append(", ");
      sb.append("candidate_source:");
      if (this.candidate_source == null) {
        sb.append("null");
      } else {
        sb.append(this.candidate_source);
      }
      first = false;
    }
    if (isSetEmployment_type()) {
      if (!first) sb.append(", ");
      sb.append("employment_type:");
      if (this.employment_type == null) {
        sb.append("null");
      } else {
        sb.append(this.employment_type);
      }
      first = false;
    }
    if (isSetExperience()) {
      if (!first) sb.append(", ");
      sb.append("experience:");
      if (this.experience == null) {
        sb.append("null");
      } else {
        sb.append(this.experience);
      }
      first = false;
    }
    if (isSetSalary()) {
      if (!first) sb.append(", ");
      sb.append("salary:");
      if (this.salary == null) {
        sb.append("null");
      } else {
        sb.append(this.salary);
      }
      first = false;
    }
    if (isSetDegree()) {
      if (!first) sb.append(", ");
      sb.append("degree:");
      if (this.degree == null) {
        sb.append("null");
      } else {
        sb.append(this.degree);
      }
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetDid()) {
      if (!first) sb.append(", ");
      sb.append("did:");
      sb.append(this.did);
      first = false;
    }
    if (isSetDepartment()) {
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
    }
    if (isSetOrder_by_priority()) {
      if (!first) sb.append(", ");
      sb.append("order_by_priority:");
      sb.append(this.order_by_priority);
      first = false;
    }
    if (isSetCustom()) {
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WechatPositionListQueryStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WechatPositionListQueryStandardScheme getScheme() {
      return new WechatPositionListQueryStandardScheme();
    }
  }

  private static class WechatPositionListQueryStandardScheme extends org.apache.thrift.scheme.StandardScheme<WechatPositionListQuery> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WechatPositionListQuery struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PAGE_FROM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page_from = iprot.readI32();
              struct.setPage_fromIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PAGE_SIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.page_size = iprot.readI32();
              struct.setPage_sizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // KEYWORDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.keywords = iprot.readString();
              struct.setKeywordsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CITIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cities = iprot.readString();
              struct.setCitiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INDUSTRIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.industries = iprot.readString();
              struct.setIndustriesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OCCUPATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.occupations = iprot.readString();
              struct.setOccupationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SCALE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.scale = iprot.readString();
              struct.setScaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CANDIDATE_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.candidate_source = iprot.readString();
              struct.setCandidate_sourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EMPLOYMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employment_type = iprot.readString();
              struct.setEmployment_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // EXPERIENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience = iprot.readString();
              struct.setExperienceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SALARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salary = iprot.readString();
              struct.setSalaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.did = iprot.readI32();
              struct.setDidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ORDER_BY_PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.order_by_priority = iprot.readBool();
              struct.setOrder_by_priorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CUSTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom = iprot.readString();
              struct.setCustomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WechatPositionListQuery struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetPage_from()) {
        oprot.writeFieldBegin(PAGE_FROM_FIELD_DESC);
        oprot.writeI32(struct.page_from);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPage_size()) {
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.page_size);
        oprot.writeFieldEnd();
      }
      if (struct.keywords != null) {
        if (struct.isSetKeywords()) {
          oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
          oprot.writeString(struct.keywords);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cities != null) {
        if (struct.isSetCities()) {
          oprot.writeFieldBegin(CITIES_FIELD_DESC);
          oprot.writeString(struct.cities);
          oprot.writeFieldEnd();
        }
      }
      if (struct.industries != null) {
        if (struct.isSetIndustries()) {
          oprot.writeFieldBegin(INDUSTRIES_FIELD_DESC);
          oprot.writeString(struct.industries);
          oprot.writeFieldEnd();
        }
      }
      if (struct.occupations != null) {
        if (struct.isSetOccupations()) {
          oprot.writeFieldBegin(OCCUPATIONS_FIELD_DESC);
          oprot.writeString(struct.occupations);
          oprot.writeFieldEnd();
        }
      }
      if (struct.scale != null) {
        if (struct.isSetScale()) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
      }
      if (struct.candidate_source != null) {
        if (struct.isSetCandidate_source()) {
          oprot.writeFieldBegin(CANDIDATE_SOURCE_FIELD_DESC);
          oprot.writeString(struct.candidate_source);
          oprot.writeFieldEnd();
        }
      }
      if (struct.employment_type != null) {
        if (struct.isSetEmployment_type()) {
          oprot.writeFieldBegin(EMPLOYMENT_TYPE_FIELD_DESC);
          oprot.writeString(struct.employment_type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.experience != null) {
        if (struct.isSetExperience()) {
          oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
          oprot.writeString(struct.experience);
          oprot.writeFieldEnd();
        }
      }
      if (struct.salary != null) {
        if (struct.isSetSalary()) {
          oprot.writeFieldBegin(SALARY_FIELD_DESC);
          oprot.writeString(struct.salary);
          oprot.writeFieldEnd();
        }
      }
      if (struct.degree != null) {
        if (struct.isSetDegree()) {
          oprot.writeFieldBegin(DEGREE_FIELD_DESC);
          oprot.writeString(struct.degree);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDid()) {
        oprot.writeFieldBegin(DID_FIELD_DESC);
        oprot.writeI32(struct.did);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        if (struct.isSetDepartment()) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          oprot.writeString(struct.department);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOrder_by_priority()) {
        oprot.writeFieldBegin(ORDER_BY_PRIORITY_FIELD_DESC);
        oprot.writeBool(struct.order_by_priority);
        oprot.writeFieldEnd();
      }
      if (struct.custom != null) {
        if (struct.isSetCustom()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WechatPositionListQueryTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WechatPositionListQueryTupleScheme getScheme() {
      return new WechatPositionListQueryTupleScheme();
    }
  }

  private static class WechatPositionListQueryTupleScheme extends org.apache.thrift.scheme.TupleScheme<WechatPositionListQuery> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WechatPositionListQuery struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPage_from()) {
        optionals.set(0);
      }
      if (struct.isSetPage_size()) {
        optionals.set(1);
      }
      if (struct.isSetKeywords()) {
        optionals.set(2);
      }
      if (struct.isSetCities()) {
        optionals.set(3);
      }
      if (struct.isSetIndustries()) {
        optionals.set(4);
      }
      if (struct.isSetOccupations()) {
        optionals.set(5);
      }
      if (struct.isSetScale()) {
        optionals.set(6);
      }
      if (struct.isSetCandidate_source()) {
        optionals.set(7);
      }
      if (struct.isSetEmployment_type()) {
        optionals.set(8);
      }
      if (struct.isSetExperience()) {
        optionals.set(9);
      }
      if (struct.isSetSalary()) {
        optionals.set(10);
      }
      if (struct.isSetDegree()) {
        optionals.set(11);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(12);
      }
      if (struct.isSetDid()) {
        optionals.set(13);
      }
      if (struct.isSetDepartment()) {
        optionals.set(14);
      }
      if (struct.isSetOrder_by_priority()) {
        optionals.set(15);
      }
      if (struct.isSetCustom()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetPage_from()) {
        oprot.writeI32(struct.page_from);
      }
      if (struct.isSetPage_size()) {
        oprot.writeI32(struct.page_size);
      }
      if (struct.isSetKeywords()) {
        oprot.writeString(struct.keywords);
      }
      if (struct.isSetCities()) {
        oprot.writeString(struct.cities);
      }
      if (struct.isSetIndustries()) {
        oprot.writeString(struct.industries);
      }
      if (struct.isSetOccupations()) {
        oprot.writeString(struct.occupations);
      }
      if (struct.isSetScale()) {
        oprot.writeString(struct.scale);
      }
      if (struct.isSetCandidate_source()) {
        oprot.writeString(struct.candidate_source);
      }
      if (struct.isSetEmployment_type()) {
        oprot.writeString(struct.employment_type);
      }
      if (struct.isSetExperience()) {
        oprot.writeString(struct.experience);
      }
      if (struct.isSetSalary()) {
        oprot.writeString(struct.salary);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetDid()) {
        oprot.writeI32(struct.did);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetOrder_by_priority()) {
        oprot.writeBool(struct.order_by_priority);
      }
      if (struct.isSetCustom()) {
        oprot.writeString(struct.custom);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WechatPositionListQuery struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.page_from = iprot.readI32();
        struct.setPage_fromIsSet(true);
      }
      if (incoming.get(1)) {
        struct.page_size = iprot.readI32();
        struct.setPage_sizeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.keywords = iprot.readString();
        struct.setKeywordsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cities = iprot.readString();
        struct.setCitiesIsSet(true);
      }
      if (incoming.get(4)) {
        struct.industries = iprot.readString();
        struct.setIndustriesIsSet(true);
      }
      if (incoming.get(5)) {
        struct.occupations = iprot.readString();
        struct.setOccupationsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.scale = iprot.readString();
        struct.setScaleIsSet(true);
      }
      if (incoming.get(7)) {
        struct.candidate_source = iprot.readString();
        struct.setCandidate_sourceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.employment_type = iprot.readString();
        struct.setEmployment_typeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.experience = iprot.readString();
        struct.setExperienceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.salary = iprot.readString();
        struct.setSalaryIsSet(true);
      }
      if (incoming.get(11)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(13)) {
        struct.did = iprot.readI32();
        struct.setDidIsSet(true);
      }
      if (incoming.get(14)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(15)) {
        struct.order_by_priority = iprot.readBool();
        struct.setOrder_by_priorityIsSet(true);
      }
      if (incoming.get(16)) {
        struct.custom = iprot.readString();
        struct.setCustomIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

