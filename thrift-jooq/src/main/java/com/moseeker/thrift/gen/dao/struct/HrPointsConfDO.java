/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-17")
public class HrPointsConfDO implements org.apache.thrift.TBase<HrPointsConfDO, HrPointsConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrPointsConfDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrPointsConfDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField STATUS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("status_name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField REWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("reward", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField IS_USING_FIELD_DESC = new org.apache.thrift.protocol.TField("is_using", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ORDER_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("order_num", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField _UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_update_time", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TAG_FIELD_DESC = new org.apache.thrift.protocol.TField("tag", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField IS_APPLIER_SEND_FIELD_DESC = new org.apache.thrift.protocol.TField("is_applier_send", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField APPLIER_FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("applier_first", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField APPLIER_REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("applier_remark", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField IS_RECOM_SEND_FIELD_DESC = new org.apache.thrift.protocol.TField("is_recom_send", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField RECOM_FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("recom_first", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField RECOM_REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("recom_remark", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("template_id", org.apache.thrift.protocol.TType.I32, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrPointsConfDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrPointsConfDOTupleSchemeFactory();

  public int id; // optional
  public int company_id; // optional
  public java.lang.String status_name; // optional
  public int reward; // optional
  public java.lang.String description; // optional
  public int is_using; // optional
  public int order_num; // optional
  public java.lang.String _update_time; // optional
  public java.lang.String tag; // optional
  public int is_applier_send; // optional
  public java.lang.String applier_first; // optional
  public java.lang.String applier_remark; // optional
  public int is_recom_send; // optional
  public java.lang.String recom_first; // optional
  public java.lang.String recom_remark; // optional
  public int template_id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "company_id"),
    STATUS_NAME((short)3, "status_name"),
    REWARD((short)4, "reward"),
    DESCRIPTION((short)5, "description"),
    IS_USING((short)6, "is_using"),
    ORDER_NUM((short)7, "order_num"),
    _UPDATE_TIME((short)8, "_update_time"),
    TAG((short)9, "tag"),
    IS_APPLIER_SEND((short)10, "is_applier_send"),
    APPLIER_FIRST((short)11, "applier_first"),
    APPLIER_REMARK((short)12, "applier_remark"),
    IS_RECOM_SEND((short)13, "is_recom_send"),
    RECOM_FIRST((short)14, "recom_first"),
    RECOM_REMARK((short)15, "recom_remark"),
    TEMPLATE_ID((short)16, "template_id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // STATUS_NAME
          return STATUS_NAME;
        case 4: // REWARD
          return REWARD;
        case 5: // DESCRIPTION
          return DESCRIPTION;
        case 6: // IS_USING
          return IS_USING;
        case 7: // ORDER_NUM
          return ORDER_NUM;
        case 8: // _UPDATE_TIME
          return _UPDATE_TIME;
        case 9: // TAG
          return TAG;
        case 10: // IS_APPLIER_SEND
          return IS_APPLIER_SEND;
        case 11: // APPLIER_FIRST
          return APPLIER_FIRST;
        case 12: // APPLIER_REMARK
          return APPLIER_REMARK;
        case 13: // IS_RECOM_SEND
          return IS_RECOM_SEND;
        case 14: // RECOM_FIRST
          return RECOM_FIRST;
        case 15: // RECOM_REMARK
          return RECOM_REMARK;
        case 16: // TEMPLATE_ID
          return TEMPLATE_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANY_ID_ISSET_ID = 1;
  private static final int __REWARD_ISSET_ID = 2;
  private static final int __IS_USING_ISSET_ID = 3;
  private static final int __ORDER_NUM_ISSET_ID = 4;
  private static final int __IS_APPLIER_SEND_ISSET_ID = 5;
  private static final int __IS_RECOM_SEND_ISSET_ID = 6;
  private static final int __TEMPLATE_ID_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.STATUS_NAME,_Fields.REWARD,_Fields.DESCRIPTION,_Fields.IS_USING,_Fields.ORDER_NUM,_Fields._UPDATE_TIME,_Fields.TAG,_Fields.IS_APPLIER_SEND,_Fields.APPLIER_FIRST,_Fields.APPLIER_REMARK,_Fields.IS_RECOM_SEND,_Fields.RECOM_FIRST,_Fields.RECOM_REMARK,_Fields.TEMPLATE_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS_NAME, new org.apache.thrift.meta_data.FieldMetaData("status_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REWARD, new org.apache.thrift.meta_data.FieldMetaData("reward", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_USING, new org.apache.thrift.meta_data.FieldMetaData("is_using", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ORDER_NUM, new org.apache.thrift.meta_data.FieldMetaData("order_num", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAG, new org.apache.thrift.meta_data.FieldMetaData("tag", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_APPLIER_SEND, new org.apache.thrift.meta_data.FieldMetaData("is_applier_send", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLIER_FIRST, new org.apache.thrift.meta_data.FieldMetaData("applier_first", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLIER_REMARK, new org.apache.thrift.meta_data.FieldMetaData("applier_remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOM_SEND, new org.apache.thrift.meta_data.FieldMetaData("is_recom_send", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_FIRST, new org.apache.thrift.meta_data.FieldMetaData("recom_first", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_REMARK, new org.apache.thrift.meta_data.FieldMetaData("recom_remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("template_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrPointsConfDO.class, metaDataMap);
  }

  public HrPointsConfDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrPointsConfDO(HrPointsConfDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.company_id = other.company_id;
    if (other.isSetStatus_name()) {
      this.status_name = other.status_name;
    }
    this.reward = other.reward;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    this.is_using = other.is_using;
    this.order_num = other.order_num;
    if (other.isSet_update_time()) {
      this._update_time = other._update_time;
    }
    if (other.isSetTag()) {
      this.tag = other.tag;
    }
    this.is_applier_send = other.is_applier_send;
    if (other.isSetApplier_first()) {
      this.applier_first = other.applier_first;
    }
    if (other.isSetApplier_remark()) {
      this.applier_remark = other.applier_remark;
    }
    this.is_recom_send = other.is_recom_send;
    if (other.isSetRecom_first()) {
      this.recom_first = other.recom_first;
    }
    if (other.isSetRecom_remark()) {
      this.recom_remark = other.recom_remark;
    }
    this.template_id = other.template_id;
  }

  public HrPointsConfDO deepCopy() {
    return new HrPointsConfDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompany_idIsSet(false);
    this.company_id = 0;
    this.status_name = null;
    setRewardIsSet(false);
    this.reward = 0;
    this.description = null;
    setIs_usingIsSet(false);
    this.is_using = 0;
    setOrder_numIsSet(false);
    this.order_num = 0;
    this._update_time = null;
    this.tag = null;
    setIs_applier_sendIsSet(false);
    this.is_applier_send = 0;
    this.applier_first = null;
    this.applier_remark = null;
    setIs_recom_sendIsSet(false);
    this.is_recom_send = 0;
    this.recom_first = null;
    this.recom_remark = null;
    setTemplate_idIsSet(false);
    this.template_id = 0;
  }

  public int getId() {
    return this.id;
  }

  public HrPointsConfDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public HrPointsConfDO setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public java.lang.String getStatus_name() {
    return this.status_name;
  }

  public HrPointsConfDO setStatus_name(java.lang.String status_name) {
    this.status_name = status_name;
    return this;
  }

  public void unsetStatus_name() {
    this.status_name = null;
  }

  /** Returns true if field status_name is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus_name() {
    return this.status_name != null;
  }

  public void setStatus_nameIsSet(boolean value) {
    if (!value) {
      this.status_name = null;
    }
  }

  public int getReward() {
    return this.reward;
  }

  public HrPointsConfDO setReward(int reward) {
    this.reward = reward;
    setRewardIsSet(true);
    return this;
  }

  public void unsetReward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  /** Returns true if field reward is set (has been assigned a value) and false otherwise */
  public boolean isSetReward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REWARD_ISSET_ID);
  }

  public void setRewardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REWARD_ISSET_ID, value);
  }

  public java.lang.String getDescription() {
    return this.description;
  }

  public HrPointsConfDO setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public int getIs_using() {
    return this.is_using;
  }

  public HrPointsConfDO setIs_using(int is_using) {
    this.is_using = is_using;
    setIs_usingIsSet(true);
    return this;
  }

  public void unsetIs_using() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_USING_ISSET_ID);
  }

  /** Returns true if field is_using is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_using() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_USING_ISSET_ID);
  }

  public void setIs_usingIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_USING_ISSET_ID, value);
  }

  public int getOrder_num() {
    return this.order_num;
  }

  public HrPointsConfDO setOrder_num(int order_num) {
    this.order_num = order_num;
    setOrder_numIsSet(true);
    return this;
  }

  public void unsetOrder_num() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDER_NUM_ISSET_ID);
  }

  /** Returns true if field order_num is set (has been assigned a value) and false otherwise */
  public boolean isSetOrder_num() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDER_NUM_ISSET_ID);
  }

  public void setOrder_numIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDER_NUM_ISSET_ID, value);
  }

  public java.lang.String get_update_time() {
    return this._update_time;
  }

  public HrPointsConfDO set_update_time(java.lang.String _update_time) {
    this._update_time = _update_time;
    return this;
  }

  public void unset_update_time() {
    this._update_time = null;
  }

  /** Returns true if field _update_time is set (has been assigned a value) and false otherwise */
  public boolean isSet_update_time() {
    return this._update_time != null;
  }

  public void set_update_timeIsSet(boolean value) {
    if (!value) {
      this._update_time = null;
    }
  }

  public java.lang.String getTag() {
    return this.tag;
  }

  public HrPointsConfDO setTag(java.lang.String tag) {
    this.tag = tag;
    return this;
  }

  public void unsetTag() {
    this.tag = null;
  }

  /** Returns true if field tag is set (has been assigned a value) and false otherwise */
  public boolean isSetTag() {
    return this.tag != null;
  }

  public void setTagIsSet(boolean value) {
    if (!value) {
      this.tag = null;
    }
  }

  public int getIs_applier_send() {
    return this.is_applier_send;
  }

  public HrPointsConfDO setIs_applier_send(int is_applier_send) {
    this.is_applier_send = is_applier_send;
    setIs_applier_sendIsSet(true);
    return this;
  }

  public void unsetIs_applier_send() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_APPLIER_SEND_ISSET_ID);
  }

  /** Returns true if field is_applier_send is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_applier_send() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_APPLIER_SEND_ISSET_ID);
  }

  public void setIs_applier_sendIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_APPLIER_SEND_ISSET_ID, value);
  }

  public java.lang.String getApplier_first() {
    return this.applier_first;
  }

  public HrPointsConfDO setApplier_first(java.lang.String applier_first) {
    this.applier_first = applier_first;
    return this;
  }

  public void unsetApplier_first() {
    this.applier_first = null;
  }

  /** Returns true if field applier_first is set (has been assigned a value) and false otherwise */
  public boolean isSetApplier_first() {
    return this.applier_first != null;
  }

  public void setApplier_firstIsSet(boolean value) {
    if (!value) {
      this.applier_first = null;
    }
  }

  public java.lang.String getApplier_remark() {
    return this.applier_remark;
  }

  public HrPointsConfDO setApplier_remark(java.lang.String applier_remark) {
    this.applier_remark = applier_remark;
    return this;
  }

  public void unsetApplier_remark() {
    this.applier_remark = null;
  }

  /** Returns true if field applier_remark is set (has been assigned a value) and false otherwise */
  public boolean isSetApplier_remark() {
    return this.applier_remark != null;
  }

  public void setApplier_remarkIsSet(boolean value) {
    if (!value) {
      this.applier_remark = null;
    }
  }

  public int getIs_recom_send() {
    return this.is_recom_send;
  }

  public HrPointsConfDO setIs_recom_send(int is_recom_send) {
    this.is_recom_send = is_recom_send;
    setIs_recom_sendIsSet(true);
    return this;
  }

  public void unsetIs_recom_send() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_RECOM_SEND_ISSET_ID);
  }

  /** Returns true if field is_recom_send is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_recom_send() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_RECOM_SEND_ISSET_ID);
  }

  public void setIs_recom_sendIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_RECOM_SEND_ISSET_ID, value);
  }

  public java.lang.String getRecom_first() {
    return this.recom_first;
  }

  public HrPointsConfDO setRecom_first(java.lang.String recom_first) {
    this.recom_first = recom_first;
    return this;
  }

  public void unsetRecom_first() {
    this.recom_first = null;
  }

  /** Returns true if field recom_first is set (has been assigned a value) and false otherwise */
  public boolean isSetRecom_first() {
    return this.recom_first != null;
  }

  public void setRecom_firstIsSet(boolean value) {
    if (!value) {
      this.recom_first = null;
    }
  }

  public java.lang.String getRecom_remark() {
    return this.recom_remark;
  }

  public HrPointsConfDO setRecom_remark(java.lang.String recom_remark) {
    this.recom_remark = recom_remark;
    return this;
  }

  public void unsetRecom_remark() {
    this.recom_remark = null;
  }

  /** Returns true if field recom_remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRecom_remark() {
    return this.recom_remark != null;
  }

  public void setRecom_remarkIsSet(boolean value) {
    if (!value) {
      this.recom_remark = null;
    }
  }

  public int getTemplate_id() {
    return this.template_id;
  }

  public HrPointsConfDO setTemplate_id(int template_id) {
    this.template_id = template_id;
    setTemplate_idIsSet(true);
    return this;
  }

  public void unsetTemplate_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TEMPLATE_ID_ISSET_ID);
  }

  /** Returns true if field template_id is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplate_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TEMPLATE_ID_ISSET_ID);
  }

  public void setTemplate_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TEMPLATE_ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case STATUS_NAME:
      if (value == null) {
        unsetStatus_name();
      } else {
        setStatus_name((java.lang.String)value);
      }
      break;

    case REWARD:
      if (value == null) {
        unsetReward();
      } else {
        setReward((java.lang.Integer)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case IS_USING:
      if (value == null) {
        unsetIs_using();
      } else {
        setIs_using((java.lang.Integer)value);
      }
      break;

    case ORDER_NUM:
      if (value == null) {
        unsetOrder_num();
      } else {
        setOrder_num((java.lang.Integer)value);
      }
      break;

    case _UPDATE_TIME:
      if (value == null) {
        unset_update_time();
      } else {
        set_update_time((java.lang.String)value);
      }
      break;

    case TAG:
      if (value == null) {
        unsetTag();
      } else {
        setTag((java.lang.String)value);
      }
      break;

    case IS_APPLIER_SEND:
      if (value == null) {
        unsetIs_applier_send();
      } else {
        setIs_applier_send((java.lang.Integer)value);
      }
      break;

    case APPLIER_FIRST:
      if (value == null) {
        unsetApplier_first();
      } else {
        setApplier_first((java.lang.String)value);
      }
      break;

    case APPLIER_REMARK:
      if (value == null) {
        unsetApplier_remark();
      } else {
        setApplier_remark((java.lang.String)value);
      }
      break;

    case IS_RECOM_SEND:
      if (value == null) {
        unsetIs_recom_send();
      } else {
        setIs_recom_send((java.lang.Integer)value);
      }
      break;

    case RECOM_FIRST:
      if (value == null) {
        unsetRecom_first();
      } else {
        setRecom_first((java.lang.String)value);
      }
      break;

    case RECOM_REMARK:
      if (value == null) {
        unsetRecom_remark();
      } else {
        setRecom_remark((java.lang.String)value);
      }
      break;

    case TEMPLATE_ID:
      if (value == null) {
        unsetTemplate_id();
      } else {
        setTemplate_id((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompany_id();

    case STATUS_NAME:
      return getStatus_name();

    case REWARD:
      return getReward();

    case DESCRIPTION:
      return getDescription();

    case IS_USING:
      return getIs_using();

    case ORDER_NUM:
      return getOrder_num();

    case _UPDATE_TIME:
      return get_update_time();

    case TAG:
      return getTag();

    case IS_APPLIER_SEND:
      return getIs_applier_send();

    case APPLIER_FIRST:
      return getApplier_first();

    case APPLIER_REMARK:
      return getApplier_remark();

    case IS_RECOM_SEND:
      return getIs_recom_send();

    case RECOM_FIRST:
      return getRecom_first();

    case RECOM_REMARK:
      return getRecom_remark();

    case TEMPLATE_ID:
      return getTemplate_id();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompany_id();
    case STATUS_NAME:
      return isSetStatus_name();
    case REWARD:
      return isSetReward();
    case DESCRIPTION:
      return isSetDescription();
    case IS_USING:
      return isSetIs_using();
    case ORDER_NUM:
      return isSetOrder_num();
    case _UPDATE_TIME:
      return isSet_update_time();
    case TAG:
      return isSetTag();
    case IS_APPLIER_SEND:
      return isSetIs_applier_send();
    case APPLIER_FIRST:
      return isSetApplier_first();
    case APPLIER_REMARK:
      return isSetApplier_remark();
    case IS_RECOM_SEND:
      return isSetIs_recom_send();
    case RECOM_FIRST:
      return isSetRecom_first();
    case RECOM_REMARK:
      return isSetRecom_remark();
    case TEMPLATE_ID:
      return isSetTemplate_id();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrPointsConfDO)
      return this.equals((HrPointsConfDO)that);
    return false;
  }

  public boolean equals(HrPointsConfDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_status_name = true && this.isSetStatus_name();
    boolean that_present_status_name = true && that.isSetStatus_name();
    if (this_present_status_name || that_present_status_name) {
      if (!(this_present_status_name && that_present_status_name))
        return false;
      if (!this.status_name.equals(that.status_name))
        return false;
    }

    boolean this_present_reward = true && this.isSetReward();
    boolean that_present_reward = true && that.isSetReward();
    if (this_present_reward || that_present_reward) {
      if (!(this_present_reward && that_present_reward))
        return false;
      if (this.reward != that.reward)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_is_using = true && this.isSetIs_using();
    boolean that_present_is_using = true && that.isSetIs_using();
    if (this_present_is_using || that_present_is_using) {
      if (!(this_present_is_using && that_present_is_using))
        return false;
      if (this.is_using != that.is_using)
        return false;
    }

    boolean this_present_order_num = true && this.isSetOrder_num();
    boolean that_present_order_num = true && that.isSetOrder_num();
    if (this_present_order_num || that_present_order_num) {
      if (!(this_present_order_num && that_present_order_num))
        return false;
      if (this.order_num != that.order_num)
        return false;
    }

    boolean this_present__update_time = true && this.isSet_update_time();
    boolean that_present__update_time = true && that.isSet_update_time();
    if (this_present__update_time || that_present__update_time) {
      if (!(this_present__update_time && that_present__update_time))
        return false;
      if (!this._update_time.equals(that._update_time))
        return false;
    }

    boolean this_present_tag = true && this.isSetTag();
    boolean that_present_tag = true && that.isSetTag();
    if (this_present_tag || that_present_tag) {
      if (!(this_present_tag && that_present_tag))
        return false;
      if (!this.tag.equals(that.tag))
        return false;
    }

    boolean this_present_is_applier_send = true && this.isSetIs_applier_send();
    boolean that_present_is_applier_send = true && that.isSetIs_applier_send();
    if (this_present_is_applier_send || that_present_is_applier_send) {
      if (!(this_present_is_applier_send && that_present_is_applier_send))
        return false;
      if (this.is_applier_send != that.is_applier_send)
        return false;
    }

    boolean this_present_applier_first = true && this.isSetApplier_first();
    boolean that_present_applier_first = true && that.isSetApplier_first();
    if (this_present_applier_first || that_present_applier_first) {
      if (!(this_present_applier_first && that_present_applier_first))
        return false;
      if (!this.applier_first.equals(that.applier_first))
        return false;
    }

    boolean this_present_applier_remark = true && this.isSetApplier_remark();
    boolean that_present_applier_remark = true && that.isSetApplier_remark();
    if (this_present_applier_remark || that_present_applier_remark) {
      if (!(this_present_applier_remark && that_present_applier_remark))
        return false;
      if (!this.applier_remark.equals(that.applier_remark))
        return false;
    }

    boolean this_present_is_recom_send = true && this.isSetIs_recom_send();
    boolean that_present_is_recom_send = true && that.isSetIs_recom_send();
    if (this_present_is_recom_send || that_present_is_recom_send) {
      if (!(this_present_is_recom_send && that_present_is_recom_send))
        return false;
      if (this.is_recom_send != that.is_recom_send)
        return false;
    }

    boolean this_present_recom_first = true && this.isSetRecom_first();
    boolean that_present_recom_first = true && that.isSetRecom_first();
    if (this_present_recom_first || that_present_recom_first) {
      if (!(this_present_recom_first && that_present_recom_first))
        return false;
      if (!this.recom_first.equals(that.recom_first))
        return false;
    }

    boolean this_present_recom_remark = true && this.isSetRecom_remark();
    boolean that_present_recom_remark = true && that.isSetRecom_remark();
    if (this_present_recom_remark || that_present_recom_remark) {
      if (!(this_present_recom_remark && that_present_recom_remark))
        return false;
      if (!this.recom_remark.equals(that.recom_remark))
        return false;
    }

    boolean this_present_template_id = true && this.isSetTemplate_id();
    boolean that_present_template_id = true && that.isSetTemplate_id();
    if (this_present_template_id || that_present_template_id) {
      if (!(this_present_template_id && that_present_template_id))
        return false;
      if (this.template_id != that.template_id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetStatus_name()) ? 131071 : 524287);
    if (isSetStatus_name())
      hashCode = hashCode * 8191 + status_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetReward()) ? 131071 : 524287);
    if (isSetReward())
      hashCode = hashCode * 8191 + reward;

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_using()) ? 131071 : 524287);
    if (isSetIs_using())
      hashCode = hashCode * 8191 + is_using;

    hashCode = hashCode * 8191 + ((isSetOrder_num()) ? 131071 : 524287);
    if (isSetOrder_num())
      hashCode = hashCode * 8191 + order_num;

    hashCode = hashCode * 8191 + ((isSet_update_time()) ? 131071 : 524287);
    if (isSet_update_time())
      hashCode = hashCode * 8191 + _update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetTag()) ? 131071 : 524287);
    if (isSetTag())
      hashCode = hashCode * 8191 + tag.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_applier_send()) ? 131071 : 524287);
    if (isSetIs_applier_send())
      hashCode = hashCode * 8191 + is_applier_send;

    hashCode = hashCode * 8191 + ((isSetApplier_first()) ? 131071 : 524287);
    if (isSetApplier_first())
      hashCode = hashCode * 8191 + applier_first.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplier_remark()) ? 131071 : 524287);
    if (isSetApplier_remark())
      hashCode = hashCode * 8191 + applier_remark.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_recom_send()) ? 131071 : 524287);
    if (isSetIs_recom_send())
      hashCode = hashCode * 8191 + is_recom_send;

    hashCode = hashCode * 8191 + ((isSetRecom_first()) ? 131071 : 524287);
    if (isSetRecom_first())
      hashCode = hashCode * 8191 + recom_first.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecom_remark()) ? 131071 : 524287);
    if (isSetRecom_remark())
      hashCode = hashCode * 8191 + recom_remark.hashCode();

    hashCode = hashCode * 8191 + ((isSetTemplate_id()) ? 131071 : 524287);
    if (isSetTemplate_id())
      hashCode = hashCode * 8191 + template_id;

    return hashCode;
  }

  @Override
  public int compareTo(HrPointsConfDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus_name()).compareTo(other.isSetStatus_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status_name, other.status_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReward()).compareTo(other.isSetReward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reward, other.reward);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_using()).compareTo(other.isSetIs_using());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_using()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_using, other.is_using);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrder_num()).compareTo(other.isSetOrder_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrder_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_num, other.order_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_update_time()).compareTo(other.isSet_update_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_update_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._update_time, other._update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTag()).compareTo(other.isSetTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tag, other.tag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_applier_send()).compareTo(other.isSetIs_applier_send());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_applier_send()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_applier_send, other.is_applier_send);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplier_first()).compareTo(other.isSetApplier_first());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplier_first()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applier_first, other.applier_first);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplier_remark()).compareTo(other.isSetApplier_remark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplier_remark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applier_remark, other.applier_remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_recom_send()).compareTo(other.isSetIs_recom_send());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_recom_send()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_recom_send, other.is_recom_send);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecom_first()).compareTo(other.isSetRecom_first());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecom_first()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recom_first, other.recom_first);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecom_remark()).compareTo(other.isSetRecom_remark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecom_remark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recom_remark, other.recom_remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTemplate_id()).compareTo(other.isSetTemplate_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplate_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.template_id, other.template_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrPointsConfDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetStatus_name()) {
      if (!first) sb.append(", ");
      sb.append("status_name:");
      if (this.status_name == null) {
        sb.append("null");
      } else {
        sb.append(this.status_name);
      }
      first = false;
    }
    if (isSetReward()) {
      if (!first) sb.append(", ");
      sb.append("reward:");
      sb.append(this.reward);
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetIs_using()) {
      if (!first) sb.append(", ");
      sb.append("is_using:");
      sb.append(this.is_using);
      first = false;
    }
    if (isSetOrder_num()) {
      if (!first) sb.append(", ");
      sb.append("order_num:");
      sb.append(this.order_num);
      first = false;
    }
    if (isSet_update_time()) {
      if (!first) sb.append(", ");
      sb.append("_update_time:");
      if (this._update_time == null) {
        sb.append("null");
      } else {
        sb.append(this._update_time);
      }
      first = false;
    }
    if (isSetTag()) {
      if (!first) sb.append(", ");
      sb.append("tag:");
      if (this.tag == null) {
        sb.append("null");
      } else {
        sb.append(this.tag);
      }
      first = false;
    }
    if (isSetIs_applier_send()) {
      if (!first) sb.append(", ");
      sb.append("is_applier_send:");
      sb.append(this.is_applier_send);
      first = false;
    }
    if (isSetApplier_first()) {
      if (!first) sb.append(", ");
      sb.append("applier_first:");
      if (this.applier_first == null) {
        sb.append("null");
      } else {
        sb.append(this.applier_first);
      }
      first = false;
    }
    if (isSetApplier_remark()) {
      if (!first) sb.append(", ");
      sb.append("applier_remark:");
      if (this.applier_remark == null) {
        sb.append("null");
      } else {
        sb.append(this.applier_remark);
      }
      first = false;
    }
    if (isSetIs_recom_send()) {
      if (!first) sb.append(", ");
      sb.append("is_recom_send:");
      sb.append(this.is_recom_send);
      first = false;
    }
    if (isSetRecom_first()) {
      if (!first) sb.append(", ");
      sb.append("recom_first:");
      if (this.recom_first == null) {
        sb.append("null");
      } else {
        sb.append(this.recom_first);
      }
      first = false;
    }
    if (isSetRecom_remark()) {
      if (!first) sb.append(", ");
      sb.append("recom_remark:");
      if (this.recom_remark == null) {
        sb.append("null");
      } else {
        sb.append(this.recom_remark);
      }
      first = false;
    }
    if (isSetTemplate_id()) {
      if (!first) sb.append(", ");
      sb.append("template_id:");
      sb.append(this.template_id);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrPointsConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrPointsConfDOStandardScheme getScheme() {
      return new HrPointsConfDOStandardScheme();
    }
  }

  private static class HrPointsConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrPointsConfDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STATUS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status_name = iprot.readString();
              struct.setStatus_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reward = iprot.readI32();
              struct.setRewardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IS_USING
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_using = iprot.readI32();
              struct.setIs_usingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ORDER_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.order_num = iprot.readI32();
              struct.setOrder_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._update_time = iprot.readString();
              struct.set_update_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tag = iprot.readString();
              struct.setTagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IS_APPLIER_SEND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_applier_send = iprot.readI32();
              struct.setIs_applier_sendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPLIER_FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applier_first = iprot.readString();
              struct.setApplier_firstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPLIER_REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applier_remark = iprot.readString();
              struct.setApplier_remarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // IS_RECOM_SEND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_recom_send = iprot.readI32();
              struct.setIs_recom_sendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // RECOM_FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recom_first = iprot.readString();
              struct.setRecom_firstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RECOM_REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recom_remark = iprot.readString();
              struct.setRecom_remarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.template_id = iprot.readI32();
              struct.setTemplate_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.status_name != null) {
        if (struct.isSetStatus_name()) {
          oprot.writeFieldBegin(STATUS_NAME_FIELD_DESC);
          oprot.writeString(struct.status_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetReward()) {
        oprot.writeFieldBegin(REWARD_FIELD_DESC);
        oprot.writeI32(struct.reward);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_using()) {
        oprot.writeFieldBegin(IS_USING_FIELD_DESC);
        oprot.writeI32(struct.is_using);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOrder_num()) {
        oprot.writeFieldBegin(ORDER_NUM_FIELD_DESC);
        oprot.writeI32(struct.order_num);
        oprot.writeFieldEnd();
      }
      if (struct._update_time != null) {
        if (struct.isSet_update_time()) {
          oprot.writeFieldBegin(_UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct._update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tag != null) {
        if (struct.isSetTag()) {
          oprot.writeFieldBegin(TAG_FIELD_DESC);
          oprot.writeString(struct.tag);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_applier_send()) {
        oprot.writeFieldBegin(IS_APPLIER_SEND_FIELD_DESC);
        oprot.writeI32(struct.is_applier_send);
        oprot.writeFieldEnd();
      }
      if (struct.applier_first != null) {
        if (struct.isSetApplier_first()) {
          oprot.writeFieldBegin(APPLIER_FIRST_FIELD_DESC);
          oprot.writeString(struct.applier_first);
          oprot.writeFieldEnd();
        }
      }
      if (struct.applier_remark != null) {
        if (struct.isSetApplier_remark()) {
          oprot.writeFieldBegin(APPLIER_REMARK_FIELD_DESC);
          oprot.writeString(struct.applier_remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_recom_send()) {
        oprot.writeFieldBegin(IS_RECOM_SEND_FIELD_DESC);
        oprot.writeI32(struct.is_recom_send);
        oprot.writeFieldEnd();
      }
      if (struct.recom_first != null) {
        if (struct.isSetRecom_first()) {
          oprot.writeFieldBegin(RECOM_FIRST_FIELD_DESC);
          oprot.writeString(struct.recom_first);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recom_remark != null) {
        if (struct.isSetRecom_remark()) {
          oprot.writeFieldBegin(RECOM_REMARK_FIELD_DESC);
          oprot.writeString(struct.recom_remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTemplate_id()) {
        oprot.writeFieldBegin(TEMPLATE_ID_FIELD_DESC);
        oprot.writeI32(struct.template_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrPointsConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrPointsConfDOTupleScheme getScheme() {
      return new HrPointsConfDOTupleScheme();
    }
  }

  private static class HrPointsConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrPointsConfDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(1);
      }
      if (struct.isSetStatus_name()) {
        optionals.set(2);
      }
      if (struct.isSetReward()) {
        optionals.set(3);
      }
      if (struct.isSetDescription()) {
        optionals.set(4);
      }
      if (struct.isSetIs_using()) {
        optionals.set(5);
      }
      if (struct.isSetOrder_num()) {
        optionals.set(6);
      }
      if (struct.isSet_update_time()) {
        optionals.set(7);
      }
      if (struct.isSetTag()) {
        optionals.set(8);
      }
      if (struct.isSetIs_applier_send()) {
        optionals.set(9);
      }
      if (struct.isSetApplier_first()) {
        optionals.set(10);
      }
      if (struct.isSetApplier_remark()) {
        optionals.set(11);
      }
      if (struct.isSetIs_recom_send()) {
        optionals.set(12);
      }
      if (struct.isSetRecom_first()) {
        optionals.set(13);
      }
      if (struct.isSetRecom_remark()) {
        optionals.set(14);
      }
      if (struct.isSetTemplate_id()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetStatus_name()) {
        oprot.writeString(struct.status_name);
      }
      if (struct.isSetReward()) {
        oprot.writeI32(struct.reward);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetIs_using()) {
        oprot.writeI32(struct.is_using);
      }
      if (struct.isSetOrder_num()) {
        oprot.writeI32(struct.order_num);
      }
      if (struct.isSet_update_time()) {
        oprot.writeString(struct._update_time);
      }
      if (struct.isSetTag()) {
        oprot.writeString(struct.tag);
      }
      if (struct.isSetIs_applier_send()) {
        oprot.writeI32(struct.is_applier_send);
      }
      if (struct.isSetApplier_first()) {
        oprot.writeString(struct.applier_first);
      }
      if (struct.isSetApplier_remark()) {
        oprot.writeString(struct.applier_remark);
      }
      if (struct.isSetIs_recom_send()) {
        oprot.writeI32(struct.is_recom_send);
      }
      if (struct.isSetRecom_first()) {
        oprot.writeString(struct.recom_first);
      }
      if (struct.isSetRecom_remark()) {
        oprot.writeString(struct.recom_remark);
      }
      if (struct.isSetTemplate_id()) {
        oprot.writeI32(struct.template_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrPointsConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.status_name = iprot.readString();
        struct.setStatus_nameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.reward = iprot.readI32();
        struct.setRewardIsSet(true);
      }
      if (incoming.get(4)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.is_using = iprot.readI32();
        struct.setIs_usingIsSet(true);
      }
      if (incoming.get(6)) {
        struct.order_num = iprot.readI32();
        struct.setOrder_numIsSet(true);
      }
      if (incoming.get(7)) {
        struct._update_time = iprot.readString();
        struct.set_update_timeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.tag = iprot.readString();
        struct.setTagIsSet(true);
      }
      if (incoming.get(9)) {
        struct.is_applier_send = iprot.readI32();
        struct.setIs_applier_sendIsSet(true);
      }
      if (incoming.get(10)) {
        struct.applier_first = iprot.readString();
        struct.setApplier_firstIsSet(true);
      }
      if (incoming.get(11)) {
        struct.applier_remark = iprot.readString();
        struct.setApplier_remarkIsSet(true);
      }
      if (incoming.get(12)) {
        struct.is_recom_send = iprot.readI32();
        struct.setIs_recom_sendIsSet(true);
      }
      if (incoming.get(13)) {
        struct.recom_first = iprot.readString();
        struct.setRecom_firstIsSet(true);
      }
      if (incoming.get(14)) {
        struct.recom_remark = iprot.readString();
        struct.setRecom_remarkIsSet(true);
      }
      if (incoming.get(15)) {
        struct.template_id = iprot.readI32();
        struct.setTemplate_idIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

