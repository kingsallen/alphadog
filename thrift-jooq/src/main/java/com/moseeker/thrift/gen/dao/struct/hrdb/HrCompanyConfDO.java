/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-11-14")
public class HrCompanyConfDO implements org.apache.thrift.TBase<HrCompanyConfDO, HrCompanyConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrCompanyConfDO> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrCompanyConfDO");

    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField THEME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("themeId", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField HB_THROTTLE_FIELD_DESC = new org.apache.thrift.protocol.TField("hbThrottle", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField APP_REPLY_FIELD_DESC = new org.apache.thrift.protocol.TField("appReply", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField EMPLOYEE_BINDING_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeBinding", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField RECOMMEND_PRESENTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendPresentee", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField RECOMMEND_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendSuccess", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField FORWARD_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("forwardMessage", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField APPLICATION_COUNT_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationCountLimit", org.apache.thrift.protocol.TType.I16, (short)11);
    private static final org.apache.thrift.protocol.TField JOB_CUSTOM_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobCustomTitle", org.apache.thrift.protocol.TType.STRING, (short)12);
    private static final org.apache.thrift.protocol.TField SEARCH_SEQ_FIELD_DESC = new org.apache.thrift.protocol.TField("searchSeq", org.apache.thrift.protocol.TType.STRING, (short)13);
    private static final org.apache.thrift.protocol.TField SEARCH_IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("searchImg", org.apache.thrift.protocol.TType.STRING, (short)14);
    private static final org.apache.thrift.protocol.TField JOB_OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("jobOccupation", org.apache.thrift.protocol.TType.STRING, (short)15);
    private static final org.apache.thrift.protocol.TField TEAMNAME_CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("teamnameCustom", org.apache.thrift.protocol.TType.STRING, (short)16);
    private static final org.apache.thrift.protocol.TField APPLICATION_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationTime", org.apache.thrift.protocol.TType.STRING, (short)17);
    private static final org.apache.thrift.protocol.TField NEWJD_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("newjdStatus", org.apache.thrift.protocol.TType.I32, (short)18);
    private static final org.apache.thrift.protocol.TField HR_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("hrChat", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
    private static final org.apache.thrift.protocol.TField SHOW_IN_QX_FIELD_DESC = new org.apache.thrift.protocol.TField("showInQx", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
    private static final org.apache.thrift.protocol.TField EMPLOYEE_SLUG_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeSlug", org.apache.thrift.protocol.TType.STRING, (short)21);
    private static final org.apache.thrift.protocol.TField DISPLAY_LOCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("displayLocale", org.apache.thrift.protocol.TType.STRING, (short)22);
    private static final org.apache.thrift.protocol.TField TALENTPOOL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("talentpoolStatus", org.apache.thrift.protocol.TType.BYTE, (short)23);
    private static final org.apache.thrift.protocol.TField SCHOOL_APPLICATION_COUNT_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("schoolApplicationCountLimit", org.apache.thrift.protocol.TType.I16, (short)24);
    private static final org.apache.thrift.protocol.TField JOB51_SALARY_DISCUSS_FIELD_DESC = new org.apache.thrift.protocol.TField("job51SalaryDiscuss", org.apache.thrift.protocol.TType.I16, (short)25);
    private static final org.apache.thrift.protocol.TField VERYEAST_SWITCH_FIELD_DESC = new org.apache.thrift.protocol.TField("veryeastSwitch", org.apache.thrift.protocol.TType.I16, (short)26);
    private static final org.apache.thrift.protocol.TField IS_OPEN_GDPR_FIELD_DESC = new org.apache.thrift.protocol.TField("isOpenGdpr", org.apache.thrift.protocol.TType.BYTE, (short)27);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrCompanyConfDOStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrCompanyConfDOTupleSchemeFactory();

    public int companyId; // optional
    public int themeId; // optional
    public int hbThrottle; // optional
    public java.lang.String appReply; // optional
    public java.lang.String createTime; // optional
    public java.lang.String updateTime; // optional
    public java.lang.String employeeBinding; // optional
    public java.lang.String recommendPresentee; // optional
    public java.lang.String recommendSuccess; // optional
    public java.lang.String forwardMessage; // optional
    public short applicationCountLimit; // optional
    public java.lang.String jobCustomTitle; // optional
    public java.lang.String searchSeq; // optional
    public java.lang.String searchImg; // optional
    public java.lang.String jobOccupation; // optional
    public java.lang.String teamnameCustom; // optional
    public java.lang.String applicationTime; // optional
    public int newjdStatus; // optional
    public double hrChat; // optional
    public double showInQx; // optional
    public java.lang.String employeeSlug; // optional
    public java.lang.String displayLocale; // optional
    public byte talentpoolStatus; // optional
    public short schoolApplicationCountLimit; // optional
    public short job51SalaryDiscuss; // optional
    public short veryeastSwitch; // optional
    public byte isOpenGdpr; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        COMPANY_ID((short)1, "companyId"),
        THEME_ID((short)2, "themeId"),
        HB_THROTTLE((short)3, "hbThrottle"),
        APP_REPLY((short)4, "appReply"),
        CREATE_TIME((short)5, "createTime"),
        UPDATE_TIME((short)6, "updateTime"),
        EMPLOYEE_BINDING((short)7, "employeeBinding"),
        RECOMMEND_PRESENTEE((short)8, "recommendPresentee"),
        RECOMMEND_SUCCESS((short)9, "recommendSuccess"),
        FORWARD_MESSAGE((short)10, "forwardMessage"),
        APPLICATION_COUNT_LIMIT((short)11, "applicationCountLimit"),
        JOB_CUSTOM_TITLE((short)12, "jobCustomTitle"),
        SEARCH_SEQ((short)13, "searchSeq"),
        SEARCH_IMG((short)14, "searchImg"),
        JOB_OCCUPATION((short)15, "jobOccupation"),
        TEAMNAME_CUSTOM((short)16, "teamnameCustom"),
        APPLICATION_TIME((short)17, "applicationTime"),
        NEWJD_STATUS((short)18, "newjdStatus"),
        HR_CHAT((short)19, "hrChat"),
        SHOW_IN_QX((short)20, "showInQx"),
        EMPLOYEE_SLUG((short)21, "employeeSlug"),
        DISPLAY_LOCALE((short)22, "displayLocale"),
        TALENTPOOL_STATUS((short)23, "talentpoolStatus"),
        SCHOOL_APPLICATION_COUNT_LIMIT((short)24, "schoolApplicationCountLimit"),
        JOB51_SALARY_DISCUSS((short)25, "job51SalaryDiscuss"),
        VERYEAST_SWITCH((short)26, "veryeastSwitch"),
        IS_OPEN_GDPR((short)27, "isOpenGdpr");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // COMPANY_ID
                    return COMPANY_ID;
                case 2: // THEME_ID
                    return THEME_ID;
                case 3: // HB_THROTTLE
                    return HB_THROTTLE;
                case 4: // APP_REPLY
                    return APP_REPLY;
                case 5: // CREATE_TIME
                    return CREATE_TIME;
                case 6: // UPDATE_TIME
                    return UPDATE_TIME;
                case 7: // EMPLOYEE_BINDING
                    return EMPLOYEE_BINDING;
                case 8: // RECOMMEND_PRESENTEE
                    return RECOMMEND_PRESENTEE;
                case 9: // RECOMMEND_SUCCESS
                    return RECOMMEND_SUCCESS;
                case 10: // FORWARD_MESSAGE
                    return FORWARD_MESSAGE;
                case 11: // APPLICATION_COUNT_LIMIT
                    return APPLICATION_COUNT_LIMIT;
                case 12: // JOB_CUSTOM_TITLE
                    return JOB_CUSTOM_TITLE;
                case 13: // SEARCH_SEQ
                    return SEARCH_SEQ;
                case 14: // SEARCH_IMG
                    return SEARCH_IMG;
                case 15: // JOB_OCCUPATION
                    return JOB_OCCUPATION;
                case 16: // TEAMNAME_CUSTOM
                    return TEAMNAME_CUSTOM;
                case 17: // APPLICATION_TIME
                    return APPLICATION_TIME;
                case 18: // NEWJD_STATUS
                    return NEWJD_STATUS;
                case 19: // HR_CHAT
                    return HR_CHAT;
                case 20: // SHOW_IN_QX
                    return SHOW_IN_QX;
                case 21: // EMPLOYEE_SLUG
                    return EMPLOYEE_SLUG;
                case 22: // DISPLAY_LOCALE
                    return DISPLAY_LOCALE;
                case 23: // TALENTPOOL_STATUS
                    return TALENTPOOL_STATUS;
                case 24: // SCHOOL_APPLICATION_COUNT_LIMIT
                    return SCHOOL_APPLICATION_COUNT_LIMIT;
                case 25: // JOB51_SALARY_DISCUSS
                    return JOB51_SALARY_DISCUSS;
                case 26: // VERYEAST_SWITCH
                    return VERYEAST_SWITCH;
                case 27: // IS_OPEN_GDPR
                    return IS_OPEN_GDPR;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __COMPANYID_ISSET_ID = 0;
    private static final int __THEMEID_ISSET_ID = 1;
    private static final int __HBTHROTTLE_ISSET_ID = 2;
    private static final int __APPLICATIONCOUNTLIMIT_ISSET_ID = 3;
    private static final int __NEWJDSTATUS_ISSET_ID = 4;
    private static final int __HRCHAT_ISSET_ID = 5;
    private static final int __SHOWINQX_ISSET_ID = 6;
    private static final int __TALENTPOOLSTATUS_ISSET_ID = 7;
    private static final int __SCHOOLAPPLICATIONCOUNTLIMIT_ISSET_ID = 8;
    private static final int __JOB51SALARYDISCUSS_ISSET_ID = 9;
    private static final int __VERYEASTSWITCH_ISSET_ID = 10;
    private static final int __ISOPENGDPR_ISSET_ID = 11;
    private short __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.THEME_ID,_Fields.HB_THROTTLE,_Fields.APP_REPLY,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.EMPLOYEE_BINDING,_Fields.RECOMMEND_PRESENTEE,_Fields.RECOMMEND_SUCCESS,_Fields.FORWARD_MESSAGE,_Fields.APPLICATION_COUNT_LIMIT,_Fields.JOB_CUSTOM_TITLE,_Fields.SEARCH_SEQ,_Fields.SEARCH_IMG,_Fields.JOB_OCCUPATION,_Fields.TEAMNAME_CUSTOM,_Fields.APPLICATION_TIME,_Fields.NEWJD_STATUS,_Fields.HR_CHAT,_Fields.SHOW_IN_QX,_Fields.EMPLOYEE_SLUG,_Fields.DISPLAY_LOCALE,_Fields.TALENTPOOL_STATUS,_Fields.SCHOOL_APPLICATION_COUNT_LIMIT,_Fields.JOB51_SALARY_DISCUSS,_Fields.VERYEAST_SWITCH,_Fields.IS_OPEN_GDPR};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.THEME_ID, new org.apache.thrift.meta_data.FieldMetaData("themeId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.HB_THROTTLE, new org.apache.thrift.meta_data.FieldMetaData("hbThrottle", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.APP_REPLY, new org.apache.thrift.meta_data.FieldMetaData("appReply", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.EMPLOYEE_BINDING, new org.apache.thrift.meta_data.FieldMetaData("employeeBinding", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.RECOMMEND_PRESENTEE, new org.apache.thrift.meta_data.FieldMetaData("recommendPresentee", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.RECOMMEND_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("recommendSuccess", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.FORWARD_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("forwardMessage", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.APPLICATION_COUNT_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("applicationCountLimit", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.JOB_CUSTOM_TITLE, new org.apache.thrift.meta_data.FieldMetaData("jobCustomTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SEARCH_SEQ, new org.apache.thrift.meta_data.FieldMetaData("searchSeq", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SEARCH_IMG, new org.apache.thrift.meta_data.FieldMetaData("searchImg", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.JOB_OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("jobOccupation", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.TEAMNAME_CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("teamnameCustom", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.APPLICATION_TIME, new org.apache.thrift.meta_data.FieldMetaData("applicationTime", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.NEWJD_STATUS, new org.apache.thrift.meta_data.FieldMetaData("newjdStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.HR_CHAT, new org.apache.thrift.meta_data.FieldMetaData("hrChat", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
        tmpMap.put(_Fields.SHOW_IN_QX, new org.apache.thrift.meta_data.FieldMetaData("showInQx", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
        tmpMap.put(_Fields.EMPLOYEE_SLUG, new org.apache.thrift.meta_data.FieldMetaData("employeeSlug", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.DISPLAY_LOCALE, new org.apache.thrift.meta_data.FieldMetaData("displayLocale", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.TALENTPOOL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("talentpoolStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
        tmpMap.put(_Fields.SCHOOL_APPLICATION_COUNT_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("schoolApplicationCountLimit", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.JOB51_SALARY_DISCUSS, new org.apache.thrift.meta_data.FieldMetaData("job51SalaryDiscuss", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.VERYEAST_SWITCH, new org.apache.thrift.meta_data.FieldMetaData("veryeastSwitch", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
        tmpMap.put(_Fields.IS_OPEN_GDPR, new org.apache.thrift.meta_data.FieldMetaData("isOpenGdpr", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrCompanyConfDO.class, metaDataMap);
    }

    public HrCompanyConfDO() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public HrCompanyConfDO(HrCompanyConfDO other) {
        __isset_bitfield = other.__isset_bitfield;
        this.companyId = other.companyId;
        this.themeId = other.themeId;
        this.hbThrottle = other.hbThrottle;
        if (other.isSetAppReply()) {
            this.appReply = other.appReply;
        }
        if (other.isSetCreateTime()) {
            this.createTime = other.createTime;
        }
        if (other.isSetUpdateTime()) {
            this.updateTime = other.updateTime;
        }
        if (other.isSetEmployeeBinding()) {
            this.employeeBinding = other.employeeBinding;
        }
        if (other.isSetRecommendPresentee()) {
            this.recommendPresentee = other.recommendPresentee;
        }
        if (other.isSetRecommendSuccess()) {
            this.recommendSuccess = other.recommendSuccess;
        }
        if (other.isSetForwardMessage()) {
            this.forwardMessage = other.forwardMessage;
        }
        this.applicationCountLimit = other.applicationCountLimit;
        if (other.isSetJobCustomTitle()) {
            this.jobCustomTitle = other.jobCustomTitle;
        }
        if (other.isSetSearchSeq()) {
            this.searchSeq = other.searchSeq;
        }
        if (other.isSetSearchImg()) {
            this.searchImg = other.searchImg;
        }
        if (other.isSetJobOccupation()) {
            this.jobOccupation = other.jobOccupation;
        }
        if (other.isSetTeamnameCustom()) {
            this.teamnameCustom = other.teamnameCustom;
        }
        if (other.isSetApplicationTime()) {
            this.applicationTime = other.applicationTime;
        }
        this.newjdStatus = other.newjdStatus;
        this.hrChat = other.hrChat;
        this.showInQx = other.showInQx;
        if (other.isSetEmployeeSlug()) {
            this.employeeSlug = other.employeeSlug;
        }
        if (other.isSetDisplayLocale()) {
            this.displayLocale = other.displayLocale;
        }
        this.talentpoolStatus = other.talentpoolStatus;
        this.schoolApplicationCountLimit = other.schoolApplicationCountLimit;
        this.job51SalaryDiscuss = other.job51SalaryDiscuss;
        this.veryeastSwitch = other.veryeastSwitch;
        this.isOpenGdpr = other.isOpenGdpr;
    }

    public HrCompanyConfDO deepCopy() {
        return new HrCompanyConfDO(this);
    }

    @Override
    public void clear() {
        setCompanyIdIsSet(false);
        this.companyId = 0;
        setThemeIdIsSet(false);
        this.themeId = 0;
        setHbThrottleIsSet(false);
        this.hbThrottle = 0;
        this.appReply = null;
        this.createTime = null;
        this.updateTime = null;
        this.employeeBinding = null;
        this.recommendPresentee = null;
        this.recommendSuccess = null;
        this.forwardMessage = null;
        setApplicationCountLimitIsSet(false);
        this.applicationCountLimit = 0;
        this.jobCustomTitle = null;
        this.searchSeq = null;
        this.searchImg = null;
        this.jobOccupation = null;
        this.teamnameCustom = null;
        this.applicationTime = null;
        setNewjdStatusIsSet(false);
        this.newjdStatus = 0;
        setHrChatIsSet(false);
        this.hrChat = 0.0;
        setShowInQxIsSet(false);
        this.showInQx = 0.0;
        this.employeeSlug = null;
        this.displayLocale = null;
        setTalentpoolStatusIsSet(false);
        this.talentpoolStatus = 0;
        setSchoolApplicationCountLimitIsSet(false);
        this.schoolApplicationCountLimit = 0;
        setJob51SalaryDiscussIsSet(false);
        this.job51SalaryDiscuss = 0;
        setVeryeastSwitchIsSet(false);
        this.veryeastSwitch = 0;
        setIsOpenGdprIsSet(false);
        this.isOpenGdpr = 0;
    }

    public int getCompanyId() {
        return this.companyId;
    }

    public HrCompanyConfDO setCompanyId(int companyId) {
        this.companyId = companyId;
        setCompanyIdIsSet(true);
        return this;
    }

    public void unsetCompanyId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public int getThemeId() {
        return this.themeId;
    }

    public HrCompanyConfDO setThemeId(int themeId) {
        this.themeId = themeId;
        setThemeIdIsSet(true);
        return this;
    }

    public void unsetThemeId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __THEMEID_ISSET_ID);
    }

    /** Returns true if field themeId is set (has been assigned a value) and false otherwise */
    public boolean isSetThemeId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __THEMEID_ISSET_ID);
    }

    public void setThemeIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __THEMEID_ISSET_ID, value);
    }

    public int getHbThrottle() {
        return this.hbThrottle;
    }

    public HrCompanyConfDO setHbThrottle(int hbThrottle) {
        this.hbThrottle = hbThrottle;
        setHbThrottleIsSet(true);
        return this;
    }

    public void unsetHbThrottle() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HBTHROTTLE_ISSET_ID);
    }

    /** Returns true if field hbThrottle is set (has been assigned a value) and false otherwise */
    public boolean isSetHbThrottle() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HBTHROTTLE_ISSET_ID);
    }

    public void setHbThrottleIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HBTHROTTLE_ISSET_ID, value);
    }

    public java.lang.String getAppReply() {
        return this.appReply;
    }

    public HrCompanyConfDO setAppReply(java.lang.String appReply) {
        this.appReply = appReply;
        return this;
    }

    public void unsetAppReply() {
        this.appReply = null;
    }

    /** Returns true if field appReply is set (has been assigned a value) and false otherwise */
    public boolean isSetAppReply() {
        return this.appReply != null;
    }

    public void setAppReplyIsSet(boolean value) {
        if (!value) {
            this.appReply = null;
        }
    }

    public java.lang.String getCreateTime() {
        return this.createTime;
    }

    public HrCompanyConfDO setCreateTime(java.lang.String createTime) {
        this.createTime = createTime;
        return this;
    }

    public void unsetCreateTime() {
        this.createTime = null;
    }

    /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
    public boolean isSetCreateTime() {
        return this.createTime != null;
    }

    public void setCreateTimeIsSet(boolean value) {
        if (!value) {
            this.createTime = null;
        }
    }

    public java.lang.String getUpdateTime() {
        return this.updateTime;
    }

    public HrCompanyConfDO setUpdateTime(java.lang.String updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    public void unsetUpdateTime() {
        this.updateTime = null;
    }

    /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
    public boolean isSetUpdateTime() {
        return this.updateTime != null;
    }

    public void setUpdateTimeIsSet(boolean value) {
        if (!value) {
            this.updateTime = null;
        }
    }

    public java.lang.String getEmployeeBinding() {
        return this.employeeBinding;
    }

    public HrCompanyConfDO setEmployeeBinding(java.lang.String employeeBinding) {
        this.employeeBinding = employeeBinding;
        return this;
    }

    public void unsetEmployeeBinding() {
        this.employeeBinding = null;
    }

    /** Returns true if field employeeBinding is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeBinding() {
        return this.employeeBinding != null;
    }

    public void setEmployeeBindingIsSet(boolean value) {
        if (!value) {
            this.employeeBinding = null;
        }
    }

    public java.lang.String getRecommendPresentee() {
        return this.recommendPresentee;
    }

    public HrCompanyConfDO setRecommendPresentee(java.lang.String recommendPresentee) {
        this.recommendPresentee = recommendPresentee;
        return this;
    }

    public void unsetRecommendPresentee() {
        this.recommendPresentee = null;
    }

    /** Returns true if field recommendPresentee is set (has been assigned a value) and false otherwise */
    public boolean isSetRecommendPresentee() {
        return this.recommendPresentee != null;
    }

    public void setRecommendPresenteeIsSet(boolean value) {
        if (!value) {
            this.recommendPresentee = null;
        }
    }

    public java.lang.String getRecommendSuccess() {
        return this.recommendSuccess;
    }

    public HrCompanyConfDO setRecommendSuccess(java.lang.String recommendSuccess) {
        this.recommendSuccess = recommendSuccess;
        return this;
    }

    public void unsetRecommendSuccess() {
        this.recommendSuccess = null;
    }

    /** Returns true if field recommendSuccess is set (has been assigned a value) and false otherwise */
    public boolean isSetRecommendSuccess() {
        return this.recommendSuccess != null;
    }

    public void setRecommendSuccessIsSet(boolean value) {
        if (!value) {
            this.recommendSuccess = null;
        }
    }

    public java.lang.String getForwardMessage() {
        return this.forwardMessage;
    }

    public HrCompanyConfDO setForwardMessage(java.lang.String forwardMessage) {
        this.forwardMessage = forwardMessage;
        return this;
    }

    public void unsetForwardMessage() {
        this.forwardMessage = null;
    }

    /** Returns true if field forwardMessage is set (has been assigned a value) and false otherwise */
    public boolean isSetForwardMessage() {
        return this.forwardMessage != null;
    }

    public void setForwardMessageIsSet(boolean value) {
        if (!value) {
            this.forwardMessage = null;
        }
    }

    public short getApplicationCountLimit() {
        return this.applicationCountLimit;
    }

    public HrCompanyConfDO setApplicationCountLimit(short applicationCountLimit) {
        this.applicationCountLimit = applicationCountLimit;
        setApplicationCountLimitIsSet(true);
        return this;
    }

    public void unsetApplicationCountLimit() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATIONCOUNTLIMIT_ISSET_ID);
    }

    /** Returns true if field applicationCountLimit is set (has been assigned a value) and false otherwise */
    public boolean isSetApplicationCountLimit() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATIONCOUNTLIMIT_ISSET_ID);
    }

    public void setApplicationCountLimitIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATIONCOUNTLIMIT_ISSET_ID, value);
    }

    public java.lang.String getJobCustomTitle() {
        return this.jobCustomTitle;
    }

    public HrCompanyConfDO setJobCustomTitle(java.lang.String jobCustomTitle) {
        this.jobCustomTitle = jobCustomTitle;
        return this;
    }

    public void unsetJobCustomTitle() {
        this.jobCustomTitle = null;
    }

    /** Returns true if field jobCustomTitle is set (has been assigned a value) and false otherwise */
    public boolean isSetJobCustomTitle() {
        return this.jobCustomTitle != null;
    }

    public void setJobCustomTitleIsSet(boolean value) {
        if (!value) {
            this.jobCustomTitle = null;
        }
    }

    public java.lang.String getSearchSeq() {
        return this.searchSeq;
    }

    public HrCompanyConfDO setSearchSeq(java.lang.String searchSeq) {
        this.searchSeq = searchSeq;
        return this;
    }

    public void unsetSearchSeq() {
        this.searchSeq = null;
    }

    /** Returns true if field searchSeq is set (has been assigned a value) and false otherwise */
    public boolean isSetSearchSeq() {
        return this.searchSeq != null;
    }

    public void setSearchSeqIsSet(boolean value) {
        if (!value) {
            this.searchSeq = null;
        }
    }

    public java.lang.String getSearchImg() {
        return this.searchImg;
    }

    public HrCompanyConfDO setSearchImg(java.lang.String searchImg) {
        this.searchImg = searchImg;
        return this;
    }

    public void unsetSearchImg() {
        this.searchImg = null;
    }

    /** Returns true if field searchImg is set (has been assigned a value) and false otherwise */
    public boolean isSetSearchImg() {
        return this.searchImg != null;
    }

    public void setSearchImgIsSet(boolean value) {
        if (!value) {
            this.searchImg = null;
        }
    }

    public java.lang.String getJobOccupation() {
        return this.jobOccupation;
    }

    public HrCompanyConfDO setJobOccupation(java.lang.String jobOccupation) {
        this.jobOccupation = jobOccupation;
        return this;
    }

    public void unsetJobOccupation() {
        this.jobOccupation = null;
    }

    /** Returns true if field jobOccupation is set (has been assigned a value) and false otherwise */
    public boolean isSetJobOccupation() {
        return this.jobOccupation != null;
    }

    public void setJobOccupationIsSet(boolean value) {
        if (!value) {
            this.jobOccupation = null;
        }
    }

    public java.lang.String getTeamnameCustom() {
        return this.teamnameCustom;
    }

    public HrCompanyConfDO setTeamnameCustom(java.lang.String teamnameCustom) {
        this.teamnameCustom = teamnameCustom;
        return this;
    }

    public void unsetTeamnameCustom() {
        this.teamnameCustom = null;
    }

    /** Returns true if field teamnameCustom is set (has been assigned a value) and false otherwise */
    public boolean isSetTeamnameCustom() {
        return this.teamnameCustom != null;
    }

    public void setTeamnameCustomIsSet(boolean value) {
        if (!value) {
            this.teamnameCustom = null;
        }
    }

    public java.lang.String getApplicationTime() {
        return this.applicationTime;
    }

    public HrCompanyConfDO setApplicationTime(java.lang.String applicationTime) {
        this.applicationTime = applicationTime;
        return this;
    }

    public void unsetApplicationTime() {
        this.applicationTime = null;
    }

    /** Returns true if field applicationTime is set (has been assigned a value) and false otherwise */
    public boolean isSetApplicationTime() {
        return this.applicationTime != null;
    }

    public void setApplicationTimeIsSet(boolean value) {
        if (!value) {
            this.applicationTime = null;
        }
    }

    public int getNewjdStatus() {
        return this.newjdStatus;
    }

    public HrCompanyConfDO setNewjdStatus(int newjdStatus) {
        this.newjdStatus = newjdStatus;
        setNewjdStatusIsSet(true);
        return this;
    }

    public void unsetNewjdStatus() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWJDSTATUS_ISSET_ID);
    }

    /** Returns true if field newjdStatus is set (has been assigned a value) and false otherwise */
    public boolean isSetNewjdStatus() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWJDSTATUS_ISSET_ID);
    }

    public void setNewjdStatusIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWJDSTATUS_ISSET_ID, value);
    }

    public double getHrChat() {
        return this.hrChat;
    }

    public HrCompanyConfDO setHrChat(double hrChat) {
        this.hrChat = hrChat;
        setHrChatIsSet(true);
        return this;
    }

    public void unsetHrChat() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRCHAT_ISSET_ID);
    }

    /** Returns true if field hrChat is set (has been assigned a value) and false otherwise */
    public boolean isSetHrChat() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRCHAT_ISSET_ID);
    }

    public void setHrChatIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRCHAT_ISSET_ID, value);
    }

    public double getShowInQx() {
        return this.showInQx;
    }

    public HrCompanyConfDO setShowInQx(double showInQx) {
        this.showInQx = showInQx;
        setShowInQxIsSet(true);
        return this;
    }

    public void unsetShowInQx() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOWINQX_ISSET_ID);
    }

    /** Returns true if field showInQx is set (has been assigned a value) and false otherwise */
    public boolean isSetShowInQx() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOWINQX_ISSET_ID);
    }

    public void setShowInQxIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOWINQX_ISSET_ID, value);
    }

    public java.lang.String getEmployeeSlug() {
        return this.employeeSlug;
    }

    public HrCompanyConfDO setEmployeeSlug(java.lang.String employeeSlug) {
        this.employeeSlug = employeeSlug;
        return this;
    }

    public void unsetEmployeeSlug() {
        this.employeeSlug = null;
    }

    /** Returns true if field employeeSlug is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeSlug() {
        return this.employeeSlug != null;
    }

    public void setEmployeeSlugIsSet(boolean value) {
        if (!value) {
            this.employeeSlug = null;
        }
    }

    public java.lang.String getDisplayLocale() {
        return this.displayLocale;
    }

    public HrCompanyConfDO setDisplayLocale(java.lang.String displayLocale) {
        this.displayLocale = displayLocale;
        return this;
    }

    public void unsetDisplayLocale() {
        this.displayLocale = null;
    }

    /** Returns true if field displayLocale is set (has been assigned a value) and false otherwise */
    public boolean isSetDisplayLocale() {
        return this.displayLocale != null;
    }

    public void setDisplayLocaleIsSet(boolean value) {
        if (!value) {
            this.displayLocale = null;
        }
    }

    public byte getTalentpoolStatus() {
        return this.talentpoolStatus;
    }

    public HrCompanyConfDO setTalentpoolStatus(byte talentpoolStatus) {
        this.talentpoolStatus = talentpoolStatus;
        setTalentpoolStatusIsSet(true);
        return this;
    }

    public void unsetTalentpoolStatus() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TALENTPOOLSTATUS_ISSET_ID);
    }

    /** Returns true if field talentpoolStatus is set (has been assigned a value) and false otherwise */
    public boolean isSetTalentpoolStatus() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TALENTPOOLSTATUS_ISSET_ID);
    }

    public void setTalentpoolStatusIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TALENTPOOLSTATUS_ISSET_ID, value);
    }

    public short getSchoolApplicationCountLimit() {
        return this.schoolApplicationCountLimit;
    }

    public HrCompanyConfDO setSchoolApplicationCountLimit(short schoolApplicationCountLimit) {
        this.schoolApplicationCountLimit = schoolApplicationCountLimit;
        setSchoolApplicationCountLimitIsSet(true);
        return this;
    }

    public void unsetSchoolApplicationCountLimit() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SCHOOLAPPLICATIONCOUNTLIMIT_ISSET_ID);
    }

    /** Returns true if field schoolApplicationCountLimit is set (has been assigned a value) and false otherwise */
    public boolean isSetSchoolApplicationCountLimit() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SCHOOLAPPLICATIONCOUNTLIMIT_ISSET_ID);
    }

    public void setSchoolApplicationCountLimitIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SCHOOLAPPLICATIONCOUNTLIMIT_ISSET_ID, value);
    }

    public short getJob51SalaryDiscuss() {
        return this.job51SalaryDiscuss;
    }

    public HrCompanyConfDO setJob51SalaryDiscuss(short job51SalaryDiscuss) {
        this.job51SalaryDiscuss = job51SalaryDiscuss;
        setJob51SalaryDiscussIsSet(true);
        return this;
    }

    public void unsetJob51SalaryDiscuss() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JOB51SALARYDISCUSS_ISSET_ID);
    }

    /** Returns true if field job51SalaryDiscuss is set (has been assigned a value) and false otherwise */
    public boolean isSetJob51SalaryDiscuss() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JOB51SALARYDISCUSS_ISSET_ID);
    }

    public void setJob51SalaryDiscussIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JOB51SALARYDISCUSS_ISSET_ID, value);
    }

    public short getVeryeastSwitch() {
        return this.veryeastSwitch;
    }

    public HrCompanyConfDO setVeryeastSwitch(short veryeastSwitch) {
        this.veryeastSwitch = veryeastSwitch;
        setVeryeastSwitchIsSet(true);
        return this;
    }

    public void unsetVeryeastSwitch() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERYEASTSWITCH_ISSET_ID);
    }

    /** Returns true if field veryeastSwitch is set (has been assigned a value) and false otherwise */
    public boolean isSetVeryeastSwitch() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERYEASTSWITCH_ISSET_ID);
    }

    public void setVeryeastSwitchIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERYEASTSWITCH_ISSET_ID, value);
    }

    public byte getIsOpenGdpr() {
        return this.isOpenGdpr;
    }

    public HrCompanyConfDO setIsOpenGdpr(byte isOpenGdpr) {
        this.isOpenGdpr = isOpenGdpr;
        setIsOpenGdprIsSet(true);
        return this;
    }

    public void unsetIsOpenGdpr() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISOPENGDPR_ISSET_ID);
    }

    /** Returns true if field isOpenGdpr is set (has been assigned a value) and false otherwise */
    public boolean isSetIsOpenGdpr() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISOPENGDPR_ISSET_ID);
    }

    public void setIsOpenGdprIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISOPENGDPR_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case COMPANY_ID:
                if (value == null) {
                    unsetCompanyId();
                } else {
                    setCompanyId((java.lang.Integer)value);
                }
                break;

            case THEME_ID:
                if (value == null) {
                    unsetThemeId();
                } else {
                    setThemeId((java.lang.Integer)value);
                }
                break;

            case HB_THROTTLE:
                if (value == null) {
                    unsetHbThrottle();
                } else {
                    setHbThrottle((java.lang.Integer)value);
                }
                break;

            case APP_REPLY:
                if (value == null) {
                    unsetAppReply();
                } else {
                    setAppReply((java.lang.String)value);
                }
                break;

            case CREATE_TIME:
                if (value == null) {
                    unsetCreateTime();
                } else {
                    setCreateTime((java.lang.String)value);
                }
                break;

            case UPDATE_TIME:
                if (value == null) {
                    unsetUpdateTime();
                } else {
                    setUpdateTime((java.lang.String)value);
                }
                break;

            case EMPLOYEE_BINDING:
                if (value == null) {
                    unsetEmployeeBinding();
                } else {
                    setEmployeeBinding((java.lang.String)value);
                }
                break;

            case RECOMMEND_PRESENTEE:
                if (value == null) {
                    unsetRecommendPresentee();
                } else {
                    setRecommendPresentee((java.lang.String)value);
                }
                break;

            case RECOMMEND_SUCCESS:
                if (value == null) {
                    unsetRecommendSuccess();
                } else {
                    setRecommendSuccess((java.lang.String)value);
                }
                break;

            case FORWARD_MESSAGE:
                if (value == null) {
                    unsetForwardMessage();
                } else {
                    setForwardMessage((java.lang.String)value);
                }
                break;

            case APPLICATION_COUNT_LIMIT:
                if (value == null) {
                    unsetApplicationCountLimit();
                } else {
                    setApplicationCountLimit((java.lang.Short)value);
                }
                break;

            case JOB_CUSTOM_TITLE:
                if (value == null) {
                    unsetJobCustomTitle();
                } else {
                    setJobCustomTitle((java.lang.String)value);
                }
                break;

            case SEARCH_SEQ:
                if (value == null) {
                    unsetSearchSeq();
                } else {
                    setSearchSeq((java.lang.String)value);
                }
                break;

            case SEARCH_IMG:
                if (value == null) {
                    unsetSearchImg();
                } else {
                    setSearchImg((java.lang.String)value);
                }
                break;

            case JOB_OCCUPATION:
                if (value == null) {
                    unsetJobOccupation();
                } else {
                    setJobOccupation((java.lang.String)value);
                }
                break;

            case TEAMNAME_CUSTOM:
                if (value == null) {
                    unsetTeamnameCustom();
                } else {
                    setTeamnameCustom((java.lang.String)value);
                }
                break;

            case APPLICATION_TIME:
                if (value == null) {
                    unsetApplicationTime();
                } else {
                    setApplicationTime((java.lang.String)value);
                }
                break;

            case NEWJD_STATUS:
                if (value == null) {
                    unsetNewjdStatus();
                } else {
                    setNewjdStatus((java.lang.Integer)value);
                }
                break;

            case HR_CHAT:
                if (value == null) {
                    unsetHrChat();
                } else {
                    setHrChat((java.lang.Double)value);
                }
                break;

            case SHOW_IN_QX:
                if (value == null) {
                    unsetShowInQx();
                } else {
                    setShowInQx((java.lang.Double)value);
                }
                break;

            case EMPLOYEE_SLUG:
                if (value == null) {
                    unsetEmployeeSlug();
                } else {
                    setEmployeeSlug((java.lang.String)value);
                }
                break;

            case DISPLAY_LOCALE:
                if (value == null) {
                    unsetDisplayLocale();
                } else {
                    setDisplayLocale((java.lang.String)value);
                }
                break;

            case TALENTPOOL_STATUS:
                if (value == null) {
                    unsetTalentpoolStatus();
                } else {
                    setTalentpoolStatus((java.lang.Byte)value);
                }
                break;

            case SCHOOL_APPLICATION_COUNT_LIMIT:
                if (value == null) {
                    unsetSchoolApplicationCountLimit();
                } else {
                    setSchoolApplicationCountLimit((java.lang.Short)value);
                }
                break;

            case JOB51_SALARY_DISCUSS:
                if (value == null) {
                    unsetJob51SalaryDiscuss();
                } else {
                    setJob51SalaryDiscuss((java.lang.Short)value);
                }
                break;

            case VERYEAST_SWITCH:
                if (value == null) {
                    unsetVeryeastSwitch();
                } else {
                    setVeryeastSwitch((java.lang.Short)value);
                }
                break;

            case IS_OPEN_GDPR:
                if (value == null) {
                    unsetIsOpenGdpr();
                } else {
                    setIsOpenGdpr((java.lang.Byte)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case COMPANY_ID:
                return getCompanyId();

            case THEME_ID:
                return getThemeId();

            case HB_THROTTLE:
                return getHbThrottle();

            case APP_REPLY:
                return getAppReply();

            case CREATE_TIME:
                return getCreateTime();

            case UPDATE_TIME:
                return getUpdateTime();

            case EMPLOYEE_BINDING:
                return getEmployeeBinding();

            case RECOMMEND_PRESENTEE:
                return getRecommendPresentee();

            case RECOMMEND_SUCCESS:
                return getRecommendSuccess();

            case FORWARD_MESSAGE:
                return getForwardMessage();

            case APPLICATION_COUNT_LIMIT:
                return getApplicationCountLimit();

            case JOB_CUSTOM_TITLE:
                return getJobCustomTitle();

            case SEARCH_SEQ:
                return getSearchSeq();

            case SEARCH_IMG:
                return getSearchImg();

            case JOB_OCCUPATION:
                return getJobOccupation();

            case TEAMNAME_CUSTOM:
                return getTeamnameCustom();

            case APPLICATION_TIME:
                return getApplicationTime();

            case NEWJD_STATUS:
                return getNewjdStatus();

            case HR_CHAT:
                return getHrChat();

            case SHOW_IN_QX:
                return getShowInQx();

            case EMPLOYEE_SLUG:
                return getEmployeeSlug();

            case DISPLAY_LOCALE:
                return getDisplayLocale();

            case TALENTPOOL_STATUS:
                return getTalentpoolStatus();

            case SCHOOL_APPLICATION_COUNT_LIMIT:
                return getSchoolApplicationCountLimit();

            case JOB51_SALARY_DISCUSS:
                return getJob51SalaryDiscuss();

            case VERYEAST_SWITCH:
                return getVeryeastSwitch();

            case IS_OPEN_GDPR:
                return getIsOpenGdpr();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case COMPANY_ID:
                return isSetCompanyId();
            case THEME_ID:
                return isSetThemeId();
            case HB_THROTTLE:
                return isSetHbThrottle();
            case APP_REPLY:
                return isSetAppReply();
            case CREATE_TIME:
                return isSetCreateTime();
            case UPDATE_TIME:
                return isSetUpdateTime();
            case EMPLOYEE_BINDING:
                return isSetEmployeeBinding();
            case RECOMMEND_PRESENTEE:
                return isSetRecommendPresentee();
            case RECOMMEND_SUCCESS:
                return isSetRecommendSuccess();
            case FORWARD_MESSAGE:
                return isSetForwardMessage();
            case APPLICATION_COUNT_LIMIT:
                return isSetApplicationCountLimit();
            case JOB_CUSTOM_TITLE:
                return isSetJobCustomTitle();
            case SEARCH_SEQ:
                return isSetSearchSeq();
            case SEARCH_IMG:
                return isSetSearchImg();
            case JOB_OCCUPATION:
                return isSetJobOccupation();
            case TEAMNAME_CUSTOM:
                return isSetTeamnameCustom();
            case APPLICATION_TIME:
                return isSetApplicationTime();
            case NEWJD_STATUS:
                return isSetNewjdStatus();
            case HR_CHAT:
                return isSetHrChat();
            case SHOW_IN_QX:
                return isSetShowInQx();
            case EMPLOYEE_SLUG:
                return isSetEmployeeSlug();
            case DISPLAY_LOCALE:
                return isSetDisplayLocale();
            case TALENTPOOL_STATUS:
                return isSetTalentpoolStatus();
            case SCHOOL_APPLICATION_COUNT_LIMIT:
                return isSetSchoolApplicationCountLimit();
            case JOB51_SALARY_DISCUSS:
                return isSetJob51SalaryDiscuss();
            case VERYEAST_SWITCH:
                return isSetVeryeastSwitch();
            case IS_OPEN_GDPR:
                return isSetIsOpenGdpr();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof HrCompanyConfDO)
            return this.equals((HrCompanyConfDO)that);
        return false;
    }

    public boolean equals(HrCompanyConfDO that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_companyId = true && this.isSetCompanyId();
        boolean that_present_companyId = true && that.isSetCompanyId();
        if (this_present_companyId || that_present_companyId) {
            if (!(this_present_companyId && that_present_companyId))
                return false;
            if (this.companyId != that.companyId)
                return false;
        }

        boolean this_present_themeId = true && this.isSetThemeId();
        boolean that_present_themeId = true && that.isSetThemeId();
        if (this_present_themeId || that_present_themeId) {
            if (!(this_present_themeId && that_present_themeId))
                return false;
            if (this.themeId != that.themeId)
                return false;
        }

        boolean this_present_hbThrottle = true && this.isSetHbThrottle();
        boolean that_present_hbThrottle = true && that.isSetHbThrottle();
        if (this_present_hbThrottle || that_present_hbThrottle) {
            if (!(this_present_hbThrottle && that_present_hbThrottle))
                return false;
            if (this.hbThrottle != that.hbThrottle)
                return false;
        }

        boolean this_present_appReply = true && this.isSetAppReply();
        boolean that_present_appReply = true && that.isSetAppReply();
        if (this_present_appReply || that_present_appReply) {
            if (!(this_present_appReply && that_present_appReply))
                return false;
            if (!this.appReply.equals(that.appReply))
                return false;
        }

        boolean this_present_createTime = true && this.isSetCreateTime();
        boolean that_present_createTime = true && that.isSetCreateTime();
        if (this_present_createTime || that_present_createTime) {
            if (!(this_present_createTime && that_present_createTime))
                return false;
            if (!this.createTime.equals(that.createTime))
                return false;
        }

        boolean this_present_updateTime = true && this.isSetUpdateTime();
        boolean that_present_updateTime = true && that.isSetUpdateTime();
        if (this_present_updateTime || that_present_updateTime) {
            if (!(this_present_updateTime && that_present_updateTime))
                return false;
            if (!this.updateTime.equals(that.updateTime))
                return false;
        }

        boolean this_present_employeeBinding = true && this.isSetEmployeeBinding();
        boolean that_present_employeeBinding = true && that.isSetEmployeeBinding();
        if (this_present_employeeBinding || that_present_employeeBinding) {
            if (!(this_present_employeeBinding && that_present_employeeBinding))
                return false;
            if (!this.employeeBinding.equals(that.employeeBinding))
                return false;
        }

        boolean this_present_recommendPresentee = true && this.isSetRecommendPresentee();
        boolean that_present_recommendPresentee = true && that.isSetRecommendPresentee();
        if (this_present_recommendPresentee || that_present_recommendPresentee) {
            if (!(this_present_recommendPresentee && that_present_recommendPresentee))
                return false;
            if (!this.recommendPresentee.equals(that.recommendPresentee))
                return false;
        }

        boolean this_present_recommendSuccess = true && this.isSetRecommendSuccess();
        boolean that_present_recommendSuccess = true && that.isSetRecommendSuccess();
        if (this_present_recommendSuccess || that_present_recommendSuccess) {
            if (!(this_present_recommendSuccess && that_present_recommendSuccess))
                return false;
            if (!this.recommendSuccess.equals(that.recommendSuccess))
                return false;
        }

        boolean this_present_forwardMessage = true && this.isSetForwardMessage();
        boolean that_present_forwardMessage = true && that.isSetForwardMessage();
        if (this_present_forwardMessage || that_present_forwardMessage) {
            if (!(this_present_forwardMessage && that_present_forwardMessage))
                return false;
            if (!this.forwardMessage.equals(that.forwardMessage))
                return false;
        }

        boolean this_present_applicationCountLimit = true && this.isSetApplicationCountLimit();
        boolean that_present_applicationCountLimit = true && that.isSetApplicationCountLimit();
        if (this_present_applicationCountLimit || that_present_applicationCountLimit) {
            if (!(this_present_applicationCountLimit && that_present_applicationCountLimit))
                return false;
            if (this.applicationCountLimit != that.applicationCountLimit)
                return false;
        }

        boolean this_present_jobCustomTitle = true && this.isSetJobCustomTitle();
        boolean that_present_jobCustomTitle = true && that.isSetJobCustomTitle();
        if (this_present_jobCustomTitle || that_present_jobCustomTitle) {
            if (!(this_present_jobCustomTitle && that_present_jobCustomTitle))
                return false;
            if (!this.jobCustomTitle.equals(that.jobCustomTitle))
                return false;
        }

        boolean this_present_searchSeq = true && this.isSetSearchSeq();
        boolean that_present_searchSeq = true && that.isSetSearchSeq();
        if (this_present_searchSeq || that_present_searchSeq) {
            if (!(this_present_searchSeq && that_present_searchSeq))
                return false;
            if (!this.searchSeq.equals(that.searchSeq))
                return false;
        }

        boolean this_present_searchImg = true && this.isSetSearchImg();
        boolean that_present_searchImg = true && that.isSetSearchImg();
        if (this_present_searchImg || that_present_searchImg) {
            if (!(this_present_searchImg && that_present_searchImg))
                return false;
            if (!this.searchImg.equals(that.searchImg))
                return false;
        }

        boolean this_present_jobOccupation = true && this.isSetJobOccupation();
        boolean that_present_jobOccupation = true && that.isSetJobOccupation();
        if (this_present_jobOccupation || that_present_jobOccupation) {
            if (!(this_present_jobOccupation && that_present_jobOccupation))
                return false;
            if (!this.jobOccupation.equals(that.jobOccupation))
                return false;
        }

        boolean this_present_teamnameCustom = true && this.isSetTeamnameCustom();
        boolean that_present_teamnameCustom = true && that.isSetTeamnameCustom();
        if (this_present_teamnameCustom || that_present_teamnameCustom) {
            if (!(this_present_teamnameCustom && that_present_teamnameCustom))
                return false;
            if (!this.teamnameCustom.equals(that.teamnameCustom))
                return false;
        }

        boolean this_present_applicationTime = true && this.isSetApplicationTime();
        boolean that_present_applicationTime = true && that.isSetApplicationTime();
        if (this_present_applicationTime || that_present_applicationTime) {
            if (!(this_present_applicationTime && that_present_applicationTime))
                return false;
            if (!this.applicationTime.equals(that.applicationTime))
                return false;
        }

        boolean this_present_newjdStatus = true && this.isSetNewjdStatus();
        boolean that_present_newjdStatus = true && that.isSetNewjdStatus();
        if (this_present_newjdStatus || that_present_newjdStatus) {
            if (!(this_present_newjdStatus && that_present_newjdStatus))
                return false;
            if (this.newjdStatus != that.newjdStatus)
                return false;
        }

        boolean this_present_hrChat = true && this.isSetHrChat();
        boolean that_present_hrChat = true && that.isSetHrChat();
        if (this_present_hrChat || that_present_hrChat) {
            if (!(this_present_hrChat && that_present_hrChat))
                return false;
            if (this.hrChat != that.hrChat)
                return false;
        }

        boolean this_present_showInQx = true && this.isSetShowInQx();
        boolean that_present_showInQx = true && that.isSetShowInQx();
        if (this_present_showInQx || that_present_showInQx) {
            if (!(this_present_showInQx && that_present_showInQx))
                return false;
            if (this.showInQx != that.showInQx)
                return false;
        }

        boolean this_present_employeeSlug = true && this.isSetEmployeeSlug();
        boolean that_present_employeeSlug = true && that.isSetEmployeeSlug();
        if (this_present_employeeSlug || that_present_employeeSlug) {
            if (!(this_present_employeeSlug && that_present_employeeSlug))
                return false;
            if (!this.employeeSlug.equals(that.employeeSlug))
                return false;
        }

        boolean this_present_displayLocale = true && this.isSetDisplayLocale();
        boolean that_present_displayLocale = true && that.isSetDisplayLocale();
        if (this_present_displayLocale || that_present_displayLocale) {
            if (!(this_present_displayLocale && that_present_displayLocale))
                return false;
            if (!this.displayLocale.equals(that.displayLocale))
                return false;
        }

        boolean this_present_talentpoolStatus = true && this.isSetTalentpoolStatus();
        boolean that_present_talentpoolStatus = true && that.isSetTalentpoolStatus();
        if (this_present_talentpoolStatus || that_present_talentpoolStatus) {
            if (!(this_present_talentpoolStatus && that_present_talentpoolStatus))
                return false;
            if (this.talentpoolStatus != that.talentpoolStatus)
                return false;
        }

        boolean this_present_schoolApplicationCountLimit = true && this.isSetSchoolApplicationCountLimit();
        boolean that_present_schoolApplicationCountLimit = true && that.isSetSchoolApplicationCountLimit();
        if (this_present_schoolApplicationCountLimit || that_present_schoolApplicationCountLimit) {
            if (!(this_present_schoolApplicationCountLimit && that_present_schoolApplicationCountLimit))
                return false;
            if (this.schoolApplicationCountLimit != that.schoolApplicationCountLimit)
                return false;
        }

        boolean this_present_job51SalaryDiscuss = true && this.isSetJob51SalaryDiscuss();
        boolean that_present_job51SalaryDiscuss = true && that.isSetJob51SalaryDiscuss();
        if (this_present_job51SalaryDiscuss || that_present_job51SalaryDiscuss) {
            if (!(this_present_job51SalaryDiscuss && that_present_job51SalaryDiscuss))
                return false;
            if (this.job51SalaryDiscuss != that.job51SalaryDiscuss)
                return false;
        }

        boolean this_present_veryeastSwitch = true && this.isSetVeryeastSwitch();
        boolean that_present_veryeastSwitch = true && that.isSetVeryeastSwitch();
        if (this_present_veryeastSwitch || that_present_veryeastSwitch) {
            if (!(this_present_veryeastSwitch && that_present_veryeastSwitch))
                return false;
            if (this.veryeastSwitch != that.veryeastSwitch)
                return false;
        }

        boolean this_present_isOpenGdpr = true && this.isSetIsOpenGdpr();
        boolean that_present_isOpenGdpr = true && that.isSetIsOpenGdpr();
        if (this_present_isOpenGdpr || that_present_isOpenGdpr) {
            if (!(this_present_isOpenGdpr && that_present_isOpenGdpr))
                return false;
            if (this.isOpenGdpr != that.isOpenGdpr)
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
        if (isSetCompanyId())
            hashCode = hashCode * 8191 + companyId;

        hashCode = hashCode * 8191 + ((isSetThemeId()) ? 131071 : 524287);
        if (isSetThemeId())
            hashCode = hashCode * 8191 + themeId;

        hashCode = hashCode * 8191 + ((isSetHbThrottle()) ? 131071 : 524287);
        if (isSetHbThrottle())
            hashCode = hashCode * 8191 + hbThrottle;

        hashCode = hashCode * 8191 + ((isSetAppReply()) ? 131071 : 524287);
        if (isSetAppReply())
            hashCode = hashCode * 8191 + appReply.hashCode();

        hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
        if (isSetCreateTime())
            hashCode = hashCode * 8191 + createTime.hashCode();

        hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
        if (isSetUpdateTime())
            hashCode = hashCode * 8191 + updateTime.hashCode();

        hashCode = hashCode * 8191 + ((isSetEmployeeBinding()) ? 131071 : 524287);
        if (isSetEmployeeBinding())
            hashCode = hashCode * 8191 + employeeBinding.hashCode();

        hashCode = hashCode * 8191 + ((isSetRecommendPresentee()) ? 131071 : 524287);
        if (isSetRecommendPresentee())
            hashCode = hashCode * 8191 + recommendPresentee.hashCode();

        hashCode = hashCode * 8191 + ((isSetRecommendSuccess()) ? 131071 : 524287);
        if (isSetRecommendSuccess())
            hashCode = hashCode * 8191 + recommendSuccess.hashCode();

        hashCode = hashCode * 8191 + ((isSetForwardMessage()) ? 131071 : 524287);
        if (isSetForwardMessage())
            hashCode = hashCode * 8191 + forwardMessage.hashCode();

        hashCode = hashCode * 8191 + ((isSetApplicationCountLimit()) ? 131071 : 524287);
        if (isSetApplicationCountLimit())
            hashCode = hashCode * 8191 + applicationCountLimit;

        hashCode = hashCode * 8191 + ((isSetJobCustomTitle()) ? 131071 : 524287);
        if (isSetJobCustomTitle())
            hashCode = hashCode * 8191 + jobCustomTitle.hashCode();

        hashCode = hashCode * 8191 + ((isSetSearchSeq()) ? 131071 : 524287);
        if (isSetSearchSeq())
            hashCode = hashCode * 8191 + searchSeq.hashCode();

        hashCode = hashCode * 8191 + ((isSetSearchImg()) ? 131071 : 524287);
        if (isSetSearchImg())
            hashCode = hashCode * 8191 + searchImg.hashCode();

        hashCode = hashCode * 8191 + ((isSetJobOccupation()) ? 131071 : 524287);
        if (isSetJobOccupation())
            hashCode = hashCode * 8191 + jobOccupation.hashCode();

        hashCode = hashCode * 8191 + ((isSetTeamnameCustom()) ? 131071 : 524287);
        if (isSetTeamnameCustom())
            hashCode = hashCode * 8191 + teamnameCustom.hashCode();

        hashCode = hashCode * 8191 + ((isSetApplicationTime()) ? 131071 : 524287);
        if (isSetApplicationTime())
            hashCode = hashCode * 8191 + applicationTime.hashCode();

        hashCode = hashCode * 8191 + ((isSetNewjdStatus()) ? 131071 : 524287);
        if (isSetNewjdStatus())
            hashCode = hashCode * 8191 + newjdStatus;

        hashCode = hashCode * 8191 + ((isSetHrChat()) ? 131071 : 524287);
        if (isSetHrChat())
            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(hrChat);

        hashCode = hashCode * 8191 + ((isSetShowInQx()) ? 131071 : 524287);
        if (isSetShowInQx())
            hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(showInQx);

        hashCode = hashCode * 8191 + ((isSetEmployeeSlug()) ? 131071 : 524287);
        if (isSetEmployeeSlug())
            hashCode = hashCode * 8191 + employeeSlug.hashCode();

        hashCode = hashCode * 8191 + ((isSetDisplayLocale()) ? 131071 : 524287);
        if (isSetDisplayLocale())
            hashCode = hashCode * 8191 + displayLocale.hashCode();

        hashCode = hashCode * 8191 + ((isSetTalentpoolStatus()) ? 131071 : 524287);
        if (isSetTalentpoolStatus())
            hashCode = hashCode * 8191 + (int) (talentpoolStatus);

        hashCode = hashCode * 8191 + ((isSetSchoolApplicationCountLimit()) ? 131071 : 524287);
        if (isSetSchoolApplicationCountLimit())
            hashCode = hashCode * 8191 + schoolApplicationCountLimit;

        hashCode = hashCode * 8191 + ((isSetJob51SalaryDiscuss()) ? 131071 : 524287);
        if (isSetJob51SalaryDiscuss())
            hashCode = hashCode * 8191 + job51SalaryDiscuss;

        hashCode = hashCode * 8191 + ((isSetVeryeastSwitch()) ? 131071 : 524287);
        if (isSetVeryeastSwitch())
            hashCode = hashCode * 8191 + veryeastSwitch;

        hashCode = hashCode * 8191 + ((isSetIsOpenGdpr()) ? 131071 : 524287);
        if (isSetIsOpenGdpr())
            hashCode = hashCode * 8191 + (int) (isOpenGdpr);

        return hashCode;
    }

    @Override
    public int compareTo(HrCompanyConfDO other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompanyId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetThemeId()).compareTo(other.isSetThemeId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetThemeId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.themeId, other.themeId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetHbThrottle()).compareTo(other.isSetHbThrottle());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetHbThrottle()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hbThrottle, other.hbThrottle);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetAppReply()).compareTo(other.isSetAppReply());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAppReply()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appReply, other.appReply);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCreateTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUpdateTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEmployeeBinding()).compareTo(other.isSetEmployeeBinding());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEmployeeBinding()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeBinding, other.employeeBinding);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetRecommendPresentee()).compareTo(other.isSetRecommendPresentee());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetRecommendPresentee()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendPresentee, other.recommendPresentee);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetRecommendSuccess()).compareTo(other.isSetRecommendSuccess());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetRecommendSuccess()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendSuccess, other.recommendSuccess);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetForwardMessage()).compareTo(other.isSetForwardMessage());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetForwardMessage()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.forwardMessage, other.forwardMessage);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetApplicationCountLimit()).compareTo(other.isSetApplicationCountLimit());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetApplicationCountLimit()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationCountLimit, other.applicationCountLimit);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetJobCustomTitle()).compareTo(other.isSetJobCustomTitle());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetJobCustomTitle()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobCustomTitle, other.jobCustomTitle);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSearchSeq()).compareTo(other.isSetSearchSeq());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSearchSeq()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.searchSeq, other.searchSeq);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSearchImg()).compareTo(other.isSetSearchImg());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSearchImg()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.searchImg, other.searchImg);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetJobOccupation()).compareTo(other.isSetJobOccupation());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetJobOccupation()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobOccupation, other.jobOccupation);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetTeamnameCustom()).compareTo(other.isSetTeamnameCustom());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetTeamnameCustom()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teamnameCustom, other.teamnameCustom);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetApplicationTime()).compareTo(other.isSetApplicationTime());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetApplicationTime()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationTime, other.applicationTime);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetNewjdStatus()).compareTo(other.isSetNewjdStatus());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetNewjdStatus()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newjdStatus, other.newjdStatus);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetHrChat()).compareTo(other.isSetHrChat());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetHrChat()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrChat, other.hrChat);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetShowInQx()).compareTo(other.isSetShowInQx());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetShowInQx()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.showInQx, other.showInQx);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEmployeeSlug()).compareTo(other.isSetEmployeeSlug());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEmployeeSlug()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeSlug, other.employeeSlug);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDisplayLocale()).compareTo(other.isSetDisplayLocale());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDisplayLocale()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayLocale, other.displayLocale);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetTalentpoolStatus()).compareTo(other.isSetTalentpoolStatus());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetTalentpoolStatus()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.talentpoolStatus, other.talentpoolStatus);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSchoolApplicationCountLimit()).compareTo(other.isSetSchoolApplicationCountLimit());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSchoolApplicationCountLimit()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.schoolApplicationCountLimit, other.schoolApplicationCountLimit);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetJob51SalaryDiscuss()).compareTo(other.isSetJob51SalaryDiscuss());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetJob51SalaryDiscuss()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job51SalaryDiscuss, other.job51SalaryDiscuss);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetVeryeastSwitch()).compareTo(other.isSetVeryeastSwitch());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetVeryeastSwitch()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.veryeastSwitch, other.veryeastSwitch);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetIsOpenGdpr()).compareTo(other.isSetIsOpenGdpr());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetIsOpenGdpr()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isOpenGdpr, other.isOpenGdpr);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("HrCompanyConfDO(");
        boolean first = true;

        if (isSetCompanyId()) {
            sb.append("companyId:");
            sb.append(this.companyId);
            first = false;
        }
        if (isSetThemeId()) {
            if (!first) sb.append(", ");
            sb.append("themeId:");
            sb.append(this.themeId);
            first = false;
        }
        if (isSetHbThrottle()) {
            if (!first) sb.append(", ");
            sb.append("hbThrottle:");
            sb.append(this.hbThrottle);
            first = false;
        }
        if (isSetAppReply()) {
            if (!first) sb.append(", ");
            sb.append("appReply:");
            if (this.appReply == null) {
                sb.append("null");
            } else {
                sb.append(this.appReply);
            }
            first = false;
        }
        if (isSetCreateTime()) {
            if (!first) sb.append(", ");
            sb.append("createTime:");
            if (this.createTime == null) {
                sb.append("null");
            } else {
                sb.append(this.createTime);
            }
            first = false;
        }
        if (isSetUpdateTime()) {
            if (!first) sb.append(", ");
            sb.append("updateTime:");
            if (this.updateTime == null) {
                sb.append("null");
            } else {
                sb.append(this.updateTime);
            }
            first = false;
        }
        if (isSetEmployeeBinding()) {
            if (!first) sb.append(", ");
            sb.append("employeeBinding:");
            if (this.employeeBinding == null) {
                sb.append("null");
            } else {
                sb.append(this.employeeBinding);
            }
            first = false;
        }
        if (isSetRecommendPresentee()) {
            if (!first) sb.append(", ");
            sb.append("recommendPresentee:");
            if (this.recommendPresentee == null) {
                sb.append("null");
            } else {
                sb.append(this.recommendPresentee);
            }
            first = false;
        }
        if (isSetRecommendSuccess()) {
            if (!first) sb.append(", ");
            sb.append("recommendSuccess:");
            if (this.recommendSuccess == null) {
                sb.append("null");
            } else {
                sb.append(this.recommendSuccess);
            }
            first = false;
        }
        if (isSetForwardMessage()) {
            if (!first) sb.append(", ");
            sb.append("forwardMessage:");
            if (this.forwardMessage == null) {
                sb.append("null");
            } else {
                sb.append(this.forwardMessage);
            }
            first = false;
        }
        if (isSetApplicationCountLimit()) {
            if (!first) sb.append(", ");
            sb.append("applicationCountLimit:");
            sb.append(this.applicationCountLimit);
            first = false;
        }
        if (isSetJobCustomTitle()) {
            if (!first) sb.append(", ");
            sb.append("jobCustomTitle:");
            if (this.jobCustomTitle == null) {
                sb.append("null");
            } else {
                sb.append(this.jobCustomTitle);
            }
            first = false;
        }
        if (isSetSearchSeq()) {
            if (!first) sb.append(", ");
            sb.append("searchSeq:");
            if (this.searchSeq == null) {
                sb.append("null");
            } else {
                sb.append(this.searchSeq);
            }
            first = false;
        }
        if (isSetSearchImg()) {
            if (!first) sb.append(", ");
            sb.append("searchImg:");
            if (this.searchImg == null) {
                sb.append("null");
            } else {
                sb.append(this.searchImg);
            }
            first = false;
        }
        if (isSetJobOccupation()) {
            if (!first) sb.append(", ");
            sb.append("jobOccupation:");
            if (this.jobOccupation == null) {
                sb.append("null");
            } else {
                sb.append(this.jobOccupation);
            }
            first = false;
        }
        if (isSetTeamnameCustom()) {
            if (!first) sb.append(", ");
            sb.append("teamnameCustom:");
            if (this.teamnameCustom == null) {
                sb.append("null");
            } else {
                sb.append(this.teamnameCustom);
            }
            first = false;
        }
        if (isSetApplicationTime()) {
            if (!first) sb.append(", ");
            sb.append("applicationTime:");
            if (this.applicationTime == null) {
                sb.append("null");
            } else {
                sb.append(this.applicationTime);
            }
            first = false;
        }
        if (isSetNewjdStatus()) {
            if (!first) sb.append(", ");
            sb.append("newjdStatus:");
            sb.append(this.newjdStatus);
            first = false;
        }
        if (isSetHrChat()) {
            if (!first) sb.append(", ");
            sb.append("hrChat:");
            sb.append(this.hrChat);
            first = false;
        }
        if (isSetShowInQx()) {
            if (!first) sb.append(", ");
            sb.append("showInQx:");
            sb.append(this.showInQx);
            first = false;
        }
        if (isSetEmployeeSlug()) {
            if (!first) sb.append(", ");
            sb.append("employeeSlug:");
            if (this.employeeSlug == null) {
                sb.append("null");
            } else {
                sb.append(this.employeeSlug);
            }
            first = false;
        }
        if (isSetDisplayLocale()) {
            if (!first) sb.append(", ");
            sb.append("displayLocale:");
            if (this.displayLocale == null) {
                sb.append("null");
            } else {
                sb.append(this.displayLocale);
            }
            first = false;
        }
        if (isSetTalentpoolStatus()) {
            if (!first) sb.append(", ");
            sb.append("talentpoolStatus:");
            sb.append(this.talentpoolStatus);
            first = false;
        }
        if (isSetSchoolApplicationCountLimit()) {
            if (!first) sb.append(", ");
            sb.append("schoolApplicationCountLimit:");
            sb.append(this.schoolApplicationCountLimit);
            first = false;
        }
        if (isSetJob51SalaryDiscuss()) {
            if (!first) sb.append(", ");
            sb.append("job51SalaryDiscuss:");
            sb.append(this.job51SalaryDiscuss);
            first = false;
        }
        if (isSetVeryeastSwitch()) {
            if (!first) sb.append(", ");
            sb.append("veryeastSwitch:");
            sb.append(this.veryeastSwitch);
            first = false;
        }
        if (isSetIsOpenGdpr()) {
            if (!first) sb.append(", ");
            sb.append("isOpenGdpr:");
            sb.append(this.isOpenGdpr);
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class HrCompanyConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HrCompanyConfDOStandardScheme getScheme() {
            return new HrCompanyConfDOStandardScheme();
        }
    }

    private static class HrCompanyConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrCompanyConfDO> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, HrCompanyConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // COMPANY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.companyId = iprot.readI32();
                            struct.setCompanyIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // THEME_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.themeId = iprot.readI32();
                            struct.setThemeIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // HB_THROTTLE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.hbThrottle = iprot.readI32();
                            struct.setHbThrottleIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // APP_REPLY
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.appReply = iprot.readString();
                            struct.setAppReplyIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // CREATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.createTime = iprot.readString();
                            struct.setCreateTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // UPDATE_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.updateTime = iprot.readString();
                            struct.setUpdateTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // EMPLOYEE_BINDING
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.employeeBinding = iprot.readString();
                            struct.setEmployeeBindingIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // RECOMMEND_PRESENTEE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.recommendPresentee = iprot.readString();
                            struct.setRecommendPresenteeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // RECOMMEND_SUCCESS
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.recommendSuccess = iprot.readString();
                            struct.setRecommendSuccessIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 10: // FORWARD_MESSAGE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.forwardMessage = iprot.readString();
                            struct.setForwardMessageIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 11: // APPLICATION_COUNT_LIMIT
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.applicationCountLimit = iprot.readI16();
                            struct.setApplicationCountLimitIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 12: // JOB_CUSTOM_TITLE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.jobCustomTitle = iprot.readString();
                            struct.setJobCustomTitleIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 13: // SEARCH_SEQ
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.searchSeq = iprot.readString();
                            struct.setSearchSeqIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 14: // SEARCH_IMG
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.searchImg = iprot.readString();
                            struct.setSearchImgIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 15: // JOB_OCCUPATION
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.jobOccupation = iprot.readString();
                            struct.setJobOccupationIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 16: // TEAMNAME_CUSTOM
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.teamnameCustom = iprot.readString();
                            struct.setTeamnameCustomIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 17: // APPLICATION_TIME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.applicationTime = iprot.readString();
                            struct.setApplicationTimeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 18: // NEWJD_STATUS
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.newjdStatus = iprot.readI32();
                            struct.setNewjdStatusIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 19: // HR_CHAT
                        if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                            struct.hrChat = iprot.readDouble();
                            struct.setHrChatIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 20: // SHOW_IN_QX
                        if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                            struct.showInQx = iprot.readDouble();
                            struct.setShowInQxIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 21: // EMPLOYEE_SLUG
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.employeeSlug = iprot.readString();
                            struct.setEmployeeSlugIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 22: // DISPLAY_LOCALE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.displayLocale = iprot.readString();
                            struct.setDisplayLocaleIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 23: // TALENTPOOL_STATUS
                        if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
                            struct.talentpoolStatus = iprot.readByte();
                            struct.setTalentpoolStatusIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 24: // SCHOOL_APPLICATION_COUNT_LIMIT
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.schoolApplicationCountLimit = iprot.readI16();
                            struct.setSchoolApplicationCountLimitIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 25: // JOB51_SALARY_DISCUSS
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.job51SalaryDiscuss = iprot.readI16();
                            struct.setJob51SalaryDiscussIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 26: // VERYEAST_SWITCH
                        if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
                            struct.veryeastSwitch = iprot.readI16();
                            struct.setVeryeastSwitchIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 27: // IS_OPEN_GDPR
                        if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
                            struct.isOpenGdpr = iprot.readByte();
                            struct.setIsOpenGdprIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, HrCompanyConfDO struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetCompanyId()) {
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.companyId);
                oprot.writeFieldEnd();
            }
            if (struct.isSetThemeId()) {
                oprot.writeFieldBegin(THEME_ID_FIELD_DESC);
                oprot.writeI32(struct.themeId);
                oprot.writeFieldEnd();
            }
            if (struct.isSetHbThrottle()) {
                oprot.writeFieldBegin(HB_THROTTLE_FIELD_DESC);
                oprot.writeI32(struct.hbThrottle);
                oprot.writeFieldEnd();
            }
            if (struct.appReply != null) {
                if (struct.isSetAppReply()) {
                    oprot.writeFieldBegin(APP_REPLY_FIELD_DESC);
                    oprot.writeString(struct.appReply);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.createTime != null) {
                if (struct.isSetCreateTime()) {
                    oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.createTime);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.updateTime != null) {
                if (struct.isSetUpdateTime()) {
                    oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
                    oprot.writeString(struct.updateTime);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.employeeBinding != null) {
                if (struct.isSetEmployeeBinding()) {
                    oprot.writeFieldBegin(EMPLOYEE_BINDING_FIELD_DESC);
                    oprot.writeString(struct.employeeBinding);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.recommendPresentee != null) {
                if (struct.isSetRecommendPresentee()) {
                    oprot.writeFieldBegin(RECOMMEND_PRESENTEE_FIELD_DESC);
                    oprot.writeString(struct.recommendPresentee);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.recommendSuccess != null) {
                if (struct.isSetRecommendSuccess()) {
                    oprot.writeFieldBegin(RECOMMEND_SUCCESS_FIELD_DESC);
                    oprot.writeString(struct.recommendSuccess);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.forwardMessage != null) {
                if (struct.isSetForwardMessage()) {
                    oprot.writeFieldBegin(FORWARD_MESSAGE_FIELD_DESC);
                    oprot.writeString(struct.forwardMessage);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetApplicationCountLimit()) {
                oprot.writeFieldBegin(APPLICATION_COUNT_LIMIT_FIELD_DESC);
                oprot.writeI16(struct.applicationCountLimit);
                oprot.writeFieldEnd();
            }
            if (struct.jobCustomTitle != null) {
                if (struct.isSetJobCustomTitle()) {
                    oprot.writeFieldBegin(JOB_CUSTOM_TITLE_FIELD_DESC);
                    oprot.writeString(struct.jobCustomTitle);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.searchSeq != null) {
                if (struct.isSetSearchSeq()) {
                    oprot.writeFieldBegin(SEARCH_SEQ_FIELD_DESC);
                    oprot.writeString(struct.searchSeq);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.searchImg != null) {
                if (struct.isSetSearchImg()) {
                    oprot.writeFieldBegin(SEARCH_IMG_FIELD_DESC);
                    oprot.writeString(struct.searchImg);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.jobOccupation != null) {
                if (struct.isSetJobOccupation()) {
                    oprot.writeFieldBegin(JOB_OCCUPATION_FIELD_DESC);
                    oprot.writeString(struct.jobOccupation);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.teamnameCustom != null) {
                if (struct.isSetTeamnameCustom()) {
                    oprot.writeFieldBegin(TEAMNAME_CUSTOM_FIELD_DESC);
                    oprot.writeString(struct.teamnameCustom);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.applicationTime != null) {
                if (struct.isSetApplicationTime()) {
                    oprot.writeFieldBegin(APPLICATION_TIME_FIELD_DESC);
                    oprot.writeString(struct.applicationTime);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetNewjdStatus()) {
                oprot.writeFieldBegin(NEWJD_STATUS_FIELD_DESC);
                oprot.writeI32(struct.newjdStatus);
                oprot.writeFieldEnd();
            }
            if (struct.isSetHrChat()) {
                oprot.writeFieldBegin(HR_CHAT_FIELD_DESC);
                oprot.writeDouble(struct.hrChat);
                oprot.writeFieldEnd();
            }
            if (struct.isSetShowInQx()) {
                oprot.writeFieldBegin(SHOW_IN_QX_FIELD_DESC);
                oprot.writeDouble(struct.showInQx);
                oprot.writeFieldEnd();
            }
            if (struct.employeeSlug != null) {
                if (struct.isSetEmployeeSlug()) {
                    oprot.writeFieldBegin(EMPLOYEE_SLUG_FIELD_DESC);
                    oprot.writeString(struct.employeeSlug);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.displayLocale != null) {
                if (struct.isSetDisplayLocale()) {
                    oprot.writeFieldBegin(DISPLAY_LOCALE_FIELD_DESC);
                    oprot.writeString(struct.displayLocale);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetTalentpoolStatus()) {
                oprot.writeFieldBegin(TALENTPOOL_STATUS_FIELD_DESC);
                oprot.writeByte(struct.talentpoolStatus);
                oprot.writeFieldEnd();
            }
            if (struct.isSetSchoolApplicationCountLimit()) {
                oprot.writeFieldBegin(SCHOOL_APPLICATION_COUNT_LIMIT_FIELD_DESC);
                oprot.writeI16(struct.schoolApplicationCountLimit);
                oprot.writeFieldEnd();
            }
            if (struct.isSetJob51SalaryDiscuss()) {
                oprot.writeFieldBegin(JOB51_SALARY_DISCUSS_FIELD_DESC);
                oprot.writeI16(struct.job51SalaryDiscuss);
                oprot.writeFieldEnd();
            }
            if (struct.isSetVeryeastSwitch()) {
                oprot.writeFieldBegin(VERYEAST_SWITCH_FIELD_DESC);
                oprot.writeI16(struct.veryeastSwitch);
                oprot.writeFieldEnd();
            }
            if (struct.isSetIsOpenGdpr()) {
                oprot.writeFieldBegin(IS_OPEN_GDPR_FIELD_DESC);
                oprot.writeByte(struct.isOpenGdpr);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class HrCompanyConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HrCompanyConfDOTupleScheme getScheme() {
            return new HrCompanyConfDOTupleScheme();
        }
    }

    private static class HrCompanyConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrCompanyConfDO> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, HrCompanyConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetCompanyId()) {
                optionals.set(0);
            }
            if (struct.isSetThemeId()) {
                optionals.set(1);
            }
            if (struct.isSetHbThrottle()) {
                optionals.set(2);
            }
            if (struct.isSetAppReply()) {
                optionals.set(3);
            }
            if (struct.isSetCreateTime()) {
                optionals.set(4);
            }
            if (struct.isSetUpdateTime()) {
                optionals.set(5);
            }
            if (struct.isSetEmployeeBinding()) {
                optionals.set(6);
            }
            if (struct.isSetRecommendPresentee()) {
                optionals.set(7);
            }
            if (struct.isSetRecommendSuccess()) {
                optionals.set(8);
            }
            if (struct.isSetForwardMessage()) {
                optionals.set(9);
            }
            if (struct.isSetApplicationCountLimit()) {
                optionals.set(10);
            }
            if (struct.isSetJobCustomTitle()) {
                optionals.set(11);
            }
            if (struct.isSetSearchSeq()) {
                optionals.set(12);
            }
            if (struct.isSetSearchImg()) {
                optionals.set(13);
            }
            if (struct.isSetJobOccupation()) {
                optionals.set(14);
            }
            if (struct.isSetTeamnameCustom()) {
                optionals.set(15);
            }
            if (struct.isSetApplicationTime()) {
                optionals.set(16);
            }
            if (struct.isSetNewjdStatus()) {
                optionals.set(17);
            }
            if (struct.isSetHrChat()) {
                optionals.set(18);
            }
            if (struct.isSetShowInQx()) {
                optionals.set(19);
            }
            if (struct.isSetEmployeeSlug()) {
                optionals.set(20);
            }
            if (struct.isSetDisplayLocale()) {
                optionals.set(21);
            }
            if (struct.isSetTalentpoolStatus()) {
                optionals.set(22);
            }
            if (struct.isSetSchoolApplicationCountLimit()) {
                optionals.set(23);
            }
            if (struct.isSetJob51SalaryDiscuss()) {
                optionals.set(24);
            }
            if (struct.isSetVeryeastSwitch()) {
                optionals.set(25);
            }
            if (struct.isSetIsOpenGdpr()) {
                optionals.set(26);
            }
            oprot.writeBitSet(optionals, 27);
            if (struct.isSetCompanyId()) {
                oprot.writeI32(struct.companyId);
            }
            if (struct.isSetThemeId()) {
                oprot.writeI32(struct.themeId);
            }
            if (struct.isSetHbThrottle()) {
                oprot.writeI32(struct.hbThrottle);
            }
            if (struct.isSetAppReply()) {
                oprot.writeString(struct.appReply);
            }
            if (struct.isSetCreateTime()) {
                oprot.writeString(struct.createTime);
            }
            if (struct.isSetUpdateTime()) {
                oprot.writeString(struct.updateTime);
            }
            if (struct.isSetEmployeeBinding()) {
                oprot.writeString(struct.employeeBinding);
            }
            if (struct.isSetRecommendPresentee()) {
                oprot.writeString(struct.recommendPresentee);
            }
            if (struct.isSetRecommendSuccess()) {
                oprot.writeString(struct.recommendSuccess);
            }
            if (struct.isSetForwardMessage()) {
                oprot.writeString(struct.forwardMessage);
            }
            if (struct.isSetApplicationCountLimit()) {
                oprot.writeI16(struct.applicationCountLimit);
            }
            if (struct.isSetJobCustomTitle()) {
                oprot.writeString(struct.jobCustomTitle);
            }
            if (struct.isSetSearchSeq()) {
                oprot.writeString(struct.searchSeq);
            }
            if (struct.isSetSearchImg()) {
                oprot.writeString(struct.searchImg);
            }
            if (struct.isSetJobOccupation()) {
                oprot.writeString(struct.jobOccupation);
            }
            if (struct.isSetTeamnameCustom()) {
                oprot.writeString(struct.teamnameCustom);
            }
            if (struct.isSetApplicationTime()) {
                oprot.writeString(struct.applicationTime);
            }
            if (struct.isSetNewjdStatus()) {
                oprot.writeI32(struct.newjdStatus);
            }
            if (struct.isSetHrChat()) {
                oprot.writeDouble(struct.hrChat);
            }
            if (struct.isSetShowInQx()) {
                oprot.writeDouble(struct.showInQx);
            }
            if (struct.isSetEmployeeSlug()) {
                oprot.writeString(struct.employeeSlug);
            }
            if (struct.isSetDisplayLocale()) {
                oprot.writeString(struct.displayLocale);
            }
            if (struct.isSetTalentpoolStatus()) {
                oprot.writeByte(struct.talentpoolStatus);
            }
            if (struct.isSetSchoolApplicationCountLimit()) {
                oprot.writeI16(struct.schoolApplicationCountLimit);
            }
            if (struct.isSetJob51SalaryDiscuss()) {
                oprot.writeI16(struct.job51SalaryDiscuss);
            }
            if (struct.isSetVeryeastSwitch()) {
                oprot.writeI16(struct.veryeastSwitch);
            }
            if (struct.isSetIsOpenGdpr()) {
                oprot.writeByte(struct.isOpenGdpr);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, HrCompanyConfDO struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(27);
            if (incoming.get(0)) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.themeId = iprot.readI32();
                struct.setThemeIdIsSet(true);
            }
            if (incoming.get(2)) {
                struct.hbThrottle = iprot.readI32();
                struct.setHbThrottleIsSet(true);
            }
            if (incoming.get(3)) {
                struct.appReply = iprot.readString();
                struct.setAppReplyIsSet(true);
            }
            if (incoming.get(4)) {
                struct.createTime = iprot.readString();
                struct.setCreateTimeIsSet(true);
            }
            if (incoming.get(5)) {
                struct.updateTime = iprot.readString();
                struct.setUpdateTimeIsSet(true);
            }
            if (incoming.get(6)) {
                struct.employeeBinding = iprot.readString();
                struct.setEmployeeBindingIsSet(true);
            }
            if (incoming.get(7)) {
                struct.recommendPresentee = iprot.readString();
                struct.setRecommendPresenteeIsSet(true);
            }
            if (incoming.get(8)) {
                struct.recommendSuccess = iprot.readString();
                struct.setRecommendSuccessIsSet(true);
            }
            if (incoming.get(9)) {
                struct.forwardMessage = iprot.readString();
                struct.setForwardMessageIsSet(true);
            }
            if (incoming.get(10)) {
                struct.applicationCountLimit = iprot.readI16();
                struct.setApplicationCountLimitIsSet(true);
            }
            if (incoming.get(11)) {
                struct.jobCustomTitle = iprot.readString();
                struct.setJobCustomTitleIsSet(true);
            }
            if (incoming.get(12)) {
                struct.searchSeq = iprot.readString();
                struct.setSearchSeqIsSet(true);
            }
            if (incoming.get(13)) {
                struct.searchImg = iprot.readString();
                struct.setSearchImgIsSet(true);
            }
            if (incoming.get(14)) {
                struct.jobOccupation = iprot.readString();
                struct.setJobOccupationIsSet(true);
            }
            if (incoming.get(15)) {
                struct.teamnameCustom = iprot.readString();
                struct.setTeamnameCustomIsSet(true);
            }
            if (incoming.get(16)) {
                struct.applicationTime = iprot.readString();
                struct.setApplicationTimeIsSet(true);
            }
            if (incoming.get(17)) {
                struct.newjdStatus = iprot.readI32();
                struct.setNewjdStatusIsSet(true);
            }
            if (incoming.get(18)) {
                struct.hrChat = iprot.readDouble();
                struct.setHrChatIsSet(true);
            }
            if (incoming.get(19)) {
                struct.showInQx = iprot.readDouble();
                struct.setShowInQxIsSet(true);
            }
            if (incoming.get(20)) {
                struct.employeeSlug = iprot.readString();
                struct.setEmployeeSlugIsSet(true);
            }
            if (incoming.get(21)) {
                struct.displayLocale = iprot.readString();
                struct.setDisplayLocaleIsSet(true);
            }
            if (incoming.get(22)) {
                struct.talentpoolStatus = iprot.readByte();
                struct.setTalentpoolStatusIsSet(true);
            }
            if (incoming.get(23)) {
                struct.schoolApplicationCountLimit = iprot.readI16();
                struct.setSchoolApplicationCountLimitIsSet(true);
            }
            if (incoming.get(24)) {
                struct.job51SalaryDiscuss = iprot.readI16();
                struct.setJob51SalaryDiscussIsSet(true);
            }
            if (incoming.get(25)) {
                struct.veryeastSwitch = iprot.readI16();
                struct.setVeryeastSwitchIsSet(true);
            }
            if (incoming.get(26)) {
                struct.isOpenGdpr = iprot.readByte();
                struct.setIsOpenGdprIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

