/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-26")
public class HrChildCompanyDO implements org.apache.thrift.TBase<HrChildCompanyDO, HrChildCompanyDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrChildCompanyDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrChildCompanyDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ENAME_FIELD_DESC = new org.apache.thrift.protocol.TField("ename", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)4);
  private static final org.apache.thrift.protocol.TField CEO_FIELD_DESC = new org.apache.thrift.protocol.TField("ceo", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PROVINCE_FIELD_DESC = new org.apache.thrift.protocol.TField("province", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("property", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField BUSINESS_FIELD_DESC = new org.apache.thrift.protocol.TField("business", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ESTABLISH_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("establishTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PARENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("parentId", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField HOMEPAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("homepage", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrChildCompanyDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrChildCompanyDOTupleSchemeFactory();

  public int id; // optional
  public java.lang.String name; // optional
  public java.lang.String ename; // optional
  public byte status; // optional
  public java.lang.String ceo; // optional
  public java.lang.String introduction; // optional
  public java.lang.String scale; // optional
  public java.lang.String province; // optional
  public java.lang.String city; // optional
  public java.lang.String address; // optional
  public double property; // optional
  public java.lang.String business; // optional
  public java.lang.String establishTime; // optional
  public int parentId; // optional
  public java.lang.String homepage; // optional
  public int companyId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    ENAME((short)3, "ename"),
    STATUS((short)4, "status"),
    CEO((short)5, "ceo"),
    INTRODUCTION((short)6, "introduction"),
    SCALE((short)7, "scale"),
    PROVINCE((short)8, "province"),
    CITY((short)9, "city"),
    ADDRESS((short)10, "address"),
    PROPERTY((short)11, "property"),
    BUSINESS((short)12, "business"),
    ESTABLISH_TIME((short)13, "establishTime"),
    PARENT_ID((short)14, "parentId"),
    HOMEPAGE((short)15, "homepage"),
    COMPANY_ID((short)16, "companyId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // ENAME
          return ENAME;
        case 4: // STATUS
          return STATUS;
        case 5: // CEO
          return CEO;
        case 6: // INTRODUCTION
          return INTRODUCTION;
        case 7: // SCALE
          return SCALE;
        case 8: // PROVINCE
          return PROVINCE;
        case 9: // CITY
          return CITY;
        case 10: // ADDRESS
          return ADDRESS;
        case 11: // PROPERTY
          return PROPERTY;
        case 12: // BUSINESS
          return BUSINESS;
        case 13: // ESTABLISH_TIME
          return ESTABLISH_TIME;
        case 14: // PARENT_ID
          return PARENT_ID;
        case 15: // HOMEPAGE
          return HOMEPAGE;
        case 16: // COMPANY_ID
          return COMPANY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __PROPERTY_ISSET_ID = 2;
  private static final int __PARENTID_ISSET_ID = 3;
  private static final int __COMPANYID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.NAME,_Fields.ENAME,_Fields.STATUS,_Fields.CEO,_Fields.INTRODUCTION,_Fields.SCALE,_Fields.PROVINCE,_Fields.CITY,_Fields.ADDRESS,_Fields.PROPERTY,_Fields.BUSINESS,_Fields.ESTABLISH_TIME,_Fields.PARENT_ID,_Fields.HOMEPAGE,_Fields.COMPANY_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENAME, new org.apache.thrift.meta_data.FieldMetaData("ename", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CEO, new org.apache.thrift.meta_data.FieldMetaData("ceo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE, new org.apache.thrift.meta_data.FieldMetaData("province", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS, new org.apache.thrift.meta_data.FieldMetaData("business", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESTABLISH_TIME, new org.apache.thrift.meta_data.FieldMetaData("establishTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARENT_ID, new org.apache.thrift.meta_data.FieldMetaData("parentId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HOMEPAGE, new org.apache.thrift.meta_data.FieldMetaData("homepage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrChildCompanyDO.class, metaDataMap);
  }

  public HrChildCompanyDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrChildCompanyDO(HrChildCompanyDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetEname()) {
      this.ename = other.ename;
    }
    this.status = other.status;
    if (other.isSetCeo()) {
      this.ceo = other.ceo;
    }
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetScale()) {
      this.scale = other.scale;
    }
    if (other.isSetProvince()) {
      this.province = other.province;
    }
    if (other.isSetCity()) {
      this.city = other.city;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.property = other.property;
    if (other.isSetBusiness()) {
      this.business = other.business;
    }
    if (other.isSetEstablishTime()) {
      this.establishTime = other.establishTime;
    }
    this.parentId = other.parentId;
    if (other.isSetHomepage()) {
      this.homepage = other.homepage;
    }
    this.companyId = other.companyId;
  }

  public HrChildCompanyDO deepCopy() {
    return new HrChildCompanyDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.ename = null;
    setStatusIsSet(false);
    this.status = 0;
    this.ceo = null;
    this.introduction = null;
    this.scale = null;
    this.province = null;
    this.city = null;
    this.address = null;
    setPropertyIsSet(false);
    this.property = 0.0;
    this.business = null;
    this.establishTime = null;
    setParentIdIsSet(false);
    this.parentId = 0;
    this.homepage = null;
    setCompanyIdIsSet(false);
    this.companyId = 0;
  }

  public int getId() {
    return this.id;
  }

  public HrChildCompanyDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public HrChildCompanyDO setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getEname() {
    return this.ename;
  }

  public HrChildCompanyDO setEname(java.lang.String ename) {
    this.ename = ename;
    return this;
  }

  public void unsetEname() {
    this.ename = null;
  }

  /** Returns true if field ename is set (has been assigned a value) and false otherwise */
  public boolean isSetEname() {
    return this.ename != null;
  }

  public void setEnameIsSet(boolean value) {
    if (!value) {
      this.ename = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public HrChildCompanyDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public java.lang.String getCeo() {
    return this.ceo;
  }

  public HrChildCompanyDO setCeo(java.lang.String ceo) {
    this.ceo = ceo;
    return this;
  }

  public void unsetCeo() {
    this.ceo = null;
  }

  /** Returns true if field ceo is set (has been assigned a value) and false otherwise */
  public boolean isSetCeo() {
    return this.ceo != null;
  }

  public void setCeoIsSet(boolean value) {
    if (!value) {
      this.ceo = null;
    }
  }

  public java.lang.String getIntroduction() {
    return this.introduction;
  }

  public HrChildCompanyDO setIntroduction(java.lang.String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  public java.lang.String getScale() {
    return this.scale;
  }

  public HrChildCompanyDO setScale(java.lang.String scale) {
    this.scale = scale;
    return this;
  }

  public void unsetScale() {
    this.scale = null;
  }

  /** Returns true if field scale is set (has been assigned a value) and false otherwise */
  public boolean isSetScale() {
    return this.scale != null;
  }

  public void setScaleIsSet(boolean value) {
    if (!value) {
      this.scale = null;
    }
  }

  public java.lang.String getProvince() {
    return this.province;
  }

  public HrChildCompanyDO setProvince(java.lang.String province) {
    this.province = province;
    return this;
  }

  public void unsetProvince() {
    this.province = null;
  }

  /** Returns true if field province is set (has been assigned a value) and false otherwise */
  public boolean isSetProvince() {
    return this.province != null;
  }

  public void setProvinceIsSet(boolean value) {
    if (!value) {
      this.province = null;
    }
  }

  public java.lang.String getCity() {
    return this.city;
  }

  public HrChildCompanyDO setCity(java.lang.String city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public java.lang.String getAddress() {
    return this.address;
  }

  public HrChildCompanyDO setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public double getProperty() {
    return this.property;
  }

  public HrChildCompanyDO setProperty(double property) {
    this.property = property;
    setPropertyIsSet(true);
    return this;
  }

  public void unsetProperty() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROPERTY_ISSET_ID);
  }

  /** Returns true if field property is set (has been assigned a value) and false otherwise */
  public boolean isSetProperty() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROPERTY_ISSET_ID);
  }

  public void setPropertyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROPERTY_ISSET_ID, value);
  }

  public java.lang.String getBusiness() {
    return this.business;
  }

  public HrChildCompanyDO setBusiness(java.lang.String business) {
    this.business = business;
    return this;
  }

  public void unsetBusiness() {
    this.business = null;
  }

  /** Returns true if field business is set (has been assigned a value) and false otherwise */
  public boolean isSetBusiness() {
    return this.business != null;
  }

  public void setBusinessIsSet(boolean value) {
    if (!value) {
      this.business = null;
    }
  }

  public java.lang.String getEstablishTime() {
    return this.establishTime;
  }

  public HrChildCompanyDO setEstablishTime(java.lang.String establishTime) {
    this.establishTime = establishTime;
    return this;
  }

  public void unsetEstablishTime() {
    this.establishTime = null;
  }

  /** Returns true if field establishTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEstablishTime() {
    return this.establishTime != null;
  }

  public void setEstablishTimeIsSet(boolean value) {
    if (!value) {
      this.establishTime = null;
    }
  }

  public int getParentId() {
    return this.parentId;
  }

  public HrChildCompanyDO setParentId(int parentId) {
    this.parentId = parentId;
    setParentIdIsSet(true);
    return this;
  }

  public void unsetParentId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  /** Returns true if field parentId is set (has been assigned a value) and false otherwise */
  public boolean isSetParentId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  public void setParentIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PARENTID_ISSET_ID, value);
  }

  public java.lang.String getHomepage() {
    return this.homepage;
  }

  public HrChildCompanyDO setHomepage(java.lang.String homepage) {
    this.homepage = homepage;
    return this;
  }

  public void unsetHomepage() {
    this.homepage = null;
  }

  /** Returns true if field homepage is set (has been assigned a value) and false otherwise */
  public boolean isSetHomepage() {
    return this.homepage != null;
  }

  public void setHomepageIsSet(boolean value) {
    if (!value) {
      this.homepage = null;
    }
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public HrChildCompanyDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case ENAME:
      if (value == null) {
        unsetEname();
      } else {
        setEname((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Byte)value);
      }
      break;

    case CEO:
      if (value == null) {
        unsetCeo();
      } else {
        setCeo((java.lang.String)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((java.lang.String)value);
      }
      break;

    case SCALE:
      if (value == null) {
        unsetScale();
      } else {
        setScale((java.lang.String)value);
      }
      break;

    case PROVINCE:
      if (value == null) {
        unsetProvince();
      } else {
        setProvince((java.lang.String)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((java.lang.String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.lang.String)value);
      }
      break;

    case PROPERTY:
      if (value == null) {
        unsetProperty();
      } else {
        setProperty((java.lang.Double)value);
      }
      break;

    case BUSINESS:
      if (value == null) {
        unsetBusiness();
      } else {
        setBusiness((java.lang.String)value);
      }
      break;

    case ESTABLISH_TIME:
      if (value == null) {
        unsetEstablishTime();
      } else {
        setEstablishTime((java.lang.String)value);
      }
      break;

    case PARENT_ID:
      if (value == null) {
        unsetParentId();
      } else {
        setParentId((java.lang.Integer)value);
      }
      break;

    case HOMEPAGE:
      if (value == null) {
        unsetHomepage();
      } else {
        setHomepage((java.lang.String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case ENAME:
      return getEname();

    case STATUS:
      return getStatus();

    case CEO:
      return getCeo();

    case INTRODUCTION:
      return getIntroduction();

    case SCALE:
      return getScale();

    case PROVINCE:
      return getProvince();

    case CITY:
      return getCity();

    case ADDRESS:
      return getAddress();

    case PROPERTY:
      return getProperty();

    case BUSINESS:
      return getBusiness();

    case ESTABLISH_TIME:
      return getEstablishTime();

    case PARENT_ID:
      return getParentId();

    case HOMEPAGE:
      return getHomepage();

    case COMPANY_ID:
      return getCompanyId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case ENAME:
      return isSetEname();
    case STATUS:
      return isSetStatus();
    case CEO:
      return isSetCeo();
    case INTRODUCTION:
      return isSetIntroduction();
    case SCALE:
      return isSetScale();
    case PROVINCE:
      return isSetProvince();
    case CITY:
      return isSetCity();
    case ADDRESS:
      return isSetAddress();
    case PROPERTY:
      return isSetProperty();
    case BUSINESS:
      return isSetBusiness();
    case ESTABLISH_TIME:
      return isSetEstablishTime();
    case PARENT_ID:
      return isSetParentId();
    case HOMEPAGE:
      return isSetHomepage();
    case COMPANY_ID:
      return isSetCompanyId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrChildCompanyDO)
      return this.equals((HrChildCompanyDO)that);
    return false;
  }

  public boolean equals(HrChildCompanyDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_ename = true && this.isSetEname();
    boolean that_present_ename = true && that.isSetEname();
    if (this_present_ename || that_present_ename) {
      if (!(this_present_ename && that_present_ename))
        return false;
      if (!this.ename.equals(that.ename))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_ceo = true && this.isSetCeo();
    boolean that_present_ceo = true && that.isSetCeo();
    if (this_present_ceo || that_present_ceo) {
      if (!(this_present_ceo && that_present_ceo))
        return false;
      if (!this.ceo.equals(that.ceo))
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_scale = true && this.isSetScale();
    boolean that_present_scale = true && that.isSetScale();
    if (this_present_scale || that_present_scale) {
      if (!(this_present_scale && that_present_scale))
        return false;
      if (!this.scale.equals(that.scale))
        return false;
    }

    boolean this_present_province = true && this.isSetProvince();
    boolean that_present_province = true && that.isSetProvince();
    if (this_present_province || that_present_province) {
      if (!(this_present_province && that_present_province))
        return false;
      if (!this.province.equals(that.province))
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_property = true && this.isSetProperty();
    boolean that_present_property = true && that.isSetProperty();
    if (this_present_property || that_present_property) {
      if (!(this_present_property && that_present_property))
        return false;
      if (this.property != that.property)
        return false;
    }

    boolean this_present_business = true && this.isSetBusiness();
    boolean that_present_business = true && that.isSetBusiness();
    if (this_present_business || that_present_business) {
      if (!(this_present_business && that_present_business))
        return false;
      if (!this.business.equals(that.business))
        return false;
    }

    boolean this_present_establishTime = true && this.isSetEstablishTime();
    boolean that_present_establishTime = true && that.isSetEstablishTime();
    if (this_present_establishTime || that_present_establishTime) {
      if (!(this_present_establishTime && that_present_establishTime))
        return false;
      if (!this.establishTime.equals(that.establishTime))
        return false;
    }

    boolean this_present_parentId = true && this.isSetParentId();
    boolean that_present_parentId = true && that.isSetParentId();
    if (this_present_parentId || that_present_parentId) {
      if (!(this_present_parentId && that_present_parentId))
        return false;
      if (this.parentId != that.parentId)
        return false;
    }

    boolean this_present_homepage = true && this.isSetHomepage();
    boolean that_present_homepage = true && that.isSetHomepage();
    if (this_present_homepage || that_present_homepage) {
      if (!(this_present_homepage && that_present_homepage))
        return false;
      if (!this.homepage.equals(that.homepage))
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetEname()) ? 131071 : 524287);
    if (isSetEname())
      hashCode = hashCode * 8191 + ename.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetCeo()) ? 131071 : 524287);
    if (isSetCeo())
      hashCode = hashCode * 8191 + ceo.hashCode();

    hashCode = hashCode * 8191 + ((isSetIntroduction()) ? 131071 : 524287);
    if (isSetIntroduction())
      hashCode = hashCode * 8191 + introduction.hashCode();

    hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
    if (isSetScale())
      hashCode = hashCode * 8191 + scale.hashCode();

    hashCode = hashCode * 8191 + ((isSetProvince()) ? 131071 : 524287);
    if (isSetProvince())
      hashCode = hashCode * 8191 + province.hashCode();

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetProperty()) ? 131071 : 524287);
    if (isSetProperty())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(property);

    hashCode = hashCode * 8191 + ((isSetBusiness()) ? 131071 : 524287);
    if (isSetBusiness())
      hashCode = hashCode * 8191 + business.hashCode();

    hashCode = hashCode * 8191 + ((isSetEstablishTime()) ? 131071 : 524287);
    if (isSetEstablishTime())
      hashCode = hashCode * 8191 + establishTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetParentId()) ? 131071 : 524287);
    if (isSetParentId())
      hashCode = hashCode * 8191 + parentId;

    hashCode = hashCode * 8191 + ((isSetHomepage()) ? 131071 : 524287);
    if (isSetHomepage())
      hashCode = hashCode * 8191 + homepage.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    return hashCode;
  }

  @Override
  public int compareTo(HrChildCompanyDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEname()).compareTo(other.isSetEname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ename, other.ename);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCeo()).compareTo(other.isSetCeo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCeo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ceo, other.ceo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProvince()).compareTo(other.isSetProvince());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvince()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.province, other.province);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProperty()).compareTo(other.isSetProperty());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperty()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.property, other.property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBusiness()).compareTo(other.isSetBusiness());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusiness()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.business, other.business);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEstablishTime()).compareTo(other.isSetEstablishTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstablishTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.establishTime, other.establishTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetParentId()).compareTo(other.isSetParentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentId, other.parentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHomepage()).compareTo(other.isSetHomepage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHomepage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.homepage, other.homepage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrChildCompanyDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetEname()) {
      if (!first) sb.append(", ");
      sb.append("ename:");
      if (this.ename == null) {
        sb.append("null");
      } else {
        sb.append(this.ename);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCeo()) {
      if (!first) sb.append(", ");
      sb.append("ceo:");
      if (this.ceo == null) {
        sb.append("null");
      } else {
        sb.append(this.ceo);
      }
      first = false;
    }
    if (isSetIntroduction()) {
      if (!first) sb.append(", ");
      sb.append("introduction:");
      if (this.introduction == null) {
        sb.append("null");
      } else {
        sb.append(this.introduction);
      }
      first = false;
    }
    if (isSetScale()) {
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
    }
    if (isSetProvince()) {
      if (!first) sb.append(", ");
      sb.append("province:");
      if (this.province == null) {
        sb.append("null");
      } else {
        sb.append(this.province);
      }
      first = false;
    }
    if (isSetCity()) {
      if (!first) sb.append(", ");
      sb.append("city:");
      if (this.city == null) {
        sb.append("null");
      } else {
        sb.append(this.city);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetProperty()) {
      if (!first) sb.append(", ");
      sb.append("property:");
      sb.append(this.property);
      first = false;
    }
    if (isSetBusiness()) {
      if (!first) sb.append(", ");
      sb.append("business:");
      if (this.business == null) {
        sb.append("null");
      } else {
        sb.append(this.business);
      }
      first = false;
    }
    if (isSetEstablishTime()) {
      if (!first) sb.append(", ");
      sb.append("establishTime:");
      if (this.establishTime == null) {
        sb.append("null");
      } else {
        sb.append(this.establishTime);
      }
      first = false;
    }
    if (isSetParentId()) {
      if (!first) sb.append(", ");
      sb.append("parentId:");
      sb.append(this.parentId);
      first = false;
    }
    if (isSetHomepage()) {
      if (!first) sb.append(", ");
      sb.append("homepage:");
      if (this.homepage == null) {
        sb.append("null");
      } else {
        sb.append(this.homepage);
      }
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrChildCompanyDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrChildCompanyDOStandardScheme getScheme() {
      return new HrChildCompanyDOStandardScheme();
    }
  }

  private static class HrChildCompanyDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrChildCompanyDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrChildCompanyDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ENAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ename = iprot.readString();
              struct.setEnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CEO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ceo = iprot.readString();
              struct.setCeoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SCALE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.scale = iprot.readString();
              struct.setScaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PROVINCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.province = iprot.readString();
              struct.setProvinceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city = iprot.readString();
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.property = iprot.readDouble();
              struct.setPropertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BUSINESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.business = iprot.readString();
              struct.setBusinessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ESTABLISH_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.establishTime = iprot.readString();
              struct.setEstablishTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PARENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.parentId = iprot.readI32();
              struct.setParentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // HOMEPAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.homepage = iprot.readString();
              struct.setHomepageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrChildCompanyDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ename != null) {
        if (struct.isSetEname()) {
          oprot.writeFieldBegin(ENAME_FIELD_DESC);
          oprot.writeString(struct.ename);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.ceo != null) {
        if (struct.isSetCeo()) {
          oprot.writeFieldBegin(CEO_FIELD_DESC);
          oprot.writeString(struct.ceo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.introduction != null) {
        if (struct.isSetIntroduction()) {
          oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
          oprot.writeString(struct.introduction);
          oprot.writeFieldEnd();
        }
      }
      if (struct.scale != null) {
        if (struct.isSetScale()) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
      }
      if (struct.province != null) {
        if (struct.isSetProvince()) {
          oprot.writeFieldBegin(PROVINCE_FIELD_DESC);
          oprot.writeString(struct.province);
          oprot.writeFieldEnd();
        }
      }
      if (struct.city != null) {
        if (struct.isSetCity()) {
          oprot.writeFieldBegin(CITY_FIELD_DESC);
          oprot.writeString(struct.city);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProperty()) {
        oprot.writeFieldBegin(PROPERTY_FIELD_DESC);
        oprot.writeDouble(struct.property);
        oprot.writeFieldEnd();
      }
      if (struct.business != null) {
        if (struct.isSetBusiness()) {
          oprot.writeFieldBegin(BUSINESS_FIELD_DESC);
          oprot.writeString(struct.business);
          oprot.writeFieldEnd();
        }
      }
      if (struct.establishTime != null) {
        if (struct.isSetEstablishTime()) {
          oprot.writeFieldBegin(ESTABLISH_TIME_FIELD_DESC);
          oprot.writeString(struct.establishTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetParentId()) {
        oprot.writeFieldBegin(PARENT_ID_FIELD_DESC);
        oprot.writeI32(struct.parentId);
        oprot.writeFieldEnd();
      }
      if (struct.homepage != null) {
        if (struct.isSetHomepage()) {
          oprot.writeFieldBegin(HOMEPAGE_FIELD_DESC);
          oprot.writeString(struct.homepage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrChildCompanyDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrChildCompanyDOTupleScheme getScheme() {
      return new HrChildCompanyDOTupleScheme();
    }
  }

  private static class HrChildCompanyDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrChildCompanyDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrChildCompanyDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetEname()) {
        optionals.set(2);
      }
      if (struct.isSetStatus()) {
        optionals.set(3);
      }
      if (struct.isSetCeo()) {
        optionals.set(4);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(5);
      }
      if (struct.isSetScale()) {
        optionals.set(6);
      }
      if (struct.isSetProvince()) {
        optionals.set(7);
      }
      if (struct.isSetCity()) {
        optionals.set(8);
      }
      if (struct.isSetAddress()) {
        optionals.set(9);
      }
      if (struct.isSetProperty()) {
        optionals.set(10);
      }
      if (struct.isSetBusiness()) {
        optionals.set(11);
      }
      if (struct.isSetEstablishTime()) {
        optionals.set(12);
      }
      if (struct.isSetParentId()) {
        optionals.set(13);
      }
      if (struct.isSetHomepage()) {
        optionals.set(14);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetEname()) {
        oprot.writeString(struct.ename);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetCeo()) {
        oprot.writeString(struct.ceo);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetScale()) {
        oprot.writeString(struct.scale);
      }
      if (struct.isSetProvince()) {
        oprot.writeString(struct.province);
      }
      if (struct.isSetCity()) {
        oprot.writeString(struct.city);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetProperty()) {
        oprot.writeDouble(struct.property);
      }
      if (struct.isSetBusiness()) {
        oprot.writeString(struct.business);
      }
      if (struct.isSetEstablishTime()) {
        oprot.writeString(struct.establishTime);
      }
      if (struct.isSetParentId()) {
        oprot.writeI32(struct.parentId);
      }
      if (struct.isSetHomepage()) {
        oprot.writeString(struct.homepage);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrChildCompanyDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.ename = iprot.readString();
        struct.setEnameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ceo = iprot.readString();
        struct.setCeoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(6)) {
        struct.scale = iprot.readString();
        struct.setScaleIsSet(true);
      }
      if (incoming.get(7)) {
        struct.province = iprot.readString();
        struct.setProvinceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.city = iprot.readString();
        struct.setCityIsSet(true);
      }
      if (incoming.get(9)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(10)) {
        struct.property = iprot.readDouble();
        struct.setPropertyIsSet(true);
      }
      if (incoming.get(11)) {
        struct.business = iprot.readString();
        struct.setBusinessIsSet(true);
      }
      if (incoming.get(12)) {
        struct.establishTime = iprot.readString();
        struct.setEstablishTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.parentId = iprot.readI32();
        struct.setParentIdIsSet(true);
      }
      if (incoming.get(14)) {
        struct.homepage = iprot.readString();
        struct.setHomepageIsSet(true);
      }
      if (incoming.get(15)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

