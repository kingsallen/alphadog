/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * 候选人信息详情
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-14")
public class CandidateRemarkDO implements org.apache.thrift.TBase<CandidateRemarkDO, CandidateRemarkDO._Fields>, java.io.Serializable, Cloneable, Comparable<CandidateRemarkDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CandidateRemarkDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField HRACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hraccountId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("gender", org.apache.thrift.protocol.TType.BYTE, (short)3);
  private static final org.apache.thrift.protocol.TField AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("age", org.apache.thrift.protocol.TType.BYTE, (short)4);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CURRENT_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("currentCompany", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CURRENT_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("currentPosition", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EDUCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("education", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField GRADUATE_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("graduateAt", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField IS_STAR_FIELD_DESC = new org.apache.thrift.protocol.TField("isStar", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)16);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)18);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CandidateRemarkDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CandidateRemarkDOTupleSchemeFactory();

  public int id; // optional
  public int hraccountId; // optional
  public byte gender; // optional
  public byte age; // optional
  public java.lang.String mobile; // optional
  public java.lang.String email; // optional
  public java.lang.String currentCompany; // optional
  public java.lang.String currentPosition; // optional
  public java.lang.String education; // optional
  public java.lang.String degree; // optional
  public java.lang.String graduateAt; // optional
  public boolean isStar; // optional
  public java.lang.String remark; // optional
  public java.lang.String createTime; // optional
  public java.lang.String updateTime; // optional
  public byte status; // optional
  public java.lang.String name; // optional
  public int userId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    HRACCOUNT_ID((short)2, "hraccountId"),
    GENDER((short)3, "gender"),
    AGE((short)4, "age"),
    MOBILE((short)5, "mobile"),
    EMAIL((short)6, "email"),
    CURRENT_COMPANY((short)7, "currentCompany"),
    CURRENT_POSITION((short)8, "currentPosition"),
    EDUCATION((short)9, "education"),
    DEGREE((short)10, "degree"),
    GRADUATE_AT((short)11, "graduateAt"),
    IS_STAR((short)12, "isStar"),
    REMARK((short)13, "remark"),
    CREATE_TIME((short)14, "createTime"),
    UPDATE_TIME((short)15, "updateTime"),
    STATUS((short)16, "status"),
    NAME((short)17, "name"),
    USER_ID((short)18, "userId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // HRACCOUNT_ID
          return HRACCOUNT_ID;
        case 3: // GENDER
          return GENDER;
        case 4: // AGE
          return AGE;
        case 5: // MOBILE
          return MOBILE;
        case 6: // EMAIL
          return EMAIL;
        case 7: // CURRENT_COMPANY
          return CURRENT_COMPANY;
        case 8: // CURRENT_POSITION
          return CURRENT_POSITION;
        case 9: // EDUCATION
          return EDUCATION;
        case 10: // DEGREE
          return DEGREE;
        case 11: // GRADUATE_AT
          return GRADUATE_AT;
        case 12: // IS_STAR
          return IS_STAR;
        case 13: // REMARK
          return REMARK;
        case 14: // CREATE_TIME
          return CREATE_TIME;
        case 15: // UPDATE_TIME
          return UPDATE_TIME;
        case 16: // STATUS
          return STATUS;
        case 17: // NAME
          return NAME;
        case 18: // USER_ID
          return USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __HRACCOUNTID_ISSET_ID = 1;
  private static final int __GENDER_ISSET_ID = 2;
  private static final int __AGE_ISSET_ID = 3;
  private static final int __ISSTAR_ISSET_ID = 4;
  private static final int __STATUS_ISSET_ID = 5;
  private static final int __USERID_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.HRACCOUNT_ID,_Fields.GENDER,_Fields.AGE,_Fields.MOBILE,_Fields.EMAIL,_Fields.CURRENT_COMPANY,_Fields.CURRENT_POSITION,_Fields.EDUCATION,_Fields.DEGREE,_Fields.GRADUATE_AT,_Fields.IS_STAR,_Fields.REMARK,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.STATUS,_Fields.NAME,_Fields.USER_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HRACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hraccountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GENDER, new org.apache.thrift.meta_data.FieldMetaData("gender", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.AGE, new org.apache.thrift.meta_data.FieldMetaData("age", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENT_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("currentCompany", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENT_POSITION, new org.apache.thrift.meta_data.FieldMetaData("currentPosition", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDUCATION, new org.apache.thrift.meta_data.FieldMetaData("education", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GRADUATE_AT, new org.apache.thrift.meta_data.FieldMetaData("graduateAt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.IS_STAR, new org.apache.thrift.meta_data.FieldMetaData("isStar", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CandidateRemarkDO.class, metaDataMap);
  }

  public CandidateRemarkDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CandidateRemarkDO(CandidateRemarkDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.hraccountId = other.hraccountId;
    this.gender = other.gender;
    this.age = other.age;
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetCurrentCompany()) {
      this.currentCompany = other.currentCompany;
    }
    if (other.isSetCurrentPosition()) {
      this.currentPosition = other.currentPosition;
    }
    if (other.isSetEducation()) {
      this.education = other.education;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    if (other.isSetGraduateAt()) {
      this.graduateAt = other.graduateAt;
    }
    this.isStar = other.isStar;
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.status = other.status;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.userId = other.userId;
  }

  public CandidateRemarkDO deepCopy() {
    return new CandidateRemarkDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setHraccountIdIsSet(false);
    this.hraccountId = 0;
    setGenderIsSet(false);
    this.gender = 0;
    setAgeIsSet(false);
    this.age = 0;
    this.mobile = null;
    this.email = null;
    this.currentCompany = null;
    this.currentPosition = null;
    this.education = null;
    this.degree = null;
    this.graduateAt = null;
    setIsStarIsSet(false);
    this.isStar = false;
    this.remark = null;
    this.createTime = null;
    this.updateTime = null;
    setStatusIsSet(false);
    this.status = 0;
    this.name = null;
    setUserIdIsSet(false);
    this.userId = 0;
  }

  public int getId() {
    return this.id;
  }

  public CandidateRemarkDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getHraccountId() {
    return this.hraccountId;
  }

  public CandidateRemarkDO setHraccountId(int hraccountId) {
    this.hraccountId = hraccountId;
    setHraccountIdIsSet(true);
    return this;
  }

  public void unsetHraccountId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  /** Returns true if field hraccountId is set (has been assigned a value) and false otherwise */
  public boolean isSetHraccountId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  public void setHraccountIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID, value);
  }

  public byte getGender() {
    return this.gender;
  }

  public CandidateRemarkDO setGender(byte gender) {
    this.gender = gender;
    setGenderIsSet(true);
    return this;
  }

  public void unsetGender() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  /** Returns true if field gender is set (has been assigned a value) and false otherwise */
  public boolean isSetGender() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  public void setGenderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GENDER_ISSET_ID, value);
  }

  public byte getAge() {
    return this.age;
  }

  public CandidateRemarkDO setAge(byte age) {
    this.age = age;
    setAgeIsSet(true);
    return this;
  }

  public void unsetAge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  /** Returns true if field age is set (has been assigned a value) and false otherwise */
  public boolean isSetAge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_ISSET_ID);
  }

  public void setAgeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_ISSET_ID, value);
  }

  public java.lang.String getMobile() {
    return this.mobile;
  }

  public CandidateRemarkDO setMobile(java.lang.String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public java.lang.String getEmail() {
    return this.email;
  }

  public CandidateRemarkDO setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public java.lang.String getCurrentCompany() {
    return this.currentCompany;
  }

  public CandidateRemarkDO setCurrentCompany(java.lang.String currentCompany) {
    this.currentCompany = currentCompany;
    return this;
  }

  public void unsetCurrentCompany() {
    this.currentCompany = null;
  }

  /** Returns true if field currentCompany is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentCompany() {
    return this.currentCompany != null;
  }

  public void setCurrentCompanyIsSet(boolean value) {
    if (!value) {
      this.currentCompany = null;
    }
  }

  public java.lang.String getCurrentPosition() {
    return this.currentPosition;
  }

  public CandidateRemarkDO setCurrentPosition(java.lang.String currentPosition) {
    this.currentPosition = currentPosition;
    return this;
  }

  public void unsetCurrentPosition() {
    this.currentPosition = null;
  }

  /** Returns true if field currentPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentPosition() {
    return this.currentPosition != null;
  }

  public void setCurrentPositionIsSet(boolean value) {
    if (!value) {
      this.currentPosition = null;
    }
  }

  public java.lang.String getEducation() {
    return this.education;
  }

  public CandidateRemarkDO setEducation(java.lang.String education) {
    this.education = education;
    return this;
  }

  public void unsetEducation() {
    this.education = null;
  }

  /** Returns true if field education is set (has been assigned a value) and false otherwise */
  public boolean isSetEducation() {
    return this.education != null;
  }

  public void setEducationIsSet(boolean value) {
    if (!value) {
      this.education = null;
    }
  }

  public java.lang.String getDegree() {
    return this.degree;
  }

  public CandidateRemarkDO setDegree(java.lang.String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public java.lang.String getGraduateAt() {
    return this.graduateAt;
  }

  public CandidateRemarkDO setGraduateAt(java.lang.String graduateAt) {
    this.graduateAt = graduateAt;
    return this;
  }

  public void unsetGraduateAt() {
    this.graduateAt = null;
  }

  /** Returns true if field graduateAt is set (has been assigned a value) and false otherwise */
  public boolean isSetGraduateAt() {
    return this.graduateAt != null;
  }

  public void setGraduateAtIsSet(boolean value) {
    if (!value) {
      this.graduateAt = null;
    }
  }

  public boolean isIsStar() {
    return this.isStar;
  }

  public CandidateRemarkDO setIsStar(boolean isStar) {
    this.isStar = isStar;
    setIsStarIsSet(true);
    return this;
  }

  public void unsetIsStar() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISSTAR_ISSET_ID);
  }

  /** Returns true if field isStar is set (has been assigned a value) and false otherwise */
  public boolean isSetIsStar() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISSTAR_ISSET_ID);
  }

  public void setIsStarIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISSTAR_ISSET_ID, value);
  }

  public java.lang.String getRemark() {
    return this.remark;
  }

  public CandidateRemarkDO setRemark(java.lang.String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public CandidateRemarkDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public CandidateRemarkDO setUpdateTime(java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public CandidateRemarkDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public CandidateRemarkDO setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getUserId() {
    return this.userId;
  }

  public CandidateRemarkDO setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case HRACCOUNT_ID:
      if (value == null) {
        unsetHraccountId();
      } else {
        setHraccountId((java.lang.Integer)value);
      }
      break;

    case GENDER:
      if (value == null) {
        unsetGender();
      } else {
        setGender((java.lang.Byte)value);
      }
      break;

    case AGE:
      if (value == null) {
        unsetAge();
      } else {
        setAge((java.lang.Byte)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((java.lang.String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((java.lang.String)value);
      }
      break;

    case CURRENT_COMPANY:
      if (value == null) {
        unsetCurrentCompany();
      } else {
        setCurrentCompany((java.lang.String)value);
      }
      break;

    case CURRENT_POSITION:
      if (value == null) {
        unsetCurrentPosition();
      } else {
        setCurrentPosition((java.lang.String)value);
      }
      break;

    case EDUCATION:
      if (value == null) {
        unsetEducation();
      } else {
        setEducation((java.lang.String)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((java.lang.String)value);
      }
      break;

    case GRADUATE_AT:
      if (value == null) {
        unsetGraduateAt();
      } else {
        setGraduateAt((java.lang.String)value);
      }
      break;

    case IS_STAR:
      if (value == null) {
        unsetIsStar();
      } else {
        setIsStar((java.lang.Boolean)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((java.lang.String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Byte)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case HRACCOUNT_ID:
      return getHraccountId();

    case GENDER:
      return getGender();

    case AGE:
      return getAge();

    case MOBILE:
      return getMobile();

    case EMAIL:
      return getEmail();

    case CURRENT_COMPANY:
      return getCurrentCompany();

    case CURRENT_POSITION:
      return getCurrentPosition();

    case EDUCATION:
      return getEducation();

    case DEGREE:
      return getDegree();

    case GRADUATE_AT:
      return getGraduateAt();

    case IS_STAR:
      return isIsStar();

    case REMARK:
      return getRemark();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case STATUS:
      return getStatus();

    case NAME:
      return getName();

    case USER_ID:
      return getUserId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case HRACCOUNT_ID:
      return isSetHraccountId();
    case GENDER:
      return isSetGender();
    case AGE:
      return isSetAge();
    case MOBILE:
      return isSetMobile();
    case EMAIL:
      return isSetEmail();
    case CURRENT_COMPANY:
      return isSetCurrentCompany();
    case CURRENT_POSITION:
      return isSetCurrentPosition();
    case EDUCATION:
      return isSetEducation();
    case DEGREE:
      return isSetDegree();
    case GRADUATE_AT:
      return isSetGraduateAt();
    case IS_STAR:
      return isSetIsStar();
    case REMARK:
      return isSetRemark();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case STATUS:
      return isSetStatus();
    case NAME:
      return isSetName();
    case USER_ID:
      return isSetUserId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CandidateRemarkDO)
      return this.equals((CandidateRemarkDO)that);
    return false;
  }

  public boolean equals(CandidateRemarkDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_hraccountId = true && this.isSetHraccountId();
    boolean that_present_hraccountId = true && that.isSetHraccountId();
    if (this_present_hraccountId || that_present_hraccountId) {
      if (!(this_present_hraccountId && that_present_hraccountId))
        return false;
      if (this.hraccountId != that.hraccountId)
        return false;
    }

    boolean this_present_gender = true && this.isSetGender();
    boolean that_present_gender = true && that.isSetGender();
    if (this_present_gender || that_present_gender) {
      if (!(this_present_gender && that_present_gender))
        return false;
      if (this.gender != that.gender)
        return false;
    }

    boolean this_present_age = true && this.isSetAge();
    boolean that_present_age = true && that.isSetAge();
    if (this_present_age || that_present_age) {
      if (!(this_present_age && that_present_age))
        return false;
      if (this.age != that.age)
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_currentCompany = true && this.isSetCurrentCompany();
    boolean that_present_currentCompany = true && that.isSetCurrentCompany();
    if (this_present_currentCompany || that_present_currentCompany) {
      if (!(this_present_currentCompany && that_present_currentCompany))
        return false;
      if (!this.currentCompany.equals(that.currentCompany))
        return false;
    }

    boolean this_present_currentPosition = true && this.isSetCurrentPosition();
    boolean that_present_currentPosition = true && that.isSetCurrentPosition();
    if (this_present_currentPosition || that_present_currentPosition) {
      if (!(this_present_currentPosition && that_present_currentPosition))
        return false;
      if (!this.currentPosition.equals(that.currentPosition))
        return false;
    }

    boolean this_present_education = true && this.isSetEducation();
    boolean that_present_education = true && that.isSetEducation();
    if (this_present_education || that_present_education) {
      if (!(this_present_education && that_present_education))
        return false;
      if (!this.education.equals(that.education))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_graduateAt = true && this.isSetGraduateAt();
    boolean that_present_graduateAt = true && that.isSetGraduateAt();
    if (this_present_graduateAt || that_present_graduateAt) {
      if (!(this_present_graduateAt && that_present_graduateAt))
        return false;
      if (!this.graduateAt.equals(that.graduateAt))
        return false;
    }

    boolean this_present_isStar = true && this.isSetIsStar();
    boolean that_present_isStar = true && that.isSetIsStar();
    if (this_present_isStar || that_present_isStar) {
      if (!(this_present_isStar && that_present_isStar))
        return false;
      if (this.isStar != that.isStar)
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetHraccountId()) ? 131071 : 524287);
    if (isSetHraccountId())
      hashCode = hashCode * 8191 + hraccountId;

    hashCode = hashCode * 8191 + ((isSetGender()) ? 131071 : 524287);
    if (isSetGender())
      hashCode = hashCode * 8191 + (int) (gender);

    hashCode = hashCode * 8191 + ((isSetAge()) ? 131071 : 524287);
    if (isSetAge())
      hashCode = hashCode * 8191 + (int) (age);

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetCurrentCompany()) ? 131071 : 524287);
    if (isSetCurrentCompany())
      hashCode = hashCode * 8191 + currentCompany.hashCode();

    hashCode = hashCode * 8191 + ((isSetCurrentPosition()) ? 131071 : 524287);
    if (isSetCurrentPosition())
      hashCode = hashCode * 8191 + currentPosition.hashCode();

    hashCode = hashCode * 8191 + ((isSetEducation()) ? 131071 : 524287);
    if (isSetEducation())
      hashCode = hashCode * 8191 + education.hashCode();

    hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
    if (isSetDegree())
      hashCode = hashCode * 8191 + degree.hashCode();

    hashCode = hashCode * 8191 + ((isSetGraduateAt()) ? 131071 : 524287);
    if (isSetGraduateAt())
      hashCode = hashCode * 8191 + graduateAt.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsStar()) ? 131071 : 524287);
    if (isSetIsStar())
      hashCode = hashCode * 8191 + ((isStar) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetRemark()) ? 131071 : 524287);
    if (isSetRemark())
      hashCode = hashCode * 8191 + remark.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetUserId()) ? 131071 : 524287);
    if (isSetUserId())
      hashCode = hashCode * 8191 + userId;

    return hashCode;
  }

  @Override
  public int compareTo(CandidateRemarkDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHraccountId()).compareTo(other.isSetHraccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHraccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hraccountId, other.hraccountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGender()).compareTo(other.isSetGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gender, other.gender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAge()).compareTo(other.isSetAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age, other.age);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrentCompany()).compareTo(other.isSetCurrentCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentCompany, other.currentCompany);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrentPosition()).compareTo(other.isSetCurrentPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentPosition, other.currentPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEducation()).compareTo(other.isSetEducation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEducation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.education, other.education);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGraduateAt()).compareTo(other.isSetGraduateAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGraduateAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.graduateAt, other.graduateAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsStar()).compareTo(other.isSetIsStar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsStar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isStar, other.isStar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CandidateRemarkDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetHraccountId()) {
      if (!first) sb.append(", ");
      sb.append("hraccountId:");
      sb.append(this.hraccountId);
      first = false;
    }
    if (isSetGender()) {
      if (!first) sb.append(", ");
      sb.append("gender:");
      sb.append(this.gender);
      first = false;
    }
    if (isSetAge()) {
      if (!first) sb.append(", ");
      sb.append("age:");
      sb.append(this.age);
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetCurrentCompany()) {
      if (!first) sb.append(", ");
      sb.append("currentCompany:");
      if (this.currentCompany == null) {
        sb.append("null");
      } else {
        sb.append(this.currentCompany);
      }
      first = false;
    }
    if (isSetCurrentPosition()) {
      if (!first) sb.append(", ");
      sb.append("currentPosition:");
      if (this.currentPosition == null) {
        sb.append("null");
      } else {
        sb.append(this.currentPosition);
      }
      first = false;
    }
    if (isSetEducation()) {
      if (!first) sb.append(", ");
      sb.append("education:");
      if (this.education == null) {
        sb.append("null");
      } else {
        sb.append(this.education);
      }
      first = false;
    }
    if (isSetDegree()) {
      if (!first) sb.append(", ");
      sb.append("degree:");
      if (this.degree == null) {
        sb.append("null");
      } else {
        sb.append(this.degree);
      }
      first = false;
    }
    if (isSetGraduateAt()) {
      if (!first) sb.append(", ");
      sb.append("graduateAt:");
      if (this.graduateAt == null) {
        sb.append("null");
      } else {
        sb.append(this.graduateAt);
      }
      first = false;
    }
    if (isSetIsStar()) {
      if (!first) sb.append(", ");
      sb.append("isStar:");
      sb.append(this.isStar);
      first = false;
    }
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetUserId()) {
      if (!first) sb.append(", ");
      sb.append("userId:");
      sb.append(this.userId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CandidateRemarkDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateRemarkDOStandardScheme getScheme() {
      return new CandidateRemarkDOStandardScheme();
    }
  }

  private static class CandidateRemarkDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<CandidateRemarkDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CandidateRemarkDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HRACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hraccountId = iprot.readI32();
              struct.setHraccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.gender = iprot.readByte();
              struct.setGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.age = iprot.readByte();
              struct.setAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CURRENT_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currentCompany = iprot.readString();
              struct.setCurrentCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CURRENT_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currentPosition = iprot.readString();
              struct.setCurrentPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EDUCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.education = iprot.readString();
              struct.setEducationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // GRADUATE_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.graduateAt = iprot.readString();
              struct.setGraduateAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_STAR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isStar = iprot.readBool();
              struct.setIsStarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CandidateRemarkDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHraccountId()) {
        oprot.writeFieldBegin(HRACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.hraccountId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetGender()) {
        oprot.writeFieldBegin(GENDER_FIELD_DESC);
        oprot.writeByte(struct.gender);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAge()) {
        oprot.writeFieldBegin(AGE_FIELD_DESC);
        oprot.writeByte(struct.age);
        oprot.writeFieldEnd();
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.currentCompany != null) {
        if (struct.isSetCurrentCompany()) {
          oprot.writeFieldBegin(CURRENT_COMPANY_FIELD_DESC);
          oprot.writeString(struct.currentCompany);
          oprot.writeFieldEnd();
        }
      }
      if (struct.currentPosition != null) {
        if (struct.isSetCurrentPosition()) {
          oprot.writeFieldBegin(CURRENT_POSITION_FIELD_DESC);
          oprot.writeString(struct.currentPosition);
          oprot.writeFieldEnd();
        }
      }
      if (struct.education != null) {
        if (struct.isSetEducation()) {
          oprot.writeFieldBegin(EDUCATION_FIELD_DESC);
          oprot.writeString(struct.education);
          oprot.writeFieldEnd();
        }
      }
      if (struct.degree != null) {
        if (struct.isSetDegree()) {
          oprot.writeFieldBegin(DEGREE_FIELD_DESC);
          oprot.writeString(struct.degree);
          oprot.writeFieldEnd();
        }
      }
      if (struct.graduateAt != null) {
        if (struct.isSetGraduateAt()) {
          oprot.writeFieldBegin(GRADUATE_AT_FIELD_DESC);
          oprot.writeString(struct.graduateAt);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsStar()) {
        oprot.writeFieldBegin(IS_STAR_FIELD_DESC);
        oprot.writeBool(struct.isStar);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetUserId()) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI32(struct.userId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CandidateRemarkDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateRemarkDOTupleScheme getScheme() {
      return new CandidateRemarkDOTupleScheme();
    }
  }

  private static class CandidateRemarkDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<CandidateRemarkDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CandidateRemarkDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetHraccountId()) {
        optionals.set(1);
      }
      if (struct.isSetGender()) {
        optionals.set(2);
      }
      if (struct.isSetAge()) {
        optionals.set(3);
      }
      if (struct.isSetMobile()) {
        optionals.set(4);
      }
      if (struct.isSetEmail()) {
        optionals.set(5);
      }
      if (struct.isSetCurrentCompany()) {
        optionals.set(6);
      }
      if (struct.isSetCurrentPosition()) {
        optionals.set(7);
      }
      if (struct.isSetEducation()) {
        optionals.set(8);
      }
      if (struct.isSetDegree()) {
        optionals.set(9);
      }
      if (struct.isSetGraduateAt()) {
        optionals.set(10);
      }
      if (struct.isSetIsStar()) {
        optionals.set(11);
      }
      if (struct.isSetRemark()) {
        optionals.set(12);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(13);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(14);
      }
      if (struct.isSetStatus()) {
        optionals.set(15);
      }
      if (struct.isSetName()) {
        optionals.set(16);
      }
      if (struct.isSetUserId()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetHraccountId()) {
        oprot.writeI32(struct.hraccountId);
      }
      if (struct.isSetGender()) {
        oprot.writeByte(struct.gender);
      }
      if (struct.isSetAge()) {
        oprot.writeByte(struct.age);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetCurrentCompany()) {
        oprot.writeString(struct.currentCompany);
      }
      if (struct.isSetCurrentPosition()) {
        oprot.writeString(struct.currentPosition);
      }
      if (struct.isSetEducation()) {
        oprot.writeString(struct.education);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetGraduateAt()) {
        oprot.writeString(struct.graduateAt);
      }
      if (struct.isSetIsStar()) {
        oprot.writeBool(struct.isStar);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CandidateRemarkDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.hraccountId = iprot.readI32();
        struct.setHraccountIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.gender = iprot.readByte();
        struct.setGenderIsSet(true);
      }
      if (incoming.get(3)) {
        struct.age = iprot.readByte();
        struct.setAgeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(5)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(6)) {
        struct.currentCompany = iprot.readString();
        struct.setCurrentCompanyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.currentPosition = iprot.readString();
        struct.setCurrentPositionIsSet(true);
      }
      if (incoming.get(8)) {
        struct.education = iprot.readString();
        struct.setEducationIsSet(true);
      }
      if (incoming.get(9)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.graduateAt = iprot.readString();
        struct.setGraduateAtIsSet(true);
      }
      if (incoming.get(11)) {
        struct.isStar = iprot.readBool();
        struct.setIsStarIsSet(true);
      }
      if (incoming.get(12)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(16)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

