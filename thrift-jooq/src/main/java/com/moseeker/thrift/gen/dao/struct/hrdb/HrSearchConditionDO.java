/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-26")
public class HrSearchConditionDO implements org.apache.thrift.TBase<HrSearchConditionDO, HrSearchConditionDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrSearchConditionDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrSearchConditionDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PUBLISHER_FIELD_DESC = new org.apache.thrift.protocol.TField("publisher", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField KEYWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("keyword", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SUBMIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("submitTime", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField WORK_YEARS_FIELD_DESC = new org.apache.thrift.protocol.TField("workYears", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cityName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PAST_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("pastPosition", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("inLastJobSearchPosition", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField MIN_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("minAge", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField MAX_AGE_FIELD_DESC = new org.apache.thrift.protocol.TField("maxAge", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField INTENTION_CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("intentionCityName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SEX_FIELD_DESC = new org.apache.thrift.protocol.TField("sex", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField INTENTION_SALARY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("intentionSalaryCode", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("inLastJobSearchCompany", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField HR_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hrAccountId", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)22);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrSearchConditionDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrSearchConditionDOTupleSchemeFactory();

  public int id; // optional
  public java.lang.String name; // optional
  public int publisher; // optional
  public int positionId; // optional
  public java.lang.String keyword; // optional
  public java.lang.String submitTime; // optional
  public java.lang.String workYears; // optional
  public java.lang.String cityName; // optional
  public java.lang.String degree; // optional
  public java.lang.String pastPosition; // optional
  public int inLastJobSearchPosition; // optional
  public int minAge; // optional
  public int maxAge; // optional
  public java.lang.String intentionCityName; // optional
  public int sex; // optional
  public java.lang.String intentionSalaryCode; // optional
  public java.lang.String companyName; // optional
  public int inLastJobSearchCompany; // optional
  public int hrAccountId; // optional
  public java.lang.String createTime; // optional
  public int updateTime; // optional
  public int type; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    PUBLISHER((short)3, "publisher"),
    POSITION_ID((short)4, "positionId"),
    KEYWORD((short)5, "keyword"),
    SUBMIT_TIME((short)6, "submitTime"),
    WORK_YEARS((short)7, "workYears"),
    CITY_NAME((short)8, "cityName"),
    DEGREE((short)9, "degree"),
    PAST_POSITION((short)10, "pastPosition"),
    IN_LAST_JOB_SEARCH_POSITION((short)11, "inLastJobSearchPosition"),
    MIN_AGE((short)12, "minAge"),
    MAX_AGE((short)13, "maxAge"),
    INTENTION_CITY_NAME((short)14, "intentionCityName"),
    SEX((short)15, "sex"),
    INTENTION_SALARY_CODE((short)16, "intentionSalaryCode"),
    COMPANY_NAME((short)17, "companyName"),
    IN_LAST_JOB_SEARCH_COMPANY((short)18, "inLastJobSearchCompany"),
    HR_ACCOUNT_ID((short)19, "hrAccountId"),
    CREATE_TIME((short)20, "createTime"),
    UPDATE_TIME((short)21, "updateTime"),
    TYPE((short)22, "type");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // PUBLISHER
          return PUBLISHER;
        case 4: // POSITION_ID
          return POSITION_ID;
        case 5: // KEYWORD
          return KEYWORD;
        case 6: // SUBMIT_TIME
          return SUBMIT_TIME;
        case 7: // WORK_YEARS
          return WORK_YEARS;
        case 8: // CITY_NAME
          return CITY_NAME;
        case 9: // DEGREE
          return DEGREE;
        case 10: // PAST_POSITION
          return PAST_POSITION;
        case 11: // IN_LAST_JOB_SEARCH_POSITION
          return IN_LAST_JOB_SEARCH_POSITION;
        case 12: // MIN_AGE
          return MIN_AGE;
        case 13: // MAX_AGE
          return MAX_AGE;
        case 14: // INTENTION_CITY_NAME
          return INTENTION_CITY_NAME;
        case 15: // SEX
          return SEX;
        case 16: // INTENTION_SALARY_CODE
          return INTENTION_SALARY_CODE;
        case 17: // COMPANY_NAME
          return COMPANY_NAME;
        case 18: // IN_LAST_JOB_SEARCH_COMPANY
          return IN_LAST_JOB_SEARCH_COMPANY;
        case 19: // HR_ACCOUNT_ID
          return HR_ACCOUNT_ID;
        case 20: // CREATE_TIME
          return CREATE_TIME;
        case 21: // UPDATE_TIME
          return UPDATE_TIME;
        case 22: // TYPE
          return TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PUBLISHER_ISSET_ID = 1;
  private static final int __POSITIONID_ISSET_ID = 2;
  private static final int __INLASTJOBSEARCHPOSITION_ISSET_ID = 3;
  private static final int __MINAGE_ISSET_ID = 4;
  private static final int __MAXAGE_ISSET_ID = 5;
  private static final int __SEX_ISSET_ID = 6;
  private static final int __INLASTJOBSEARCHCOMPANY_ISSET_ID = 7;
  private static final int __HRACCOUNTID_ISSET_ID = 8;
  private static final int __UPDATETIME_ISSET_ID = 9;
  private static final int __TYPE_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.NAME,_Fields.PUBLISHER,_Fields.POSITION_ID,_Fields.KEYWORD,_Fields.SUBMIT_TIME,_Fields.WORK_YEARS,_Fields.CITY_NAME,_Fields.DEGREE,_Fields.PAST_POSITION,_Fields.IN_LAST_JOB_SEARCH_POSITION,_Fields.MIN_AGE,_Fields.MAX_AGE,_Fields.INTENTION_CITY_NAME,_Fields.SEX,_Fields.INTENTION_SALARY_CODE,_Fields.COMPANY_NAME,_Fields.IN_LAST_JOB_SEARCH_COMPANY,_Fields.HR_ACCOUNT_ID,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.TYPE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUBLISHER, new org.apache.thrift.meta_data.FieldMetaData("publisher", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.KEYWORD, new org.apache.thrift.meta_data.FieldMetaData("keyword", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUBMIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("submitTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WORK_YEARS, new org.apache.thrift.meta_data.FieldMetaData("workYears", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("cityName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAST_POSITION, new org.apache.thrift.meta_data.FieldMetaData("pastPosition", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_POSITION, new org.apache.thrift.meta_data.FieldMetaData("inLastJobSearchPosition", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MIN_AGE, new org.apache.thrift.meta_data.FieldMetaData("minAge", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_AGE, new org.apache.thrift.meta_data.FieldMetaData("maxAge", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INTENTION_CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("intentionCityName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SEX, new org.apache.thrift.meta_data.FieldMetaData("sex", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INTENTION_SALARY_CODE, new org.apache.thrift.meta_data.FieldMetaData("intentionSalaryCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_LAST_JOB_SEARCH_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("inLastJobSearchCompany", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hrAccountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrSearchConditionDO.class, metaDataMap);
  }

  public HrSearchConditionDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrSearchConditionDO(HrSearchConditionDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.publisher = other.publisher;
    this.positionId = other.positionId;
    if (other.isSetKeyword()) {
      this.keyword = other.keyword;
    }
    if (other.isSetSubmitTime()) {
      this.submitTime = other.submitTime;
    }
    if (other.isSetWorkYears()) {
      this.workYears = other.workYears;
    }
    if (other.isSetCityName()) {
      this.cityName = other.cityName;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    if (other.isSetPastPosition()) {
      this.pastPosition = other.pastPosition;
    }
    this.inLastJobSearchPosition = other.inLastJobSearchPosition;
    this.minAge = other.minAge;
    this.maxAge = other.maxAge;
    if (other.isSetIntentionCityName()) {
      this.intentionCityName = other.intentionCityName;
    }
    this.sex = other.sex;
    if (other.isSetIntentionSalaryCode()) {
      this.intentionSalaryCode = other.intentionSalaryCode;
    }
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    this.inLastJobSearchCompany = other.inLastJobSearchCompany;
    this.hrAccountId = other.hrAccountId;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    this.updateTime = other.updateTime;
    this.type = other.type;
  }

  public HrSearchConditionDO deepCopy() {
    return new HrSearchConditionDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    setPublisherIsSet(false);
    this.publisher = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    this.keyword = null;
    this.submitTime = null;
    this.workYears = null;
    this.cityName = null;
    this.degree = null;
    this.pastPosition = null;
    setInLastJobSearchPositionIsSet(false);
    this.inLastJobSearchPosition = 0;
    setMinAgeIsSet(false);
    this.minAge = 0;
    setMaxAgeIsSet(false);
    this.maxAge = 0;
    this.intentionCityName = null;
    setSexIsSet(false);
    this.sex = 0;
    this.intentionSalaryCode = null;
    this.companyName = null;
    setInLastJobSearchCompanyIsSet(false);
    this.inLastJobSearchCompany = 0;
    setHrAccountIdIsSet(false);
    this.hrAccountId = 0;
    this.createTime = null;
    setUpdateTimeIsSet(false);
    this.updateTime = 0;
    setTypeIsSet(false);
    this.type = 0;
  }

  public int getId() {
    return this.id;
  }

  public HrSearchConditionDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public HrSearchConditionDO setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getPublisher() {
    return this.publisher;
  }

  public HrSearchConditionDO setPublisher(int publisher) {
    this.publisher = publisher;
    setPublisherIsSet(true);
    return this;
  }

  public void unsetPublisher() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PUBLISHER_ISSET_ID);
  }

  /** Returns true if field publisher is set (has been assigned a value) and false otherwise */
  public boolean isSetPublisher() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PUBLISHER_ISSET_ID);
  }

  public void setPublisherIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PUBLISHER_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public HrSearchConditionDO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public java.lang.String getKeyword() {
    return this.keyword;
  }

  public HrSearchConditionDO setKeyword(java.lang.String keyword) {
    this.keyword = keyword;
    return this;
  }

  public void unsetKeyword() {
    this.keyword = null;
  }

  /** Returns true if field keyword is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyword() {
    return this.keyword != null;
  }

  public void setKeywordIsSet(boolean value) {
    if (!value) {
      this.keyword = null;
    }
  }

  public java.lang.String getSubmitTime() {
    return this.submitTime;
  }

  public HrSearchConditionDO setSubmitTime(java.lang.String submitTime) {
    this.submitTime = submitTime;
    return this;
  }

  public void unsetSubmitTime() {
    this.submitTime = null;
  }

  /** Returns true if field submitTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSubmitTime() {
    return this.submitTime != null;
  }

  public void setSubmitTimeIsSet(boolean value) {
    if (!value) {
      this.submitTime = null;
    }
  }

  public java.lang.String getWorkYears() {
    return this.workYears;
  }

  public HrSearchConditionDO setWorkYears(java.lang.String workYears) {
    this.workYears = workYears;
    return this;
  }

  public void unsetWorkYears() {
    this.workYears = null;
  }

  /** Returns true if field workYears is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkYears() {
    return this.workYears != null;
  }

  public void setWorkYearsIsSet(boolean value) {
    if (!value) {
      this.workYears = null;
    }
  }

  public java.lang.String getCityName() {
    return this.cityName;
  }

  public HrSearchConditionDO setCityName(java.lang.String cityName) {
    this.cityName = cityName;
    return this;
  }

  public void unsetCityName() {
    this.cityName = null;
  }

  /** Returns true if field cityName is set (has been assigned a value) and false otherwise */
  public boolean isSetCityName() {
    return this.cityName != null;
  }

  public void setCityNameIsSet(boolean value) {
    if (!value) {
      this.cityName = null;
    }
  }

  public java.lang.String getDegree() {
    return this.degree;
  }

  public HrSearchConditionDO setDegree(java.lang.String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public java.lang.String getPastPosition() {
    return this.pastPosition;
  }

  public HrSearchConditionDO setPastPosition(java.lang.String pastPosition) {
    this.pastPosition = pastPosition;
    return this;
  }

  public void unsetPastPosition() {
    this.pastPosition = null;
  }

  /** Returns true if field pastPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetPastPosition() {
    return this.pastPosition != null;
  }

  public void setPastPositionIsSet(boolean value) {
    if (!value) {
      this.pastPosition = null;
    }
  }

  public int getInLastJobSearchPosition() {
    return this.inLastJobSearchPosition;
  }

  public HrSearchConditionDO setInLastJobSearchPosition(int inLastJobSearchPosition) {
    this.inLastJobSearchPosition = inLastJobSearchPosition;
    setInLastJobSearchPositionIsSet(true);
    return this;
  }

  public void unsetInLastJobSearchPosition() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INLASTJOBSEARCHPOSITION_ISSET_ID);
  }

  /** Returns true if field inLastJobSearchPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetInLastJobSearchPosition() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INLASTJOBSEARCHPOSITION_ISSET_ID);
  }

  public void setInLastJobSearchPositionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INLASTJOBSEARCHPOSITION_ISSET_ID, value);
  }

  public int getMinAge() {
    return this.minAge;
  }

  public HrSearchConditionDO setMinAge(int minAge) {
    this.minAge = minAge;
    setMinAgeIsSet(true);
    return this;
  }

  public void unsetMinAge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MINAGE_ISSET_ID);
  }

  /** Returns true if field minAge is set (has been assigned a value) and false otherwise */
  public boolean isSetMinAge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MINAGE_ISSET_ID);
  }

  public void setMinAgeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MINAGE_ISSET_ID, value);
  }

  public int getMaxAge() {
    return this.maxAge;
  }

  public HrSearchConditionDO setMaxAge(int maxAge) {
    this.maxAge = maxAge;
    setMaxAgeIsSet(true);
    return this;
  }

  public void unsetMaxAge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXAGE_ISSET_ID);
  }

  /** Returns true if field maxAge is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxAge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXAGE_ISSET_ID);
  }

  public void setMaxAgeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXAGE_ISSET_ID, value);
  }

  public java.lang.String getIntentionCityName() {
    return this.intentionCityName;
  }

  public HrSearchConditionDO setIntentionCityName(java.lang.String intentionCityName) {
    this.intentionCityName = intentionCityName;
    return this;
  }

  public void unsetIntentionCityName() {
    this.intentionCityName = null;
  }

  /** Returns true if field intentionCityName is set (has been assigned a value) and false otherwise */
  public boolean isSetIntentionCityName() {
    return this.intentionCityName != null;
  }

  public void setIntentionCityNameIsSet(boolean value) {
    if (!value) {
      this.intentionCityName = null;
    }
  }

  public int getSex() {
    return this.sex;
  }

  public HrSearchConditionDO setSex(int sex) {
    this.sex = sex;
    setSexIsSet(true);
    return this;
  }

  public void unsetSex() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  /** Returns true if field sex is set (has been assigned a value) and false otherwise */
  public boolean isSetSex() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  public void setSexIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEX_ISSET_ID, value);
  }

  public java.lang.String getIntentionSalaryCode() {
    return this.intentionSalaryCode;
  }

  public HrSearchConditionDO setIntentionSalaryCode(java.lang.String intentionSalaryCode) {
    this.intentionSalaryCode = intentionSalaryCode;
    return this;
  }

  public void unsetIntentionSalaryCode() {
    this.intentionSalaryCode = null;
  }

  /** Returns true if field intentionSalaryCode is set (has been assigned a value) and false otherwise */
  public boolean isSetIntentionSalaryCode() {
    return this.intentionSalaryCode != null;
  }

  public void setIntentionSalaryCodeIsSet(boolean value) {
    if (!value) {
      this.intentionSalaryCode = null;
    }
  }

  public java.lang.String getCompanyName() {
    return this.companyName;
  }

  public HrSearchConditionDO setCompanyName(java.lang.String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public int getInLastJobSearchCompany() {
    return this.inLastJobSearchCompany;
  }

  public HrSearchConditionDO setInLastJobSearchCompany(int inLastJobSearchCompany) {
    this.inLastJobSearchCompany = inLastJobSearchCompany;
    setInLastJobSearchCompanyIsSet(true);
    return this;
  }

  public void unsetInLastJobSearchCompany() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INLASTJOBSEARCHCOMPANY_ISSET_ID);
  }

  /** Returns true if field inLastJobSearchCompany is set (has been assigned a value) and false otherwise */
  public boolean isSetInLastJobSearchCompany() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INLASTJOBSEARCHCOMPANY_ISSET_ID);
  }

  public void setInLastJobSearchCompanyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INLASTJOBSEARCHCOMPANY_ISSET_ID, value);
  }

  public int getHrAccountId() {
    return this.hrAccountId;
  }

  public HrSearchConditionDO setHrAccountId(int hrAccountId) {
    this.hrAccountId = hrAccountId;
    setHrAccountIdIsSet(true);
    return this;
  }

  public void unsetHrAccountId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  /** Returns true if field hrAccountId is set (has been assigned a value) and false otherwise */
  public boolean isSetHrAccountId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID);
  }

  public void setHrAccountIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRACCOUNTID_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public HrSearchConditionDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getUpdateTime() {
    return this.updateTime;
  }

  public HrSearchConditionDO setUpdateTime(int updateTime) {
    this.updateTime = updateTime;
    setUpdateTimeIsSet(true);
    return this;
  }

  public void unsetUpdateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UPDATETIME_ISSET_ID);
  }

  public void setUpdateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UPDATETIME_ISSET_ID, value);
  }

  public int getType() {
    return this.type;
  }

  public HrSearchConditionDO setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case PUBLISHER:
      if (value == null) {
        unsetPublisher();
      } else {
        setPublisher((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Integer)value);
      }
      break;

    case KEYWORD:
      if (value == null) {
        unsetKeyword();
      } else {
        setKeyword((java.lang.String)value);
      }
      break;

    case SUBMIT_TIME:
      if (value == null) {
        unsetSubmitTime();
      } else {
        setSubmitTime((java.lang.String)value);
      }
      break;

    case WORK_YEARS:
      if (value == null) {
        unsetWorkYears();
      } else {
        setWorkYears((java.lang.String)value);
      }
      break;

    case CITY_NAME:
      if (value == null) {
        unsetCityName();
      } else {
        setCityName((java.lang.String)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((java.lang.String)value);
      }
      break;

    case PAST_POSITION:
      if (value == null) {
        unsetPastPosition();
      } else {
        setPastPosition((java.lang.String)value);
      }
      break;

    case IN_LAST_JOB_SEARCH_POSITION:
      if (value == null) {
        unsetInLastJobSearchPosition();
      } else {
        setInLastJobSearchPosition((java.lang.Integer)value);
      }
      break;

    case MIN_AGE:
      if (value == null) {
        unsetMinAge();
      } else {
        setMinAge((java.lang.Integer)value);
      }
      break;

    case MAX_AGE:
      if (value == null) {
        unsetMaxAge();
      } else {
        setMaxAge((java.lang.Integer)value);
      }
      break;

    case INTENTION_CITY_NAME:
      if (value == null) {
        unsetIntentionCityName();
      } else {
        setIntentionCityName((java.lang.String)value);
      }
      break;

    case SEX:
      if (value == null) {
        unsetSex();
      } else {
        setSex((java.lang.Integer)value);
      }
      break;

    case INTENTION_SALARY_CODE:
      if (value == null) {
        unsetIntentionSalaryCode();
      } else {
        setIntentionSalaryCode((java.lang.String)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((java.lang.String)value);
      }
      break;

    case IN_LAST_JOB_SEARCH_COMPANY:
      if (value == null) {
        unsetInLastJobSearchCompany();
      } else {
        setInLastJobSearchCompany((java.lang.Integer)value);
      }
      break;

    case HR_ACCOUNT_ID:
      if (value == null) {
        unsetHrAccountId();
      } else {
        setHrAccountId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.Integer)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case PUBLISHER:
      return getPublisher();

    case POSITION_ID:
      return getPositionId();

    case KEYWORD:
      return getKeyword();

    case SUBMIT_TIME:
      return getSubmitTime();

    case WORK_YEARS:
      return getWorkYears();

    case CITY_NAME:
      return getCityName();

    case DEGREE:
      return getDegree();

    case PAST_POSITION:
      return getPastPosition();

    case IN_LAST_JOB_SEARCH_POSITION:
      return getInLastJobSearchPosition();

    case MIN_AGE:
      return getMinAge();

    case MAX_AGE:
      return getMaxAge();

    case INTENTION_CITY_NAME:
      return getIntentionCityName();

    case SEX:
      return getSex();

    case INTENTION_SALARY_CODE:
      return getIntentionSalaryCode();

    case COMPANY_NAME:
      return getCompanyName();

    case IN_LAST_JOB_SEARCH_COMPANY:
      return getInLastJobSearchCompany();

    case HR_ACCOUNT_ID:
      return getHrAccountId();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case TYPE:
      return getType();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case PUBLISHER:
      return isSetPublisher();
    case POSITION_ID:
      return isSetPositionId();
    case KEYWORD:
      return isSetKeyword();
    case SUBMIT_TIME:
      return isSetSubmitTime();
    case WORK_YEARS:
      return isSetWorkYears();
    case CITY_NAME:
      return isSetCityName();
    case DEGREE:
      return isSetDegree();
    case PAST_POSITION:
      return isSetPastPosition();
    case IN_LAST_JOB_SEARCH_POSITION:
      return isSetInLastJobSearchPosition();
    case MIN_AGE:
      return isSetMinAge();
    case MAX_AGE:
      return isSetMaxAge();
    case INTENTION_CITY_NAME:
      return isSetIntentionCityName();
    case SEX:
      return isSetSex();
    case INTENTION_SALARY_CODE:
      return isSetIntentionSalaryCode();
    case COMPANY_NAME:
      return isSetCompanyName();
    case IN_LAST_JOB_SEARCH_COMPANY:
      return isSetInLastJobSearchCompany();
    case HR_ACCOUNT_ID:
      return isSetHrAccountId();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case TYPE:
      return isSetType();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrSearchConditionDO)
      return this.equals((HrSearchConditionDO)that);
    return false;
  }

  public boolean equals(HrSearchConditionDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_publisher = true && this.isSetPublisher();
    boolean that_present_publisher = true && that.isSetPublisher();
    if (this_present_publisher || that_present_publisher) {
      if (!(this_present_publisher && that_present_publisher))
        return false;
      if (this.publisher != that.publisher)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_keyword = true && this.isSetKeyword();
    boolean that_present_keyword = true && that.isSetKeyword();
    if (this_present_keyword || that_present_keyword) {
      if (!(this_present_keyword && that_present_keyword))
        return false;
      if (!this.keyword.equals(that.keyword))
        return false;
    }

    boolean this_present_submitTime = true && this.isSetSubmitTime();
    boolean that_present_submitTime = true && that.isSetSubmitTime();
    if (this_present_submitTime || that_present_submitTime) {
      if (!(this_present_submitTime && that_present_submitTime))
        return false;
      if (!this.submitTime.equals(that.submitTime))
        return false;
    }

    boolean this_present_workYears = true && this.isSetWorkYears();
    boolean that_present_workYears = true && that.isSetWorkYears();
    if (this_present_workYears || that_present_workYears) {
      if (!(this_present_workYears && that_present_workYears))
        return false;
      if (!this.workYears.equals(that.workYears))
        return false;
    }

    boolean this_present_cityName = true && this.isSetCityName();
    boolean that_present_cityName = true && that.isSetCityName();
    if (this_present_cityName || that_present_cityName) {
      if (!(this_present_cityName && that_present_cityName))
        return false;
      if (!this.cityName.equals(that.cityName))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_pastPosition = true && this.isSetPastPosition();
    boolean that_present_pastPosition = true && that.isSetPastPosition();
    if (this_present_pastPosition || that_present_pastPosition) {
      if (!(this_present_pastPosition && that_present_pastPosition))
        return false;
      if (!this.pastPosition.equals(that.pastPosition))
        return false;
    }

    boolean this_present_inLastJobSearchPosition = true && this.isSetInLastJobSearchPosition();
    boolean that_present_inLastJobSearchPosition = true && that.isSetInLastJobSearchPosition();
    if (this_present_inLastJobSearchPosition || that_present_inLastJobSearchPosition) {
      if (!(this_present_inLastJobSearchPosition && that_present_inLastJobSearchPosition))
        return false;
      if (this.inLastJobSearchPosition != that.inLastJobSearchPosition)
        return false;
    }

    boolean this_present_minAge = true && this.isSetMinAge();
    boolean that_present_minAge = true && that.isSetMinAge();
    if (this_present_minAge || that_present_minAge) {
      if (!(this_present_minAge && that_present_minAge))
        return false;
      if (this.minAge != that.minAge)
        return false;
    }

    boolean this_present_maxAge = true && this.isSetMaxAge();
    boolean that_present_maxAge = true && that.isSetMaxAge();
    if (this_present_maxAge || that_present_maxAge) {
      if (!(this_present_maxAge && that_present_maxAge))
        return false;
      if (this.maxAge != that.maxAge)
        return false;
    }

    boolean this_present_intentionCityName = true && this.isSetIntentionCityName();
    boolean that_present_intentionCityName = true && that.isSetIntentionCityName();
    if (this_present_intentionCityName || that_present_intentionCityName) {
      if (!(this_present_intentionCityName && that_present_intentionCityName))
        return false;
      if (!this.intentionCityName.equals(that.intentionCityName))
        return false;
    }

    boolean this_present_sex = true && this.isSetSex();
    boolean that_present_sex = true && that.isSetSex();
    if (this_present_sex || that_present_sex) {
      if (!(this_present_sex && that_present_sex))
        return false;
      if (this.sex != that.sex)
        return false;
    }

    boolean this_present_intentionSalaryCode = true && this.isSetIntentionSalaryCode();
    boolean that_present_intentionSalaryCode = true && that.isSetIntentionSalaryCode();
    if (this_present_intentionSalaryCode || that_present_intentionSalaryCode) {
      if (!(this_present_intentionSalaryCode && that_present_intentionSalaryCode))
        return false;
      if (!this.intentionSalaryCode.equals(that.intentionSalaryCode))
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_inLastJobSearchCompany = true && this.isSetInLastJobSearchCompany();
    boolean that_present_inLastJobSearchCompany = true && that.isSetInLastJobSearchCompany();
    if (this_present_inLastJobSearchCompany || that_present_inLastJobSearchCompany) {
      if (!(this_present_inLastJobSearchCompany && that_present_inLastJobSearchCompany))
        return false;
      if (this.inLastJobSearchCompany != that.inLastJobSearchCompany)
        return false;
    }

    boolean this_present_hrAccountId = true && this.isSetHrAccountId();
    boolean that_present_hrAccountId = true && that.isSetHrAccountId();
    if (this_present_hrAccountId || that_present_hrAccountId) {
      if (!(this_present_hrAccountId && that_present_hrAccountId))
        return false;
      if (this.hrAccountId != that.hrAccountId)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (this.updateTime != that.updateTime)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetPublisher()) ? 131071 : 524287);
    if (isSetPublisher())
      hashCode = hashCode * 8191 + publisher;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetKeyword()) ? 131071 : 524287);
    if (isSetKeyword())
      hashCode = hashCode * 8191 + keyword.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubmitTime()) ? 131071 : 524287);
    if (isSetSubmitTime())
      hashCode = hashCode * 8191 + submitTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetWorkYears()) ? 131071 : 524287);
    if (isSetWorkYears())
      hashCode = hashCode * 8191 + workYears.hashCode();

    hashCode = hashCode * 8191 + ((isSetCityName()) ? 131071 : 524287);
    if (isSetCityName())
      hashCode = hashCode * 8191 + cityName.hashCode();

    hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
    if (isSetDegree())
      hashCode = hashCode * 8191 + degree.hashCode();

    hashCode = hashCode * 8191 + ((isSetPastPosition()) ? 131071 : 524287);
    if (isSetPastPosition())
      hashCode = hashCode * 8191 + pastPosition.hashCode();

    hashCode = hashCode * 8191 + ((isSetInLastJobSearchPosition()) ? 131071 : 524287);
    if (isSetInLastJobSearchPosition())
      hashCode = hashCode * 8191 + inLastJobSearchPosition;

    hashCode = hashCode * 8191 + ((isSetMinAge()) ? 131071 : 524287);
    if (isSetMinAge())
      hashCode = hashCode * 8191 + minAge;

    hashCode = hashCode * 8191 + ((isSetMaxAge()) ? 131071 : 524287);
    if (isSetMaxAge())
      hashCode = hashCode * 8191 + maxAge;

    hashCode = hashCode * 8191 + ((isSetIntentionCityName()) ? 131071 : 524287);
    if (isSetIntentionCityName())
      hashCode = hashCode * 8191 + intentionCityName.hashCode();

    hashCode = hashCode * 8191 + ((isSetSex()) ? 131071 : 524287);
    if (isSetSex())
      hashCode = hashCode * 8191 + sex;

    hashCode = hashCode * 8191 + ((isSetIntentionSalaryCode()) ? 131071 : 524287);
    if (isSetIntentionSalaryCode())
      hashCode = hashCode * 8191 + intentionSalaryCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyName()) ? 131071 : 524287);
    if (isSetCompanyName())
      hashCode = hashCode * 8191 + companyName.hashCode();

    hashCode = hashCode * 8191 + ((isSetInLastJobSearchCompany()) ? 131071 : 524287);
    if (isSetInLastJobSearchCompany())
      hashCode = hashCode * 8191 + inLastJobSearchCompany;

    hashCode = hashCode * 8191 + ((isSetHrAccountId()) ? 131071 : 524287);
    if (isSetHrAccountId())
      hashCode = hashCode * 8191 + hrAccountId;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime;

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type;

    return hashCode;
  }

  @Override
  public int compareTo(HrSearchConditionDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublisher()).compareTo(other.isSetPublisher());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisher()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publisher, other.publisher);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyword()).compareTo(other.isSetKeyword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyword, other.keyword);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubmitTime()).compareTo(other.isSetSubmitTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubmitTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.submitTime, other.submitTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWorkYears()).compareTo(other.isSetWorkYears());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkYears()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workYears, other.workYears);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCityName()).compareTo(other.isSetCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCityName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cityName, other.cityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPastPosition()).compareTo(other.isSetPastPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPastPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pastPosition, other.pastPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInLastJobSearchPosition()).compareTo(other.isSetInLastJobSearchPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInLastJobSearchPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inLastJobSearchPosition, other.inLastJobSearchPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMinAge()).compareTo(other.isSetMinAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minAge, other.minAge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMaxAge()).compareTo(other.isSetMaxAge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxAge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxAge, other.maxAge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntentionCityName()).compareTo(other.isSetIntentionCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntentionCityName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intentionCityName, other.intentionCityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSex()).compareTo(other.isSetSex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSex()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sex, other.sex);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntentionSalaryCode()).compareTo(other.isSetIntentionSalaryCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntentionSalaryCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intentionSalaryCode, other.intentionSalaryCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInLastJobSearchCompany()).compareTo(other.isSetInLastJobSearchCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInLastJobSearchCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inLastJobSearchCompany, other.inLastJobSearchCompany);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrAccountId()).compareTo(other.isSetHrAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrAccountId, other.hrAccountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrSearchConditionDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetPublisher()) {
      if (!first) sb.append(", ");
      sb.append("publisher:");
      sb.append(this.publisher);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetKeyword()) {
      if (!first) sb.append(", ");
      sb.append("keyword:");
      if (this.keyword == null) {
        sb.append("null");
      } else {
        sb.append(this.keyword);
      }
      first = false;
    }
    if (isSetSubmitTime()) {
      if (!first) sb.append(", ");
      sb.append("submitTime:");
      if (this.submitTime == null) {
        sb.append("null");
      } else {
        sb.append(this.submitTime);
      }
      first = false;
    }
    if (isSetWorkYears()) {
      if (!first) sb.append(", ");
      sb.append("workYears:");
      if (this.workYears == null) {
        sb.append("null");
      } else {
        sb.append(this.workYears);
      }
      first = false;
    }
    if (isSetCityName()) {
      if (!first) sb.append(", ");
      sb.append("cityName:");
      if (this.cityName == null) {
        sb.append("null");
      } else {
        sb.append(this.cityName);
      }
      first = false;
    }
    if (isSetDegree()) {
      if (!first) sb.append(", ");
      sb.append("degree:");
      if (this.degree == null) {
        sb.append("null");
      } else {
        sb.append(this.degree);
      }
      first = false;
    }
    if (isSetPastPosition()) {
      if (!first) sb.append(", ");
      sb.append("pastPosition:");
      if (this.pastPosition == null) {
        sb.append("null");
      } else {
        sb.append(this.pastPosition);
      }
      first = false;
    }
    if (isSetInLastJobSearchPosition()) {
      if (!first) sb.append(", ");
      sb.append("inLastJobSearchPosition:");
      sb.append(this.inLastJobSearchPosition);
      first = false;
    }
    if (isSetMinAge()) {
      if (!first) sb.append(", ");
      sb.append("minAge:");
      sb.append(this.minAge);
      first = false;
    }
    if (isSetMaxAge()) {
      if (!first) sb.append(", ");
      sb.append("maxAge:");
      sb.append(this.maxAge);
      first = false;
    }
    if (isSetIntentionCityName()) {
      if (!first) sb.append(", ");
      sb.append("intentionCityName:");
      if (this.intentionCityName == null) {
        sb.append("null");
      } else {
        sb.append(this.intentionCityName);
      }
      first = false;
    }
    if (isSetSex()) {
      if (!first) sb.append(", ");
      sb.append("sex:");
      sb.append(this.sex);
      first = false;
    }
    if (isSetIntentionSalaryCode()) {
      if (!first) sb.append(", ");
      sb.append("intentionSalaryCode:");
      if (this.intentionSalaryCode == null) {
        sb.append("null");
      } else {
        sb.append(this.intentionSalaryCode);
      }
      first = false;
    }
    if (isSetCompanyName()) {
      if (!first) sb.append(", ");
      sb.append("companyName:");
      if (this.companyName == null) {
        sb.append("null");
      } else {
        sb.append(this.companyName);
      }
      first = false;
    }
    if (isSetInLastJobSearchCompany()) {
      if (!first) sb.append(", ");
      sb.append("inLastJobSearchCompany:");
      sb.append(this.inLastJobSearchCompany);
      first = false;
    }
    if (isSetHrAccountId()) {
      if (!first) sb.append(", ");
      sb.append("hrAccountId:");
      sb.append(this.hrAccountId);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      sb.append(this.updateTime);
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      sb.append(this.type);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrSearchConditionDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrSearchConditionDOStandardScheme getScheme() {
      return new HrSearchConditionDOStandardScheme();
    }
  }

  private static class HrSearchConditionDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrSearchConditionDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrSearchConditionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PUBLISHER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.publisher = iprot.readI32();
              struct.setPublisherIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // KEYWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.keyword = iprot.readString();
              struct.setKeywordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SUBMIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.submitTime = iprot.readString();
              struct.setSubmitTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // WORK_YEARS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.workYears = iprot.readString();
              struct.setWorkYearsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cityName = iprot.readString();
              struct.setCityNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PAST_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pastPosition = iprot.readString();
              struct.setPastPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // IN_LAST_JOB_SEARCH_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.inLastJobSearchPosition = iprot.readI32();
              struct.setInLastJobSearchPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MIN_AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.minAge = iprot.readI32();
              struct.setMinAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MAX_AGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxAge = iprot.readI32();
              struct.setMaxAgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // INTENTION_CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.intentionCityName = iprot.readString();
              struct.setIntentionCityNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SEX
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sex = iprot.readI32();
              struct.setSexIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // INTENTION_SALARY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.intentionSalaryCode = iprot.readString();
              struct.setIntentionSalaryCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IN_LAST_JOB_SEARCH_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.inLastJobSearchCompany = iprot.readI32();
              struct.setInLastJobSearchCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // HR_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hrAccountId = iprot.readI32();
              struct.setHrAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateTime = iprot.readI32();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrSearchConditionDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPublisher()) {
        oprot.writeFieldBegin(PUBLISHER_FIELD_DESC);
        oprot.writeI32(struct.publisher);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.keyword != null) {
        if (struct.isSetKeyword()) {
          oprot.writeFieldBegin(KEYWORD_FIELD_DESC);
          oprot.writeString(struct.keyword);
          oprot.writeFieldEnd();
        }
      }
      if (struct.submitTime != null) {
        if (struct.isSetSubmitTime()) {
          oprot.writeFieldBegin(SUBMIT_TIME_FIELD_DESC);
          oprot.writeString(struct.submitTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.workYears != null) {
        if (struct.isSetWorkYears()) {
          oprot.writeFieldBegin(WORK_YEARS_FIELD_DESC);
          oprot.writeString(struct.workYears);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cityName != null) {
        if (struct.isSetCityName()) {
          oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
          oprot.writeString(struct.cityName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.degree != null) {
        if (struct.isSetDegree()) {
          oprot.writeFieldBegin(DEGREE_FIELD_DESC);
          oprot.writeString(struct.degree);
          oprot.writeFieldEnd();
        }
      }
      if (struct.pastPosition != null) {
        if (struct.isSetPastPosition()) {
          oprot.writeFieldBegin(PAST_POSITION_FIELD_DESC);
          oprot.writeString(struct.pastPosition);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetInLastJobSearchPosition()) {
        oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_POSITION_FIELD_DESC);
        oprot.writeI32(struct.inLastJobSearchPosition);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMinAge()) {
        oprot.writeFieldBegin(MIN_AGE_FIELD_DESC);
        oprot.writeI32(struct.minAge);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMaxAge()) {
        oprot.writeFieldBegin(MAX_AGE_FIELD_DESC);
        oprot.writeI32(struct.maxAge);
        oprot.writeFieldEnd();
      }
      if (struct.intentionCityName != null) {
        if (struct.isSetIntentionCityName()) {
          oprot.writeFieldBegin(INTENTION_CITY_NAME_FIELD_DESC);
          oprot.writeString(struct.intentionCityName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSex()) {
        oprot.writeFieldBegin(SEX_FIELD_DESC);
        oprot.writeI32(struct.sex);
        oprot.writeFieldEnd();
      }
      if (struct.intentionSalaryCode != null) {
        if (struct.isSetIntentionSalaryCode()) {
          oprot.writeFieldBegin(INTENTION_SALARY_CODE_FIELD_DESC);
          oprot.writeString(struct.intentionSalaryCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyName != null) {
        if (struct.isSetCompanyName()) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.companyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetInLastJobSearchCompany()) {
        oprot.writeFieldBegin(IN_LAST_JOB_SEARCH_COMPANY_FIELD_DESC);
        oprot.writeI32(struct.inLastJobSearchCompany);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHrAccountId()) {
        oprot.writeFieldBegin(HR_ACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.hrAccountId);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeI32(struct.updateTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetType()) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrSearchConditionDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrSearchConditionDOTupleScheme getScheme() {
      return new HrSearchConditionDOTupleScheme();
    }
  }

  private static class HrSearchConditionDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrSearchConditionDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrSearchConditionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetPublisher()) {
        optionals.set(2);
      }
      if (struct.isSetPositionId()) {
        optionals.set(3);
      }
      if (struct.isSetKeyword()) {
        optionals.set(4);
      }
      if (struct.isSetSubmitTime()) {
        optionals.set(5);
      }
      if (struct.isSetWorkYears()) {
        optionals.set(6);
      }
      if (struct.isSetCityName()) {
        optionals.set(7);
      }
      if (struct.isSetDegree()) {
        optionals.set(8);
      }
      if (struct.isSetPastPosition()) {
        optionals.set(9);
      }
      if (struct.isSetInLastJobSearchPosition()) {
        optionals.set(10);
      }
      if (struct.isSetMinAge()) {
        optionals.set(11);
      }
      if (struct.isSetMaxAge()) {
        optionals.set(12);
      }
      if (struct.isSetIntentionCityName()) {
        optionals.set(13);
      }
      if (struct.isSetSex()) {
        optionals.set(14);
      }
      if (struct.isSetIntentionSalaryCode()) {
        optionals.set(15);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(16);
      }
      if (struct.isSetInLastJobSearchCompany()) {
        optionals.set(17);
      }
      if (struct.isSetHrAccountId()) {
        optionals.set(18);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(19);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(20);
      }
      if (struct.isSetType()) {
        optionals.set(21);
      }
      oprot.writeBitSet(optionals, 22);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPublisher()) {
        oprot.writeI32(struct.publisher);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetKeyword()) {
        oprot.writeString(struct.keyword);
      }
      if (struct.isSetSubmitTime()) {
        oprot.writeString(struct.submitTime);
      }
      if (struct.isSetWorkYears()) {
        oprot.writeString(struct.workYears);
      }
      if (struct.isSetCityName()) {
        oprot.writeString(struct.cityName);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetPastPosition()) {
        oprot.writeString(struct.pastPosition);
      }
      if (struct.isSetInLastJobSearchPosition()) {
        oprot.writeI32(struct.inLastJobSearchPosition);
      }
      if (struct.isSetMinAge()) {
        oprot.writeI32(struct.minAge);
      }
      if (struct.isSetMaxAge()) {
        oprot.writeI32(struct.maxAge);
      }
      if (struct.isSetIntentionCityName()) {
        oprot.writeString(struct.intentionCityName);
      }
      if (struct.isSetSex()) {
        oprot.writeI32(struct.sex);
      }
      if (struct.isSetIntentionSalaryCode()) {
        oprot.writeString(struct.intentionSalaryCode);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetInLastJobSearchCompany()) {
        oprot.writeI32(struct.inLastJobSearchCompany);
      }
      if (struct.isSetHrAccountId()) {
        oprot.writeI32(struct.hrAccountId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeI32(struct.updateTime);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrSearchConditionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(22);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.publisher = iprot.readI32();
        struct.setPublisherIsSet(true);
      }
      if (incoming.get(3)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.keyword = iprot.readString();
        struct.setKeywordIsSet(true);
      }
      if (incoming.get(5)) {
        struct.submitTime = iprot.readString();
        struct.setSubmitTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.workYears = iprot.readString();
        struct.setWorkYearsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.cityName = iprot.readString();
        struct.setCityNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.pastPosition = iprot.readString();
        struct.setPastPositionIsSet(true);
      }
      if (incoming.get(10)) {
        struct.inLastJobSearchPosition = iprot.readI32();
        struct.setInLastJobSearchPositionIsSet(true);
      }
      if (incoming.get(11)) {
        struct.minAge = iprot.readI32();
        struct.setMinAgeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.maxAge = iprot.readI32();
        struct.setMaxAgeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.intentionCityName = iprot.readString();
        struct.setIntentionCityNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.sex = iprot.readI32();
        struct.setSexIsSet(true);
      }
      if (incoming.get(15)) {
        struct.intentionSalaryCode = iprot.readString();
        struct.setIntentionSalaryCodeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.inLastJobSearchCompany = iprot.readI32();
        struct.setInLastJobSearchCompanyIsSet(true);
      }
      if (incoming.get(18)) {
        struct.hrAccountId = iprot.readI32();
        struct.setHrAccountIdIsSet(true);
      }
      if (incoming.get(19)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.updateTime = iprot.readI32();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

