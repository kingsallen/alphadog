/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-14")
public class ProfileDao {

  public interface Iface {

    public com.moseeker.thrift.gen.common.struct.Response getResourceByApplication(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void getResourceByApplication(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.moseeker.thrift.gen.common.struct.Response getResourceByApplication(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required) throws org.apache.thrift.TException
    {
      send_getResourceByApplication(companyId, sourceId, atsStatus, recommender, dl_url_required);
      return recv_getResourceByApplication();
    }

    public void send_getResourceByApplication(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required) throws org.apache.thrift.TException
    {
      getResourceByApplication_args args = new getResourceByApplication_args();
      args.setCompanyId(companyId);
      args.setSourceId(sourceId);
      args.setAtsStatus(atsStatus);
      args.setRecommender(recommender);
      args.setDl_url_required(dl_url_required);
      sendBase("getResourceByApplication", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_getResourceByApplication() throws org.apache.thrift.TException
    {
      getResourceByApplication_result result = new getResourceByApplication_result();
      receiveBase(result, "getResourceByApplication");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getResourceByApplication failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void getResourceByApplication(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getResourceByApplication_call method_call = new getResourceByApplication_call(companyId, sourceId, atsStatus, recommender, dl_url_required, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getResourceByApplication_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private int companyId;
      private int sourceId;
      private int atsStatus;
      private boolean recommender;
      private boolean dl_url_required;
      public getResourceByApplication_call(int companyId, int sourceId, int atsStatus, boolean recommender, boolean dl_url_required, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyId = companyId;
        this.sourceId = sourceId;
        this.atsStatus = atsStatus;
        this.recommender = recommender;
        this.dl_url_required = dl_url_required;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getResourceByApplication", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getResourceByApplication_args args = new getResourceByApplication_args();
        args.setCompanyId(companyId);
        args.setSourceId(sourceId);
        args.setAtsStatus(atsStatus);
        args.setRecommender(recommender);
        args.setDl_url_required(dl_url_required);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getResourceByApplication();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("getResourceByApplication", new getResourceByApplication());
      return processMap;
    }

    public static class getResourceByApplication<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getResourceByApplication_args> {
      public getResourceByApplication() {
        super("getResourceByApplication");
      }

      public getResourceByApplication_args getEmptyArgsInstance() {
        return new getResourceByApplication_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getResourceByApplication_result getResult(I iface, getResourceByApplication_args args) throws org.apache.thrift.TException {
        getResourceByApplication_result result = new getResourceByApplication_result();
        result.success = iface.getResourceByApplication(args.companyId, args.sourceId, args.atsStatus, args.recommender, args.dl_url_required);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("getResourceByApplication", new getResourceByApplication());
      return processMap;
    }

    public static class getResourceByApplication<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getResourceByApplication_args, com.moseeker.thrift.gen.common.struct.Response> {
      public getResourceByApplication() {
        super("getResourceByApplication");
      }

      public getResourceByApplication_args getEmptyArgsInstance() {
        return new getResourceByApplication_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            getResourceByApplication_result result = new getResourceByApplication_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getResourceByApplication_result result = new getResourceByApplication_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getResourceByApplication_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.getResourceByApplication(args.companyId, args.sourceId, args.atsStatus, args.recommender, args.dl_url_required,resultHandler);
      }
    }

  }

  public static class getResourceByApplication_args implements org.apache.thrift.TBase<getResourceByApplication_args, getResourceByApplication_args._Fields>, java.io.Serializable, Cloneable, Comparable<getResourceByApplication_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getResourceByApplication_args");

    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceId", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField ATS_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("atsStatus", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField RECOMMENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("recommender", org.apache.thrift.protocol.TType.BOOL, (short)4);
    private static final org.apache.thrift.protocol.TField DL_URL_REQUIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("dl_url_required", org.apache.thrift.protocol.TType.BOOL, (short)5);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getResourceByApplication_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getResourceByApplication_argsTupleSchemeFactory();

    public int companyId; // required
    public int sourceId; // required
    public int atsStatus; // required
    public boolean recommender; // required
    public boolean dl_url_required; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_ID((short)1, "companyId"),
      SOURCE_ID((short)2, "sourceId"),
      ATS_STATUS((short)3, "atsStatus"),
      RECOMMENDER((short)4, "recommender"),
      DL_URL_REQUIRED((short)5, "dl_url_required");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_ID
            return COMPANY_ID;
          case 2: // SOURCE_ID
            return SOURCE_ID;
          case 3: // ATS_STATUS
            return ATS_STATUS;
          case 4: // RECOMMENDER
            return RECOMMENDER;
          case 5: // DL_URL_REQUIRED
            return DL_URL_REQUIRED;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __COMPANYID_ISSET_ID = 0;
    private static final int __SOURCEID_ISSET_ID = 1;
    private static final int __ATSSTATUS_ISSET_ID = 2;
    private static final int __RECOMMENDER_ISSET_ID = 3;
    private static final int __DL_URL_REQUIRED_ISSET_ID = 4;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("sourceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.ATS_STATUS, new org.apache.thrift.meta_data.FieldMetaData("atsStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.RECOMMENDER, new org.apache.thrift.meta_data.FieldMetaData("recommender", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.DL_URL_REQUIRED, new org.apache.thrift.meta_data.FieldMetaData("dl_url_required", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getResourceByApplication_args.class, metaDataMap);
    }

    public getResourceByApplication_args() {
    }

    public getResourceByApplication_args(
      int companyId,
      int sourceId,
      int atsStatus,
      boolean recommender,
      boolean dl_url_required)
    {
      this();
      this.companyId = companyId;
      setCompanyIdIsSet(true);
      this.sourceId = sourceId;
      setSourceIdIsSet(true);
      this.atsStatus = atsStatus;
      setAtsStatusIsSet(true);
      this.recommender = recommender;
      setRecommenderIsSet(true);
      this.dl_url_required = dl_url_required;
      setDl_url_requiredIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getResourceByApplication_args(getResourceByApplication_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.companyId = other.companyId;
      this.sourceId = other.sourceId;
      this.atsStatus = other.atsStatus;
      this.recommender = other.recommender;
      this.dl_url_required = other.dl_url_required;
    }

    public getResourceByApplication_args deepCopy() {
      return new getResourceByApplication_args(this);
    }

    @Override
    public void clear() {
      setCompanyIdIsSet(false);
      this.companyId = 0;
      setSourceIdIsSet(false);
      this.sourceId = 0;
      setAtsStatusIsSet(false);
      this.atsStatus = 0;
      setRecommenderIsSet(false);
      this.recommender = false;
      setDl_url_requiredIsSet(false);
      this.dl_url_required = false;
    }

    public int getCompanyId() {
      return this.companyId;
    }

    public getResourceByApplication_args setCompanyId(int companyId) {
      this.companyId = companyId;
      setCompanyIdIsSet(true);
      return this;
    }

    public void unsetCompanyId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public int getSourceId() {
      return this.sourceId;
    }

    public getResourceByApplication_args setSourceId(int sourceId) {
      this.sourceId = sourceId;
      setSourceIdIsSet(true);
      return this;
    }

    public void unsetSourceId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCEID_ISSET_ID);
    }

    /** Returns true if field sourceId is set (has been assigned a value) and false otherwise */
    public boolean isSetSourceId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCEID_ISSET_ID);
    }

    public void setSourceIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCEID_ISSET_ID, value);
    }

    public int getAtsStatus() {
      return this.atsStatus;
    }

    public getResourceByApplication_args setAtsStatus(int atsStatus) {
      this.atsStatus = atsStatus;
      setAtsStatusIsSet(true);
      return this;
    }

    public void unsetAtsStatus() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATSSTATUS_ISSET_ID);
    }

    /** Returns true if field atsStatus is set (has been assigned a value) and false otherwise */
    public boolean isSetAtsStatus() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATSSTATUS_ISSET_ID);
    }

    public void setAtsStatusIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATSSTATUS_ISSET_ID, value);
    }

    public boolean isRecommender() {
      return this.recommender;
    }

    public getResourceByApplication_args setRecommender(boolean recommender) {
      this.recommender = recommender;
      setRecommenderIsSet(true);
      return this;
    }

    public void unsetRecommender() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDER_ISSET_ID);
    }

    /** Returns true if field recommender is set (has been assigned a value) and false otherwise */
    public boolean isSetRecommender() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDER_ISSET_ID);
    }

    public void setRecommenderIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDER_ISSET_ID, value);
    }

    public boolean isDl_url_required() {
      return this.dl_url_required;
    }

    public getResourceByApplication_args setDl_url_required(boolean dl_url_required) {
      this.dl_url_required = dl_url_required;
      setDl_url_requiredIsSet(true);
      return this;
    }

    public void unsetDl_url_required() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID);
    }

    /** Returns true if field dl_url_required is set (has been assigned a value) and false otherwise */
    public boolean isSetDl_url_required() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID);
    }

    public void setDl_url_requiredIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case COMPANY_ID:
        if (value == null) {
          unsetCompanyId();
        } else {
          setCompanyId((Integer)value);
        }
        break;

      case SOURCE_ID:
        if (value == null) {
          unsetSourceId();
        } else {
          setSourceId((Integer)value);
        }
        break;

      case ATS_STATUS:
        if (value == null) {
          unsetAtsStatus();
        } else {
          setAtsStatus((Integer)value);
        }
        break;

      case RECOMMENDER:
        if (value == null) {
          unsetRecommender();
        } else {
          setRecommender((Boolean)value);
        }
        break;

      case DL_URL_REQUIRED:
        if (value == null) {
          unsetDl_url_required();
        } else {
          setDl_url_required((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_ID:
        return getCompanyId();

      case SOURCE_ID:
        return getSourceId();

      case ATS_STATUS:
        return getAtsStatus();

      case RECOMMENDER:
        return isRecommender();

      case DL_URL_REQUIRED:
        return isDl_url_required();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_ID:
        return isSetCompanyId();
      case SOURCE_ID:
        return isSetSourceId();
      case ATS_STATUS:
        return isSetAtsStatus();
      case RECOMMENDER:
        return isSetRecommender();
      case DL_URL_REQUIRED:
        return isSetDl_url_required();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getResourceByApplication_args)
        return this.equals((getResourceByApplication_args)that);
      return false;
    }

    public boolean equals(getResourceByApplication_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyId = true;
      boolean that_present_companyId = true;
      if (this_present_companyId || that_present_companyId) {
        if (!(this_present_companyId && that_present_companyId))
          return false;
        if (this.companyId != that.companyId)
          return false;
      }

      boolean this_present_sourceId = true;
      boolean that_present_sourceId = true;
      if (this_present_sourceId || that_present_sourceId) {
        if (!(this_present_sourceId && that_present_sourceId))
          return false;
        if (this.sourceId != that.sourceId)
          return false;
      }

      boolean this_present_atsStatus = true;
      boolean that_present_atsStatus = true;
      if (this_present_atsStatus || that_present_atsStatus) {
        if (!(this_present_atsStatus && that_present_atsStatus))
          return false;
        if (this.atsStatus != that.atsStatus)
          return false;
      }

      boolean this_present_recommender = true;
      boolean that_present_recommender = true;
      if (this_present_recommender || that_present_recommender) {
        if (!(this_present_recommender && that_present_recommender))
          return false;
        if (this.recommender != that.recommender)
          return false;
      }

      boolean this_present_dl_url_required = true;
      boolean that_present_dl_url_required = true;
      if (this_present_dl_url_required || that_present_dl_url_required) {
        if (!(this_present_dl_url_required && that_present_dl_url_required))
          return false;
        if (this.dl_url_required != that.dl_url_required)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + companyId;

      hashCode = hashCode * 8191 + sourceId;

      hashCode = hashCode * 8191 + atsStatus;

      hashCode = hashCode * 8191 + ((recommender) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((dl_url_required) ? 131071 : 524287);

      return hashCode;
    }

    @Override
    public int compareTo(getResourceByApplication_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetSourceId()).compareTo(other.isSetSourceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSourceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceId, other.sourceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetAtsStatus()).compareTo(other.isSetAtsStatus());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAtsStatus()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atsStatus, other.atsStatus);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetRecommender()).compareTo(other.isSetRecommender());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRecommender()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommender, other.recommender);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDl_url_required()).compareTo(other.isSetDl_url_required());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDl_url_required()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dl_url_required, other.dl_url_required);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getResourceByApplication_args(");
      boolean first = true;

      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("sourceId:");
      sb.append(this.sourceId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("atsStatus:");
      sb.append(this.atsStatus);
      first = false;
      if (!first) sb.append(", ");
      sb.append("recommender:");
      sb.append(this.recommender);
      first = false;
      if (!first) sb.append(", ");
      sb.append("dl_url_required:");
      sb.append(this.dl_url_required);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getResourceByApplication_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getResourceByApplication_argsStandardScheme getScheme() {
        return new getResourceByApplication_argsStandardScheme();
      }
    }

    private static class getResourceByApplication_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getResourceByApplication_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getResourceByApplication_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SOURCE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.sourceId = iprot.readI32();
                struct.setSourceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ATS_STATUS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.atsStatus = iprot.readI32();
                struct.setAtsStatusIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // RECOMMENDER
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.recommender = iprot.readBool();
                struct.setRecommenderIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // DL_URL_REQUIRED
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.dl_url_required = iprot.readBool();
                struct.setDl_url_requiredIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getResourceByApplication_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
        oprot.writeI32(struct.sourceId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(ATS_STATUS_FIELD_DESC);
        oprot.writeI32(struct.atsStatus);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(RECOMMENDER_FIELD_DESC);
        oprot.writeBool(struct.recommender);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(DL_URL_REQUIRED_FIELD_DESC);
        oprot.writeBool(struct.dl_url_required);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getResourceByApplication_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getResourceByApplication_argsTupleScheme getScheme() {
        return new getResourceByApplication_argsTupleScheme();
      }
    }

    private static class getResourceByApplication_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getResourceByApplication_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getResourceByApplication_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyId()) {
          optionals.set(0);
        }
        if (struct.isSetSourceId()) {
          optionals.set(1);
        }
        if (struct.isSetAtsStatus()) {
          optionals.set(2);
        }
        if (struct.isSetRecommender()) {
          optionals.set(3);
        }
        if (struct.isSetDl_url_required()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetCompanyId()) {
          oprot.writeI32(struct.companyId);
        }
        if (struct.isSetSourceId()) {
          oprot.writeI32(struct.sourceId);
        }
        if (struct.isSetAtsStatus()) {
          oprot.writeI32(struct.atsStatus);
        }
        if (struct.isSetRecommender()) {
          oprot.writeBool(struct.recommender);
        }
        if (struct.isSetDl_url_required()) {
          oprot.writeBool(struct.dl_url_required);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getResourceByApplication_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.companyId = iprot.readI32();
          struct.setCompanyIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.sourceId = iprot.readI32();
          struct.setSourceIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.atsStatus = iprot.readI32();
          struct.setAtsStatusIsSet(true);
        }
        if (incoming.get(3)) {
          struct.recommender = iprot.readBool();
          struct.setRecommenderIsSet(true);
        }
        if (incoming.get(4)) {
          struct.dl_url_required = iprot.readBool();
          struct.setDl_url_requiredIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getResourceByApplication_result implements org.apache.thrift.TBase<getResourceByApplication_result, getResourceByApplication_result._Fields>, java.io.Serializable, Cloneable, Comparable<getResourceByApplication_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getResourceByApplication_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getResourceByApplication_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getResourceByApplication_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getResourceByApplication_result.class, metaDataMap);
    }

    public getResourceByApplication_result() {
    }

    public getResourceByApplication_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getResourceByApplication_result(getResourceByApplication_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public getResourceByApplication_result deepCopy() {
      return new getResourceByApplication_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public getResourceByApplication_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getResourceByApplication_result)
        return this.equals((getResourceByApplication_result)that);
      return false;
    }

    public boolean equals(getResourceByApplication_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getResourceByApplication_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getResourceByApplication_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getResourceByApplication_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getResourceByApplication_resultStandardScheme getScheme() {
        return new getResourceByApplication_resultStandardScheme();
      }
    }

    private static class getResourceByApplication_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getResourceByApplication_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getResourceByApplication_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getResourceByApplication_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getResourceByApplication_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getResourceByApplication_resultTupleScheme getScheme() {
        return new getResourceByApplication_resultTupleScheme();
      }
    }

    private static class getResourceByApplication_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getResourceByApplication_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getResourceByApplication_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getResourceByApplication_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
