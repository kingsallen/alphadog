/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.thirdpartydb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-12-04")
public class ThirdpartyVeryEastPositionDO implements org.apache.thrift.TBase<ThirdpartyVeryEastPositionDO, ThirdpartyVeryEastPositionDO._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdpartyVeryEastPositionDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdpartyVeryEastPositionDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOMMODATION_FIELD_DESC = new org.apache.thrift.protocol.TField("accommodation", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField AGE_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("age_top", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField AGE_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("age_bottom", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField LANGUAGE_TYPE1_FIELD_DESC = new org.apache.thrift.protocol.TField("languageType1", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField LANGUAGE_LEVEL1_FIELD_DESC = new org.apache.thrift.protocol.TField("languageLevel1", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField LANGUAGE_TYPE2_FIELD_DESC = new org.apache.thrift.protocol.TField("languageType2", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField LANGUAGE_LEVEL2_FIELD_DESC = new org.apache.thrift.protocol.TField("languageLevel2", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField LANGUAGE_TYPE3_FIELD_DESC = new org.apache.thrift.protocol.TField("languageType3", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField LANGUAGE_LEVEL3_FIELD_DESC = new org.apache.thrift.protocol.TField("languageLevel3", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField COMPUTER_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("computerLevel", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField INDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("indate", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)14);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdpartyVeryEastPositionDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdpartyVeryEastPositionDOTupleSchemeFactory();

  public int id; // optional
  public int pid; // optional
  public int accommodation; // optional
  public int age_top; // optional
  public int age_bottom; // optional
  public int languageType1; // optional
  public int languageLevel1; // optional
  public int languageType2; // optional
  public int languageLevel2; // optional
  public int languageType3; // optional
  public int languageLevel3; // optional
  public int computerLevel; // optional
  public int indate; // optional
  public byte status; // optional
  public String createTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PID((short)2, "pid"),
    ACCOMMODATION((short)3, "accommodation"),
    AGE_TOP((short)4, "age_top"),
    AGE_BOTTOM((short)5, "age_bottom"),
    LANGUAGE_TYPE1((short)6, "languageType1"),
    LANGUAGE_LEVEL1((short)7, "languageLevel1"),
    LANGUAGE_TYPE2((short)8, "languageType2"),
    LANGUAGE_LEVEL2((short)9, "languageLevel2"),
    LANGUAGE_TYPE3((short)10, "languageType3"),
    LANGUAGE_LEVEL3((short)11, "languageLevel3"),
    COMPUTER_LEVEL((short)12, "computerLevel"),
    INDATE((short)13, "indate"),
    STATUS((short)14, "status"),
    CREATE_TIME((short)15, "createTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PID
          return PID;
        case 3: // ACCOMMODATION
          return ACCOMMODATION;
        case 4: // AGE_TOP
          return AGE_TOP;
        case 5: // AGE_BOTTOM
          return AGE_BOTTOM;
        case 6: // LANGUAGE_TYPE1
          return LANGUAGE_TYPE1;
        case 7: // LANGUAGE_LEVEL1
          return LANGUAGE_LEVEL1;
        case 8: // LANGUAGE_TYPE2
          return LANGUAGE_TYPE2;
        case 9: // LANGUAGE_LEVEL2
          return LANGUAGE_LEVEL2;
        case 10: // LANGUAGE_TYPE3
          return LANGUAGE_TYPE3;
        case 11: // LANGUAGE_LEVEL3
          return LANGUAGE_LEVEL3;
        case 12: // COMPUTER_LEVEL
          return COMPUTER_LEVEL;
        case 13: // INDATE
          return INDATE;
        case 14: // STATUS
          return STATUS;
        case 15: // CREATE_TIME
          return CREATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PID_ISSET_ID = 1;
  private static final int __ACCOMMODATION_ISSET_ID = 2;
  private static final int __AGE_TOP_ISSET_ID = 3;
  private static final int __AGE_BOTTOM_ISSET_ID = 4;
  private static final int __LANGUAGETYPE1_ISSET_ID = 5;
  private static final int __LANGUAGELEVEL1_ISSET_ID = 6;
  private static final int __LANGUAGETYPE2_ISSET_ID = 7;
  private static final int __LANGUAGELEVEL2_ISSET_ID = 8;
  private static final int __LANGUAGETYPE3_ISSET_ID = 9;
  private static final int __LANGUAGELEVEL3_ISSET_ID = 10;
  private static final int __COMPUTERLEVEL_ISSET_ID = 11;
  private static final int __INDATE_ISSET_ID = 12;
  private static final int __STATUS_ISSET_ID = 13;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.PID,_Fields.ACCOMMODATION,_Fields.AGE_TOP,_Fields.AGE_BOTTOM,_Fields.LANGUAGE_TYPE1,_Fields.LANGUAGE_LEVEL1,_Fields.LANGUAGE_TYPE2,_Fields.LANGUAGE_LEVEL2,_Fields.LANGUAGE_TYPE3,_Fields.LANGUAGE_LEVEL3,_Fields.COMPUTER_LEVEL,_Fields.INDATE,_Fields.STATUS,_Fields.CREATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOMMODATION, new org.apache.thrift.meta_data.FieldMetaData("accommodation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGE_TOP, new org.apache.thrift.meta_data.FieldMetaData("age_top", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGE_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("age_bottom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_TYPE1, new org.apache.thrift.meta_data.FieldMetaData("languageType1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_LEVEL1, new org.apache.thrift.meta_data.FieldMetaData("languageLevel1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_TYPE2, new org.apache.thrift.meta_data.FieldMetaData("languageType2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_LEVEL2, new org.apache.thrift.meta_data.FieldMetaData("languageLevel2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_TYPE3, new org.apache.thrift.meta_data.FieldMetaData("languageType3", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LANGUAGE_LEVEL3, new org.apache.thrift.meta_data.FieldMetaData("languageLevel3", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPUTER_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("computerLevel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INDATE, new org.apache.thrift.meta_data.FieldMetaData("indate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdpartyVeryEastPositionDO.class, metaDataMap);
  }

  public ThirdpartyVeryEastPositionDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdpartyVeryEastPositionDO(ThirdpartyVeryEastPositionDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.pid = other.pid;
    this.accommodation = other.accommodation;
    this.age_top = other.age_top;
    this.age_bottom = other.age_bottom;
    this.languageType1 = other.languageType1;
    this.languageLevel1 = other.languageLevel1;
    this.languageType2 = other.languageType2;
    this.languageLevel2 = other.languageLevel2;
    this.languageType3 = other.languageType3;
    this.languageLevel3 = other.languageLevel3;
    this.computerLevel = other.computerLevel;
    this.indate = other.indate;
    this.status = other.status;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
  }

  public ThirdpartyVeryEastPositionDO deepCopy() {
    return new ThirdpartyVeryEastPositionDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPidIsSet(false);
    this.pid = 0;
    setAccommodationIsSet(false);
    this.accommodation = 0;
    setAge_topIsSet(false);
    this.age_top = 0;
    setAge_bottomIsSet(false);
    this.age_bottom = 0;
    setLanguageType1IsSet(false);
    this.languageType1 = 0;
    setLanguageLevel1IsSet(false);
    this.languageLevel1 = 0;
    setLanguageType2IsSet(false);
    this.languageType2 = 0;
    setLanguageLevel2IsSet(false);
    this.languageLevel2 = 0;
    setLanguageType3IsSet(false);
    this.languageType3 = 0;
    setLanguageLevel3IsSet(false);
    this.languageLevel3 = 0;
    setComputerLevelIsSet(false);
    this.computerLevel = 0;
    setIndateIsSet(false);
    this.indate = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.createTime = null;
  }

  public int getId() {
    return this.id;
  }

  public ThirdpartyVeryEastPositionDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPid() {
    return this.pid;
  }

  public ThirdpartyVeryEastPositionDO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public int getAccommodation() {
    return this.accommodation;
  }

  public ThirdpartyVeryEastPositionDO setAccommodation(int accommodation) {
    this.accommodation = accommodation;
    setAccommodationIsSet(true);
    return this;
  }

  public void unsetAccommodation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOMMODATION_ISSET_ID);
  }

  /** Returns true if field accommodation is set (has been assigned a value) and false otherwise */
  public boolean isSetAccommodation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOMMODATION_ISSET_ID);
  }

  public void setAccommodationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOMMODATION_ISSET_ID, value);
  }

  public int getAge_top() {
    return this.age_top;
  }

  public ThirdpartyVeryEastPositionDO setAge_top(int age_top) {
    this.age_top = age_top;
    setAge_topIsSet(true);
    return this;
  }

  public void unsetAge_top() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_TOP_ISSET_ID);
  }

  /** Returns true if field age_top is set (has been assigned a value) and false otherwise */
  public boolean isSetAge_top() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_TOP_ISSET_ID);
  }

  public void setAge_topIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_TOP_ISSET_ID, value);
  }

  public int getAge_bottom() {
    return this.age_bottom;
  }

  public ThirdpartyVeryEastPositionDO setAge_bottom(int age_bottom) {
    this.age_bottom = age_bottom;
    setAge_bottomIsSet(true);
    return this;
  }

  public void unsetAge_bottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AGE_BOTTOM_ISSET_ID);
  }

  /** Returns true if field age_bottom is set (has been assigned a value) and false otherwise */
  public boolean isSetAge_bottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AGE_BOTTOM_ISSET_ID);
  }

  public void setAge_bottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AGE_BOTTOM_ISSET_ID, value);
  }

  public int getLanguageType1() {
    return this.languageType1;
  }

  public ThirdpartyVeryEastPositionDO setLanguageType1(int languageType1) {
    this.languageType1 = languageType1;
    setLanguageType1IsSet(true);
    return this;
  }

  public void unsetLanguageType1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGETYPE1_ISSET_ID);
  }

  /** Returns true if field languageType1 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageType1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGETYPE1_ISSET_ID);
  }

  public void setLanguageType1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGETYPE1_ISSET_ID, value);
  }

  public int getLanguageLevel1() {
    return this.languageLevel1;
  }

  public ThirdpartyVeryEastPositionDO setLanguageLevel1(int languageLevel1) {
    this.languageLevel1 = languageLevel1;
    setLanguageLevel1IsSet(true);
    return this;
  }

  public void unsetLanguageLevel1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGELEVEL1_ISSET_ID);
  }

  /** Returns true if field languageLevel1 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageLevel1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGELEVEL1_ISSET_ID);
  }

  public void setLanguageLevel1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGELEVEL1_ISSET_ID, value);
  }

  public int getLanguageType2() {
    return this.languageType2;
  }

  public ThirdpartyVeryEastPositionDO setLanguageType2(int languageType2) {
    this.languageType2 = languageType2;
    setLanguageType2IsSet(true);
    return this;
  }

  public void unsetLanguageType2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGETYPE2_ISSET_ID);
  }

  /** Returns true if field languageType2 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageType2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGETYPE2_ISSET_ID);
  }

  public void setLanguageType2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGETYPE2_ISSET_ID, value);
  }

  public int getLanguageLevel2() {
    return this.languageLevel2;
  }

  public ThirdpartyVeryEastPositionDO setLanguageLevel2(int languageLevel2) {
    this.languageLevel2 = languageLevel2;
    setLanguageLevel2IsSet(true);
    return this;
  }

  public void unsetLanguageLevel2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGELEVEL2_ISSET_ID);
  }

  /** Returns true if field languageLevel2 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageLevel2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGELEVEL2_ISSET_ID);
  }

  public void setLanguageLevel2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGELEVEL2_ISSET_ID, value);
  }

  public int getLanguageType3() {
    return this.languageType3;
  }

  public ThirdpartyVeryEastPositionDO setLanguageType3(int languageType3) {
    this.languageType3 = languageType3;
    setLanguageType3IsSet(true);
    return this;
  }

  public void unsetLanguageType3() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGETYPE3_ISSET_ID);
  }

  /** Returns true if field languageType3 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageType3() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGETYPE3_ISSET_ID);
  }

  public void setLanguageType3IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGETYPE3_ISSET_ID, value);
  }

  public int getLanguageLevel3() {
    return this.languageLevel3;
  }

  public ThirdpartyVeryEastPositionDO setLanguageLevel3(int languageLevel3) {
    this.languageLevel3 = languageLevel3;
    setLanguageLevel3IsSet(true);
    return this;
  }

  public void unsetLanguageLevel3() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LANGUAGELEVEL3_ISSET_ID);
  }

  /** Returns true if field languageLevel3 is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguageLevel3() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LANGUAGELEVEL3_ISSET_ID);
  }

  public void setLanguageLevel3IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LANGUAGELEVEL3_ISSET_ID, value);
  }

  public int getComputerLevel() {
    return this.computerLevel;
  }

  public ThirdpartyVeryEastPositionDO setComputerLevel(int computerLevel) {
    this.computerLevel = computerLevel;
    setComputerLevelIsSet(true);
    return this;
  }

  public void unsetComputerLevel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPUTERLEVEL_ISSET_ID);
  }

  /** Returns true if field computerLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetComputerLevel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPUTERLEVEL_ISSET_ID);
  }

  public void setComputerLevelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPUTERLEVEL_ISSET_ID, value);
  }

  public int getIndate() {
    return this.indate;
  }

  public ThirdpartyVeryEastPositionDO setIndate(int indate) {
    this.indate = indate;
    setIndateIsSet(true);
    return this;
  }

  public void unsetIndate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INDATE_ISSET_ID);
  }

  /** Returns true if field indate is set (has been assigned a value) and false otherwise */
  public boolean isSetIndate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INDATE_ISSET_ID);
  }

  public void setIndateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INDATE_ISSET_ID, value);
  }

  public byte getStatus() {
    return this.status;
  }

  public ThirdpartyVeryEastPositionDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public ThirdpartyVeryEastPositionDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case ACCOMMODATION:
      if (value == null) {
        unsetAccommodation();
      } else {
        setAccommodation((Integer)value);
      }
      break;

    case AGE_TOP:
      if (value == null) {
        unsetAge_top();
      } else {
        setAge_top((Integer)value);
      }
      break;

    case AGE_BOTTOM:
      if (value == null) {
        unsetAge_bottom();
      } else {
        setAge_bottom((Integer)value);
      }
      break;

    case LANGUAGE_TYPE1:
      if (value == null) {
        unsetLanguageType1();
      } else {
        setLanguageType1((Integer)value);
      }
      break;

    case LANGUAGE_LEVEL1:
      if (value == null) {
        unsetLanguageLevel1();
      } else {
        setLanguageLevel1((Integer)value);
      }
      break;

    case LANGUAGE_TYPE2:
      if (value == null) {
        unsetLanguageType2();
      } else {
        setLanguageType2((Integer)value);
      }
      break;

    case LANGUAGE_LEVEL2:
      if (value == null) {
        unsetLanguageLevel2();
      } else {
        setLanguageLevel2((Integer)value);
      }
      break;

    case LANGUAGE_TYPE3:
      if (value == null) {
        unsetLanguageType3();
      } else {
        setLanguageType3((Integer)value);
      }
      break;

    case LANGUAGE_LEVEL3:
      if (value == null) {
        unsetLanguageLevel3();
      } else {
        setLanguageLevel3((Integer)value);
      }
      break;

    case COMPUTER_LEVEL:
      if (value == null) {
        unsetComputerLevel();
      } else {
        setComputerLevel((Integer)value);
      }
      break;

    case INDATE:
      if (value == null) {
        unsetIndate();
      } else {
        setIndate((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Byte)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PID:
      return getPid();

    case ACCOMMODATION:
      return getAccommodation();

    case AGE_TOP:
      return getAge_top();

    case AGE_BOTTOM:
      return getAge_bottom();

    case LANGUAGE_TYPE1:
      return getLanguageType1();

    case LANGUAGE_LEVEL1:
      return getLanguageLevel1();

    case LANGUAGE_TYPE2:
      return getLanguageType2();

    case LANGUAGE_LEVEL2:
      return getLanguageLevel2();

    case LANGUAGE_TYPE3:
      return getLanguageType3();

    case LANGUAGE_LEVEL3:
      return getLanguageLevel3();

    case COMPUTER_LEVEL:
      return getComputerLevel();

    case INDATE:
      return getIndate();

    case STATUS:
      return getStatus();

    case CREATE_TIME:
      return getCreateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PID:
      return isSetPid();
    case ACCOMMODATION:
      return isSetAccommodation();
    case AGE_TOP:
      return isSetAge_top();
    case AGE_BOTTOM:
      return isSetAge_bottom();
    case LANGUAGE_TYPE1:
      return isSetLanguageType1();
    case LANGUAGE_LEVEL1:
      return isSetLanguageLevel1();
    case LANGUAGE_TYPE2:
      return isSetLanguageType2();
    case LANGUAGE_LEVEL2:
      return isSetLanguageLevel2();
    case LANGUAGE_TYPE3:
      return isSetLanguageType3();
    case LANGUAGE_LEVEL3:
      return isSetLanguageLevel3();
    case COMPUTER_LEVEL:
      return isSetComputerLevel();
    case INDATE:
      return isSetIndate();
    case STATUS:
      return isSetStatus();
    case CREATE_TIME:
      return isSetCreateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdpartyVeryEastPositionDO)
      return this.equals((ThirdpartyVeryEastPositionDO)that);
    return false;
  }

  public boolean equals(ThirdpartyVeryEastPositionDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_accommodation = true && this.isSetAccommodation();
    boolean that_present_accommodation = true && that.isSetAccommodation();
    if (this_present_accommodation || that_present_accommodation) {
      if (!(this_present_accommodation && that_present_accommodation))
        return false;
      if (this.accommodation != that.accommodation)
        return false;
    }

    boolean this_present_age_top = true && this.isSetAge_top();
    boolean that_present_age_top = true && that.isSetAge_top();
    if (this_present_age_top || that_present_age_top) {
      if (!(this_present_age_top && that_present_age_top))
        return false;
      if (this.age_top != that.age_top)
        return false;
    }

    boolean this_present_age_bottom = true && this.isSetAge_bottom();
    boolean that_present_age_bottom = true && that.isSetAge_bottom();
    if (this_present_age_bottom || that_present_age_bottom) {
      if (!(this_present_age_bottom && that_present_age_bottom))
        return false;
      if (this.age_bottom != that.age_bottom)
        return false;
    }

    boolean this_present_languageType1 = true && this.isSetLanguageType1();
    boolean that_present_languageType1 = true && that.isSetLanguageType1();
    if (this_present_languageType1 || that_present_languageType1) {
      if (!(this_present_languageType1 && that_present_languageType1))
        return false;
      if (this.languageType1 != that.languageType1)
        return false;
    }

    boolean this_present_languageLevel1 = true && this.isSetLanguageLevel1();
    boolean that_present_languageLevel1 = true && that.isSetLanguageLevel1();
    if (this_present_languageLevel1 || that_present_languageLevel1) {
      if (!(this_present_languageLevel1 && that_present_languageLevel1))
        return false;
      if (this.languageLevel1 != that.languageLevel1)
        return false;
    }

    boolean this_present_languageType2 = true && this.isSetLanguageType2();
    boolean that_present_languageType2 = true && that.isSetLanguageType2();
    if (this_present_languageType2 || that_present_languageType2) {
      if (!(this_present_languageType2 && that_present_languageType2))
        return false;
      if (this.languageType2 != that.languageType2)
        return false;
    }

    boolean this_present_languageLevel2 = true && this.isSetLanguageLevel2();
    boolean that_present_languageLevel2 = true && that.isSetLanguageLevel2();
    if (this_present_languageLevel2 || that_present_languageLevel2) {
      if (!(this_present_languageLevel2 && that_present_languageLevel2))
        return false;
      if (this.languageLevel2 != that.languageLevel2)
        return false;
    }

    boolean this_present_languageType3 = true && this.isSetLanguageType3();
    boolean that_present_languageType3 = true && that.isSetLanguageType3();
    if (this_present_languageType3 || that_present_languageType3) {
      if (!(this_present_languageType3 && that_present_languageType3))
        return false;
      if (this.languageType3 != that.languageType3)
        return false;
    }

    boolean this_present_languageLevel3 = true && this.isSetLanguageLevel3();
    boolean that_present_languageLevel3 = true && that.isSetLanguageLevel3();
    if (this_present_languageLevel3 || that_present_languageLevel3) {
      if (!(this_present_languageLevel3 && that_present_languageLevel3))
        return false;
      if (this.languageLevel3 != that.languageLevel3)
        return false;
    }

    boolean this_present_computerLevel = true && this.isSetComputerLevel();
    boolean that_present_computerLevel = true && that.isSetComputerLevel();
    if (this_present_computerLevel || that_present_computerLevel) {
      if (!(this_present_computerLevel && that_present_computerLevel))
        return false;
      if (this.computerLevel != that.computerLevel)
        return false;
    }

    boolean this_present_indate = true && this.isSetIndate();
    boolean that_present_indate = true && that.isSetIndate();
    if (this_present_indate || that_present_indate) {
      if (!(this_present_indate && that_present_indate))
        return false;
      if (this.indate != that.indate)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPid()) ? 131071 : 524287);
    if (isSetPid())
      hashCode = hashCode * 8191 + pid;

    hashCode = hashCode * 8191 + ((isSetAccommodation()) ? 131071 : 524287);
    if (isSetAccommodation())
      hashCode = hashCode * 8191 + accommodation;

    hashCode = hashCode * 8191 + ((isSetAge_top()) ? 131071 : 524287);
    if (isSetAge_top())
      hashCode = hashCode * 8191 + age_top;

    hashCode = hashCode * 8191 + ((isSetAge_bottom()) ? 131071 : 524287);
    if (isSetAge_bottom())
      hashCode = hashCode * 8191 + age_bottom;

    hashCode = hashCode * 8191 + ((isSetLanguageType1()) ? 131071 : 524287);
    if (isSetLanguageType1())
      hashCode = hashCode * 8191 + languageType1;

    hashCode = hashCode * 8191 + ((isSetLanguageLevel1()) ? 131071 : 524287);
    if (isSetLanguageLevel1())
      hashCode = hashCode * 8191 + languageLevel1;

    hashCode = hashCode * 8191 + ((isSetLanguageType2()) ? 131071 : 524287);
    if (isSetLanguageType2())
      hashCode = hashCode * 8191 + languageType2;

    hashCode = hashCode * 8191 + ((isSetLanguageLevel2()) ? 131071 : 524287);
    if (isSetLanguageLevel2())
      hashCode = hashCode * 8191 + languageLevel2;

    hashCode = hashCode * 8191 + ((isSetLanguageType3()) ? 131071 : 524287);
    if (isSetLanguageType3())
      hashCode = hashCode * 8191 + languageType3;

    hashCode = hashCode * 8191 + ((isSetLanguageLevel3()) ? 131071 : 524287);
    if (isSetLanguageLevel3())
      hashCode = hashCode * 8191 + languageLevel3;

    hashCode = hashCode * 8191 + ((isSetComputerLevel()) ? 131071 : 524287);
    if (isSetComputerLevel())
      hashCode = hashCode * 8191 + computerLevel;

    hashCode = hashCode * 8191 + ((isSetIndate()) ? 131071 : 524287);
    if (isSetIndate())
      hashCode = hashCode * 8191 + indate;

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ThirdpartyVeryEastPositionDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccommodation()).compareTo(other.isSetAccommodation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccommodation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accommodation, other.accommodation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAge_top()).compareTo(other.isSetAge_top());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge_top()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age_top, other.age_top);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAge_bottom()).compareTo(other.isSetAge_bottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAge_bottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.age_bottom, other.age_bottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageType1()).compareTo(other.isSetLanguageType1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageType1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageType1, other.languageType1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageLevel1()).compareTo(other.isSetLanguageLevel1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageLevel1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageLevel1, other.languageLevel1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageType2()).compareTo(other.isSetLanguageType2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageType2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageType2, other.languageType2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageLevel2()).compareTo(other.isSetLanguageLevel2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageLevel2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageLevel2, other.languageLevel2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageType3()).compareTo(other.isSetLanguageType3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageType3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageType3, other.languageType3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLanguageLevel3()).compareTo(other.isSetLanguageLevel3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguageLevel3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.languageLevel3, other.languageLevel3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComputerLevel()).compareTo(other.isSetComputerLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComputerLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.computerLevel, other.computerLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIndate()).compareTo(other.isSetIndate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIndate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.indate, other.indate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdpartyVeryEastPositionDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPid()) {
      if (!first) sb.append(", ");
      sb.append("pid:");
      sb.append(this.pid);
      first = false;
    }
    if (isSetAccommodation()) {
      if (!first) sb.append(", ");
      sb.append("accommodation:");
      sb.append(this.accommodation);
      first = false;
    }
    if (isSetAge_top()) {
      if (!first) sb.append(", ");
      sb.append("age_top:");
      sb.append(this.age_top);
      first = false;
    }
    if (isSetAge_bottom()) {
      if (!first) sb.append(", ");
      sb.append("age_bottom:");
      sb.append(this.age_bottom);
      first = false;
    }
    if (isSetLanguageType1()) {
      if (!first) sb.append(", ");
      sb.append("languageType1:");
      sb.append(this.languageType1);
      first = false;
    }
    if (isSetLanguageLevel1()) {
      if (!first) sb.append(", ");
      sb.append("languageLevel1:");
      sb.append(this.languageLevel1);
      first = false;
    }
    if (isSetLanguageType2()) {
      if (!first) sb.append(", ");
      sb.append("languageType2:");
      sb.append(this.languageType2);
      first = false;
    }
    if (isSetLanguageLevel2()) {
      if (!first) sb.append(", ");
      sb.append("languageLevel2:");
      sb.append(this.languageLevel2);
      first = false;
    }
    if (isSetLanguageType3()) {
      if (!first) sb.append(", ");
      sb.append("languageType3:");
      sb.append(this.languageType3);
      first = false;
    }
    if (isSetLanguageLevel3()) {
      if (!first) sb.append(", ");
      sb.append("languageLevel3:");
      sb.append(this.languageLevel3);
      first = false;
    }
    if (isSetComputerLevel()) {
      if (!first) sb.append(", ");
      sb.append("computerLevel:");
      sb.append(this.computerLevel);
      first = false;
    }
    if (isSetIndate()) {
      if (!first) sb.append(", ");
      sb.append("indate:");
      sb.append(this.indate);
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdpartyVeryEastPositionDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyVeryEastPositionDOStandardScheme getScheme() {
      return new ThirdpartyVeryEastPositionDOStandardScheme();
    }
  }

  private static class ThirdpartyVeryEastPositionDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdpartyVeryEastPositionDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdpartyVeryEastPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOMMODATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accommodation = iprot.readI32();
              struct.setAccommodationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AGE_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.age_top = iprot.readI32();
              struct.setAge_topIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AGE_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.age_bottom = iprot.readI32();
              struct.setAge_bottomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LANGUAGE_TYPE1
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageType1 = iprot.readI32();
              struct.setLanguageType1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LANGUAGE_LEVEL1
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageLevel1 = iprot.readI32();
              struct.setLanguageLevel1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LANGUAGE_TYPE2
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageType2 = iprot.readI32();
              struct.setLanguageType2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LANGUAGE_LEVEL2
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageLevel2 = iprot.readI32();
              struct.setLanguageLevel2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LANGUAGE_TYPE3
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageType3 = iprot.readI32();
              struct.setLanguageType3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LANGUAGE_LEVEL3
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.languageLevel3 = iprot.readI32();
              struct.setLanguageLevel3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // COMPUTER_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.computerLevel = iprot.readI32();
              struct.setComputerLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // INDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.indate = iprot.readI32();
              struct.setIndateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdpartyVeryEastPositionDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPid()) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeI32(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAccommodation()) {
        oprot.writeFieldBegin(ACCOMMODATION_FIELD_DESC);
        oprot.writeI32(struct.accommodation);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAge_top()) {
        oprot.writeFieldBegin(AGE_TOP_FIELD_DESC);
        oprot.writeI32(struct.age_top);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAge_bottom()) {
        oprot.writeFieldBegin(AGE_BOTTOM_FIELD_DESC);
        oprot.writeI32(struct.age_bottom);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageType1()) {
        oprot.writeFieldBegin(LANGUAGE_TYPE1_FIELD_DESC);
        oprot.writeI32(struct.languageType1);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageLevel1()) {
        oprot.writeFieldBegin(LANGUAGE_LEVEL1_FIELD_DESC);
        oprot.writeI32(struct.languageLevel1);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageType2()) {
        oprot.writeFieldBegin(LANGUAGE_TYPE2_FIELD_DESC);
        oprot.writeI32(struct.languageType2);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageLevel2()) {
        oprot.writeFieldBegin(LANGUAGE_LEVEL2_FIELD_DESC);
        oprot.writeI32(struct.languageLevel2);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageType3()) {
        oprot.writeFieldBegin(LANGUAGE_TYPE3_FIELD_DESC);
        oprot.writeI32(struct.languageType3);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLanguageLevel3()) {
        oprot.writeFieldBegin(LANGUAGE_LEVEL3_FIELD_DESC);
        oprot.writeI32(struct.languageLevel3);
        oprot.writeFieldEnd();
      }
      if (struct.isSetComputerLevel()) {
        oprot.writeFieldBegin(COMPUTER_LEVEL_FIELD_DESC);
        oprot.writeI32(struct.computerLevel);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIndate()) {
        oprot.writeFieldBegin(INDATE_FIELD_DESC);
        oprot.writeI32(struct.indate);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdpartyVeryEastPositionDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyVeryEastPositionDOTupleScheme getScheme() {
      return new ThirdpartyVeryEastPositionDOTupleScheme();
    }
  }

  private static class ThirdpartyVeryEastPositionDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdpartyVeryEastPositionDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdpartyVeryEastPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPid()) {
        optionals.set(1);
      }
      if (struct.isSetAccommodation()) {
        optionals.set(2);
      }
      if (struct.isSetAge_top()) {
        optionals.set(3);
      }
      if (struct.isSetAge_bottom()) {
        optionals.set(4);
      }
      if (struct.isSetLanguageType1()) {
        optionals.set(5);
      }
      if (struct.isSetLanguageLevel1()) {
        optionals.set(6);
      }
      if (struct.isSetLanguageType2()) {
        optionals.set(7);
      }
      if (struct.isSetLanguageLevel2()) {
        optionals.set(8);
      }
      if (struct.isSetLanguageType3()) {
        optionals.set(9);
      }
      if (struct.isSetLanguageLevel3()) {
        optionals.set(10);
      }
      if (struct.isSetComputerLevel()) {
        optionals.set(11);
      }
      if (struct.isSetIndate()) {
        optionals.set(12);
      }
      if (struct.isSetStatus()) {
        optionals.set(13);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetAccommodation()) {
        oprot.writeI32(struct.accommodation);
      }
      if (struct.isSetAge_top()) {
        oprot.writeI32(struct.age_top);
      }
      if (struct.isSetAge_bottom()) {
        oprot.writeI32(struct.age_bottom);
      }
      if (struct.isSetLanguageType1()) {
        oprot.writeI32(struct.languageType1);
      }
      if (struct.isSetLanguageLevel1()) {
        oprot.writeI32(struct.languageLevel1);
      }
      if (struct.isSetLanguageType2()) {
        oprot.writeI32(struct.languageType2);
      }
      if (struct.isSetLanguageLevel2()) {
        oprot.writeI32(struct.languageLevel2);
      }
      if (struct.isSetLanguageType3()) {
        oprot.writeI32(struct.languageType3);
      }
      if (struct.isSetLanguageLevel3()) {
        oprot.writeI32(struct.languageLevel3);
      }
      if (struct.isSetComputerLevel()) {
        oprot.writeI32(struct.computerLevel);
      }
      if (struct.isSetIndate()) {
        oprot.writeI32(struct.indate);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdpartyVeryEastPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accommodation = iprot.readI32();
        struct.setAccommodationIsSet(true);
      }
      if (incoming.get(3)) {
        struct.age_top = iprot.readI32();
        struct.setAge_topIsSet(true);
      }
      if (incoming.get(4)) {
        struct.age_bottom = iprot.readI32();
        struct.setAge_bottomIsSet(true);
      }
      if (incoming.get(5)) {
        struct.languageType1 = iprot.readI32();
        struct.setLanguageType1IsSet(true);
      }
      if (incoming.get(6)) {
        struct.languageLevel1 = iprot.readI32();
        struct.setLanguageLevel1IsSet(true);
      }
      if (incoming.get(7)) {
        struct.languageType2 = iprot.readI32();
        struct.setLanguageType2IsSet(true);
      }
      if (incoming.get(8)) {
        struct.languageLevel2 = iprot.readI32();
        struct.setLanguageLevel2IsSet(true);
      }
      if (incoming.get(9)) {
        struct.languageType3 = iprot.readI32();
        struct.setLanguageType3IsSet(true);
      }
      if (incoming.get(10)) {
        struct.languageLevel3 = iprot.readI32();
        struct.setLanguageLevel3IsSet(true);
      }
      if (incoming.get(11)) {
        struct.computerLevel = iprot.readI32();
        struct.setComputerLevelIsSet(true);
      }
      if (incoming.get(12)) {
        struct.indate = iprot.readI32();
        struct.setIndateIsSet(true);
      }
      if (incoming.get(13)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(14)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

