/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-04")
public class HrEmployeeCertConfDO implements org.apache.thrift.TBase<HrEmployeeCertConfDO, HrEmployeeCertConfDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrEmployeeCertConfDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrEmployeeCertConfDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField IS_STRICT_FIELD_DESC = new org.apache.thrift.protocol.TField("isStrict", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField EMAIL_SUFFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("emailSuffix", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField BD_ADD_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("bdAddGroup", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField BD_USE_GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bdUseGroupId", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField AUTH_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("authMode", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField AUTH_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("authCode", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField QUESTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("questions", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CUSTOM_HINT_FIELD_DESC = new org.apache.thrift.protocol.TField("customHint", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrEmployeeCertConfDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrEmployeeCertConfDOTupleSchemeFactory();

  public int id; // optional
  public int companyId; // optional
  public double isStrict; // optional
  public String emailSuffix; // optional
  public String createTime; // optional
  public String updateTime; // optional
  public double disable; // optional
  public double bdAddGroup; // optional
  public double bdUseGroupId; // optional
  public double authMode; // optional
  public String authCode; // optional
  public String custom; // optional
  public String questions; // optional
  public String customHint; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "companyId"),
    IS_STRICT((short)3, "isStrict"),
    EMAIL_SUFFIX((short)4, "emailSuffix"),
    CREATE_TIME((short)5, "createTime"),
    UPDATE_TIME((short)6, "updateTime"),
    DISABLE((short)7, "disable"),
    BD_ADD_GROUP((short)8, "bdAddGroup"),
    BD_USE_GROUP_ID((short)9, "bdUseGroupId"),
    AUTH_MODE((short)10, "authMode"),
    AUTH_CODE((short)11, "authCode"),
    CUSTOM((short)12, "custom"),
    QUESTIONS((short)13, "questions"),
    CUSTOM_HINT((short)14, "customHint");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // IS_STRICT
          return IS_STRICT;
        case 4: // EMAIL_SUFFIX
          return EMAIL_SUFFIX;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // UPDATE_TIME
          return UPDATE_TIME;
        case 7: // DISABLE
          return DISABLE;
        case 8: // BD_ADD_GROUP
          return BD_ADD_GROUP;
        case 9: // BD_USE_GROUP_ID
          return BD_USE_GROUP_ID;
        case 10: // AUTH_MODE
          return AUTH_MODE;
        case 11: // AUTH_CODE
          return AUTH_CODE;
        case 12: // CUSTOM
          return CUSTOM;
        case 13: // QUESTIONS
          return QUESTIONS;
        case 14: // CUSTOM_HINT
          return CUSTOM_HINT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __ISSTRICT_ISSET_ID = 2;
  private static final int __DISABLE_ISSET_ID = 3;
  private static final int __BDADDGROUP_ISSET_ID = 4;
  private static final int __BDUSEGROUPID_ISSET_ID = 5;
  private static final int __AUTHMODE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.IS_STRICT,_Fields.EMAIL_SUFFIX,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.DISABLE,_Fields.BD_ADD_GROUP,_Fields.BD_USE_GROUP_ID,_Fields.AUTH_MODE,_Fields.AUTH_CODE,_Fields.CUSTOM,_Fields.QUESTIONS,_Fields.CUSTOM_HINT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_STRICT, new org.apache.thrift.meta_data.FieldMetaData("isStrict", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EMAIL_SUFFIX, new org.apache.thrift.meta_data.FieldMetaData("emailSuffix", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BD_ADD_GROUP, new org.apache.thrift.meta_data.FieldMetaData("bdAddGroup", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BD_USE_GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("bdUseGroupId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.AUTH_MODE, new org.apache.thrift.meta_data.FieldMetaData("authMode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.AUTH_CODE, new org.apache.thrift.meta_data.FieldMetaData("authCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUESTIONS, new org.apache.thrift.meta_data.FieldMetaData("questions", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM_HINT, new org.apache.thrift.meta_data.FieldMetaData("customHint", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrEmployeeCertConfDO.class, metaDataMap);
  }

  public HrEmployeeCertConfDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrEmployeeCertConfDO(HrEmployeeCertConfDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.companyId = other.companyId;
    this.isStrict = other.isStrict;
    if (other.isSetEmailSuffix()) {
      this.emailSuffix = other.emailSuffix;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    this.disable = other.disable;
    this.bdAddGroup = other.bdAddGroup;
    this.bdUseGroupId = other.bdUseGroupId;
    this.authMode = other.authMode;
    if (other.isSetAuthCode()) {
      this.authCode = other.authCode;
    }
    if (other.isSetCustom()) {
      this.custom = other.custom;
    }
    if (other.isSetQuestions()) {
      this.questions = other.questions;
    }
    if (other.isSetCustomHint()) {
      this.customHint = other.customHint;
    }
  }

  public HrEmployeeCertConfDO deepCopy() {
    return new HrEmployeeCertConfDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setIsStrictIsSet(false);
    this.isStrict = 0.0;
    this.emailSuffix = null;
    this.createTime = null;
    this.updateTime = null;
    setDisableIsSet(false);
    this.disable = 0.0;
    setBdAddGroupIsSet(false);
    this.bdAddGroup = 0.0;
    setBdUseGroupIdIsSet(false);
    this.bdUseGroupId = 0.0;
    setAuthModeIsSet(false);
    this.authMode = 0.0;
    this.authCode = null;
    this.custom = null;
    this.questions = null;
    this.customHint = null;
  }

  public int getId() {
    return this.id;
  }

  public HrEmployeeCertConfDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public HrEmployeeCertConfDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public double getIsStrict() {
    return this.isStrict;
  }

  public HrEmployeeCertConfDO setIsStrict(double isStrict) {
    this.isStrict = isStrict;
    setIsStrictIsSet(true);
    return this;
  }

  public void unsetIsStrict() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISSTRICT_ISSET_ID);
  }

  /** Returns true if field isStrict is set (has been assigned a value) and false otherwise */
  public boolean isSetIsStrict() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISSTRICT_ISSET_ID);
  }

  public void setIsStrictIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISSTRICT_ISSET_ID, value);
  }

  public String getEmailSuffix() {
    return this.emailSuffix;
  }

  public HrEmployeeCertConfDO setEmailSuffix(String emailSuffix) {
    this.emailSuffix = emailSuffix;
    return this;
  }

  public void unsetEmailSuffix() {
    this.emailSuffix = null;
  }

  /** Returns true if field emailSuffix is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailSuffix() {
    return this.emailSuffix != null;
  }

  public void setEmailSuffixIsSet(boolean value) {
    if (!value) {
      this.emailSuffix = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public HrEmployeeCertConfDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public HrEmployeeCertConfDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public double getDisable() {
    return this.disable;
  }

  public HrEmployeeCertConfDO setDisable(double disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public double getBdAddGroup() {
    return this.bdAddGroup;
  }

  public HrEmployeeCertConfDO setBdAddGroup(double bdAddGroup) {
    this.bdAddGroup = bdAddGroup;
    setBdAddGroupIsSet(true);
    return this;
  }

  public void unsetBdAddGroup() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BDADDGROUP_ISSET_ID);
  }

  /** Returns true if field bdAddGroup is set (has been assigned a value) and false otherwise */
  public boolean isSetBdAddGroup() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BDADDGROUP_ISSET_ID);
  }

  public void setBdAddGroupIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BDADDGROUP_ISSET_ID, value);
  }

  public double getBdUseGroupId() {
    return this.bdUseGroupId;
  }

  public HrEmployeeCertConfDO setBdUseGroupId(double bdUseGroupId) {
    this.bdUseGroupId = bdUseGroupId;
    setBdUseGroupIdIsSet(true);
    return this;
  }

  public void unsetBdUseGroupId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BDUSEGROUPID_ISSET_ID);
  }

  /** Returns true if field bdUseGroupId is set (has been assigned a value) and false otherwise */
  public boolean isSetBdUseGroupId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BDUSEGROUPID_ISSET_ID);
  }

  public void setBdUseGroupIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BDUSEGROUPID_ISSET_ID, value);
  }

  public double getAuthMode() {
    return this.authMode;
  }

  public HrEmployeeCertConfDO setAuthMode(double authMode) {
    this.authMode = authMode;
    setAuthModeIsSet(true);
    return this;
  }

  public void unsetAuthMode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTHMODE_ISSET_ID);
  }

  /** Returns true if field authMode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthMode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTHMODE_ISSET_ID);
  }

  public void setAuthModeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTHMODE_ISSET_ID, value);
  }

  public String getAuthCode() {
    return this.authCode;
  }

  public HrEmployeeCertConfDO setAuthCode(String authCode) {
    this.authCode = authCode;
    return this;
  }

  public void unsetAuthCode() {
    this.authCode = null;
  }

  /** Returns true if field authCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthCode() {
    return this.authCode != null;
  }

  public void setAuthCodeIsSet(boolean value) {
    if (!value) {
      this.authCode = null;
    }
  }

  public String getCustom() {
    return this.custom;
  }

  public HrEmployeeCertConfDO setCustom(String custom) {
    this.custom = custom;
    return this;
  }

  public void unsetCustom() {
    this.custom = null;
  }

  /** Returns true if field custom is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom() {
    return this.custom != null;
  }

  public void setCustomIsSet(boolean value) {
    if (!value) {
      this.custom = null;
    }
  }

  public String getQuestions() {
    return this.questions;
  }

  public HrEmployeeCertConfDO setQuestions(String questions) {
    this.questions = questions;
    return this;
  }

  public void unsetQuestions() {
    this.questions = null;
  }

  /** Returns true if field questions is set (has been assigned a value) and false otherwise */
  public boolean isSetQuestions() {
    return this.questions != null;
  }

  public void setQuestionsIsSet(boolean value) {
    if (!value) {
      this.questions = null;
    }
  }

  public String getCustomHint() {
    return this.customHint;
  }

  public HrEmployeeCertConfDO setCustomHint(String customHint) {
    this.customHint = customHint;
    return this;
  }

  public void unsetCustomHint() {
    this.customHint = null;
  }

  /** Returns true if field customHint is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomHint() {
    return this.customHint != null;
  }

  public void setCustomHintIsSet(boolean value) {
    if (!value) {
      this.customHint = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case IS_STRICT:
      if (value == null) {
        unsetIsStrict();
      } else {
        setIsStrict((Double)value);
      }
      break;

    case EMAIL_SUFFIX:
      if (value == null) {
        unsetEmailSuffix();
      } else {
        setEmailSuffix((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((Double)value);
      }
      break;

    case BD_ADD_GROUP:
      if (value == null) {
        unsetBdAddGroup();
      } else {
        setBdAddGroup((Double)value);
      }
      break;

    case BD_USE_GROUP_ID:
      if (value == null) {
        unsetBdUseGroupId();
      } else {
        setBdUseGroupId((Double)value);
      }
      break;

    case AUTH_MODE:
      if (value == null) {
        unsetAuthMode();
      } else {
        setAuthMode((Double)value);
      }
      break;

    case AUTH_CODE:
      if (value == null) {
        unsetAuthCode();
      } else {
        setAuthCode((String)value);
      }
      break;

    case CUSTOM:
      if (value == null) {
        unsetCustom();
      } else {
        setCustom((String)value);
      }
      break;

    case QUESTIONS:
      if (value == null) {
        unsetQuestions();
      } else {
        setQuestions((String)value);
      }
      break;

    case CUSTOM_HINT:
      if (value == null) {
        unsetCustomHint();
      } else {
        setCustomHint((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompanyId();

    case IS_STRICT:
      return getIsStrict();

    case EMAIL_SUFFIX:
      return getEmailSuffix();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case DISABLE:
      return getDisable();

    case BD_ADD_GROUP:
      return getBdAddGroup();

    case BD_USE_GROUP_ID:
      return getBdUseGroupId();

    case AUTH_MODE:
      return getAuthMode();

    case AUTH_CODE:
      return getAuthCode();

    case CUSTOM:
      return getCustom();

    case QUESTIONS:
      return getQuestions();

    case CUSTOM_HINT:
      return getCustomHint();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompanyId();
    case IS_STRICT:
      return isSetIsStrict();
    case EMAIL_SUFFIX:
      return isSetEmailSuffix();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case DISABLE:
      return isSetDisable();
    case BD_ADD_GROUP:
      return isSetBdAddGroup();
    case BD_USE_GROUP_ID:
      return isSetBdUseGroupId();
    case AUTH_MODE:
      return isSetAuthMode();
    case AUTH_CODE:
      return isSetAuthCode();
    case CUSTOM:
      return isSetCustom();
    case QUESTIONS:
      return isSetQuestions();
    case CUSTOM_HINT:
      return isSetCustomHint();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof HrEmployeeCertConfDO)
      return this.equals((HrEmployeeCertConfDO)that);
    return false;
  }

  public boolean equals(HrEmployeeCertConfDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_isStrict = true && this.isSetIsStrict();
    boolean that_present_isStrict = true && that.isSetIsStrict();
    if (this_present_isStrict || that_present_isStrict) {
      if (!(this_present_isStrict && that_present_isStrict))
        return false;
      if (this.isStrict != that.isStrict)
        return false;
    }

    boolean this_present_emailSuffix = true && this.isSetEmailSuffix();
    boolean that_present_emailSuffix = true && that.isSetEmailSuffix();
    if (this_present_emailSuffix || that_present_emailSuffix) {
      if (!(this_present_emailSuffix && that_present_emailSuffix))
        return false;
      if (!this.emailSuffix.equals(that.emailSuffix))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_bdAddGroup = true && this.isSetBdAddGroup();
    boolean that_present_bdAddGroup = true && that.isSetBdAddGroup();
    if (this_present_bdAddGroup || that_present_bdAddGroup) {
      if (!(this_present_bdAddGroup && that_present_bdAddGroup))
        return false;
      if (this.bdAddGroup != that.bdAddGroup)
        return false;
    }

    boolean this_present_bdUseGroupId = true && this.isSetBdUseGroupId();
    boolean that_present_bdUseGroupId = true && that.isSetBdUseGroupId();
    if (this_present_bdUseGroupId || that_present_bdUseGroupId) {
      if (!(this_present_bdUseGroupId && that_present_bdUseGroupId))
        return false;
      if (this.bdUseGroupId != that.bdUseGroupId)
        return false;
    }

    boolean this_present_authMode = true && this.isSetAuthMode();
    boolean that_present_authMode = true && that.isSetAuthMode();
    if (this_present_authMode || that_present_authMode) {
      if (!(this_present_authMode && that_present_authMode))
        return false;
      if (this.authMode != that.authMode)
        return false;
    }

    boolean this_present_authCode = true && this.isSetAuthCode();
    boolean that_present_authCode = true && that.isSetAuthCode();
    if (this_present_authCode || that_present_authCode) {
      if (!(this_present_authCode && that_present_authCode))
        return false;
      if (!this.authCode.equals(that.authCode))
        return false;
    }

    boolean this_present_custom = true && this.isSetCustom();
    boolean that_present_custom = true && that.isSetCustom();
    if (this_present_custom || that_present_custom) {
      if (!(this_present_custom && that_present_custom))
        return false;
      if (!this.custom.equals(that.custom))
        return false;
    }

    boolean this_present_questions = true && this.isSetQuestions();
    boolean that_present_questions = true && that.isSetQuestions();
    if (this_present_questions || that_present_questions) {
      if (!(this_present_questions && that_present_questions))
        return false;
      if (!this.questions.equals(that.questions))
        return false;
    }

    boolean this_present_customHint = true && this.isSetCustomHint();
    boolean that_present_customHint = true && that.isSetCustomHint();
    if (this_present_customHint || that_present_customHint) {
      if (!(this_present_customHint && that_present_customHint))
        return false;
      if (!this.customHint.equals(that.customHint))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetIsStrict()) ? 131071 : 524287);
    if (isSetIsStrict())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(isStrict);

    hashCode = hashCode * 8191 + ((isSetEmailSuffix()) ? 131071 : 524287);
    if (isSetEmailSuffix())
      hashCode = hashCode * 8191 + emailSuffix.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(disable);

    hashCode = hashCode * 8191 + ((isSetBdAddGroup()) ? 131071 : 524287);
    if (isSetBdAddGroup())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(bdAddGroup);

    hashCode = hashCode * 8191 + ((isSetBdUseGroupId()) ? 131071 : 524287);
    if (isSetBdUseGroupId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(bdUseGroupId);

    hashCode = hashCode * 8191 + ((isSetAuthMode()) ? 131071 : 524287);
    if (isSetAuthMode())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(authMode);

    hashCode = hashCode * 8191 + ((isSetAuthCode()) ? 131071 : 524287);
    if (isSetAuthCode())
      hashCode = hashCode * 8191 + authCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
    if (isSetCustom())
      hashCode = hashCode * 8191 + custom.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuestions()) ? 131071 : 524287);
    if (isSetQuestions())
      hashCode = hashCode * 8191 + questions.hashCode();

    hashCode = hashCode * 8191 + ((isSetCustomHint()) ? 131071 : 524287);
    if (isSetCustomHint())
      hashCode = hashCode * 8191 + customHint.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrEmployeeCertConfDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsStrict()).compareTo(other.isSetIsStrict());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsStrict()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isStrict, other.isStrict);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailSuffix()).compareTo(other.isSetEmailSuffix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailSuffix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailSuffix, other.emailSuffix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBdAddGroup()).compareTo(other.isSetBdAddGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBdAddGroup()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bdAddGroup, other.bdAddGroup);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBdUseGroupId()).compareTo(other.isSetBdUseGroupId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBdUseGroupId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bdUseGroupId, other.bdUseGroupId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthMode()).compareTo(other.isSetAuthMode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthMode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authMode, other.authMode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthCode()).compareTo(other.isSetAuthCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authCode, other.authCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuestions()).compareTo(other.isSetQuestions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuestions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.questions, other.questions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomHint()).compareTo(other.isSetCustomHint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomHint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customHint, other.customHint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("HrEmployeeCertConfDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetIsStrict()) {
      if (!first) sb.append(", ");
      sb.append("isStrict:");
      sb.append(this.isStrict);
      first = false;
    }
    if (isSetEmailSuffix()) {
      if (!first) sb.append(", ");
      sb.append("emailSuffix:");
      if (this.emailSuffix == null) {
        sb.append("null");
      } else {
        sb.append(this.emailSuffix);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetBdAddGroup()) {
      if (!first) sb.append(", ");
      sb.append("bdAddGroup:");
      sb.append(this.bdAddGroup);
      first = false;
    }
    if (isSetBdUseGroupId()) {
      if (!first) sb.append(", ");
      sb.append("bdUseGroupId:");
      sb.append(this.bdUseGroupId);
      first = false;
    }
    if (isSetAuthMode()) {
      if (!first) sb.append(", ");
      sb.append("authMode:");
      sb.append(this.authMode);
      first = false;
    }
    if (isSetAuthCode()) {
      if (!first) sb.append(", ");
      sb.append("authCode:");
      if (this.authCode == null) {
        sb.append("null");
      } else {
        sb.append(this.authCode);
      }
      first = false;
    }
    if (isSetCustom()) {
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
    }
    if (isSetQuestions()) {
      if (!first) sb.append(", ");
      sb.append("questions:");
      if (this.questions == null) {
        sb.append("null");
      } else {
        sb.append(this.questions);
      }
      first = false;
    }
    if (isSetCustomHint()) {
      if (!first) sb.append(", ");
      sb.append("customHint:");
      if (this.customHint == null) {
        sb.append("null");
      } else {
        sb.append(this.customHint);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrEmployeeCertConfDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrEmployeeCertConfDOStandardScheme getScheme() {
      return new HrEmployeeCertConfDOStandardScheme();
    }
  }

  private static class HrEmployeeCertConfDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrEmployeeCertConfDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_STRICT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.isStrict = iprot.readDouble();
              struct.setIsStrictIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EMAIL_SUFFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailSuffix = iprot.readString();
              struct.setEmailSuffixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.disable = iprot.readDouble();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BD_ADD_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bdAddGroup = iprot.readDouble();
              struct.setBdAddGroupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BD_USE_GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bdUseGroupId = iprot.readDouble();
              struct.setBdUseGroupIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AUTH_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.authMode = iprot.readDouble();
              struct.setAuthModeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AUTH_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.authCode = iprot.readString();
              struct.setAuthCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CUSTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom = iprot.readString();
              struct.setCustomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // QUESTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.questions = iprot.readString();
              struct.setQuestionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CUSTOM_HINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.customHint = iprot.readString();
              struct.setCustomHintIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIsStrict()) {
        oprot.writeFieldBegin(IS_STRICT_FIELD_DESC);
        oprot.writeDouble(struct.isStrict);
        oprot.writeFieldEnd();
      }
      if (struct.emailSuffix != null) {
        if (struct.isSetEmailSuffix()) {
          oprot.writeFieldBegin(EMAIL_SUFFIX_FIELD_DESC);
          oprot.writeString(struct.emailSuffix);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeDouble(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBdAddGroup()) {
        oprot.writeFieldBegin(BD_ADD_GROUP_FIELD_DESC);
        oprot.writeDouble(struct.bdAddGroup);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBdUseGroupId()) {
        oprot.writeFieldBegin(BD_USE_GROUP_ID_FIELD_DESC);
        oprot.writeDouble(struct.bdUseGroupId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAuthMode()) {
        oprot.writeFieldBegin(AUTH_MODE_FIELD_DESC);
        oprot.writeDouble(struct.authMode);
        oprot.writeFieldEnd();
      }
      if (struct.authCode != null) {
        if (struct.isSetAuthCode()) {
          oprot.writeFieldBegin(AUTH_CODE_FIELD_DESC);
          oprot.writeString(struct.authCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.custom != null) {
        if (struct.isSetCustom()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
      }
      if (struct.questions != null) {
        if (struct.isSetQuestions()) {
          oprot.writeFieldBegin(QUESTIONS_FIELD_DESC);
          oprot.writeString(struct.questions);
          oprot.writeFieldEnd();
        }
      }
      if (struct.customHint != null) {
        if (struct.isSetCustomHint()) {
          oprot.writeFieldBegin(CUSTOM_HINT_FIELD_DESC);
          oprot.writeString(struct.customHint);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrEmployeeCertConfDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrEmployeeCertConfDOTupleScheme getScheme() {
      return new HrEmployeeCertConfDOTupleScheme();
    }
  }

  private static class HrEmployeeCertConfDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrEmployeeCertConfDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(1);
      }
      if (struct.isSetIsStrict()) {
        optionals.set(2);
      }
      if (struct.isSetEmailSuffix()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(5);
      }
      if (struct.isSetDisable()) {
        optionals.set(6);
      }
      if (struct.isSetBdAddGroup()) {
        optionals.set(7);
      }
      if (struct.isSetBdUseGroupId()) {
        optionals.set(8);
      }
      if (struct.isSetAuthMode()) {
        optionals.set(9);
      }
      if (struct.isSetAuthCode()) {
        optionals.set(10);
      }
      if (struct.isSetCustom()) {
        optionals.set(11);
      }
      if (struct.isSetQuestions()) {
        optionals.set(12);
      }
      if (struct.isSetCustomHint()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetIsStrict()) {
        oprot.writeDouble(struct.isStrict);
      }
      if (struct.isSetEmailSuffix()) {
        oprot.writeString(struct.emailSuffix);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetDisable()) {
        oprot.writeDouble(struct.disable);
      }
      if (struct.isSetBdAddGroup()) {
        oprot.writeDouble(struct.bdAddGroup);
      }
      if (struct.isSetBdUseGroupId()) {
        oprot.writeDouble(struct.bdUseGroupId);
      }
      if (struct.isSetAuthMode()) {
        oprot.writeDouble(struct.authMode);
      }
      if (struct.isSetAuthCode()) {
        oprot.writeString(struct.authCode);
      }
      if (struct.isSetCustom()) {
        oprot.writeString(struct.custom);
      }
      if (struct.isSetQuestions()) {
        oprot.writeString(struct.questions);
      }
      if (struct.isSetCustomHint()) {
        oprot.writeString(struct.customHint);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrEmployeeCertConfDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.isStrict = iprot.readDouble();
        struct.setIsStrictIsSet(true);
      }
      if (incoming.get(3)) {
        struct.emailSuffix = iprot.readString();
        struct.setEmailSuffixIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.disable = iprot.readDouble();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(7)) {
        struct.bdAddGroup = iprot.readDouble();
        struct.setBdAddGroupIsSet(true);
      }
      if (incoming.get(8)) {
        struct.bdUseGroupId = iprot.readDouble();
        struct.setBdUseGroupIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.authMode = iprot.readDouble();
        struct.setAuthModeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.authCode = iprot.readString();
        struct.setAuthCodeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.custom = iprot.readString();
        struct.setCustomIsSet(true);
      }
      if (incoming.get(12)) {
        struct.questions = iprot.readString();
        struct.setQuestionsIsSet(true);
      }
      if (incoming.get(13)) {
        struct.customHint = iprot.readString();
        struct.setCustomHintIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

