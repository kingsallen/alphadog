/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-17")
public class HrOperationrecordDO implements org.apache.thrift.TBase<HrOperationrecordDO, HrOperationrecordDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrOperationrecordDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrOperationrecordDO");

  private static final org.apache.thrift.protocol.TField ADMIN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("admin_id", org.apache.thrift.protocol.TType.DOUBLE, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("app_id", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField STATUS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("status_id", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField OPERATE_TPL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("operate_tpl_id", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrOperationrecordDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrOperationrecordDOTupleSchemeFactory();

  public double admin_id; // optional
  public double company_id; // optional
  public double app_id; // optional
  public double status_id; // optional
  public int operate_tpl_id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADMIN_ID((short)1, "admin_id"),
    COMPANY_ID((short)2, "company_id"),
    APP_ID((short)3, "app_id"),
    STATUS_ID((short)4, "status_id"),
    OPERATE_TPL_ID((short)5, "operate_tpl_id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADMIN_ID
          return ADMIN_ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // APP_ID
          return APP_ID;
        case 4: // STATUS_ID
          return STATUS_ID;
        case 5: // OPERATE_TPL_ID
          return OPERATE_TPL_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ADMIN_ID_ISSET_ID = 0;
  private static final int __COMPANY_ID_ISSET_ID = 1;
  private static final int __APP_ID_ISSET_ID = 2;
  private static final int __STATUS_ID_ISSET_ID = 3;
  private static final int __OPERATE_TPL_ID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ADMIN_ID,_Fields.COMPANY_ID,_Fields.APP_ID,_Fields.STATUS_ID,_Fields.OPERATE_TPL_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADMIN_ID, new org.apache.thrift.meta_data.FieldMetaData("admin_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("app_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.STATUS_ID, new org.apache.thrift.meta_data.FieldMetaData("status_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OPERATE_TPL_ID, new org.apache.thrift.meta_data.FieldMetaData("operate_tpl_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrOperationrecordDO.class, metaDataMap);
  }

  public HrOperationrecordDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrOperationrecordDO(HrOperationrecordDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.admin_id = other.admin_id;
    this.company_id = other.company_id;
    this.app_id = other.app_id;
    this.status_id = other.status_id;
    this.operate_tpl_id = other.operate_tpl_id;
  }

  public HrOperationrecordDO deepCopy() {
    return new HrOperationrecordDO(this);
  }

  @Override
  public void clear() {
    setAdmin_idIsSet(false);
    this.admin_id = 0.0;
    setCompany_idIsSet(false);
    this.company_id = 0.0;
    setApp_idIsSet(false);
    this.app_id = 0.0;
    setStatus_idIsSet(false);
    this.status_id = 0.0;
    setOperate_tpl_idIsSet(false);
    this.operate_tpl_id = 0;
  }

  public double getAdmin_id() {
    return this.admin_id;
  }

  public HrOperationrecordDO setAdmin_id(double admin_id) {
    this.admin_id = admin_id;
    setAdmin_idIsSet(true);
    return this;
  }

  public void unsetAdmin_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ADMIN_ID_ISSET_ID);
  }

  /** Returns true if field admin_id is set (has been assigned a value) and false otherwise */
  public boolean isSetAdmin_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ADMIN_ID_ISSET_ID);
  }

  public void setAdmin_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ADMIN_ID_ISSET_ID, value);
  }

  public double getCompany_id() {
    return this.company_id;
  }

  public HrOperationrecordDO setCompany_id(double company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public double getApp_id() {
    return this.app_id;
  }

  public HrOperationrecordDO setApp_id(double app_id) {
    this.app_id = app_id;
    setApp_idIsSet(true);
    return this;
  }

  public void unsetApp_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APP_ID_ISSET_ID);
  }

  /** Returns true if field app_id is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APP_ID_ISSET_ID);
  }

  public void setApp_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APP_ID_ISSET_ID, value);
  }

  public double getStatus_id() {
    return this.status_id;
  }

  public HrOperationrecordDO setStatus_id(double status_id) {
    this.status_id = status_id;
    setStatus_idIsSet(true);
    return this;
  }

  public void unsetStatus_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ID_ISSET_ID);
  }

  /** Returns true if field status_id is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ID_ISSET_ID);
  }

  public void setStatus_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ID_ISSET_ID, value);
  }

  public int getOperate_tpl_id() {
    return this.operate_tpl_id;
  }

  public HrOperationrecordDO setOperate_tpl_id(int operate_tpl_id) {
    this.operate_tpl_id = operate_tpl_id;
    setOperate_tpl_idIsSet(true);
    return this;
  }

  public void unsetOperate_tpl_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OPERATE_TPL_ID_ISSET_ID);
  }

  /** Returns true if field operate_tpl_id is set (has been assigned a value) and false otherwise */
  public boolean isSetOperate_tpl_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OPERATE_TPL_ID_ISSET_ID);
  }

  public void setOperate_tpl_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OPERATE_TPL_ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ADMIN_ID:
      if (value == null) {
        unsetAdmin_id();
      } else {
        setAdmin_id((java.lang.Double)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Double)value);
      }
      break;

    case APP_ID:
      if (value == null) {
        unsetApp_id();
      } else {
        setApp_id((java.lang.Double)value);
      }
      break;

    case STATUS_ID:
      if (value == null) {
        unsetStatus_id();
      } else {
        setStatus_id((java.lang.Double)value);
      }
      break;

    case OPERATE_TPL_ID:
      if (value == null) {
        unsetOperate_tpl_id();
      } else {
        setOperate_tpl_id((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ADMIN_ID:
      return getAdmin_id();

    case COMPANY_ID:
      return getCompany_id();

    case APP_ID:
      return getApp_id();

    case STATUS_ID:
      return getStatus_id();

    case OPERATE_TPL_ID:
      return getOperate_tpl_id();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ADMIN_ID:
      return isSetAdmin_id();
    case COMPANY_ID:
      return isSetCompany_id();
    case APP_ID:
      return isSetApp_id();
    case STATUS_ID:
      return isSetStatus_id();
    case OPERATE_TPL_ID:
      return isSetOperate_tpl_id();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrOperationrecordDO)
      return this.equals((HrOperationrecordDO)that);
    return false;
  }

  public boolean equals(HrOperationrecordDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_admin_id = true && this.isSetAdmin_id();
    boolean that_present_admin_id = true && that.isSetAdmin_id();
    if (this_present_admin_id || that_present_admin_id) {
      if (!(this_present_admin_id && that_present_admin_id))
        return false;
      if (this.admin_id != that.admin_id)
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_app_id = true && this.isSetApp_id();
    boolean that_present_app_id = true && that.isSetApp_id();
    if (this_present_app_id || that_present_app_id) {
      if (!(this_present_app_id && that_present_app_id))
        return false;
      if (this.app_id != that.app_id)
        return false;
    }

    boolean this_present_status_id = true && this.isSetStatus_id();
    boolean that_present_status_id = true && that.isSetStatus_id();
    if (this_present_status_id || that_present_status_id) {
      if (!(this_present_status_id && that_present_status_id))
        return false;
      if (this.status_id != that.status_id)
        return false;
    }

    boolean this_present_operate_tpl_id = true && this.isSetOperate_tpl_id();
    boolean that_present_operate_tpl_id = true && that.isSetOperate_tpl_id();
    if (this_present_operate_tpl_id || that_present_operate_tpl_id) {
      if (!(this_present_operate_tpl_id && that_present_operate_tpl_id))
        return false;
      if (this.operate_tpl_id != that.operate_tpl_id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAdmin_id()) ? 131071 : 524287);
    if (isSetAdmin_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(admin_id);

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(company_id);

    hashCode = hashCode * 8191 + ((isSetApp_id()) ? 131071 : 524287);
    if (isSetApp_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(app_id);

    hashCode = hashCode * 8191 + ((isSetStatus_id()) ? 131071 : 524287);
    if (isSetStatus_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(status_id);

    hashCode = hashCode * 8191 + ((isSetOperate_tpl_id()) ? 131071 : 524287);
    if (isSetOperate_tpl_id())
      hashCode = hashCode * 8191 + operate_tpl_id;

    return hashCode;
  }

  @Override
  public int compareTo(HrOperationrecordDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAdmin_id()).compareTo(other.isSetAdmin_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdmin_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.admin_id, other.admin_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApp_id()).compareTo(other.isSetApp_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_id, other.app_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus_id()).compareTo(other.isSetStatus_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status_id, other.status_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOperate_tpl_id()).compareTo(other.isSetOperate_tpl_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperate_tpl_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operate_tpl_id, other.operate_tpl_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrOperationrecordDO(");
    boolean first = true;

    if (isSetAdmin_id()) {
      sb.append("admin_id:");
      sb.append(this.admin_id);
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetApp_id()) {
      if (!first) sb.append(", ");
      sb.append("app_id:");
      sb.append(this.app_id);
      first = false;
    }
    if (isSetStatus_id()) {
      if (!first) sb.append(", ");
      sb.append("status_id:");
      sb.append(this.status_id);
      first = false;
    }
    if (isSetOperate_tpl_id()) {
      if (!first) sb.append(", ");
      sb.append("operate_tpl_id:");
      sb.append(this.operate_tpl_id);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrOperationrecordDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrOperationrecordDOStandardScheme getScheme() {
      return new HrOperationrecordDOStandardScheme();
    }
  }

  private static class HrOperationrecordDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrOperationrecordDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrOperationrecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADMIN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.admin_id = iprot.readDouble();
              struct.setAdmin_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.company_id = iprot.readDouble();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.app_id = iprot.readDouble();
              struct.setApp_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STATUS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.status_id = iprot.readDouble();
              struct.setStatus_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OPERATE_TPL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.operate_tpl_id = iprot.readI32();
              struct.setOperate_tpl_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrOperationrecordDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAdmin_id()) {
        oprot.writeFieldBegin(ADMIN_ID_FIELD_DESC);
        oprot.writeDouble(struct.admin_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeDouble(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApp_id()) {
        oprot.writeFieldBegin(APP_ID_FIELD_DESC);
        oprot.writeDouble(struct.app_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus_id()) {
        oprot.writeFieldBegin(STATUS_ID_FIELD_DESC);
        oprot.writeDouble(struct.status_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOperate_tpl_id()) {
        oprot.writeFieldBegin(OPERATE_TPL_ID_FIELD_DESC);
        oprot.writeI32(struct.operate_tpl_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrOperationrecordDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrOperationrecordDOTupleScheme getScheme() {
      return new HrOperationrecordDOTupleScheme();
    }
  }

  private static class HrOperationrecordDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrOperationrecordDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrOperationrecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAdmin_id()) {
        optionals.set(0);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(1);
      }
      if (struct.isSetApp_id()) {
        optionals.set(2);
      }
      if (struct.isSetStatus_id()) {
        optionals.set(3);
      }
      if (struct.isSetOperate_tpl_id()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetAdmin_id()) {
        oprot.writeDouble(struct.admin_id);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeDouble(struct.company_id);
      }
      if (struct.isSetApp_id()) {
        oprot.writeDouble(struct.app_id);
      }
      if (struct.isSetStatus_id()) {
        oprot.writeDouble(struct.status_id);
      }
      if (struct.isSetOperate_tpl_id()) {
        oprot.writeI32(struct.operate_tpl_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrOperationrecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.admin_id = iprot.readDouble();
        struct.setAdmin_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.company_id = iprot.readDouble();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.app_id = iprot.readDouble();
        struct.setApp_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.status_id = iprot.readDouble();
        struct.setStatus_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.operate_tpl_id = iprot.readI32();
        struct.setOperate_tpl_idIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

