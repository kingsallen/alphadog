/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.employee.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-09-06")
public class ReferralCard implements org.apache.thrift.TBase<ReferralCard, ReferralCard._Fields>, java.io.Serializable, Cloneable, Comparable<ReferralCard> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReferralCard");

  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COMPANY_ABBREVIATION_FIELD_DESC = new org.apache.thrift.protocol.TField("companyAbbreviation", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField APPLY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applyId", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ReferralCardStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ReferralCardTupleSchemeFactory();

  public java.lang.String userName; // optional
  public java.lang.String employeeName; // optional
  public java.lang.String companyName; // optional
  public java.lang.String companyAbbreviation; // optional
  public java.lang.String position; // optional
  public java.lang.String mobile; // optional
  public int applyId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_NAME((short)1, "userName"),
    EMPLOYEE_NAME((short)2, "employeeName"),
    COMPANY_NAME((short)3, "companyName"),
    COMPANY_ABBREVIATION((short)4, "companyAbbreviation"),
    POSITION((short)5, "position"),
    MOBILE((short)6, "mobile"),
    APPLY_ID((short)7, "applyId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_NAME
          return USER_NAME;
        case 2: // EMPLOYEE_NAME
          return EMPLOYEE_NAME;
        case 3: // COMPANY_NAME
          return COMPANY_NAME;
        case 4: // COMPANY_ABBREVIATION
          return COMPANY_ABBREVIATION;
        case 5: // POSITION
          return POSITION;
        case 6: // MOBILE
          return MOBILE;
        case 7: // APPLY_ID
          return APPLY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __APPLYID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.USER_NAME,_Fields.EMPLOYEE_NAME,_Fields.COMPANY_NAME,_Fields.COMPANY_ABBREVIATION,_Fields.POSITION,_Fields.MOBILE,_Fields.APPLY_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYEE_NAME, new org.apache.thrift.meta_data.FieldMetaData("employeeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ABBREVIATION, new org.apache.thrift.meta_data.FieldMetaData("companyAbbreviation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLY_ID, new org.apache.thrift.meta_data.FieldMetaData("applyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReferralCard.class, metaDataMap);
  }

  public ReferralCard() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReferralCard(ReferralCard other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetEmployeeName()) {
      this.employeeName = other.employeeName;
    }
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    if (other.isSetCompanyAbbreviation()) {
      this.companyAbbreviation = other.companyAbbreviation;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    this.applyId = other.applyId;
  }

  public ReferralCard deepCopy() {
    return new ReferralCard(this);
  }

  @Override
  public void clear() {
    this.userName = null;
    this.employeeName = null;
    this.companyName = null;
    this.companyAbbreviation = null;
    this.position = null;
    this.mobile = null;
    setApplyIdIsSet(false);
    this.applyId = 0;
  }

  public java.lang.String getUserName() {
    return this.userName;
  }

  public ReferralCard setUserName(java.lang.String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public java.lang.String getEmployeeName() {
    return this.employeeName;
  }

  public ReferralCard setEmployeeName(java.lang.String employeeName) {
    this.employeeName = employeeName;
    return this;
  }

  public void unsetEmployeeName() {
    this.employeeName = null;
  }

  /** Returns true if field employeeName is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeName() {
    return this.employeeName != null;
  }

  public void setEmployeeNameIsSet(boolean value) {
    if (!value) {
      this.employeeName = null;
    }
  }

  public java.lang.String getCompanyName() {
    return this.companyName;
  }

  public ReferralCard setCompanyName(java.lang.String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public java.lang.String getCompanyAbbreviation() {
    return this.companyAbbreviation;
  }

  public ReferralCard setCompanyAbbreviation(java.lang.String companyAbbreviation) {
    this.companyAbbreviation = companyAbbreviation;
    return this;
  }

  public void unsetCompanyAbbreviation() {
    this.companyAbbreviation = null;
  }

  /** Returns true if field companyAbbreviation is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyAbbreviation() {
    return this.companyAbbreviation != null;
  }

  public void setCompanyAbbreviationIsSet(boolean value) {
    if (!value) {
      this.companyAbbreviation = null;
    }
  }

  public java.lang.String getPosition() {
    return this.position;
  }

  public ReferralCard setPosition(java.lang.String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public java.lang.String getMobile() {
    return this.mobile;
  }

  public ReferralCard setMobile(java.lang.String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public int getApplyId() {
    return this.applyId;
  }

  public ReferralCard setApplyId(int applyId) {
    this.applyId = applyId;
    setApplyIdIsSet(true);
    return this;
  }

  public void unsetApplyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLYID_ISSET_ID);
  }

  /** Returns true if field applyId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLYID_ISSET_ID);
  }

  public void setApplyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((java.lang.String)value);
      }
      break;

    case EMPLOYEE_NAME:
      if (value == null) {
        unsetEmployeeName();
      } else {
        setEmployeeName((java.lang.String)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((java.lang.String)value);
      }
      break;

    case COMPANY_ABBREVIATION:
      if (value == null) {
        unsetCompanyAbbreviation();
      } else {
        setCompanyAbbreviation((java.lang.String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((java.lang.String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((java.lang.String)value);
      }
      break;

    case APPLY_ID:
      if (value == null) {
        unsetApplyId();
      } else {
        setApplyId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_NAME:
      return getUserName();

    case EMPLOYEE_NAME:
      return getEmployeeName();

    case COMPANY_NAME:
      return getCompanyName();

    case COMPANY_ABBREVIATION:
      return getCompanyAbbreviation();

    case POSITION:
      return getPosition();

    case MOBILE:
      return getMobile();

    case APPLY_ID:
      return getApplyId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case USER_NAME:
      return isSetUserName();
    case EMPLOYEE_NAME:
      return isSetEmployeeName();
    case COMPANY_NAME:
      return isSetCompanyName();
    case COMPANY_ABBREVIATION:
      return isSetCompanyAbbreviation();
    case POSITION:
      return isSetPosition();
    case MOBILE:
      return isSetMobile();
    case APPLY_ID:
      return isSetApplyId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ReferralCard)
      return this.equals((ReferralCard)that);
    return false;
  }

  public boolean equals(ReferralCard that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_employeeName = true && this.isSetEmployeeName();
    boolean that_present_employeeName = true && that.isSetEmployeeName();
    if (this_present_employeeName || that_present_employeeName) {
      if (!(this_present_employeeName && that_present_employeeName))
        return false;
      if (!this.employeeName.equals(that.employeeName))
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_companyAbbreviation = true && this.isSetCompanyAbbreviation();
    boolean that_present_companyAbbreviation = true && that.isSetCompanyAbbreviation();
    if (this_present_companyAbbreviation || that_present_companyAbbreviation) {
      if (!(this_present_companyAbbreviation && that_present_companyAbbreviation))
        return false;
      if (!this.companyAbbreviation.equals(that.companyAbbreviation))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_applyId = true && this.isSetApplyId();
    boolean that_present_applyId = true && that.isSetApplyId();
    if (this_present_applyId || that_present_applyId) {
      if (!(this_present_applyId && that_present_applyId))
        return false;
      if (this.applyId != that.applyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUserName()) ? 131071 : 524287);
    if (isSetUserName())
      hashCode = hashCode * 8191 + userName.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmployeeName()) ? 131071 : 524287);
    if (isSetEmployeeName())
      hashCode = hashCode * 8191 + employeeName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyName()) ? 131071 : 524287);
    if (isSetCompanyName())
      hashCode = hashCode * 8191 + companyName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyAbbreviation()) ? 131071 : 524287);
    if (isSetCompanyAbbreviation())
      hashCode = hashCode * 8191 + companyAbbreviation.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplyId()) ? 131071 : 524287);
    if (isSetApplyId())
      hashCode = hashCode * 8191 + applyId;

    return hashCode;
  }

  @Override
  public int compareTo(ReferralCard other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetUserName()).compareTo(other.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, other.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeName()).compareTo(other.isSetEmployeeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeName, other.employeeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyAbbreviation()).compareTo(other.isSetCompanyAbbreviation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyAbbreviation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyAbbreviation, other.companyAbbreviation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplyId()).compareTo(other.isSetApplyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyId, other.applyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ReferralCard(");
    boolean first = true;

    if (isSetUserName()) {
      sb.append("userName:");
      if (this.userName == null) {
        sb.append("null");
      } else {
        sb.append(this.userName);
      }
      first = false;
    }
    if (isSetEmployeeName()) {
      if (!first) sb.append(", ");
      sb.append("employeeName:");
      if (this.employeeName == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeName);
      }
      first = false;
    }
    if (isSetCompanyName()) {
      if (!first) sb.append(", ");
      sb.append("companyName:");
      if (this.companyName == null) {
        sb.append("null");
      } else {
        sb.append(this.companyName);
      }
      first = false;
    }
    if (isSetCompanyAbbreviation()) {
      if (!first) sb.append(", ");
      sb.append("companyAbbreviation:");
      if (this.companyAbbreviation == null) {
        sb.append("null");
      } else {
        sb.append(this.companyAbbreviation);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetApplyId()) {
      if (!first) sb.append(", ");
      sb.append("applyId:");
      sb.append(this.applyId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReferralCardStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReferralCardStandardScheme getScheme() {
      return new ReferralCardStandardScheme();
    }
  }

  private static class ReferralCardStandardScheme extends org.apache.thrift.scheme.StandardScheme<ReferralCard> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReferralCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employeeName = iprot.readString();
              struct.setEmployeeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPANY_ABBREVIATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyAbbreviation = iprot.readString();
              struct.setCompanyAbbreviationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // APPLY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.applyId = iprot.readI32();
              struct.setApplyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReferralCard struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.userName != null) {
        if (struct.isSetUserName()) {
          oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
          oprot.writeString(struct.userName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.employeeName != null) {
        if (struct.isSetEmployeeName()) {
          oprot.writeFieldBegin(EMPLOYEE_NAME_FIELD_DESC);
          oprot.writeString(struct.employeeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyName != null) {
        if (struct.isSetCompanyName()) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.companyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyAbbreviation != null) {
        if (struct.isSetCompanyAbbreviation()) {
          oprot.writeFieldBegin(COMPANY_ABBREVIATION_FIELD_DESC);
          oprot.writeString(struct.companyAbbreviation);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetApplyId()) {
        oprot.writeFieldBegin(APPLY_ID_FIELD_DESC);
        oprot.writeI32(struct.applyId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReferralCardTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReferralCardTupleScheme getScheme() {
      return new ReferralCardTupleScheme();
    }
  }

  private static class ReferralCardTupleScheme extends org.apache.thrift.scheme.TupleScheme<ReferralCard> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReferralCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUserName()) {
        optionals.set(0);
      }
      if (struct.isSetEmployeeName()) {
        optionals.set(1);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(2);
      }
      if (struct.isSetCompanyAbbreviation()) {
        optionals.set(3);
      }
      if (struct.isSetPosition()) {
        optionals.set(4);
      }
      if (struct.isSetMobile()) {
        optionals.set(5);
      }
      if (struct.isSetApplyId()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetEmployeeName()) {
        oprot.writeString(struct.employeeName);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetCompanyAbbreviation()) {
        oprot.writeString(struct.companyAbbreviation);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetApplyId()) {
        oprot.writeI32(struct.applyId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReferralCard struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employeeName = iprot.readString();
        struct.setEmployeeNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.companyAbbreviation = iprot.readString();
        struct.setCompanyAbbreviationIsSet(true);
      }
      if (incoming.get(4)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(6)) {
        struct.applyId = iprot.readI32();
        struct.setApplyIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

