/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dict.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-07-23")
public class CollegeProvince implements org.apache.thrift.TBase<CollegeProvince, CollegeProvince._Fields>, java.io.Serializable, Cloneable, Comparable<CollegeProvince> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CollegeProvince");

    private static final org.apache.thrift.protocol.TField COLLEGE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("college_code", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField COLLEGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("college_name", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COLLEGE_LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("college_logo", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField PROVINCE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("province_code", org.apache.thrift.protocol.TType.I32, (short)4);
    private static final org.apache.thrift.protocol.TField PROVINCE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("province_name", org.apache.thrift.protocol.TType.STRING, (short)5);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CollegeProvinceStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CollegeProvinceTupleSchemeFactory();

    public int college_code; // optional
    public java.lang.String college_name; // optional
    public java.lang.String college_logo; // optional
    public int province_code; // optional
    public java.lang.String province_name; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        COLLEGE_CODE((short)1, "college_code"),
        COLLEGE_NAME((short)2, "college_name"),
        COLLEGE_LOGO((short)3, "college_logo"),
        PROVINCE_CODE((short)4, "province_code"),
        PROVINCE_NAME((short)5, "province_name");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // COLLEGE_CODE
                    return COLLEGE_CODE;
                case 2: // COLLEGE_NAME
                    return COLLEGE_NAME;
                case 3: // COLLEGE_LOGO
                    return COLLEGE_LOGO;
                case 4: // PROVINCE_CODE
                    return PROVINCE_CODE;
                case 5: // PROVINCE_NAME
                    return PROVINCE_NAME;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __COLLEGE_CODE_ISSET_ID = 0;
    private static final int __PROVINCE_CODE_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.COLLEGE_CODE,_Fields.COLLEGE_NAME,_Fields.COLLEGE_LOGO,_Fields.PROVINCE_CODE,_Fields.PROVINCE_NAME};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.COLLEGE_CODE, new org.apache.thrift.meta_data.FieldMetaData("college_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COLLEGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("college_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COLLEGE_LOGO, new org.apache.thrift.meta_data.FieldMetaData("college_logo", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.PROVINCE_CODE, new org.apache.thrift.meta_data.FieldMetaData("province_code", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.PROVINCE_NAME, new org.apache.thrift.meta_data.FieldMetaData("province_name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CollegeProvince.class, metaDataMap);
    }

    public CollegeProvince() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public CollegeProvince(CollegeProvince other) {
        __isset_bitfield = other.__isset_bitfield;
        this.college_code = other.college_code;
        if (other.isSetCollege_name()) {
            this.college_name = other.college_name;
        }
        if (other.isSetCollege_logo()) {
            this.college_logo = other.college_logo;
        }
        this.province_code = other.province_code;
        if (other.isSetProvince_name()) {
            this.province_name = other.province_name;
        }
    }

    public CollegeProvince deepCopy() {
        return new CollegeProvince(this);
    }

    @Override
    public void clear() {
        setCollege_codeIsSet(false);
        this.college_code = 0;
        this.college_name = null;
        this.college_logo = null;
        setProvince_codeIsSet(false);
        this.province_code = 0;
        this.province_name = null;
    }

    public int getCollege_code() {
        return this.college_code;
    }

    public CollegeProvince setCollege_code(int college_code) {
        this.college_code = college_code;
        setCollege_codeIsSet(true);
        return this;
    }

    public void unsetCollege_code() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID);
    }

    /** Returns true if field college_code is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_code() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID);
    }

    public void setCollege_codeIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COLLEGE_CODE_ISSET_ID, value);
    }

    public java.lang.String getCollege_name() {
        return this.college_name;
    }

    public CollegeProvince setCollege_name(java.lang.String college_name) {
        this.college_name = college_name;
        return this;
    }

    public void unsetCollege_name() {
        this.college_name = null;
    }

    /** Returns true if field college_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_name() {
        return this.college_name != null;
    }

    public void setCollege_nameIsSet(boolean value) {
        if (!value) {
            this.college_name = null;
        }
    }

    public java.lang.String getCollege_logo() {
        return this.college_logo;
    }

    public CollegeProvince setCollege_logo(java.lang.String college_logo) {
        this.college_logo = college_logo;
        return this;
    }

    public void unsetCollege_logo() {
        this.college_logo = null;
    }

    /** Returns true if field college_logo is set (has been assigned a value) and false otherwise */
    public boolean isSetCollege_logo() {
        return this.college_logo != null;
    }

    public void setCollege_logoIsSet(boolean value) {
        if (!value) {
            this.college_logo = null;
        }
    }

    public int getProvince_code() {
        return this.province_code;
    }

    public CollegeProvince setProvince_code(int province_code) {
        this.province_code = province_code;
        setProvince_codeIsSet(true);
        return this;
    }

    public void unsetProvince_code() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROVINCE_CODE_ISSET_ID);
    }

    /** Returns true if field province_code is set (has been assigned a value) and false otherwise */
    public boolean isSetProvince_code() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROVINCE_CODE_ISSET_ID);
    }

    public void setProvince_codeIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROVINCE_CODE_ISSET_ID, value);
    }

    public java.lang.String getProvince_name() {
        return this.province_name;
    }

    public CollegeProvince setProvince_name(java.lang.String province_name) {
        this.province_name = province_name;
        return this;
    }

    public void unsetProvince_name() {
        this.province_name = null;
    }

    /** Returns true if field province_name is set (has been assigned a value) and false otherwise */
    public boolean isSetProvince_name() {
        return this.province_name != null;
    }

    public void setProvince_nameIsSet(boolean value) {
        if (!value) {
            this.province_name = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case COLLEGE_CODE:
                if (value == null) {
                    unsetCollege_code();
                } else {
                    setCollege_code((java.lang.Integer)value);
                }
                break;

            case COLLEGE_NAME:
                if (value == null) {
                    unsetCollege_name();
                } else {
                    setCollege_name((java.lang.String)value);
                }
                break;

            case COLLEGE_LOGO:
                if (value == null) {
                    unsetCollege_logo();
                } else {
                    setCollege_logo((java.lang.String)value);
                }
                break;

            case PROVINCE_CODE:
                if (value == null) {
                    unsetProvince_code();
                } else {
                    setProvince_code((java.lang.Integer)value);
                }
                break;

            case PROVINCE_NAME:
                if (value == null) {
                    unsetProvince_name();
                } else {
                    setProvince_name((java.lang.String)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case COLLEGE_CODE:
                return getCollege_code();

            case COLLEGE_NAME:
                return getCollege_name();

            case COLLEGE_LOGO:
                return getCollege_logo();

            case PROVINCE_CODE:
                return getProvince_code();

            case PROVINCE_NAME:
                return getProvince_name();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case COLLEGE_CODE:
                return isSetCollege_code();
            case COLLEGE_NAME:
                return isSetCollege_name();
            case COLLEGE_LOGO:
                return isSetCollege_logo();
            case PROVINCE_CODE:
                return isSetProvince_code();
            case PROVINCE_NAME:
                return isSetProvince_name();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof CollegeProvince)
            return this.equals((CollegeProvince)that);
        return false;
    }

    public boolean equals(CollegeProvince that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_college_code = true && this.isSetCollege_code();
        boolean that_present_college_code = true && that.isSetCollege_code();
        if (this_present_college_code || that_present_college_code) {
            if (!(this_present_college_code && that_present_college_code))
                return false;
            if (this.college_code != that.college_code)
                return false;
        }

        boolean this_present_college_name = true && this.isSetCollege_name();
        boolean that_present_college_name = true && that.isSetCollege_name();
        if (this_present_college_name || that_present_college_name) {
            if (!(this_present_college_name && that_present_college_name))
                return false;
            if (!this.college_name.equals(that.college_name))
                return false;
        }

        boolean this_present_college_logo = true && this.isSetCollege_logo();
        boolean that_present_college_logo = true && that.isSetCollege_logo();
        if (this_present_college_logo || that_present_college_logo) {
            if (!(this_present_college_logo && that_present_college_logo))
                return false;
            if (!this.college_logo.equals(that.college_logo))
                return false;
        }

        boolean this_present_province_code = true && this.isSetProvince_code();
        boolean that_present_province_code = true && that.isSetProvince_code();
        if (this_present_province_code || that_present_province_code) {
            if (!(this_present_province_code && that_present_province_code))
                return false;
            if (this.province_code != that.province_code)
                return false;
        }

        boolean this_present_province_name = true && this.isSetProvince_name();
        boolean that_present_province_name = true && that.isSetProvince_name();
        if (this_present_province_name || that_present_province_name) {
            if (!(this_present_province_name && that_present_province_name))
                return false;
            if (!this.province_name.equals(that.province_name))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetCollege_code()) ? 131071 : 524287);
        if (isSetCollege_code())
            hashCode = hashCode * 8191 + college_code;

        hashCode = hashCode * 8191 + ((isSetCollege_name()) ? 131071 : 524287);
        if (isSetCollege_name())
            hashCode = hashCode * 8191 + college_name.hashCode();

        hashCode = hashCode * 8191 + ((isSetCollege_logo()) ? 131071 : 524287);
        if (isSetCollege_logo())
            hashCode = hashCode * 8191 + college_logo.hashCode();

        hashCode = hashCode * 8191 + ((isSetProvince_code()) ? 131071 : 524287);
        if (isSetProvince_code())
            hashCode = hashCode * 8191 + province_code;

        hashCode = hashCode * 8191 + ((isSetProvince_name()) ? 131071 : 524287);
        if (isSetProvince_name())
            hashCode = hashCode * 8191 + province_name.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(CollegeProvince other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetCollege_code()).compareTo(other.isSetCollege_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_code, other.college_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCollege_name()).compareTo(other.isSetCollege_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_name, other.college_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCollege_logo()).compareTo(other.isSetCollege_logo());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCollege_logo()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.college_logo, other.college_logo);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetProvince_code()).compareTo(other.isSetProvince_code());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProvince_code()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.province_code, other.province_code);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetProvince_name()).compareTo(other.isSetProvince_name());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetProvince_name()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.province_name, other.province_name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("CollegeProvince(");
        boolean first = true;

        if (isSetCollege_code()) {
            sb.append("college_code:");
            sb.append(this.college_code);
            first = false;
        }
        if (isSetCollege_name()) {
            if (!first) sb.append(", ");
            sb.append("college_name:");
            if (this.college_name == null) {
                sb.append("null");
            } else {
                sb.append(this.college_name);
            }
            first = false;
        }
        if (isSetCollege_logo()) {
            if (!first) sb.append(", ");
            sb.append("college_logo:");
            if (this.college_logo == null) {
                sb.append("null");
            } else {
                sb.append(this.college_logo);
            }
            first = false;
        }
        if (isSetProvince_code()) {
            if (!first) sb.append(", ");
            sb.append("province_code:");
            sb.append(this.province_code);
            first = false;
        }
        if (isSetProvince_name()) {
            if (!first) sb.append(", ");
            sb.append("province_name:");
            if (this.province_name == null) {
                sb.append("null");
            } else {
                sb.append(this.province_name);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class CollegeProvinceStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public CollegeProvinceStandardScheme getScheme() {
            return new CollegeProvinceStandardScheme();
        }
    }

    private static class CollegeProvinceStandardScheme extends org.apache.thrift.scheme.StandardScheme<CollegeProvince> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, CollegeProvince struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // COLLEGE_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.college_code = iprot.readI32();
                            struct.setCollege_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // COLLEGE_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.college_name = iprot.readString();
                            struct.setCollege_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // COLLEGE_LOGO
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.college_logo = iprot.readString();
                            struct.setCollege_logoIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // PROVINCE_CODE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.province_code = iprot.readI32();
                            struct.setProvince_codeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // PROVINCE_NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.province_name = iprot.readString();
                            struct.setProvince_nameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, CollegeProvince struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetCollege_code()) {
                oprot.writeFieldBegin(COLLEGE_CODE_FIELD_DESC);
                oprot.writeI32(struct.college_code);
                oprot.writeFieldEnd();
            }
            if (struct.college_name != null) {
                if (struct.isSetCollege_name()) {
                    oprot.writeFieldBegin(COLLEGE_NAME_FIELD_DESC);
                    oprot.writeString(struct.college_name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.college_logo != null) {
                if (struct.isSetCollege_logo()) {
                    oprot.writeFieldBegin(COLLEGE_LOGO_FIELD_DESC);
                    oprot.writeString(struct.college_logo);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetProvince_code()) {
                oprot.writeFieldBegin(PROVINCE_CODE_FIELD_DESC);
                oprot.writeI32(struct.province_code);
                oprot.writeFieldEnd();
            }
            if (struct.province_name != null) {
                if (struct.isSetProvince_name()) {
                    oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
                    oprot.writeString(struct.province_name);
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class CollegeProvinceTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public CollegeProvinceTupleScheme getScheme() {
            return new CollegeProvinceTupleScheme();
        }
    }

    private static class CollegeProvinceTupleScheme extends org.apache.thrift.scheme.TupleScheme<CollegeProvince> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, CollegeProvince struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetCollege_code()) {
                optionals.set(0);
            }
            if (struct.isSetCollege_name()) {
                optionals.set(1);
            }
            if (struct.isSetCollege_logo()) {
                optionals.set(2);
            }
            if (struct.isSetProvince_code()) {
                optionals.set(3);
            }
            if (struct.isSetProvince_name()) {
                optionals.set(4);
            }
            oprot.writeBitSet(optionals, 5);
            if (struct.isSetCollege_code()) {
                oprot.writeI32(struct.college_code);
            }
            if (struct.isSetCollege_name()) {
                oprot.writeString(struct.college_name);
            }
            if (struct.isSetCollege_logo()) {
                oprot.writeString(struct.college_logo);
            }
            if (struct.isSetProvince_code()) {
                oprot.writeI32(struct.province_code);
            }
            if (struct.isSetProvince_name()) {
                oprot.writeString(struct.province_name);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, CollegeProvince struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(5);
            if (incoming.get(0)) {
                struct.college_code = iprot.readI32();
                struct.setCollege_codeIsSet(true);
            }
            if (incoming.get(1)) {
                struct.college_name = iprot.readString();
                struct.setCollege_nameIsSet(true);
            }
            if (incoming.get(2)) {
                struct.college_logo = iprot.readString();
                struct.setCollege_logoIsSet(true);
            }
            if (incoming.get(3)) {
                struct.province_code = iprot.readI32();
                struct.setProvince_codeIsSet(true);
            }
            if (incoming.get(4)) {
                struct.province_name = iprot.readString();
                struct.setProvince_nameIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

