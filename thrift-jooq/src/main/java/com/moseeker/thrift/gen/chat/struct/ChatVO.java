/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.chat.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-08-08")
public class ChatVO implements org.apache.thrift.TBase<ChatVO, ChatVO._Fields>, java.io.Serializable, Cloneable, Comparable<ChatVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ChatVO");

  private static final org.apache.thrift.protocol.TField SERVER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serverId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SPEAKER_FIELD_DESC = new org.apache.thrift.protocol.TField("speaker", org.apache.thrift.protocol.TType.BYTE, (short)3);
  private static final org.apache.thrift.protocol.TField ORIGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("origin", org.apache.thrift.protocol.TType.BYTE, (short)4);
  private static final org.apache.thrift.protocol.TField ORIGIN_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("origin_str", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MSG_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("msgType", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ASSET_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("assetUrl", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BTN_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("btnContent", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ROOM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roomId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("duration", org.apache.thrift.protocol.TType.BYTE, (short)11);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField COMPOUND_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("compoundContent", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ChatVOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ChatVOTupleSchemeFactory();

  public java.lang.String serverId; // optional
  public java.lang.String content; // optional
  public byte speaker; // optional
  public byte origin; // optional
  public java.lang.String origin_str; // optional
  public java.lang.String msgType; // optional
  public java.lang.String assetUrl; // optional
  public java.lang.String btnContent; // optional
  public int roomId; // optional
  public int positionId; // optional
  public byte duration; // optional
  public int id; // optional
  public java.lang.String createTime; // optional
  public java.lang.String compoundContent; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SERVER_ID((short)1, "serverId"),
    CONTENT((short)2, "content"),
    SPEAKER((short)3, "speaker"),
    ORIGIN((short)4, "origin"),
    ORIGIN_STR((short)5, "origin_str"),
    MSG_TYPE((short)6, "msgType"),
    ASSET_URL((short)7, "assetUrl"),
    BTN_CONTENT((short)8, "btnContent"),
    ROOM_ID((short)9, "roomId"),
    POSITION_ID((short)10, "positionId"),
    DURATION((short)11, "duration"),
    ID((short)12, "id"),
    CREATE_TIME((short)13, "createTime"),
    COMPOUND_CONTENT((short)14, "compoundContent");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SERVER_ID
          return SERVER_ID;
        case 2: // CONTENT
          return CONTENT;
        case 3: // SPEAKER
          return SPEAKER;
        case 4: // ORIGIN
          return ORIGIN;
        case 5: // ORIGIN_STR
          return ORIGIN_STR;
        case 6: // MSG_TYPE
          return MSG_TYPE;
        case 7: // ASSET_URL
          return ASSET_URL;
        case 8: // BTN_CONTENT
          return BTN_CONTENT;
        case 9: // ROOM_ID
          return ROOM_ID;
        case 10: // POSITION_ID
          return POSITION_ID;
        case 11: // DURATION
          return DURATION;
        case 12: // ID
          return ID;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // COMPOUND_CONTENT
          return COMPOUND_CONTENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SPEAKER_ISSET_ID = 0;
  private static final int __ORIGIN_ISSET_ID = 1;
  private static final int __ROOMID_ISSET_ID = 2;
  private static final int __POSITIONID_ISSET_ID = 3;
  private static final int __DURATION_ISSET_ID = 4;
  private static final int __ID_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SERVER_ID,_Fields.CONTENT,_Fields.SPEAKER,_Fields.ORIGIN,_Fields.ORIGIN_STR,_Fields.MSG_TYPE,_Fields.ASSET_URL,_Fields.BTN_CONTENT,_Fields.ROOM_ID,_Fields.POSITION_ID,_Fields.DURATION,_Fields.ID,_Fields.CREATE_TIME,_Fields.COMPOUND_CONTENT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SERVER_ID, new org.apache.thrift.meta_data.FieldMetaData("serverId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPEAKER, new org.apache.thrift.meta_data.FieldMetaData("speaker", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ORIGIN, new org.apache.thrift.meta_data.FieldMetaData("origin", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ORIGIN_STR, new org.apache.thrift.meta_data.FieldMetaData("origin_str", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MSG_TYPE, new org.apache.thrift.meta_data.FieldMetaData("msgType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ASSET_URL, new org.apache.thrift.meta_data.FieldMetaData("assetUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BTN_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("btnContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROOM_ID, new org.apache.thrift.meta_data.FieldMetaData("roomId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DURATION, new org.apache.thrift.meta_data.FieldMetaData("duration", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPOUND_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("compoundContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ChatVO.class, metaDataMap);
  }

  public ChatVO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ChatVO(ChatVO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetServerId()) {
      this.serverId = other.serverId;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    this.speaker = other.speaker;
    this.origin = other.origin;
    if (other.isSetOrigin_str()) {
      this.origin_str = other.origin_str;
    }
    if (other.isSetMsgType()) {
      this.msgType = other.msgType;
    }
    if (other.isSetAssetUrl()) {
      this.assetUrl = other.assetUrl;
    }
    if (other.isSetBtnContent()) {
      this.btnContent = other.btnContent;
    }
    this.roomId = other.roomId;
    this.positionId = other.positionId;
    this.duration = other.duration;
    this.id = other.id;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetCompoundContent()) {
      this.compoundContent = other.compoundContent;
    }
  }

  public ChatVO deepCopy() {
    return new ChatVO(this);
  }

  @Override
  public void clear() {
    this.serverId = null;
    this.content = null;
    setSpeakerIsSet(false);
    this.speaker = 0;
    setOriginIsSet(false);
    this.origin = 0;
    this.origin_str = null;
    this.msgType = null;
    this.assetUrl = null;
    this.btnContent = null;
    setRoomIdIsSet(false);
    this.roomId = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setDurationIsSet(false);
    this.duration = 0;
    setIdIsSet(false);
    this.id = 0;
    this.createTime = null;
    this.compoundContent = null;
  }

  public java.lang.String getServerId() {
    return this.serverId;
  }

  public ChatVO setServerId(java.lang.String serverId) {
    this.serverId = serverId;
    return this;
  }

  public void unsetServerId() {
    this.serverId = null;
  }

  /** Returns true if field serverId is set (has been assigned a value) and false otherwise */
  public boolean isSetServerId() {
    return this.serverId != null;
  }

  public void setServerIdIsSet(boolean value) {
    if (!value) {
      this.serverId = null;
    }
  }

  public java.lang.String getContent() {
    return this.content;
  }

  public ChatVO setContent(java.lang.String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public byte getSpeaker() {
    return this.speaker;
  }

  public ChatVO setSpeaker(byte speaker) {
    this.speaker = speaker;
    setSpeakerIsSet(true);
    return this;
  }

  public void unsetSpeaker() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SPEAKER_ISSET_ID);
  }

  /** Returns true if field speaker is set (has been assigned a value) and false otherwise */
  public boolean isSetSpeaker() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SPEAKER_ISSET_ID);
  }

  public void setSpeakerIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SPEAKER_ISSET_ID, value);
  }

  public byte getOrigin() {
    return this.origin;
  }

  public ChatVO setOrigin(byte origin) {
    this.origin = origin;
    setOriginIsSet(true);
    return this;
  }

  public void unsetOrigin() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORIGIN_ISSET_ID);
  }

  /** Returns true if field origin is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigin() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORIGIN_ISSET_ID);
  }

  public void setOriginIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORIGIN_ISSET_ID, value);
  }

  public java.lang.String getOrigin_str() {
    return this.origin_str;
  }

  public ChatVO setOrigin_str(java.lang.String origin_str) {
    this.origin_str = origin_str;
    return this;
  }

  public void unsetOrigin_str() {
    this.origin_str = null;
  }

  /** Returns true if field origin_str is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigin_str() {
    return this.origin_str != null;
  }

  public void setOrigin_strIsSet(boolean value) {
    if (!value) {
      this.origin_str = null;
    }
  }

  public java.lang.String getMsgType() {
    return this.msgType;
  }

  public ChatVO setMsgType(java.lang.String msgType) {
    this.msgType = msgType;
    return this;
  }

  public void unsetMsgType() {
    this.msgType = null;
  }

  /** Returns true if field msgType is set (has been assigned a value) and false otherwise */
  public boolean isSetMsgType() {
    return this.msgType != null;
  }

  public void setMsgTypeIsSet(boolean value) {
    if (!value) {
      this.msgType = null;
    }
  }

  public java.lang.String getAssetUrl() {
    return this.assetUrl;
  }

  public ChatVO setAssetUrl(java.lang.String assetUrl) {
    this.assetUrl = assetUrl;
    return this;
  }

  public void unsetAssetUrl() {
    this.assetUrl = null;
  }

  /** Returns true if field assetUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetAssetUrl() {
    return this.assetUrl != null;
  }

  public void setAssetUrlIsSet(boolean value) {
    if (!value) {
      this.assetUrl = null;
    }
  }

  public java.lang.String getBtnContent() {
    return this.btnContent;
  }

  public ChatVO setBtnContent(java.lang.String btnContent) {
    this.btnContent = btnContent;
    return this;
  }

  public void unsetBtnContent() {
    this.btnContent = null;
  }

  /** Returns true if field btnContent is set (has been assigned a value) and false otherwise */
  public boolean isSetBtnContent() {
    return this.btnContent != null;
  }

  public void setBtnContentIsSet(boolean value) {
    if (!value) {
      this.btnContent = null;
    }
  }

  public int getRoomId() {
    return this.roomId;
  }

  public ChatVO setRoomId(int roomId) {
    this.roomId = roomId;
    setRoomIdIsSet(true);
    return this;
  }

  public void unsetRoomId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROOMID_ISSET_ID);
  }

  /** Returns true if field roomId is set (has been assigned a value) and false otherwise */
  public boolean isSetRoomId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROOMID_ISSET_ID);
  }

  public void setRoomIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROOMID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public ChatVO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public byte getDuration() {
    return this.duration;
  }

  public ChatVO setDuration(byte duration) {
    this.duration = duration;
    setDurationIsSet(true);
    return this;
  }

  public void unsetDuration() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  /** Returns true if field duration is set (has been assigned a value) and false otherwise */
  public boolean isSetDuration() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  public void setDurationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DURATION_ISSET_ID, value);
  }

  public int getId() {
    return this.id;
  }

  public ChatVO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public ChatVO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public java.lang.String getCompoundContent() {
    return this.compoundContent;
  }

  public ChatVO setCompoundContent(java.lang.String compoundContent) {
    this.compoundContent = compoundContent;
    return this;
  }

  public void unsetCompoundContent() {
    this.compoundContent = null;
  }

  /** Returns true if field compoundContent is set (has been assigned a value) and false otherwise */
  public boolean isSetCompoundContent() {
    return this.compoundContent != null;
  }

  public void setCompoundContentIsSet(boolean value) {
    if (!value) {
      this.compoundContent = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SERVER_ID:
      if (value == null) {
        unsetServerId();
      } else {
        setServerId((java.lang.String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((java.lang.String)value);
      }
      break;

    case SPEAKER:
      if (value == null) {
        unsetSpeaker();
      } else {
        setSpeaker((java.lang.Byte)value);
      }
      break;

    case ORIGIN:
      if (value == null) {
        unsetOrigin();
      } else {
        setOrigin((java.lang.Byte)value);
      }
      break;

    case ORIGIN_STR:
      if (value == null) {
        unsetOrigin_str();
      } else {
        setOrigin_str((java.lang.String)value);
      }
      break;

    case MSG_TYPE:
      if (value == null) {
        unsetMsgType();
      } else {
        setMsgType((java.lang.String)value);
      }
      break;

    case ASSET_URL:
      if (value == null) {
        unsetAssetUrl();
      } else {
        setAssetUrl((java.lang.String)value);
      }
      break;

    case BTN_CONTENT:
      if (value == null) {
        unsetBtnContent();
      } else {
        setBtnContent((java.lang.String)value);
      }
      break;

    case ROOM_ID:
      if (value == null) {
        unsetRoomId();
      } else {
        setRoomId((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Integer)value);
      }
      break;

    case DURATION:
      if (value == null) {
        unsetDuration();
      } else {
        setDuration((java.lang.Byte)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case COMPOUND_CONTENT:
      if (value == null) {
        unsetCompoundContent();
      } else {
        setCompoundContent((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SERVER_ID:
      return getServerId();

    case CONTENT:
      return getContent();

    case SPEAKER:
      return getSpeaker();

    case ORIGIN:
      return getOrigin();

    case ORIGIN_STR:
      return getOrigin_str();

    case MSG_TYPE:
      return getMsgType();

    case ASSET_URL:
      return getAssetUrl();

    case BTN_CONTENT:
      return getBtnContent();

    case ROOM_ID:
      return getRoomId();

    case POSITION_ID:
      return getPositionId();

    case DURATION:
      return getDuration();

    case ID:
      return getId();

    case CREATE_TIME:
      return getCreateTime();

    case COMPOUND_CONTENT:
      return getCompoundContent();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SERVER_ID:
      return isSetServerId();
    case CONTENT:
      return isSetContent();
    case SPEAKER:
      return isSetSpeaker();
    case ORIGIN:
      return isSetOrigin();
    case ORIGIN_STR:
      return isSetOrigin_str();
    case MSG_TYPE:
      return isSetMsgType();
    case ASSET_URL:
      return isSetAssetUrl();
    case BTN_CONTENT:
      return isSetBtnContent();
    case ROOM_ID:
      return isSetRoomId();
    case POSITION_ID:
      return isSetPositionId();
    case DURATION:
      return isSetDuration();
    case ID:
      return isSetId();
    case CREATE_TIME:
      return isSetCreateTime();
    case COMPOUND_CONTENT:
      return isSetCompoundContent();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ChatVO)
      return this.equals((ChatVO)that);
    return false;
  }

  public boolean equals(ChatVO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_serverId = true && this.isSetServerId();
    boolean that_present_serverId = true && that.isSetServerId();
    if (this_present_serverId || that_present_serverId) {
      if (!(this_present_serverId && that_present_serverId))
        return false;
      if (!this.serverId.equals(that.serverId))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_speaker = true && this.isSetSpeaker();
    boolean that_present_speaker = true && that.isSetSpeaker();
    if (this_present_speaker || that_present_speaker) {
      if (!(this_present_speaker && that_present_speaker))
        return false;
      if (this.speaker != that.speaker)
        return false;
    }

    boolean this_present_origin = true && this.isSetOrigin();
    boolean that_present_origin = true && that.isSetOrigin();
    if (this_present_origin || that_present_origin) {
      if (!(this_present_origin && that_present_origin))
        return false;
      if (this.origin != that.origin)
        return false;
    }

    boolean this_present_origin_str = true && this.isSetOrigin_str();
    boolean that_present_origin_str = true && that.isSetOrigin_str();
    if (this_present_origin_str || that_present_origin_str) {
      if (!(this_present_origin_str && that_present_origin_str))
        return false;
      if (!this.origin_str.equals(that.origin_str))
        return false;
    }

    boolean this_present_msgType = true && this.isSetMsgType();
    boolean that_present_msgType = true && that.isSetMsgType();
    if (this_present_msgType || that_present_msgType) {
      if (!(this_present_msgType && that_present_msgType))
        return false;
      if (!this.msgType.equals(that.msgType))
        return false;
    }

    boolean this_present_assetUrl = true && this.isSetAssetUrl();
    boolean that_present_assetUrl = true && that.isSetAssetUrl();
    if (this_present_assetUrl || that_present_assetUrl) {
      if (!(this_present_assetUrl && that_present_assetUrl))
        return false;
      if (!this.assetUrl.equals(that.assetUrl))
        return false;
    }

    boolean this_present_btnContent = true && this.isSetBtnContent();
    boolean that_present_btnContent = true && that.isSetBtnContent();
    if (this_present_btnContent || that_present_btnContent) {
      if (!(this_present_btnContent && that_present_btnContent))
        return false;
      if (!this.btnContent.equals(that.btnContent))
        return false;
    }

    boolean this_present_roomId = true && this.isSetRoomId();
    boolean that_present_roomId = true && that.isSetRoomId();
    if (this_present_roomId || that_present_roomId) {
      if (!(this_present_roomId && that_present_roomId))
        return false;
      if (this.roomId != that.roomId)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_duration = true && this.isSetDuration();
    boolean that_present_duration = true && that.isSetDuration();
    if (this_present_duration || that_present_duration) {
      if (!(this_present_duration && that_present_duration))
        return false;
      if (this.duration != that.duration)
        return false;
    }

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_compoundContent = true && this.isSetCompoundContent();
    boolean that_present_compoundContent = true && that.isSetCompoundContent();
    if (this_present_compoundContent || that_present_compoundContent) {
      if (!(this_present_compoundContent && that_present_compoundContent))
        return false;
      if (!this.compoundContent.equals(that.compoundContent))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetServerId()) ? 131071 : 524287);
    if (isSetServerId())
      hashCode = hashCode * 8191 + serverId.hashCode();

    hashCode = hashCode * 8191 + ((isSetContent()) ? 131071 : 524287);
    if (isSetContent())
      hashCode = hashCode * 8191 + content.hashCode();

    hashCode = hashCode * 8191 + ((isSetSpeaker()) ? 131071 : 524287);
    if (isSetSpeaker())
      hashCode = hashCode * 8191 + (int) (speaker);

    hashCode = hashCode * 8191 + ((isSetOrigin()) ? 131071 : 524287);
    if (isSetOrigin())
      hashCode = hashCode * 8191 + (int) (origin);

    hashCode = hashCode * 8191 + ((isSetOrigin_str()) ? 131071 : 524287);
    if (isSetOrigin_str())
      hashCode = hashCode * 8191 + origin_str.hashCode();

    hashCode = hashCode * 8191 + ((isSetMsgType()) ? 131071 : 524287);
    if (isSetMsgType())
      hashCode = hashCode * 8191 + msgType.hashCode();

    hashCode = hashCode * 8191 + ((isSetAssetUrl()) ? 131071 : 524287);
    if (isSetAssetUrl())
      hashCode = hashCode * 8191 + assetUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetBtnContent()) ? 131071 : 524287);
    if (isSetBtnContent())
      hashCode = hashCode * 8191 + btnContent.hashCode();

    hashCode = hashCode * 8191 + ((isSetRoomId()) ? 131071 : 524287);
    if (isSetRoomId())
      hashCode = hashCode * 8191 + roomId;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetDuration()) ? 131071 : 524287);
    if (isSetDuration())
      hashCode = hashCode * 8191 + (int) (duration);

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompoundContent()) ? 131071 : 524287);
    if (isSetCompoundContent())
      hashCode = hashCode * 8191 + compoundContent.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ChatVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetServerId()).compareTo(other.isSetServerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serverId, other.serverId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSpeaker()).compareTo(other.isSetSpeaker());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpeaker()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.speaker, other.speaker);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrigin()).compareTo(other.isSetOrigin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origin, other.origin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOrigin_str()).compareTo(other.isSetOrigin_str());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigin_str()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origin_str, other.origin_str);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMsgType()).compareTo(other.isSetMsgType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMsgType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msgType, other.msgType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAssetUrl()).compareTo(other.isSetAssetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAssetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.assetUrl, other.assetUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBtnContent()).compareTo(other.isSetBtnContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBtnContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.btnContent, other.btnContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoomId()).compareTo(other.isSetRoomId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoomId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roomId, other.roomId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompoundContent()).compareTo(other.isSetCompoundContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompoundContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.compoundContent, other.compoundContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ChatVO(");
    boolean first = true;

    if (isSetServerId()) {
      sb.append("serverId:");
      if (this.serverId == null) {
        sb.append("null");
      } else {
        sb.append(this.serverId);
      }
      first = false;
    }
    if (isSetContent()) {
      if (!first) sb.append(", ");
      sb.append("content:");
      if (this.content == null) {
        sb.append("null");
      } else {
        sb.append(this.content);
      }
      first = false;
    }
    if (isSetSpeaker()) {
      if (!first) sb.append(", ");
      sb.append("speaker:");
      sb.append(this.speaker);
      first = false;
    }
    if (isSetOrigin()) {
      if (!first) sb.append(", ");
      sb.append("origin:");
      sb.append(this.origin);
      first = false;
    }
    if (isSetOrigin_str()) {
      if (!first) sb.append(", ");
      sb.append("origin_str:");
      if (this.origin_str == null) {
        sb.append("null");
      } else {
        sb.append(this.origin_str);
      }
      first = false;
    }
    if (isSetMsgType()) {
      if (!first) sb.append(", ");
      sb.append("msgType:");
      if (this.msgType == null) {
        sb.append("null");
      } else {
        sb.append(this.msgType);
      }
      first = false;
    }
    if (isSetAssetUrl()) {
      if (!first) sb.append(", ");
      sb.append("assetUrl:");
      if (this.assetUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.assetUrl);
      }
      first = false;
    }
    if (isSetBtnContent()) {
      if (!first) sb.append(", ");
      sb.append("btnContent:");
      if (this.btnContent == null) {
        sb.append("null");
      } else {
        sb.append(this.btnContent);
      }
      first = false;
    }
    if (isSetRoomId()) {
      if (!first) sb.append(", ");
      sb.append("roomId:");
      sb.append(this.roomId);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetDuration()) {
      if (!first) sb.append(", ");
      sb.append("duration:");
      sb.append(this.duration);
      first = false;
    }
    if (isSetId()) {
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetCompoundContent()) {
      if (!first) sb.append(", ");
      sb.append("compoundContent:");
      if (this.compoundContent == null) {
        sb.append("null");
      } else {
        sb.append(this.compoundContent);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ChatVOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChatVOStandardScheme getScheme() {
      return new ChatVOStandardScheme();
    }
  }

  private static class ChatVOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ChatVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ChatVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SERVER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.serverId = iprot.readString();
              struct.setServerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SPEAKER
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.speaker = iprot.readByte();
              struct.setSpeakerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORIGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.origin = iprot.readByte();
              struct.setOriginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORIGIN_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.origin_str = iprot.readString();
              struct.setOrigin_strIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MSG_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msgType = iprot.readString();
              struct.setMsgTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ASSET_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.assetUrl = iprot.readString();
              struct.setAssetUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BTN_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.btnContent = iprot.readString();
              struct.setBtnContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ROOM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.roomId = iprot.readI32();
              struct.setRoomIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.duration = iprot.readByte();
              struct.setDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // COMPOUND_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.compoundContent = iprot.readString();
              struct.setCompoundContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ChatVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.serverId != null) {
        if (struct.isSetServerId()) {
          oprot.writeFieldBegin(SERVER_ID_FIELD_DESC);
          oprot.writeString(struct.serverId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.content != null) {
        if (struct.isSetContent()) {
          oprot.writeFieldBegin(CONTENT_FIELD_DESC);
          oprot.writeString(struct.content);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSpeaker()) {
        oprot.writeFieldBegin(SPEAKER_FIELD_DESC);
        oprot.writeByte(struct.speaker);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOrigin()) {
        oprot.writeFieldBegin(ORIGIN_FIELD_DESC);
        oprot.writeByte(struct.origin);
        oprot.writeFieldEnd();
      }
      if (struct.origin_str != null) {
        if (struct.isSetOrigin_str()) {
          oprot.writeFieldBegin(ORIGIN_STR_FIELD_DESC);
          oprot.writeString(struct.origin_str);
          oprot.writeFieldEnd();
        }
      }
      if (struct.msgType != null) {
        if (struct.isSetMsgType()) {
          oprot.writeFieldBegin(MSG_TYPE_FIELD_DESC);
          oprot.writeString(struct.msgType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.assetUrl != null) {
        if (struct.isSetAssetUrl()) {
          oprot.writeFieldBegin(ASSET_URL_FIELD_DESC);
          oprot.writeString(struct.assetUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.btnContent != null) {
        if (struct.isSetBtnContent()) {
          oprot.writeFieldBegin(BTN_CONTENT_FIELD_DESC);
          oprot.writeString(struct.btnContent);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRoomId()) {
        oprot.writeFieldBegin(ROOM_ID_FIELD_DESC);
        oprot.writeI32(struct.roomId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDuration()) {
        oprot.writeFieldBegin(DURATION_FIELD_DESC);
        oprot.writeByte(struct.duration);
        oprot.writeFieldEnd();
      }
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.compoundContent != null) {
        if (struct.isSetCompoundContent()) {
          oprot.writeFieldBegin(COMPOUND_CONTENT_FIELD_DESC);
          oprot.writeString(struct.compoundContent);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ChatVOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChatVOTupleScheme getScheme() {
      return new ChatVOTupleScheme();
    }
  }

  private static class ChatVOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ChatVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ChatVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetServerId()) {
        optionals.set(0);
      }
      if (struct.isSetContent()) {
        optionals.set(1);
      }
      if (struct.isSetSpeaker()) {
        optionals.set(2);
      }
      if (struct.isSetOrigin()) {
        optionals.set(3);
      }
      if (struct.isSetOrigin_str()) {
        optionals.set(4);
      }
      if (struct.isSetMsgType()) {
        optionals.set(5);
      }
      if (struct.isSetAssetUrl()) {
        optionals.set(6);
      }
      if (struct.isSetBtnContent()) {
        optionals.set(7);
      }
      if (struct.isSetRoomId()) {
        optionals.set(8);
      }
      if (struct.isSetPositionId()) {
        optionals.set(9);
      }
      if (struct.isSetDuration()) {
        optionals.set(10);
      }
      if (struct.isSetId()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(12);
      }
      if (struct.isSetCompoundContent()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetServerId()) {
        oprot.writeString(struct.serverId);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetSpeaker()) {
        oprot.writeByte(struct.speaker);
      }
      if (struct.isSetOrigin()) {
        oprot.writeByte(struct.origin);
      }
      if (struct.isSetOrigin_str()) {
        oprot.writeString(struct.origin_str);
      }
      if (struct.isSetMsgType()) {
        oprot.writeString(struct.msgType);
      }
      if (struct.isSetAssetUrl()) {
        oprot.writeString(struct.assetUrl);
      }
      if (struct.isSetBtnContent()) {
        oprot.writeString(struct.btnContent);
      }
      if (struct.isSetRoomId()) {
        oprot.writeI32(struct.roomId);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetDuration()) {
        oprot.writeByte(struct.duration);
      }
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetCompoundContent()) {
        oprot.writeString(struct.compoundContent);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ChatVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.serverId = iprot.readString();
        struct.setServerIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(2)) {
        struct.speaker = iprot.readByte();
        struct.setSpeakerIsSet(true);
      }
      if (incoming.get(3)) {
        struct.origin = iprot.readByte();
        struct.setOriginIsSet(true);
      }
      if (incoming.get(4)) {
        struct.origin_str = iprot.readString();
        struct.setOrigin_strIsSet(true);
      }
      if (incoming.get(5)) {
        struct.msgType = iprot.readString();
        struct.setMsgTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.assetUrl = iprot.readString();
        struct.setAssetUrlIsSet(true);
      }
      if (incoming.get(7)) {
        struct.btnContent = iprot.readString();
        struct.setBtnContentIsSet(true);
      }
      if (incoming.get(8)) {
        struct.roomId = iprot.readI32();
        struct.setRoomIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.duration = iprot.readByte();
        struct.setDurationIsSet(true);
      }
      if (incoming.get(11)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.compoundContent = iprot.readString();
        struct.setCompoundContentIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

