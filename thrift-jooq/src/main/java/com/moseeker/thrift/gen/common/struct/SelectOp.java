/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.common.struct;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum SelectOp implements TEnum {
  FIELD(0),
  DISTINCT(1),
  COUNT(2),
  COUNT_DISTINCT(3),
  SUM(4),
  AVG(5),
  MAX(6),
  MIN(7),
  UCASE(8),
  LCASE(9),
  LEN(10),
  ROUND(11),
  TRIM(12);

  private final int value;

  private SelectOp(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SelectOp findByValue(int value) { 
    switch (value) {
      case 0:
        return FIELD;
      case 1:
        return DISTINCT;
      case 2:
        return COUNT;
      case 3:
        return COUNT_DISTINCT;
      case 4:
        return SUM;
      case 5:
        return AVG;
      case 6:
        return MAX;
      case 7:
        return MIN;
      case 8:
        return UCASE;
      case 9:
        return LCASE;
      case 10:
        return LEN;
      case 11:
        return ROUND;
      case 12:
        return TRIM;
      default:
        return null;
    }
  }
}
