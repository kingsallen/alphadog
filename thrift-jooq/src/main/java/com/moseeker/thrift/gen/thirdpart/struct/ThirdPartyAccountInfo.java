/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.thirdpart.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-10-23")
public class ThirdPartyAccountInfo implements org.apache.thrift.TBase<ThirdPartyAccountInfo, ThirdPartyAccountInfo._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdPartyAccountInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdPartyAccountInfo");

  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("company", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.LIST, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdPartyAccountInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdPartyAccountInfoTupleSchemeFactory();

  public java.util.List<ThirdPartyAccountInfoCity> city; // optional
  public java.util.List<ThirdPartyAccountInfoAddress> address; // optional
  public java.util.List<ThirdPartyAccountInfoCompany> company; // optional
  public java.util.List<ThirdPartyAccountInfoDepartment> department; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CITY((short)3, "city"),
    ADDRESS((short)4, "address"),
    COMPANY((short)5, "company"),
    DEPARTMENT((short)6, "department");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 3: // CITY
          return CITY;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // COMPANY
          return COMPANY;
        case 6: // DEPARTMENT
          return DEPARTMENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.CITY,_Fields.ADDRESS,_Fields.COMPANY,_Fields.DEPARTMENT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ThirdPartyAccountInfoCity"))));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ThirdPartyAccountInfoAddress"))));
    tmpMap.put(_Fields.COMPANY, new org.apache.thrift.meta_data.FieldMetaData("company", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ThirdPartyAccountInfoCompany"))));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ThirdPartyAccountInfoDepartment"))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdPartyAccountInfo.class, metaDataMap);
  }

  public ThirdPartyAccountInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartyAccountInfo(ThirdPartyAccountInfo other) {
    if (other.isSetCity()) {
      java.util.List<ThirdPartyAccountInfoCity> __this__city = new java.util.ArrayList<ThirdPartyAccountInfoCity>(other.city.size());
      for (ThirdPartyAccountInfoCity other_element : other.city) {
        __this__city.add(other_element);
      }
      this.city = __this__city;
    }
    if (other.isSetAddress()) {
      java.util.List<ThirdPartyAccountInfoAddress> __this__address = new java.util.ArrayList<ThirdPartyAccountInfoAddress>(other.address.size());
      for (ThirdPartyAccountInfoAddress other_element : other.address) {
        __this__address.add(other_element);
      }
      this.address = __this__address;
    }
    if (other.isSetCompany()) {
      java.util.List<ThirdPartyAccountInfoCompany> __this__company = new java.util.ArrayList<ThirdPartyAccountInfoCompany>(other.company.size());
      for (ThirdPartyAccountInfoCompany other_element : other.company) {
        __this__company.add(other_element);
      }
      this.company = __this__company;
    }
    if (other.isSetDepartment()) {
      java.util.List<ThirdPartyAccountInfoDepartment> __this__department = new java.util.ArrayList<ThirdPartyAccountInfoDepartment>(other.department.size());
      for (ThirdPartyAccountInfoDepartment other_element : other.department) {
        __this__department.add(other_element);
      }
      this.department = __this__department;
    }
  }

  public ThirdPartyAccountInfo deepCopy() {
    return new ThirdPartyAccountInfo(this);
  }

  @Override
  public void clear() {
    this.city = null;
    this.address = null;
    this.company = null;
    this.department = null;
  }

  public int getCitySize() {
    return (this.city == null) ? 0 : this.city.size();
  }

  public java.util.Iterator<ThirdPartyAccountInfoCity> getCityIterator() {
    return (this.city == null) ? null : this.city.iterator();
  }

  public void addToCity(ThirdPartyAccountInfoCity elem) {
    if (this.city == null) {
      this.city = new java.util.ArrayList<ThirdPartyAccountInfoCity>();
    }
    this.city.add(elem);
  }

  public java.util.List<ThirdPartyAccountInfoCity> getCity() {
    return this.city;
  }

  public ThirdPartyAccountInfo setCity(java.util.List<ThirdPartyAccountInfoCity> city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public int getAddressSize() {
    return (this.address == null) ? 0 : this.address.size();
  }

  public java.util.Iterator<ThirdPartyAccountInfoAddress> getAddressIterator() {
    return (this.address == null) ? null : this.address.iterator();
  }

  public void addToAddress(ThirdPartyAccountInfoAddress elem) {
    if (this.address == null) {
      this.address = new java.util.ArrayList<ThirdPartyAccountInfoAddress>();
    }
    this.address.add(elem);
  }

  public java.util.List<ThirdPartyAccountInfoAddress> getAddress() {
    return this.address;
  }

  public ThirdPartyAccountInfo setAddress(java.util.List<ThirdPartyAccountInfoAddress> address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public int getCompanySize() {
    return (this.company == null) ? 0 : this.company.size();
  }

  public java.util.Iterator<ThirdPartyAccountInfoCompany> getCompanyIterator() {
    return (this.company == null) ? null : this.company.iterator();
  }

  public void addToCompany(ThirdPartyAccountInfoCompany elem) {
    if (this.company == null) {
      this.company = new java.util.ArrayList<ThirdPartyAccountInfoCompany>();
    }
    this.company.add(elem);
  }

  public java.util.List<ThirdPartyAccountInfoCompany> getCompany() {
    return this.company;
  }

  public ThirdPartyAccountInfo setCompany(java.util.List<ThirdPartyAccountInfoCompany> company) {
    this.company = company;
    return this;
  }

  public void unsetCompany() {
    this.company = null;
  }

  /** Returns true if field company is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany() {
    return this.company != null;
  }

  public void setCompanyIsSet(boolean value) {
    if (!value) {
      this.company = null;
    }
  }

  public int getDepartmentSize() {
    return (this.department == null) ? 0 : this.department.size();
  }

  public java.util.Iterator<ThirdPartyAccountInfoDepartment> getDepartmentIterator() {
    return (this.department == null) ? null : this.department.iterator();
  }

  public void addToDepartment(ThirdPartyAccountInfoDepartment elem) {
    if (this.department == null) {
      this.department = new java.util.ArrayList<ThirdPartyAccountInfoDepartment>();
    }
    this.department.add(elem);
  }

  public java.util.List<ThirdPartyAccountInfoDepartment> getDepartment() {
    return this.department;
  }

  public ThirdPartyAccountInfo setDepartment(java.util.List<ThirdPartyAccountInfoDepartment> department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((java.util.List<ThirdPartyAccountInfoCity>)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.util.List<ThirdPartyAccountInfoAddress>)value);
      }
      break;

    case COMPANY:
      if (value == null) {
        unsetCompany();
      } else {
        setCompany((java.util.List<ThirdPartyAccountInfoCompany>)value);
      }
      break;

    case DEPARTMENT:
      if (value == null) {
        unsetDepartment();
      } else {
        setDepartment((java.util.List<ThirdPartyAccountInfoDepartment>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CITY:
      return getCity();

    case ADDRESS:
      return getAddress();

    case COMPANY:
      return getCompany();

    case DEPARTMENT:
      return getDepartment();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CITY:
      return isSetCity();
    case ADDRESS:
      return isSetAddress();
    case COMPANY:
      return isSetCompany();
    case DEPARTMENT:
      return isSetDepartment();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartyAccountInfo)
      return this.equals((ThirdPartyAccountInfo)that);
    return false;
  }

  public boolean equals(ThirdPartyAccountInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_company = true && this.isSetCompany();
    boolean that_present_company = true && that.isSetCompany();
    if (this_present_company || that_present_company) {
      if (!(this_present_company && that_present_company))
        return false;
      if (!this.company.equals(that.company))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany()) ? 131071 : 524287);
    if (isSetCompany())
      hashCode = hashCode * 8191 + company.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ThirdPartyAccountInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompany()).compareTo(other.isSetCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company, other.company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdPartyAccountInfo(");
    boolean first = true;

    if (isSetCity()) {
      sb.append("city:");
      if (this.city == null) {
        sb.append("null");
      } else {
        sb.append(this.city);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetCompany()) {
      if (!first) sb.append(", ");
      sb.append("company:");
      if (this.company == null) {
        sb.append("null");
      } else {
        sb.append(this.company);
      }
      first = false;
    }
    if (isSetDepartment()) {
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdPartyAccountInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyAccountInfoStandardScheme getScheme() {
      return new ThirdPartyAccountInfoStandardScheme();
    }
  }

  private static class ThirdPartyAccountInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdPartyAccountInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdPartyAccountInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 3: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.city = new java.util.ArrayList<ThirdPartyAccountInfoCity>(_list0.size);
                ThirdPartyAccountInfoCity _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new ThirdPartyAccountInfoCity();
                  _elem1.read(iprot);
                  struct.city.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.address = new java.util.ArrayList<ThirdPartyAccountInfoAddress>(_list3.size);
                ThirdPartyAccountInfoAddress _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new ThirdPartyAccountInfoAddress();
                  _elem4.read(iprot);
                  struct.address.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.company = new java.util.ArrayList<ThirdPartyAccountInfoCompany>(_list6.size);
                ThirdPartyAccountInfoCompany _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = new ThirdPartyAccountInfoCompany();
                  _elem7.read(iprot);
                  struct.company.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.department = new java.util.ArrayList<ThirdPartyAccountInfoDepartment>(_list9.size);
                ThirdPartyAccountInfoDepartment _elem10;
                for (int _i11 = 0; _i11 < _list9.size; ++_i11)
                {
                  _elem10 = new ThirdPartyAccountInfoDepartment();
                  _elem10.read(iprot);
                  struct.department.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setDepartmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdPartyAccountInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.city != null) {
        if (struct.isSetCity()) {
          oprot.writeFieldBegin(CITY_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.city.size()));
            for (ThirdPartyAccountInfoCity _iter12 : struct.city)
            {
              _iter12.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.address.size()));
            for (ThirdPartyAccountInfoAddress _iter13 : struct.address)
            {
              _iter13.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.company != null) {
        if (struct.isSetCompany()) {
          oprot.writeFieldBegin(COMPANY_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.company.size()));
            for (ThirdPartyAccountInfoCompany _iter14 : struct.company)
            {
              _iter14.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.department != null) {
        if (struct.isSetDepartment()) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.department.size()));
            for (ThirdPartyAccountInfoDepartment _iter15 : struct.department)
            {
              _iter15.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdPartyAccountInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyAccountInfoTupleScheme getScheme() {
      return new ThirdPartyAccountInfoTupleScheme();
    }
  }

  private static class ThirdPartyAccountInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdPartyAccountInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdPartyAccountInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCity()) {
        optionals.set(0);
      }
      if (struct.isSetAddress()) {
        optionals.set(1);
      }
      if (struct.isSetCompany()) {
        optionals.set(2);
      }
      if (struct.isSetDepartment()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetCity()) {
        {
          oprot.writeI32(struct.city.size());
          for (ThirdPartyAccountInfoCity _iter16 : struct.city)
          {
            _iter16.write(oprot);
          }
        }
      }
      if (struct.isSetAddress()) {
        {
          oprot.writeI32(struct.address.size());
          for (ThirdPartyAccountInfoAddress _iter17 : struct.address)
          {
            _iter17.write(oprot);
          }
        }
      }
      if (struct.isSetCompany()) {
        {
          oprot.writeI32(struct.company.size());
          for (ThirdPartyAccountInfoCompany _iter18 : struct.company)
          {
            _iter18.write(oprot);
          }
        }
      }
      if (struct.isSetDepartment()) {
        {
          oprot.writeI32(struct.department.size());
          for (ThirdPartyAccountInfoDepartment _iter19 : struct.department)
          {
            _iter19.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdPartyAccountInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list20 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.city = new java.util.ArrayList<ThirdPartyAccountInfoCity>(_list20.size);
          ThirdPartyAccountInfoCity _elem21;
          for (int _i22 = 0; _i22 < _list20.size; ++_i22)
          {
            _elem21 = new ThirdPartyAccountInfoCity();
            _elem21.read(iprot);
            struct.city.add(_elem21);
          }
        }
        struct.setCityIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list23 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.address = new java.util.ArrayList<ThirdPartyAccountInfoAddress>(_list23.size);
          ThirdPartyAccountInfoAddress _elem24;
          for (int _i25 = 0; _i25 < _list23.size; ++_i25)
          {
            _elem24 = new ThirdPartyAccountInfoAddress();
            _elem24.read(iprot);
            struct.address.add(_elem24);
          }
        }
        struct.setAddressIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list26 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.company = new java.util.ArrayList<ThirdPartyAccountInfoCompany>(_list26.size);
          ThirdPartyAccountInfoCompany _elem27;
          for (int _i28 = 0; _i28 < _list26.size; ++_i28)
          {
            _elem27 = new ThirdPartyAccountInfoCompany();
            _elem27.read(iprot);
            struct.company.add(_elem27);
          }
        }
        struct.setCompanyIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.department = new java.util.ArrayList<ThirdPartyAccountInfoDepartment>(_list29.size);
          ThirdPartyAccountInfoDepartment _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new ThirdPartyAccountInfoDepartment();
            _elem30.read(iprot);
            struct.department.add(_elem30);
          }
        }
        struct.setDepartmentIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

