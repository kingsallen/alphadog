/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.analytics;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-15")
public class WebProfileCompletenessDO implements org.apache.thrift.TBase<WebProfileCompletenessDO, WebProfileCompletenessDO._Fields>, java.io.Serializable, Cloneable, Comparable<WebProfileCompletenessDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WebProfileCompletenessDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPLETENESS_PERCENT_FIELD_DESC = new org.apache.thrift.protocol.TField("completenessPercent", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField PROFILE_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("profileCount", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WebProfileCompletenessDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WebProfileCompletenessDOTupleSchemeFactory();

  public int id; // optional
  public double completenessPercent; // optional
  public int profileCount; // optional
  public java.lang.String createTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPLETENESS_PERCENT((short)2, "completenessPercent"),
    PROFILE_COUNT((short)3, "profileCount"),
    CREATE_TIME((short)4, "createTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPLETENESS_PERCENT
          return COMPLETENESS_PERCENT;
        case 3: // PROFILE_COUNT
          return PROFILE_COUNT;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPLETENESSPERCENT_ISSET_ID = 1;
  private static final int __PROFILECOUNT_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPLETENESS_PERCENT,_Fields.PROFILE_COUNT,_Fields.CREATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPLETENESS_PERCENT, new org.apache.thrift.meta_data.FieldMetaData("completenessPercent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PROFILE_COUNT, new org.apache.thrift.meta_data.FieldMetaData("profileCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WebProfileCompletenessDO.class, metaDataMap);
  }

  public WebProfileCompletenessDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WebProfileCompletenessDO(WebProfileCompletenessDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.completenessPercent = other.completenessPercent;
    this.profileCount = other.profileCount;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
  }

  public WebProfileCompletenessDO deepCopy() {
    return new WebProfileCompletenessDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompletenessPercentIsSet(false);
    this.completenessPercent = 0.0;
    setProfileCountIsSet(false);
    this.profileCount = 0;
    this.createTime = null;
  }

  public int getId() {
    return this.id;
  }

  public WebProfileCompletenessDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public double getCompletenessPercent() {
    return this.completenessPercent;
  }

  public WebProfileCompletenessDO setCompletenessPercent(double completenessPercent) {
    this.completenessPercent = completenessPercent;
    setCompletenessPercentIsSet(true);
    return this;
  }

  public void unsetCompletenessPercent() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPLETENESSPERCENT_ISSET_ID);
  }

  /** Returns true if field completenessPercent is set (has been assigned a value) and false otherwise */
  public boolean isSetCompletenessPercent() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPLETENESSPERCENT_ISSET_ID);
  }

  public void setCompletenessPercentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPLETENESSPERCENT_ISSET_ID, value);
  }

  public int getProfileCount() {
    return this.profileCount;
  }

  public WebProfileCompletenessDO setProfileCount(int profileCount) {
    this.profileCount = profileCount;
    setProfileCountIsSet(true);
    return this;
  }

  public void unsetProfileCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROFILECOUNT_ISSET_ID);
  }

  /** Returns true if field profileCount is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROFILECOUNT_ISSET_ID);
  }

  public void setProfileCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROFILECOUNT_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public WebProfileCompletenessDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case COMPLETENESS_PERCENT:
      if (value == null) {
        unsetCompletenessPercent();
      } else {
        setCompletenessPercent((java.lang.Double)value);
      }
      break;

    case PROFILE_COUNT:
      if (value == null) {
        unsetProfileCount();
      } else {
        setProfileCount((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPLETENESS_PERCENT:
      return getCompletenessPercent();

    case PROFILE_COUNT:
      return getProfileCount();

    case CREATE_TIME:
      return getCreateTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPLETENESS_PERCENT:
      return isSetCompletenessPercent();
    case PROFILE_COUNT:
      return isSetProfileCount();
    case CREATE_TIME:
      return isSetCreateTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WebProfileCompletenessDO)
      return this.equals((WebProfileCompletenessDO)that);
    return false;
  }

  public boolean equals(WebProfileCompletenessDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_completenessPercent = true && this.isSetCompletenessPercent();
    boolean that_present_completenessPercent = true && that.isSetCompletenessPercent();
    if (this_present_completenessPercent || that_present_completenessPercent) {
      if (!(this_present_completenessPercent && that_present_completenessPercent))
        return false;
      if (this.completenessPercent != that.completenessPercent)
        return false;
    }

    boolean this_present_profileCount = true && this.isSetProfileCount();
    boolean that_present_profileCount = true && that.isSetProfileCount();
    if (this_present_profileCount || that_present_profileCount) {
      if (!(this_present_profileCount && that_present_profileCount))
        return false;
      if (this.profileCount != that.profileCount)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompletenessPercent()) ? 131071 : 524287);
    if (isSetCompletenessPercent())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(completenessPercent);

    hashCode = hashCode * 8191 + ((isSetProfileCount()) ? 131071 : 524287);
    if (isSetProfileCount())
      hashCode = hashCode * 8191 + profileCount;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WebProfileCompletenessDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompletenessPercent()).compareTo(other.isSetCompletenessPercent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompletenessPercent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.completenessPercent, other.completenessPercent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProfileCount()).compareTo(other.isSetProfileCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileCount, other.profileCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WebProfileCompletenessDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompletenessPercent()) {
      if (!first) sb.append(", ");
      sb.append("completenessPercent:");
      sb.append(this.completenessPercent);
      first = false;
    }
    if (isSetProfileCount()) {
      if (!first) sb.append(", ");
      sb.append("profileCount:");
      sb.append(this.profileCount);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WebProfileCompletenessDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebProfileCompletenessDOStandardScheme getScheme() {
      return new WebProfileCompletenessDOStandardScheme();
    }
  }

  private static class WebProfileCompletenessDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<WebProfileCompletenessDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WebProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPLETENESS_PERCENT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.completenessPercent = iprot.readDouble();
              struct.setCompletenessPercentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROFILE_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileCount = iprot.readI32();
              struct.setProfileCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WebProfileCompletenessDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompletenessPercent()) {
        oprot.writeFieldBegin(COMPLETENESS_PERCENT_FIELD_DESC);
        oprot.writeDouble(struct.completenessPercent);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProfileCount()) {
        oprot.writeFieldBegin(PROFILE_COUNT_FIELD_DESC);
        oprot.writeI32(struct.profileCount);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WebProfileCompletenessDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebProfileCompletenessDOTupleScheme getScheme() {
      return new WebProfileCompletenessDOTupleScheme();
    }
  }

  private static class WebProfileCompletenessDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<WebProfileCompletenessDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WebProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompletenessPercent()) {
        optionals.set(1);
      }
      if (struct.isSetProfileCount()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompletenessPercent()) {
        oprot.writeDouble(struct.completenessPercent);
      }
      if (struct.isSetProfileCount()) {
        oprot.writeI32(struct.profileCount);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WebProfileCompletenessDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.completenessPercent = iprot.readDouble();
        struct.setCompletenessPercentIsSet(true);
      }
      if (incoming.get(2)) {
        struct.profileCount = iprot.readI32();
        struct.setProfileCountIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

