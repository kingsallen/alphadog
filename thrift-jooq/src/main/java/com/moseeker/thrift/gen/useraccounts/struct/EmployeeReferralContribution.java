/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-08-06")
public class EmployeeReferralContribution implements org.apache.thrift.TBase<EmployeeReferralContribution, EmployeeReferralContribution._Fields>, java.io.Serializable, Cloneable, Comparable<EmployeeReferralContribution> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EmployeeReferralContribution");

    private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField OPENID_FIELD_DESC = new org.apache.thrift.protocol.TField("openid", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField POINT_FIELD_DESC = new org.apache.thrift.protocol.TField("point", org.apache.thrift.protocol.TType.I32, (short)4);
    private static final org.apache.thrift.protocol.TField RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("rank", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField FORWARD_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("forwardCount", org.apache.thrift.protocol.TType.I32, (short)6);
    private static final org.apache.thrift.protocol.TField DELIVER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("deliverCount", org.apache.thrift.protocol.TType.I32, (short)7);
    private static final org.apache.thrift.protocol.TField ACCESS_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("accessToken", org.apache.thrift.protocol.TType.STRING, (short)8);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EmployeeReferralContributionStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EmployeeReferralContributionTupleSchemeFactory();

    public int userId; // optional
    public int companyId; // optional
    public java.lang.String openid; // optional
    public int point; // optional
    public int rank; // optional
    public int forwardCount; // optional
    public int deliverCount; // optional
    public java.lang.String accessToken; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        USER_ID((short)1, "userId"),
        COMPANY_ID((short)2, "companyId"),
        OPENID((short)3, "openid"),
        POINT((short)4, "point"),
        RANK((short)5, "rank"),
        FORWARD_COUNT((short)6, "forwardCount"),
        DELIVER_COUNT((short)7, "deliverCount"),
        ACCESS_TOKEN((short)8, "accessToken");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // USER_ID
                    return USER_ID;
                case 2: // COMPANY_ID
                    return COMPANY_ID;
                case 3: // OPENID
                    return OPENID;
                case 4: // POINT
                    return POINT;
                case 5: // RANK
                    return RANK;
                case 6: // FORWARD_COUNT
                    return FORWARD_COUNT;
                case 7: // DELIVER_COUNT
                    return DELIVER_COUNT;
                case 8: // ACCESS_TOKEN
                    return ACCESS_TOKEN;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __USERID_ISSET_ID = 0;
    private static final int __COMPANYID_ISSET_ID = 1;
    private static final int __POINT_ISSET_ID = 2;
    private static final int __RANK_ISSET_ID = 3;
    private static final int __FORWARDCOUNT_ISSET_ID = 4;
    private static final int __DELIVERCOUNT_ISSET_ID = 5;
    private byte __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.USER_ID,_Fields.COMPANY_ID,_Fields.OPENID,_Fields.POINT,_Fields.RANK,_Fields.FORWARD_COUNT,_Fields.DELIVER_COUNT,_Fields.ACCESS_TOKEN};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.OPENID, new org.apache.thrift.meta_data.FieldMetaData("openid", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.POINT, new org.apache.thrift.meta_data.FieldMetaData("point", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.RANK, new org.apache.thrift.meta_data.FieldMetaData("rank", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.FORWARD_COUNT, new org.apache.thrift.meta_data.FieldMetaData("forwardCount", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.DELIVER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("deliverCount", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.ACCESS_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("accessToken", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EmployeeReferralContribution.class, metaDataMap);
    }

    public EmployeeReferralContribution() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public EmployeeReferralContribution(EmployeeReferralContribution other) {
        __isset_bitfield = other.__isset_bitfield;
        this.userId = other.userId;
        this.companyId = other.companyId;
        if (other.isSetOpenid()) {
            this.openid = other.openid;
        }
        this.point = other.point;
        this.rank = other.rank;
        this.forwardCount = other.forwardCount;
        this.deliverCount = other.deliverCount;
        if (other.isSetAccessToken()) {
            this.accessToken = other.accessToken;
        }
    }

    public EmployeeReferralContribution deepCopy() {
        return new EmployeeReferralContribution(this);
    }

    @Override
    public void clear() {
        setUserIdIsSet(false);
        this.userId = 0;
        setCompanyIdIsSet(false);
        this.companyId = 0;
        this.openid = null;
        setPointIsSet(false);
        this.point = 0;
        setRankIsSet(false);
        this.rank = 0;
        setForwardCountIsSet(false);
        this.forwardCount = 0;
        setDeliverCountIsSet(false);
        this.deliverCount = 0;
        this.accessToken = null;
    }

    public int getUserId() {
        return this.userId;
    }

    public EmployeeReferralContribution setUserId(int userId) {
        this.userId = userId;
        setUserIdIsSet(true);
        return this;
    }

    public void unsetUserId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    /** Returns true if field userId is set (has been assigned a value) and false otherwise */
    public boolean isSetUserId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
    }

    public void setUserIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
    }

    public int getCompanyId() {
        return this.companyId;
    }

    public EmployeeReferralContribution setCompanyId(int companyId) {
        this.companyId = companyId;
        setCompanyIdIsSet(true);
        return this;
    }

    public void unsetCompanyId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public java.lang.String getOpenid() {
        return this.openid;
    }

    public EmployeeReferralContribution setOpenid(java.lang.String openid) {
        this.openid = openid;
        return this;
    }

    public void unsetOpenid() {
        this.openid = null;
    }

    /** Returns true if field openid is set (has been assigned a value) and false otherwise */
    public boolean isSetOpenid() {
        return this.openid != null;
    }

    public void setOpenidIsSet(boolean value) {
        if (!value) {
            this.openid = null;
        }
    }

    public int getPoint() {
        return this.point;
    }

    public EmployeeReferralContribution setPoint(int point) {
        this.point = point;
        setPointIsSet(true);
        return this;
    }

    public void unsetPoint() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POINT_ISSET_ID);
    }

    /** Returns true if field point is set (has been assigned a value) and false otherwise */
    public boolean isSetPoint() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POINT_ISSET_ID);
    }

    public void setPointIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POINT_ISSET_ID, value);
    }

    public int getRank() {
        return this.rank;
    }

    public EmployeeReferralContribution setRank(int rank) {
        this.rank = rank;
        setRankIsSet(true);
        return this;
    }

    public void unsetRank() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RANK_ISSET_ID);
    }

    /** Returns true if field rank is set (has been assigned a value) and false otherwise */
    public boolean isSetRank() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RANK_ISSET_ID);
    }

    public void setRankIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RANK_ISSET_ID, value);
    }

    public int getForwardCount() {
        return this.forwardCount;
    }

    public EmployeeReferralContribution setForwardCount(int forwardCount) {
        this.forwardCount = forwardCount;
        setForwardCountIsSet(true);
        return this;
    }

    public void unsetForwardCount() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FORWARDCOUNT_ISSET_ID);
    }

    /** Returns true if field forwardCount is set (has been assigned a value) and false otherwise */
    public boolean isSetForwardCount() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FORWARDCOUNT_ISSET_ID);
    }

    public void setForwardCountIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FORWARDCOUNT_ISSET_ID, value);
    }

    public int getDeliverCount() {
        return this.deliverCount;
    }

    public EmployeeReferralContribution setDeliverCount(int deliverCount) {
        this.deliverCount = deliverCount;
        setDeliverCountIsSet(true);
        return this;
    }

    public void unsetDeliverCount() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DELIVERCOUNT_ISSET_ID);
    }

    /** Returns true if field deliverCount is set (has been assigned a value) and false otherwise */
    public boolean isSetDeliverCount() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DELIVERCOUNT_ISSET_ID);
    }

    public void setDeliverCountIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DELIVERCOUNT_ISSET_ID, value);
    }

    public java.lang.String getAccessToken() {
        return this.accessToken;
    }

    public EmployeeReferralContribution setAccessToken(java.lang.String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    public void unsetAccessToken() {
        this.accessToken = null;
    }

    /** Returns true if field accessToken is set (has been assigned a value) and false otherwise */
    public boolean isSetAccessToken() {
        return this.accessToken != null;
    }

    public void setAccessTokenIsSet(boolean value) {
        if (!value) {
            this.accessToken = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case USER_ID:
                if (value == null) {
                    unsetUserId();
                } else {
                    setUserId((java.lang.Integer)value);
                }
                break;

            case COMPANY_ID:
                if (value == null) {
                    unsetCompanyId();
                } else {
                    setCompanyId((java.lang.Integer)value);
                }
                break;

            case OPENID:
                if (value == null) {
                    unsetOpenid();
                } else {
                    setOpenid((java.lang.String)value);
                }
                break;

            case POINT:
                if (value == null) {
                    unsetPoint();
                } else {
                    setPoint((java.lang.Integer)value);
                }
                break;

            case RANK:
                if (value == null) {
                    unsetRank();
                } else {
                    setRank((java.lang.Integer)value);
                }
                break;

            case FORWARD_COUNT:
                if (value == null) {
                    unsetForwardCount();
                } else {
                    setForwardCount((java.lang.Integer)value);
                }
                break;

            case DELIVER_COUNT:
                if (value == null) {
                    unsetDeliverCount();
                } else {
                    setDeliverCount((java.lang.Integer)value);
                }
                break;

            case ACCESS_TOKEN:
                if (value == null) {
                    unsetAccessToken();
                } else {
                    setAccessToken((java.lang.String)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case USER_ID:
                return getUserId();

            case COMPANY_ID:
                return getCompanyId();

            case OPENID:
                return getOpenid();

            case POINT:
                return getPoint();

            case RANK:
                return getRank();

            case FORWARD_COUNT:
                return getForwardCount();

            case DELIVER_COUNT:
                return getDeliverCount();

            case ACCESS_TOKEN:
                return getAccessToken();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case USER_ID:
                return isSetUserId();
            case COMPANY_ID:
                return isSetCompanyId();
            case OPENID:
                return isSetOpenid();
            case POINT:
                return isSetPoint();
            case RANK:
                return isSetRank();
            case FORWARD_COUNT:
                return isSetForwardCount();
            case DELIVER_COUNT:
                return isSetDeliverCount();
            case ACCESS_TOKEN:
                return isSetAccessToken();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof EmployeeReferralContribution)
            return this.equals((EmployeeReferralContribution)that);
        return false;
    }

    public boolean equals(EmployeeReferralContribution that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_userId = true && this.isSetUserId();
        boolean that_present_userId = true && that.isSetUserId();
        if (this_present_userId || that_present_userId) {
            if (!(this_present_userId && that_present_userId))
                return false;
            if (this.userId != that.userId)
                return false;
        }

        boolean this_present_companyId = true && this.isSetCompanyId();
        boolean that_present_companyId = true && that.isSetCompanyId();
        if (this_present_companyId || that_present_companyId) {
            if (!(this_present_companyId && that_present_companyId))
                return false;
            if (this.companyId != that.companyId)
                return false;
        }

        boolean this_present_openid = true && this.isSetOpenid();
        boolean that_present_openid = true && that.isSetOpenid();
        if (this_present_openid || that_present_openid) {
            if (!(this_present_openid && that_present_openid))
                return false;
            if (!this.openid.equals(that.openid))
                return false;
        }

        boolean this_present_point = true && this.isSetPoint();
        boolean that_present_point = true && that.isSetPoint();
        if (this_present_point || that_present_point) {
            if (!(this_present_point && that_present_point))
                return false;
            if (this.point != that.point)
                return false;
        }

        boolean this_present_rank = true && this.isSetRank();
        boolean that_present_rank = true && that.isSetRank();
        if (this_present_rank || that_present_rank) {
            if (!(this_present_rank && that_present_rank))
                return false;
            if (this.rank != that.rank)
                return false;
        }

        boolean this_present_forwardCount = true && this.isSetForwardCount();
        boolean that_present_forwardCount = true && that.isSetForwardCount();
        if (this_present_forwardCount || that_present_forwardCount) {
            if (!(this_present_forwardCount && that_present_forwardCount))
                return false;
            if (this.forwardCount != that.forwardCount)
                return false;
        }

        boolean this_present_deliverCount = true && this.isSetDeliverCount();
        boolean that_present_deliverCount = true && that.isSetDeliverCount();
        if (this_present_deliverCount || that_present_deliverCount) {
            if (!(this_present_deliverCount && that_present_deliverCount))
                return false;
            if (this.deliverCount != that.deliverCount)
                return false;
        }

        boolean this_present_accessToken = true && this.isSetAccessToken();
        boolean that_present_accessToken = true && that.isSetAccessToken();
        if (this_present_accessToken || that_present_accessToken) {
            if (!(this_present_accessToken && that_present_accessToken))
                return false;
            if (!this.accessToken.equals(that.accessToken))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetUserId()) ? 131071 : 524287);
        if (isSetUserId())
            hashCode = hashCode * 8191 + userId;

        hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
        if (isSetCompanyId())
            hashCode = hashCode * 8191 + companyId;

        hashCode = hashCode * 8191 + ((isSetOpenid()) ? 131071 : 524287);
        if (isSetOpenid())
            hashCode = hashCode * 8191 + openid.hashCode();

        hashCode = hashCode * 8191 + ((isSetPoint()) ? 131071 : 524287);
        if (isSetPoint())
            hashCode = hashCode * 8191 + point;

        hashCode = hashCode * 8191 + ((isSetRank()) ? 131071 : 524287);
        if (isSetRank())
            hashCode = hashCode * 8191 + rank;

        hashCode = hashCode * 8191 + ((isSetForwardCount()) ? 131071 : 524287);
        if (isSetForwardCount())
            hashCode = hashCode * 8191 + forwardCount;

        hashCode = hashCode * 8191 + ((isSetDeliverCount()) ? 131071 : 524287);
        if (isSetDeliverCount())
            hashCode = hashCode * 8191 + deliverCount;

        hashCode = hashCode * 8191 + ((isSetAccessToken()) ? 131071 : 524287);
        if (isSetAccessToken())
            hashCode = hashCode * 8191 + accessToken.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(EmployeeReferralContribution other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetUserId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompanyId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetOpenid()).compareTo(other.isSetOpenid());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetOpenid()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.openid, other.openid);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetPoint()).compareTo(other.isSetPoint());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPoint()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.point, other.point);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetRank()).compareTo(other.isSetRank());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetRank()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rank, other.rank);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetForwardCount()).compareTo(other.isSetForwardCount());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetForwardCount()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.forwardCount, other.forwardCount);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetDeliverCount()).compareTo(other.isSetDeliverCount());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetDeliverCount()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deliverCount, other.deliverCount);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetAccessToken()).compareTo(other.isSetAccessToken());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAccessToken()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accessToken, other.accessToken);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("EmployeeReferralContribution(");
        boolean first = true;

        if (isSetUserId()) {
            sb.append("userId:");
            sb.append(this.userId);
            first = false;
        }
        if (isSetCompanyId()) {
            if (!first) sb.append(", ");
            sb.append("companyId:");
            sb.append(this.companyId);
            first = false;
        }
        if (isSetOpenid()) {
            if (!first) sb.append(", ");
            sb.append("openid:");
            if (this.openid == null) {
                sb.append("null");
            } else {
                sb.append(this.openid);
            }
            first = false;
        }
        if (isSetPoint()) {
            if (!first) sb.append(", ");
            sb.append("point:");
            sb.append(this.point);
            first = false;
        }
        if (isSetRank()) {
            if (!first) sb.append(", ");
            sb.append("rank:");
            sb.append(this.rank);
            first = false;
        }
        if (isSetForwardCount()) {
            if (!first) sb.append(", ");
            sb.append("forwardCount:");
            sb.append(this.forwardCount);
            first = false;
        }
        if (isSetDeliverCount()) {
            if (!first) sb.append(", ");
            sb.append("deliverCount:");
            sb.append(this.deliverCount);
            first = false;
        }
        if (isSetAccessToken()) {
            if (!first) sb.append(", ");
            sb.append("accessToken:");
            if (this.accessToken == null) {
                sb.append("null");
            } else {
                sb.append(this.accessToken);
            }
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class EmployeeReferralContributionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EmployeeReferralContributionStandardScheme getScheme() {
            return new EmployeeReferralContributionStandardScheme();
        }
    }

    private static class EmployeeReferralContributionStandardScheme extends org.apache.thrift.scheme.StandardScheme<EmployeeReferralContribution> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, EmployeeReferralContribution struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // USER_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.userId = iprot.readI32();
                            struct.setUserIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // COMPANY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.companyId = iprot.readI32();
                            struct.setCompanyIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // OPENID
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.openid = iprot.readString();
                            struct.setOpenidIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // POINT
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.point = iprot.readI32();
                            struct.setPointIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // RANK
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.rank = iprot.readI32();
                            struct.setRankIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // FORWARD_COUNT
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.forwardCount = iprot.readI32();
                            struct.setForwardCountIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // DELIVER_COUNT
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.deliverCount = iprot.readI32();
                            struct.setDeliverCountIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // ACCESS_TOKEN
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.accessToken = iprot.readString();
                            struct.setAccessTokenIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, EmployeeReferralContribution struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetUserId()) {
                oprot.writeFieldBegin(USER_ID_FIELD_DESC);
                oprot.writeI32(struct.userId);
                oprot.writeFieldEnd();
            }
            if (struct.isSetCompanyId()) {
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.companyId);
                oprot.writeFieldEnd();
            }
            if (struct.openid != null) {
                if (struct.isSetOpenid()) {
                    oprot.writeFieldBegin(OPENID_FIELD_DESC);
                    oprot.writeString(struct.openid);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetPoint()) {
                oprot.writeFieldBegin(POINT_FIELD_DESC);
                oprot.writeI32(struct.point);
                oprot.writeFieldEnd();
            }
            if (struct.isSetRank()) {
                oprot.writeFieldBegin(RANK_FIELD_DESC);
                oprot.writeI32(struct.rank);
                oprot.writeFieldEnd();
            }
            if (struct.isSetForwardCount()) {
                oprot.writeFieldBegin(FORWARD_COUNT_FIELD_DESC);
                oprot.writeI32(struct.forwardCount);
                oprot.writeFieldEnd();
            }
            if (struct.isSetDeliverCount()) {
                oprot.writeFieldBegin(DELIVER_COUNT_FIELD_DESC);
                oprot.writeI32(struct.deliverCount);
                oprot.writeFieldEnd();
            }
            if (struct.accessToken != null) {
                if (struct.isSetAccessToken()) {
                    oprot.writeFieldBegin(ACCESS_TOKEN_FIELD_DESC);
                    oprot.writeString(struct.accessToken);
                    oprot.writeFieldEnd();
                }
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class EmployeeReferralContributionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EmployeeReferralContributionTupleScheme getScheme() {
            return new EmployeeReferralContributionTupleScheme();
        }
    }

    private static class EmployeeReferralContributionTupleScheme extends org.apache.thrift.scheme.TupleScheme<EmployeeReferralContribution> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, EmployeeReferralContribution struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetUserId()) {
                optionals.set(0);
            }
            if (struct.isSetCompanyId()) {
                optionals.set(1);
            }
            if (struct.isSetOpenid()) {
                optionals.set(2);
            }
            if (struct.isSetPoint()) {
                optionals.set(3);
            }
            if (struct.isSetRank()) {
                optionals.set(4);
            }
            if (struct.isSetForwardCount()) {
                optionals.set(5);
            }
            if (struct.isSetDeliverCount()) {
                optionals.set(6);
            }
            if (struct.isSetAccessToken()) {
                optionals.set(7);
            }
            oprot.writeBitSet(optionals, 8);
            if (struct.isSetUserId()) {
                oprot.writeI32(struct.userId);
            }
            if (struct.isSetCompanyId()) {
                oprot.writeI32(struct.companyId);
            }
            if (struct.isSetOpenid()) {
                oprot.writeString(struct.openid);
            }
            if (struct.isSetPoint()) {
                oprot.writeI32(struct.point);
            }
            if (struct.isSetRank()) {
                oprot.writeI32(struct.rank);
            }
            if (struct.isSetForwardCount()) {
                oprot.writeI32(struct.forwardCount);
            }
            if (struct.isSetDeliverCount()) {
                oprot.writeI32(struct.deliverCount);
            }
            if (struct.isSetAccessToken()) {
                oprot.writeString(struct.accessToken);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, EmployeeReferralContribution struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(8);
            if (incoming.get(0)) {
                struct.userId = iprot.readI32();
                struct.setUserIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
            }
            if (incoming.get(2)) {
                struct.openid = iprot.readString();
                struct.setOpenidIsSet(true);
            }
            if (incoming.get(3)) {
                struct.point = iprot.readI32();
                struct.setPointIsSet(true);
            }
            if (incoming.get(4)) {
                struct.rank = iprot.readI32();
                struct.setRankIsSet(true);
            }
            if (incoming.get(5)) {
                struct.forwardCount = iprot.readI32();
                struct.setForwardCountIsSet(true);
            }
            if (incoming.get(6)) {
                struct.deliverCount = iprot.readI32();
                struct.setDeliverCountIsSet(true);
            }
            if (incoming.get(7)) {
                struct.accessToken = iprot.readString();
                struct.setAccessTokenIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

