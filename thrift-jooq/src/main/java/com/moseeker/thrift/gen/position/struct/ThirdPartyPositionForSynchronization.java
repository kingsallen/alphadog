/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.position.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-23")
public class ThirdPartyPositionForSynchronization implements org.apache.thrift.TBase<ThirdPartyPositionForSynchronization, ThirdPartyPositionForSynchronization._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdPartyPositionForSynchronization> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdPartyPositionForSynchronization");

  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OCCUPATION_FIELD_DESC = new org.apache.thrift.protocol.TField("occupation", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField CITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("cities", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField SALARY_DISCUSS_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_discuss", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField SALARY_MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_month", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("quantity", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField DEGREE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree_code", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience_code", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SALARY_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_bottom", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SALARY_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_top", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PUB_PLACE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("pub_place_code", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField WORK_PLACE_FIELD_DESC = new org.apache.thrift.protocol.TField("work_place", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField STOP_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("stop_date", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField WORK_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("work_type", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("job_id", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField PUB_PLACE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("pub_place_name", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("account_id", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField FEEDBACK_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("feedback_period", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField RECRUIT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("recruit_type", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField PRACTICE_SALARY_FIELD_DESC = new org.apache.thrift.protocol.TField("practice_salary", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField PRACTICE_PER_WEEK_FIELD_DESC = new org.apache.thrift.protocol.TField("practice_per_week", org.apache.thrift.protocol.TType.BYTE, (short)28);
  private static final org.apache.thrift.protocol.TField PRACTICE_SALARY_UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("practice_salary_unit", org.apache.thrift.protocol.TType.BYTE, (short)29);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdPartyPositionForSynchronizationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdPartyPositionForSynchronizationTupleSchemeFactory();

  public java.lang.String title; // required
  public java.util.List<java.lang.String> occupation; // required
  public java.util.List<java.util.List<java.lang.String>> cities; // required
  public boolean salary_discuss; // required
  public int salary_month; // required
  public int quantity; // required
  public java.lang.String degree_code; // required
  public java.lang.String degree; // required
  public java.lang.String experience_code; // required
  public java.lang.String experience; // required
  public int salary_bottom; // required
  public int salary_top; // required
  public java.lang.String description; // required
  public java.lang.String pub_place_code; // required
  public int position_id; // required
  public java.lang.String work_place; // required
  public java.lang.String email; // required
  public java.lang.String stop_date; // required
  public int channel; // required
  public java.lang.String work_type; // required
  public java.lang.String job_id; // required
  public java.lang.String pub_place_name; // required
  public java.lang.String department; // required
  public int account_id; // required
  public int feedback_period; // required
  public java.lang.String recruit_type; // required
  public int practice_salary; // required
  public byte practice_per_week; // required
  public byte practice_salary_unit; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TITLE((short)1, "title"),
    OCCUPATION((short)2, "occupation"),
    CITIES((short)3, "cities"),
    SALARY_DISCUSS((short)4, "salary_discuss"),
    SALARY_MONTH((short)5, "salary_month"),
    QUANTITY((short)6, "quantity"),
    DEGREE_CODE((short)7, "degree_code"),
    DEGREE((short)8, "degree"),
    EXPERIENCE_CODE((short)9, "experience_code"),
    EXPERIENCE((short)10, "experience"),
    SALARY_BOTTOM((short)11, "salary_bottom"),
    SALARY_TOP((short)12, "salary_top"),
    DESCRIPTION((short)13, "description"),
    PUB_PLACE_CODE((short)14, "pub_place_code"),
    POSITION_ID((short)15, "position_id"),
    WORK_PLACE((short)16, "work_place"),
    EMAIL((short)17, "email"),
    STOP_DATE((short)18, "stop_date"),
    CHANNEL((short)19, "channel"),
    WORK_TYPE((short)20, "work_type"),
    JOB_ID((short)21, "job_id"),
    PUB_PLACE_NAME((short)22, "pub_place_name"),
    DEPARTMENT((short)23, "department"),
    ACCOUNT_ID((short)24, "account_id"),
    FEEDBACK_PERIOD((short)25, "feedback_period"),
    RECRUIT_TYPE((short)26, "recruit_type"),
    PRACTICE_SALARY((short)27, "practice_salary"),
    PRACTICE_PER_WEEK((short)28, "practice_per_week"),
    PRACTICE_SALARY_UNIT((short)29, "practice_salary_unit");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TITLE
          return TITLE;
        case 2: // OCCUPATION
          return OCCUPATION;
        case 3: // CITIES
          return CITIES;
        case 4: // SALARY_DISCUSS
          return SALARY_DISCUSS;
        case 5: // SALARY_MONTH
          return SALARY_MONTH;
        case 6: // QUANTITY
          return QUANTITY;
        case 7: // DEGREE_CODE
          return DEGREE_CODE;
        case 8: // DEGREE
          return DEGREE;
        case 9: // EXPERIENCE_CODE
          return EXPERIENCE_CODE;
        case 10: // EXPERIENCE
          return EXPERIENCE;
        case 11: // SALARY_BOTTOM
          return SALARY_BOTTOM;
        case 12: // SALARY_TOP
          return SALARY_TOP;
        case 13: // DESCRIPTION
          return DESCRIPTION;
        case 14: // PUB_PLACE_CODE
          return PUB_PLACE_CODE;
        case 15: // POSITION_ID
          return POSITION_ID;
        case 16: // WORK_PLACE
          return WORK_PLACE;
        case 17: // EMAIL
          return EMAIL;
        case 18: // STOP_DATE
          return STOP_DATE;
        case 19: // CHANNEL
          return CHANNEL;
        case 20: // WORK_TYPE
          return WORK_TYPE;
        case 21: // JOB_ID
          return JOB_ID;
        case 22: // PUB_PLACE_NAME
          return PUB_PLACE_NAME;
        case 23: // DEPARTMENT
          return DEPARTMENT;
        case 24: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 25: // FEEDBACK_PERIOD
          return FEEDBACK_PERIOD;
        case 26: // RECRUIT_TYPE
          return RECRUIT_TYPE;
        case 27: // PRACTICE_SALARY
          return PRACTICE_SALARY;
        case 28: // PRACTICE_PER_WEEK
          return PRACTICE_PER_WEEK;
        case 29: // PRACTICE_SALARY_UNIT
          return PRACTICE_SALARY_UNIT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SALARY_DISCUSS_ISSET_ID = 0;
  private static final int __SALARY_MONTH_ISSET_ID = 1;
  private static final int __QUANTITY_ISSET_ID = 2;
  private static final int __SALARY_BOTTOM_ISSET_ID = 3;
  private static final int __SALARY_TOP_ISSET_ID = 4;
  private static final int __POSITION_ID_ISSET_ID = 5;
  private static final int __CHANNEL_ISSET_ID = 6;
  private static final int __ACCOUNT_ID_ISSET_ID = 7;
  private static final int __FEEDBACK_PERIOD_ISSET_ID = 8;
  private static final int __PRACTICE_SALARY_ISSET_ID = 9;
  private static final int __PRACTICE_PER_WEEK_ISSET_ID = 10;
  private static final int __PRACTICE_SALARY_UNIT_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OCCUPATION, new org.apache.thrift.meta_data.FieldMetaData("occupation", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                    new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CITIES, new org.apache.thrift.meta_data.FieldMetaData("cities", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                    new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.SALARY_DISCUSS, new org.apache.thrift.meta_data.FieldMetaData("salary_discuss", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SALARY_MONTH, new org.apache.thrift.meta_data.FieldMetaData("salary_month", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("quantity", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEGREE_CODE, new org.apache.thrift.meta_data.FieldMetaData("degree_code", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE_CODE, new org.apache.thrift.meta_data.FieldMetaData("experience_code", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("salary_bottom", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_TOP, new org.apache.thrift.meta_data.FieldMetaData("salary_top", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUB_PLACE_CODE, new org.apache.thrift.meta_data.FieldMetaData("pub_place_code", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORK_PLACE, new org.apache.thrift.meta_data.FieldMetaData("work_place", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STOP_DATE, new org.apache.thrift.meta_data.FieldMetaData("stop_date", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORK_TYPE, new org.apache.thrift.meta_data.FieldMetaData("work_type", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("job_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUB_PLACE_NAME, new org.apache.thrift.meta_data.FieldMetaData("pub_place_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("account_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEEDBACK_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("feedback_period", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECRUIT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("recruit_type", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRACTICE_SALARY, new org.apache.thrift.meta_data.FieldMetaData("practice_salary", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRACTICE_PER_WEEK, new org.apache.thrift.meta_data.FieldMetaData("practice_per_week", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.PRACTICE_SALARY_UNIT, new org.apache.thrift.meta_data.FieldMetaData("practice_salary_unit", org.apache.thrift.TFieldRequirementType.DEFAULT,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdPartyPositionForSynchronization.class, metaDataMap);
  }

  public ThirdPartyPositionForSynchronization() {
    this.title = "";

    this.degree_code = "";

    this.degree = "";

    this.experience_code = "";

    this.experience = "";

    this.description = "";

    this.pub_place_code = "";

    this.work_place = "";

    this.email = "";

    this.stop_date = "";

    this.work_type = "";

    this.job_id = "";

    this.pub_place_name = "";

    this.department = "";

  }

  public ThirdPartyPositionForSynchronization(
          java.lang.String title,
          java.util.List<java.lang.String> occupation,
          java.util.List<java.util.List<java.lang.String>> cities,
          boolean salary_discuss,
          int salary_month,
          int quantity,
          java.lang.String degree_code,
          java.lang.String degree,
          java.lang.String experience_code,
          java.lang.String experience,
          int salary_bottom,
          int salary_top,
          java.lang.String description,
          java.lang.String pub_place_code,
          int position_id,
          java.lang.String work_place,
          java.lang.String email,
          java.lang.String stop_date,
          int channel,
          java.lang.String work_type,
          java.lang.String job_id,
          java.lang.String pub_place_name,
          java.lang.String department,
          int account_id,
          int feedback_period,
          java.lang.String recruit_type,
          int practice_salary,
          byte practice_per_week,
          byte practice_salary_unit)
  {
    this();
    this.title = title;
    this.occupation = occupation;
    this.cities = cities;
    this.salary_discuss = salary_discuss;
    setSalary_discussIsSet(true);
    this.salary_month = salary_month;
    setSalary_monthIsSet(true);
    this.quantity = quantity;
    setQuantityIsSet(true);
    this.degree_code = degree_code;
    this.degree = degree;
    this.experience_code = experience_code;
    this.experience = experience;
    this.salary_bottom = salary_bottom;
    setSalary_bottomIsSet(true);
    this.salary_top = salary_top;
    setSalary_topIsSet(true);
    this.description = description;
    this.pub_place_code = pub_place_code;
    this.position_id = position_id;
    setPosition_idIsSet(true);
    this.work_place = work_place;
    this.email = email;
    this.stop_date = stop_date;
    this.channel = channel;
    setChannelIsSet(true);
    this.work_type = work_type;
    this.job_id = job_id;
    this.pub_place_name = pub_place_name;
    this.department = department;
    this.account_id = account_id;
    setAccount_idIsSet(true);
    this.feedback_period = feedback_period;
    setFeedback_periodIsSet(true);
    this.recruit_type = recruit_type;
    this.practice_salary = practice_salary;
    setPractice_salaryIsSet(true);
    this.practice_per_week = practice_per_week;
    setPractice_per_weekIsSet(true);
    this.practice_salary_unit = practice_salary_unit;
    setPractice_salary_unitIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartyPositionForSynchronization(ThirdPartyPositionForSynchronization other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetOccupation()) {
      java.util.List<java.lang.String> __this__occupation = new java.util.ArrayList<java.lang.String>(other.occupation);
      this.occupation = __this__occupation;
    }
    if (other.isSetCities()) {
      java.util.List<java.util.List<java.lang.String>> __this__cities = new java.util.ArrayList<java.util.List<java.lang.String>>(other.cities.size());
      for (java.util.List<java.lang.String> other_element : other.cities) {
        java.util.List<java.lang.String> __this__cities_copy = new java.util.ArrayList<java.lang.String>(other_element);
        __this__cities.add(__this__cities_copy);
      }
      this.cities = __this__cities;
    }
    this.salary_discuss = other.salary_discuss;
    this.salary_month = other.salary_month;
    this.quantity = other.quantity;
    if (other.isSetDegree_code()) {
      this.degree_code = other.degree_code;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    if (other.isSetExperience_code()) {
      this.experience_code = other.experience_code;
    }
    if (other.isSetExperience()) {
      this.experience = other.experience;
    }
    this.salary_bottom = other.salary_bottom;
    this.salary_top = other.salary_top;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPub_place_code()) {
      this.pub_place_code = other.pub_place_code;
    }
    this.position_id = other.position_id;
    if (other.isSetWork_place()) {
      this.work_place = other.work_place;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetStop_date()) {
      this.stop_date = other.stop_date;
    }
    this.channel = other.channel;
    if (other.isSetWork_type()) {
      this.work_type = other.work_type;
    }
    if (other.isSetJob_id()) {
      this.job_id = other.job_id;
    }
    if (other.isSetPub_place_name()) {
      this.pub_place_name = other.pub_place_name;
    }
    if (other.isSetDepartment()) {
      this.department = other.department;
    }
    this.account_id = other.account_id;
    this.feedback_period = other.feedback_period;
    if (other.isSetRecruit_type()) {
      this.recruit_type = other.recruit_type;
    }
    this.practice_salary = other.practice_salary;
    this.practice_per_week = other.practice_per_week;
    this.practice_salary_unit = other.practice_salary_unit;
  }

  public ThirdPartyPositionForSynchronization deepCopy() {
    return new ThirdPartyPositionForSynchronization(this);
  }

  @Override
  public void clear() {
    this.title = "";

    this.occupation = null;
    this.cities = null;
    setSalary_discussIsSet(false);
    this.salary_discuss = false;
    setSalary_monthIsSet(false);
    this.salary_month = 0;
    setQuantityIsSet(false);
    this.quantity = 0;
    this.degree_code = "";

    this.degree = "";

    this.experience_code = "";

    this.experience = "";

    setSalary_bottomIsSet(false);
    this.salary_bottom = 0;
    setSalary_topIsSet(false);
    this.salary_top = 0;
    this.description = "";

    this.pub_place_code = "";

    setPosition_idIsSet(false);
    this.position_id = 0;
    this.work_place = "";

    this.email = "";

    this.stop_date = "";

    setChannelIsSet(false);
    this.channel = 0;
    this.work_type = "";

    this.job_id = "";

    this.pub_place_name = "";

    this.department = "";

    setAccount_idIsSet(false);
    this.account_id = 0;
    setFeedback_periodIsSet(false);
    this.feedback_period = 0;
    this.recruit_type = null;
    setPractice_salaryIsSet(false);
    this.practice_salary = 0;
    setPractice_per_weekIsSet(false);
    this.practice_per_week = 0;
    setPractice_salary_unitIsSet(false);
    this.practice_salary_unit = 0;
  }

  public java.lang.String getTitle() {
    return this.title;
  }

  public ThirdPartyPositionForSynchronization setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public int getOccupationSize() {
    return (this.occupation == null) ? 0 : this.occupation.size();
  }

  public java.util.Iterator<java.lang.String> getOccupationIterator() {
    return (this.occupation == null) ? null : this.occupation.iterator();
  }

  public void addToOccupation(java.lang.String elem) {
    if (this.occupation == null) {
      this.occupation = new java.util.ArrayList<java.lang.String>();
    }
    this.occupation.add(elem);
  }

  public java.util.List<java.lang.String> getOccupation() {
    return this.occupation;
  }

  public ThirdPartyPositionForSynchronization setOccupation(java.util.List<java.lang.String> occupation) {
    this.occupation = occupation;
    return this;
  }

  public void unsetOccupation() {
    this.occupation = null;
  }

  /** Returns true if field occupation is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupation() {
    return this.occupation != null;
  }

  public void setOccupationIsSet(boolean value) {
    if (!value) {
      this.occupation = null;
    }
  }

  public int getCitiesSize() {
    return (this.cities == null) ? 0 : this.cities.size();
  }

  public java.util.Iterator<java.util.List<java.lang.String>> getCitiesIterator() {
    return (this.cities == null) ? null : this.cities.iterator();
  }

  public void addToCities(java.util.List<java.lang.String> elem) {
    if (this.cities == null) {
      this.cities = new java.util.ArrayList<java.util.List<java.lang.String>>();
    }
    this.cities.add(elem);
  }

  public java.util.List<java.util.List<java.lang.String>> getCities() {
    return this.cities;
  }

  public ThirdPartyPositionForSynchronization setCities(java.util.List<java.util.List<java.lang.String>> cities) {
    this.cities = cities;
    return this;
  }

  public void unsetCities() {
    this.cities = null;
  }

  /** Returns true if field cities is set (has been assigned a value) and false otherwise */
  public boolean isSetCities() {
    return this.cities != null;
  }

  public void setCitiesIsSet(boolean value) {
    if (!value) {
      this.cities = null;
    }
  }

  public boolean isSalary_discuss() {
    return this.salary_discuss;
  }

  public ThirdPartyPositionForSynchronization setSalary_discuss(boolean salary_discuss) {
    this.salary_discuss = salary_discuss;
    setSalary_discussIsSet(true);
    return this;
  }

  public void unsetSalary_discuss() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID);
  }

  /** Returns true if field salary_discuss is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_discuss() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID);
  }

  public void setSalary_discussIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_DISCUSS_ISSET_ID, value);
  }

  public int getSalary_month() {
    return this.salary_month;
  }

  public ThirdPartyPositionForSynchronization setSalary_month(int salary_month) {
    this.salary_month = salary_month;
    setSalary_monthIsSet(true);
    return this;
  }

  public void unsetSalary_month() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_MONTH_ISSET_ID);
  }

  /** Returns true if field salary_month is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_month() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_MONTH_ISSET_ID);
  }

  public void setSalary_monthIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_MONTH_ISSET_ID, value);
  }

  public int getQuantity() {
    return this.quantity;
  }

  public ThirdPartyPositionForSynchronization setQuantity(int quantity) {
    this.quantity = quantity;
    setQuantityIsSet(true);
    return this;
  }

  public void unsetQuantity() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  /** Returns true if field quantity is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantity() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __QUANTITY_ISSET_ID);
  }

  public void setQuantityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __QUANTITY_ISSET_ID, value);
  }

  public java.lang.String getDegree_code() {
    return this.degree_code;
  }

  public ThirdPartyPositionForSynchronization setDegree_code(java.lang.String degree_code) {
    this.degree_code = degree_code;
    return this;
  }

  public void unsetDegree_code() {
    this.degree_code = null;
  }

  /** Returns true if field degree_code is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree_code() {
    return this.degree_code != null;
  }

  public void setDegree_codeIsSet(boolean value) {
    if (!value) {
      this.degree_code = null;
    }
  }

  public java.lang.String getDegree() {
    return this.degree;
  }

  public ThirdPartyPositionForSynchronization setDegree(java.lang.String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public java.lang.String getExperience_code() {
    return this.experience_code;
  }

  public ThirdPartyPositionForSynchronization setExperience_code(java.lang.String experience_code) {
    this.experience_code = experience_code;
    return this;
  }

  public void unsetExperience_code() {
    this.experience_code = null;
  }

  /** Returns true if field experience_code is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience_code() {
    return this.experience_code != null;
  }

  public void setExperience_codeIsSet(boolean value) {
    if (!value) {
      this.experience_code = null;
    }
  }

  public java.lang.String getExperience() {
    return this.experience;
  }

  public ThirdPartyPositionForSynchronization setExperience(java.lang.String experience) {
    this.experience = experience;
    return this;
  }

  public void unsetExperience() {
    this.experience = null;
  }

  /** Returns true if field experience is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience() {
    return this.experience != null;
  }

  public void setExperienceIsSet(boolean value) {
    if (!value) {
      this.experience = null;
    }
  }

  public int getSalary_bottom() {
    return this.salary_bottom;
  }

  public ThirdPartyPositionForSynchronization setSalary_bottom(int salary_bottom) {
    this.salary_bottom = salary_bottom;
    setSalary_bottomIsSet(true);
    return this;
  }

  public void unsetSalary_bottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  /** Returns true if field salary_bottom is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_bottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID);
  }

  public void setSalary_bottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_BOTTOM_ISSET_ID, value);
  }

  public int getSalary_top() {
    return this.salary_top;
  }

  public ThirdPartyPositionForSynchronization setSalary_top(int salary_top) {
    this.salary_top = salary_top;
    setSalary_topIsSet(true);
    return this;
  }

  public void unsetSalary_top() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  /** Returns true if field salary_top is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_top() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARY_TOP_ISSET_ID);
  }

  public void setSalary_topIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARY_TOP_ISSET_ID, value);
  }

  public java.lang.String getDescription() {
    return this.description;
  }

  public ThirdPartyPositionForSynchronization setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public java.lang.String getPub_place_code() {
    return this.pub_place_code;
  }

  public ThirdPartyPositionForSynchronization setPub_place_code(java.lang.String pub_place_code) {
    this.pub_place_code = pub_place_code;
    return this;
  }

  public void unsetPub_place_code() {
    this.pub_place_code = null;
  }

  /** Returns true if field pub_place_code is set (has been assigned a value) and false otherwise */
  public boolean isSetPub_place_code() {
    return this.pub_place_code != null;
  }

  public void setPub_place_codeIsSet(boolean value) {
    if (!value) {
      this.pub_place_code = null;
    }
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public ThirdPartyPositionForSynchronization setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public java.lang.String getWork_place() {
    return this.work_place;
  }

  public ThirdPartyPositionForSynchronization setWork_place(java.lang.String work_place) {
    this.work_place = work_place;
    return this;
  }

  public void unsetWork_place() {
    this.work_place = null;
  }

  /** Returns true if field work_place is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_place() {
    return this.work_place != null;
  }

  public void setWork_placeIsSet(boolean value) {
    if (!value) {
      this.work_place = null;
    }
  }

  public java.lang.String getEmail() {
    return this.email;
  }

  public ThirdPartyPositionForSynchronization setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public java.lang.String getStop_date() {
    return this.stop_date;
  }

  public ThirdPartyPositionForSynchronization setStop_date(java.lang.String stop_date) {
    this.stop_date = stop_date;
    return this;
  }

  public void unsetStop_date() {
    this.stop_date = null;
  }

  /** Returns true if field stop_date is set (has been assigned a value) and false otherwise */
  public boolean isSetStop_date() {
    return this.stop_date != null;
  }

  public void setStop_dateIsSet(boolean value) {
    if (!value) {
      this.stop_date = null;
    }
  }

  public int getChannel() {
    return this.channel;
  }

  public ThirdPartyPositionForSynchronization setChannel(int channel) {
    this.channel = channel;
    setChannelIsSet(true);
    return this;
  }

  public void unsetChannel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  public void setChannelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
  }

  public java.lang.String getWork_type() {
    return this.work_type;
  }

  public ThirdPartyPositionForSynchronization setWork_type(java.lang.String work_type) {
    this.work_type = work_type;
    return this;
  }

  public void unsetWork_type() {
    this.work_type = null;
  }

  /** Returns true if field work_type is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_type() {
    return this.work_type != null;
  }

  public void setWork_typeIsSet(boolean value) {
    if (!value) {
      this.work_type = null;
    }
  }

  public java.lang.String getJob_id() {
    return this.job_id;
  }

  public ThirdPartyPositionForSynchronization setJob_id(java.lang.String job_id) {
    this.job_id = job_id;
    return this;
  }

  public void unsetJob_id() {
    this.job_id = null;
  }

  /** Returns true if field job_id is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_id() {
    return this.job_id != null;
  }

  public void setJob_idIsSet(boolean value) {
    if (!value) {
      this.job_id = null;
    }
  }

  public java.lang.String getPub_place_name() {
    return this.pub_place_name;
  }

  public ThirdPartyPositionForSynchronization setPub_place_name(java.lang.String pub_place_name) {
    this.pub_place_name = pub_place_name;
    return this;
  }

  public void unsetPub_place_name() {
    this.pub_place_name = null;
  }

  /** Returns true if field pub_place_name is set (has been assigned a value) and false otherwise */
  public boolean isSetPub_place_name() {
    return this.pub_place_name != null;
  }

  public void setPub_place_nameIsSet(boolean value) {
    if (!value) {
      this.pub_place_name = null;
    }
  }

  public java.lang.String getDepartment() {
    return this.department;
  }

  public ThirdPartyPositionForSynchronization setDepartment(java.lang.String department) {
    this.department = department;
    return this;
  }

  public void unsetDepartment() {
    this.department = null;
  }

  /** Returns true if field department is set (has been assigned a value) and false otherwise */
  public boolean isSetDepartment() {
    return this.department != null;
  }

  public void setDepartmentIsSet(boolean value) {
    if (!value) {
      this.department = null;
    }
  }

  public int getAccount_id() {
    return this.account_id;
  }

  public ThirdPartyPositionForSynchronization setAccount_id(int account_id) {
    this.account_id = account_id;
    setAccount_idIsSet(true);
    return this;
  }

  public void unsetAccount_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNT_ID_ISSET_ID);
  }

  /** Returns true if field account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetAccount_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNT_ID_ISSET_ID);
  }

  public void setAccount_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNT_ID_ISSET_ID, value);
  }

  public int getFeedback_period() {
    return this.feedback_period;
  }

  public ThirdPartyPositionForSynchronization setFeedback_period(int feedback_period) {
    this.feedback_period = feedback_period;
    setFeedback_periodIsSet(true);
    return this;
  }

  public void unsetFeedback_period() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID);
  }

  /** Returns true if field feedback_period is set (has been assigned a value) and false otherwise */
  public boolean isSetFeedback_period() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID);
  }

  public void setFeedback_periodIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FEEDBACK_PERIOD_ISSET_ID, value);
  }

  public java.lang.String getRecruit_type() {
    return this.recruit_type;
  }

  public ThirdPartyPositionForSynchronization setRecruit_type(java.lang.String recruit_type) {
    this.recruit_type = recruit_type;
    return this;
  }

  public void unsetRecruit_type() {
    this.recruit_type = null;
  }

  /** Returns true if field recruit_type is set (has been assigned a value) and false otherwise */
  public boolean isSetRecruit_type() {
    return this.recruit_type != null;
  }

  public void setRecruit_typeIsSet(boolean value) {
    if (!value) {
      this.recruit_type = null;
    }
  }

  public int getPractice_salary() {
    return this.practice_salary;
  }

  public ThirdPartyPositionForSynchronization setPractice_salary(int practice_salary) {
    this.practice_salary = practice_salary;
    setPractice_salaryIsSet(true);
    return this;
  }

  public void unsetPractice_salary() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRACTICE_SALARY_ISSET_ID);
  }

  /** Returns true if field practice_salary is set (has been assigned a value) and false otherwise */
  public boolean isSetPractice_salary() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRACTICE_SALARY_ISSET_ID);
  }

  public void setPractice_salaryIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRACTICE_SALARY_ISSET_ID, value);
  }

  public byte getPractice_per_week() {
    return this.practice_per_week;
  }

  public ThirdPartyPositionForSynchronization setPractice_per_week(byte practice_per_week) {
    this.practice_per_week = practice_per_week;
    setPractice_per_weekIsSet(true);
    return this;
  }

  public void unsetPractice_per_week() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRACTICE_PER_WEEK_ISSET_ID);
  }

  /** Returns true if field practice_per_week is set (has been assigned a value) and false otherwise */
  public boolean isSetPractice_per_week() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRACTICE_PER_WEEK_ISSET_ID);
  }

  public void setPractice_per_weekIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRACTICE_PER_WEEK_ISSET_ID, value);
  }

  public byte getPractice_salary_unit() {
    return this.practice_salary_unit;
  }

  public ThirdPartyPositionForSynchronization setPractice_salary_unit(byte practice_salary_unit) {
    this.practice_salary_unit = practice_salary_unit;
    setPractice_salary_unitIsSet(true);
    return this;
  }

  public void unsetPractice_salary_unit() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRACTICE_SALARY_UNIT_ISSET_ID);
  }

  /** Returns true if field practice_salary_unit is set (has been assigned a value) and false otherwise */
  public boolean isSetPractice_salary_unit() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRACTICE_SALARY_UNIT_ISSET_ID);
  }

  public void setPractice_salary_unitIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRACTICE_SALARY_UNIT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
      case TITLE:
        if (value == null) {
          unsetTitle();
        } else {
          setTitle((java.lang.String)value);
        }
        break;

      case OCCUPATION:
        if (value == null) {
          unsetOccupation();
        } else {
          setOccupation((java.util.List<java.lang.String>)value);
        }
        break;

      case CITIES:
        if (value == null) {
          unsetCities();
        } else {
          setCities((java.util.List<java.util.List<java.lang.String>>)value);
        }
        break;

      case SALARY_DISCUSS:
        if (value == null) {
          unsetSalary_discuss();
        } else {
          setSalary_discuss((java.lang.Boolean)value);
        }
        break;

      case SALARY_MONTH:
        if (value == null) {
          unsetSalary_month();
        } else {
          setSalary_month((java.lang.Integer)value);
        }
        break;

      case QUANTITY:
        if (value == null) {
          unsetQuantity();
        } else {
          setQuantity((java.lang.Integer)value);
        }
        break;

      case DEGREE_CODE:
        if (value == null) {
          unsetDegree_code();
        } else {
          setDegree_code((java.lang.String)value);
        }
        break;

      case DEGREE:
        if (value == null) {
          unsetDegree();
        } else {
          setDegree((java.lang.String)value);
        }
        break;

      case EXPERIENCE_CODE:
        if (value == null) {
          unsetExperience_code();
        } else {
          setExperience_code((java.lang.String)value);
        }
        break;

      case EXPERIENCE:
        if (value == null) {
          unsetExperience();
        } else {
          setExperience((java.lang.String)value);
        }
        break;

      case SALARY_BOTTOM:
        if (value == null) {
          unsetSalary_bottom();
        } else {
          setSalary_bottom((java.lang.Integer)value);
        }
        break;

      case SALARY_TOP:
        if (value == null) {
          unsetSalary_top();
        } else {
          setSalary_top((java.lang.Integer)value);
        }
        break;

      case DESCRIPTION:
        if (value == null) {
          unsetDescription();
        } else {
          setDescription((java.lang.String)value);
        }
        break;

      case PUB_PLACE_CODE:
        if (value == null) {
          unsetPub_place_code();
        } else {
          setPub_place_code((java.lang.String)value);
        }
        break;

      case POSITION_ID:
        if (value == null) {
          unsetPosition_id();
        } else {
          setPosition_id((java.lang.Integer)value);
        }
        break;

      case WORK_PLACE:
        if (value == null) {
          unsetWork_place();
        } else {
          setWork_place((java.lang.String)value);
        }
        break;

      case EMAIL:
        if (value == null) {
          unsetEmail();
        } else {
          setEmail((java.lang.String)value);
        }
        break;

      case STOP_DATE:
        if (value == null) {
          unsetStop_date();
        } else {
          setStop_date((java.lang.String)value);
        }
        break;

      case CHANNEL:
        if (value == null) {
          unsetChannel();
        } else {
          setChannel((java.lang.Integer)value);
        }
        break;

      case WORK_TYPE:
        if (value == null) {
          unsetWork_type();
        } else {
          setWork_type((java.lang.String)value);
        }
        break;

      case JOB_ID:
        if (value == null) {
          unsetJob_id();
        } else {
          setJob_id((java.lang.String)value);
        }
        break;

      case PUB_PLACE_NAME:
        if (value == null) {
          unsetPub_place_name();
        } else {
          setPub_place_name((java.lang.String)value);
        }
        break;

      case DEPARTMENT:
        if (value == null) {
          unsetDepartment();
        } else {
          setDepartment((java.lang.String)value);
        }
        break;

      case ACCOUNT_ID:
        if (value == null) {
          unsetAccount_id();
        } else {
          setAccount_id((java.lang.Integer)value);
        }
        break;

      case FEEDBACK_PERIOD:
        if (value == null) {
          unsetFeedback_period();
        } else {
          setFeedback_period((java.lang.Integer)value);
        }
        break;

      case RECRUIT_TYPE:
        if (value == null) {
          unsetRecruit_type();
        } else {
          setRecruit_type((java.lang.String)value);
        }
        break;

      case PRACTICE_SALARY:
        if (value == null) {
          unsetPractice_salary();
        } else {
          setPractice_salary((java.lang.Integer)value);
        }
        break;

      case PRACTICE_PER_WEEK:
        if (value == null) {
          unsetPractice_per_week();
        } else {
          setPractice_per_week((java.lang.Byte)value);
        }
        break;

      case PRACTICE_SALARY_UNIT:
        if (value == null) {
          unsetPractice_salary_unit();
        } else {
          setPractice_salary_unit((java.lang.Byte)value);
        }
        break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
      case TITLE:
        return getTitle();

      case OCCUPATION:
        return getOccupation();

      case CITIES:
        return getCities();

      case SALARY_DISCUSS:
        return isSalary_discuss();

      case SALARY_MONTH:
        return getSalary_month();

      case QUANTITY:
        return getQuantity();

      case DEGREE_CODE:
        return getDegree_code();

      case DEGREE:
        return getDegree();

      case EXPERIENCE_CODE:
        return getExperience_code();

      case EXPERIENCE:
        return getExperience();

      case SALARY_BOTTOM:
        return getSalary_bottom();

      case SALARY_TOP:
        return getSalary_top();

      case DESCRIPTION:
        return getDescription();

      case PUB_PLACE_CODE:
        return getPub_place_code();

      case POSITION_ID:
        return getPosition_id();

      case WORK_PLACE:
        return getWork_place();

      case EMAIL:
        return getEmail();

      case STOP_DATE:
        return getStop_date();

      case CHANNEL:
        return getChannel();

      case WORK_TYPE:
        return getWork_type();

      case JOB_ID:
        return getJob_id();

      case PUB_PLACE_NAME:
        return getPub_place_name();

      case DEPARTMENT:
        return getDepartment();

      case ACCOUNT_ID:
        return getAccount_id();

      case FEEDBACK_PERIOD:
        return getFeedback_period();

      case RECRUIT_TYPE:
        return getRecruit_type();

      case PRACTICE_SALARY:
        return getPractice_salary();

      case PRACTICE_PER_WEEK:
        return getPractice_per_week();

      case PRACTICE_SALARY_UNIT:
        return getPractice_salary_unit();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
      case TITLE:
        return isSetTitle();
      case OCCUPATION:
        return isSetOccupation();
      case CITIES:
        return isSetCities();
      case SALARY_DISCUSS:
        return isSetSalary_discuss();
      case SALARY_MONTH:
        return isSetSalary_month();
      case QUANTITY:
        return isSetQuantity();
      case DEGREE_CODE:
        return isSetDegree_code();
      case DEGREE:
        return isSetDegree();
      case EXPERIENCE_CODE:
        return isSetExperience_code();
      case EXPERIENCE:
        return isSetExperience();
      case SALARY_BOTTOM:
        return isSetSalary_bottom();
      case SALARY_TOP:
        return isSetSalary_top();
      case DESCRIPTION:
        return isSetDescription();
      case PUB_PLACE_CODE:
        return isSetPub_place_code();
      case POSITION_ID:
        return isSetPosition_id();
      case WORK_PLACE:
        return isSetWork_place();
      case EMAIL:
        return isSetEmail();
      case STOP_DATE:
        return isSetStop_date();
      case CHANNEL:
        return isSetChannel();
      case WORK_TYPE:
        return isSetWork_type();
      case JOB_ID:
        return isSetJob_id();
      case PUB_PLACE_NAME:
        return isSetPub_place_name();
      case DEPARTMENT:
        return isSetDepartment();
      case ACCOUNT_ID:
        return isSetAccount_id();
      case FEEDBACK_PERIOD:
        return isSetFeedback_period();
      case RECRUIT_TYPE:
        return isSetRecruit_type();
      case PRACTICE_SALARY:
        return isSetPractice_salary();
      case PRACTICE_PER_WEEK:
        return isSetPractice_per_week();
      case PRACTICE_SALARY_UNIT:
        return isSetPractice_salary_unit();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartyPositionForSynchronization)
      return this.equals((ThirdPartyPositionForSynchronization)that);
    return false;
  }

  public boolean equals(ThirdPartyPositionForSynchronization that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_occupation = true && this.isSetOccupation();
    boolean that_present_occupation = true && that.isSetOccupation();
    if (this_present_occupation || that_present_occupation) {
      if (!(this_present_occupation && that_present_occupation))
        return false;
      if (!this.occupation.equals(that.occupation))
        return false;
    }

    boolean this_present_cities = true && this.isSetCities();
    boolean that_present_cities = true && that.isSetCities();
    if (this_present_cities || that_present_cities) {
      if (!(this_present_cities && that_present_cities))
        return false;
      if (!this.cities.equals(that.cities))
        return false;
    }

    boolean this_present_salary_discuss = true;
    boolean that_present_salary_discuss = true;
    if (this_present_salary_discuss || that_present_salary_discuss) {
      if (!(this_present_salary_discuss && that_present_salary_discuss))
        return false;
      if (this.salary_discuss != that.salary_discuss)
        return false;
    }

    boolean this_present_salary_month = true;
    boolean that_present_salary_month = true;
    if (this_present_salary_month || that_present_salary_month) {
      if (!(this_present_salary_month && that_present_salary_month))
        return false;
      if (this.salary_month != that.salary_month)
        return false;
    }

    boolean this_present_quantity = true;
    boolean that_present_quantity = true;
    if (this_present_quantity || that_present_quantity) {
      if (!(this_present_quantity && that_present_quantity))
        return false;
      if (this.quantity != that.quantity)
        return false;
    }

    boolean this_present_degree_code = true && this.isSetDegree_code();
    boolean that_present_degree_code = true && that.isSetDegree_code();
    if (this_present_degree_code || that_present_degree_code) {
      if (!(this_present_degree_code && that_present_degree_code))
        return false;
      if (!this.degree_code.equals(that.degree_code))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_experience_code = true && this.isSetExperience_code();
    boolean that_present_experience_code = true && that.isSetExperience_code();
    if (this_present_experience_code || that_present_experience_code) {
      if (!(this_present_experience_code && that_present_experience_code))
        return false;
      if (!this.experience_code.equals(that.experience_code))
        return false;
    }

    boolean this_present_experience = true && this.isSetExperience();
    boolean that_present_experience = true && that.isSetExperience();
    if (this_present_experience || that_present_experience) {
      if (!(this_present_experience && that_present_experience))
        return false;
      if (!this.experience.equals(that.experience))
        return false;
    }

    boolean this_present_salary_bottom = true;
    boolean that_present_salary_bottom = true;
    if (this_present_salary_bottom || that_present_salary_bottom) {
      if (!(this_present_salary_bottom && that_present_salary_bottom))
        return false;
      if (this.salary_bottom != that.salary_bottom)
        return false;
    }

    boolean this_present_salary_top = true;
    boolean that_present_salary_top = true;
    if (this_present_salary_top || that_present_salary_top) {
      if (!(this_present_salary_top && that_present_salary_top))
        return false;
      if (this.salary_top != that.salary_top)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_pub_place_code = true && this.isSetPub_place_code();
    boolean that_present_pub_place_code = true && that.isSetPub_place_code();
    if (this_present_pub_place_code || that_present_pub_place_code) {
      if (!(this_present_pub_place_code && that_present_pub_place_code))
        return false;
      if (!this.pub_place_code.equals(that.pub_place_code))
        return false;
    }

    boolean this_present_position_id = true;
    boolean that_present_position_id = true;
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_work_place = true && this.isSetWork_place();
    boolean that_present_work_place = true && that.isSetWork_place();
    if (this_present_work_place || that_present_work_place) {
      if (!(this_present_work_place && that_present_work_place))
        return false;
      if (!this.work_place.equals(that.work_place))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_stop_date = true && this.isSetStop_date();
    boolean that_present_stop_date = true && that.isSetStop_date();
    if (this_present_stop_date || that_present_stop_date) {
      if (!(this_present_stop_date && that_present_stop_date))
        return false;
      if (!this.stop_date.equals(that.stop_date))
        return false;
    }

    boolean this_present_channel = true;
    boolean that_present_channel = true;
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (this.channel != that.channel)
        return false;
    }

    boolean this_present_work_type = true && this.isSetWork_type();
    boolean that_present_work_type = true && that.isSetWork_type();
    if (this_present_work_type || that_present_work_type) {
      if (!(this_present_work_type && that_present_work_type))
        return false;
      if (!this.work_type.equals(that.work_type))
        return false;
    }

    boolean this_present_job_id = true && this.isSetJob_id();
    boolean that_present_job_id = true && that.isSetJob_id();
    if (this_present_job_id || that_present_job_id) {
      if (!(this_present_job_id && that_present_job_id))
        return false;
      if (!this.job_id.equals(that.job_id))
        return false;
    }

    boolean this_present_pub_place_name = true && this.isSetPub_place_name();
    boolean that_present_pub_place_name = true && that.isSetPub_place_name();
    if (this_present_pub_place_name || that_present_pub_place_name) {
      if (!(this_present_pub_place_name && that_present_pub_place_name))
        return false;
      if (!this.pub_place_name.equals(that.pub_place_name))
        return false;
    }

    boolean this_present_department = true && this.isSetDepartment();
    boolean that_present_department = true && that.isSetDepartment();
    if (this_present_department || that_present_department) {
      if (!(this_present_department && that_present_department))
        return false;
      if (!this.department.equals(that.department))
        return false;
    }

    boolean this_present_account_id = true;
    boolean that_present_account_id = true;
    if (this_present_account_id || that_present_account_id) {
      if (!(this_present_account_id && that_present_account_id))
        return false;
      if (this.account_id != that.account_id)
        return false;
    }

    boolean this_present_feedback_period = true;
    boolean that_present_feedback_period = true;
    if (this_present_feedback_period || that_present_feedback_period) {
      if (!(this_present_feedback_period && that_present_feedback_period))
        return false;
      if (this.feedback_period != that.feedback_period)
        return false;
    }

    boolean this_present_recruit_type = true && this.isSetRecruit_type();
    boolean that_present_recruit_type = true && that.isSetRecruit_type();
    if (this_present_recruit_type || that_present_recruit_type) {
      if (!(this_present_recruit_type && that_present_recruit_type))
        return false;
      if (!this.recruit_type.equals(that.recruit_type))
        return false;
    }

    boolean this_present_practice_salary = true;
    boolean that_present_practice_salary = true;
    if (this_present_practice_salary || that_present_practice_salary) {
      if (!(this_present_practice_salary && that_present_practice_salary))
        return false;
      if (this.practice_salary != that.practice_salary)
        return false;
    }

    boolean this_present_practice_per_week = true;
    boolean that_present_practice_per_week = true;
    if (this_present_practice_per_week || that_present_practice_per_week) {
      if (!(this_present_practice_per_week && that_present_practice_per_week))
        return false;
      if (this.practice_per_week != that.practice_per_week)
        return false;
    }

    boolean this_present_practice_salary_unit = true;
    boolean that_present_practice_salary_unit = true;
    if (this_present_practice_salary_unit || that_present_practice_salary_unit) {
      if (!(this_present_practice_salary_unit && that_present_practice_salary_unit))
        return false;
      if (this.practice_salary_unit != that.practice_salary_unit)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetOccupation()) ? 131071 : 524287);
    if (isSetOccupation())
      hashCode = hashCode * 8191 + occupation.hashCode();

    hashCode = hashCode * 8191 + ((isSetCities()) ? 131071 : 524287);
    if (isSetCities())
      hashCode = hashCode * 8191 + cities.hashCode();

    hashCode = hashCode * 8191 + ((salary_discuss) ? 131071 : 524287);

    hashCode = hashCode * 8191 + salary_month;

    hashCode = hashCode * 8191 + quantity;

    hashCode = hashCode * 8191 + ((isSetDegree_code()) ? 131071 : 524287);
    if (isSetDegree_code())
      hashCode = hashCode * 8191 + degree_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
    if (isSetDegree())
      hashCode = hashCode * 8191 + degree.hashCode();

    hashCode = hashCode * 8191 + ((isSetExperience_code()) ? 131071 : 524287);
    if (isSetExperience_code())
      hashCode = hashCode * 8191 + experience_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetExperience()) ? 131071 : 524287);
    if (isSetExperience())
      hashCode = hashCode * 8191 + experience.hashCode();

    hashCode = hashCode * 8191 + salary_bottom;

    hashCode = hashCode * 8191 + salary_top;

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + ((isSetPub_place_code()) ? 131071 : 524287);
    if (isSetPub_place_code())
      hashCode = hashCode * 8191 + pub_place_code.hashCode();

    hashCode = hashCode * 8191 + position_id;

    hashCode = hashCode * 8191 + ((isSetWork_place()) ? 131071 : 524287);
    if (isSetWork_place())
      hashCode = hashCode * 8191 + work_place.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetStop_date()) ? 131071 : 524287);
    if (isSetStop_date())
      hashCode = hashCode * 8191 + stop_date.hashCode();

    hashCode = hashCode * 8191 + channel;

    hashCode = hashCode * 8191 + ((isSetWork_type()) ? 131071 : 524287);
    if (isSetWork_type())
      hashCode = hashCode * 8191 + work_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetJob_id()) ? 131071 : 524287);
    if (isSetJob_id())
      hashCode = hashCode * 8191 + job_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetPub_place_name()) ? 131071 : 524287);
    if (isSetPub_place_name())
      hashCode = hashCode * 8191 + pub_place_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
    if (isSetDepartment())
      hashCode = hashCode * 8191 + department.hashCode();

    hashCode = hashCode * 8191 + account_id;

    hashCode = hashCode * 8191 + feedback_period;

    hashCode = hashCode * 8191 + ((isSetRecruit_type()) ? 131071 : 524287);
    if (isSetRecruit_type())
      hashCode = hashCode * 8191 + recruit_type.hashCode();

    hashCode = hashCode * 8191 + practice_salary;

    hashCode = hashCode * 8191 + (int) (practice_per_week);

    hashCode = hashCode * 8191 + (int) (practice_salary_unit);

    return hashCode;
  }

  @Override
  public int compareTo(ThirdPartyPositionForSynchronization other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOccupation()).compareTo(other.isSetOccupation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupation, other.occupation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCities()).compareTo(other.isSetCities());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCities()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cities, other.cities);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_discuss()).compareTo(other.isSetSalary_discuss());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_discuss()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_discuss, other.salary_discuss);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_month()).compareTo(other.isSetSalary_month());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_month()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_month, other.salary_month);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetQuantity()).compareTo(other.isSetQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantity, other.quantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree_code()).compareTo(other.isSetDegree_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree_code, other.degree_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExperience_code()).compareTo(other.isSetExperience_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience_code, other.experience_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_bottom()).compareTo(other.isSetSalary_bottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_bottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_bottom, other.salary_bottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalary_top()).compareTo(other.isSetSalary_top());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_top()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_top, other.salary_top);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPub_place_code()).compareTo(other.isSetPub_place_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPub_place_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pub_place_code, other.pub_place_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWork_place()).compareTo(other.isSetWork_place());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_place()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_place, other.work_place);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStop_date()).compareTo(other.isSetStop_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStop_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop_date, other.stop_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWork_type()).compareTo(other.isSetWork_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_type, other.work_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJob_id()).compareTo(other.isSetJob_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_id, other.job_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPub_place_name()).compareTo(other.isSetPub_place_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPub_place_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pub_place_name, other.pub_place_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepartment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccount_id()).compareTo(other.isSetAccount_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccount_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.account_id, other.account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFeedback_period()).compareTo(other.isSetFeedback_period());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeedback_period()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feedback_period, other.feedback_period);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecruit_type()).compareTo(other.isSetRecruit_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecruit_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recruit_type, other.recruit_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPractice_salary()).compareTo(other.isSetPractice_salary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPractice_salary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.practice_salary, other.practice_salary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPractice_per_week()).compareTo(other.isSetPractice_per_week());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPractice_per_week()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.practice_per_week, other.practice_per_week);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPractice_salary_unit()).compareTo(other.isSetPractice_salary_unit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPractice_salary_unit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.practice_salary_unit, other.practice_salary_unit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ThirdPartyPositionForSynchronization(");
    boolean first = true;

    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("occupation:");
    if (this.occupation == null) {
      sb.append("null");
    } else {
      sb.append(this.occupation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cities:");
    if (this.cities == null) {
      sb.append("null");
    } else {
      sb.append(this.cities);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_discuss:");
    sb.append(this.salary_discuss);
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_month:");
    sb.append(this.salary_month);
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantity:");
    sb.append(this.quantity);
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree_code:");
    if (this.degree_code == null) {
      sb.append("null");
    } else {
      sb.append(this.degree_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    if (this.degree == null) {
      sb.append("null");
    } else {
      sb.append(this.degree);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience_code:");
    if (this.experience_code == null) {
      sb.append("null");
    } else {
      sb.append(this.experience_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience:");
    if (this.experience == null) {
      sb.append("null");
    } else {
      sb.append(this.experience);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_bottom:");
    sb.append(this.salary_bottom);
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_top:");
    sb.append(this.salary_top);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pub_place_code:");
    if (this.pub_place_code == null) {
      sb.append("null");
    } else {
      sb.append(this.pub_place_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("position_id:");
    sb.append(this.position_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("work_place:");
    if (this.work_place == null) {
      sb.append("null");
    } else {
      sb.append(this.work_place);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stop_date:");
    if (this.stop_date == null) {
      sb.append("null");
    } else {
      sb.append(this.stop_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channel:");
    sb.append(this.channel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("work_type:");
    if (this.work_type == null) {
      sb.append("null");
    } else {
      sb.append(this.work_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("job_id:");
    if (this.job_id == null) {
      sb.append("null");
    } else {
      sb.append(this.job_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pub_place_name:");
    if (this.pub_place_name == null) {
      sb.append("null");
    } else {
      sb.append(this.pub_place_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("department:");
    if (this.department == null) {
      sb.append("null");
    } else {
      sb.append(this.department);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("account_id:");
    sb.append(this.account_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("feedback_period:");
    sb.append(this.feedback_period);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recruit_type:");
    if (this.recruit_type == null) {
      sb.append("null");
    } else {
      sb.append(this.recruit_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("practice_salary:");
    sb.append(this.practice_salary);
    first = false;
    if (!first) sb.append(", ");
    sb.append("practice_per_week:");
    sb.append(this.practice_per_week);
    first = false;
    if (!first) sb.append(", ");
    sb.append("practice_salary_unit:");
    sb.append(this.practice_salary_unit);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdPartyPositionForSynchronizationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyPositionForSynchronizationStandardScheme getScheme() {
      return new ThirdPartyPositionForSynchronizationStandardScheme();
    }
  }

  private static class ThirdPartyPositionForSynchronizationStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdPartyPositionForSynchronization> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OCCUPATION
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list10 = iprot.readListBegin();
                struct.occupation = new java.util.ArrayList<java.lang.String>(_list10.size);
                java.lang.String _elem11;
                for (int _i12 = 0; _i12 < _list10.size; ++_i12)
                {
                  _elem11 = iprot.readString();
                  struct.occupation.add(_elem11);
                }
                iprot.readListEnd();
              }
              struct.setOccupationIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CITIES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list13 = iprot.readListBegin();
                struct.cities = new java.util.ArrayList<java.util.List<java.lang.String>>(_list13.size);
                java.util.List<java.lang.String> _elem14;
                for (int _i15 = 0; _i15 < _list13.size; ++_i15)
                {
                  {
                    org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                    _elem14 = new java.util.ArrayList<java.lang.String>(_list16.size);
                    java.lang.String _elem17;
                    for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                    {
                      _elem17 = iprot.readString();
                      _elem14.add(_elem17);
                    }
                    iprot.readListEnd();
                  }
                  struct.cities.add(_elem14);
                }
                iprot.readListEnd();
              }
              struct.setCitiesIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SALARY_DISCUSS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.salary_discuss = iprot.readBool();
              struct.setSalary_discussIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SALARY_MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salary_month = iprot.readI32();
              struct.setSalary_monthIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.quantity = iprot.readI32();
              struct.setQuantityIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DEGREE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree_code = iprot.readString();
              struct.setDegree_codeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EXPERIENCE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience_code = iprot.readString();
              struct.setExperience_codeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // EXPERIENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience = iprot.readString();
              struct.setExperienceIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SALARY_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salary_bottom = iprot.readI32();
              struct.setSalary_bottomIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SALARY_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salary_top = iprot.readI32();
              struct.setSalary_topIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PUB_PLACE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pub_place_code = iprot.readString();
              struct.setPub_place_codeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // WORK_PLACE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.work_place = iprot.readString();
              struct.setWork_placeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STOP_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stop_date = iprot.readString();
              struct.setStop_dateIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channel = iprot.readI32();
              struct.setChannelIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // WORK_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.work_type = iprot.readString();
              struct.setWork_typeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // JOB_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.job_id = iprot.readString();
              struct.setJob_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PUB_PLACE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pub_place_name = iprot.readString();
              struct.setPub_place_nameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DEPARTMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.department = iprot.readString();
              struct.setDepartmentIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.account_id = iprot.readI32();
              struct.setAccount_idIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // FEEDBACK_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.feedback_period = iprot.readI32();
              struct.setFeedback_periodIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // RECRUIT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recruit_type = iprot.readString();
              struct.setRecruit_typeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PRACTICE_SALARY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.practice_salary = iprot.readI32();
              struct.setPractice_salaryIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // PRACTICE_PER_WEEK
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.practice_per_week = iprot.readByte();
              struct.setPractice_per_weekIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // PRACTICE_SALARY_UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.practice_salary_unit = iprot.readByte();
              struct.setPractice_salary_unitIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.occupation != null) {
        oprot.writeFieldBegin(OCCUPATION_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.occupation.size()));
          for (java.lang.String _iter19 : struct.occupation)
          {
            oprot.writeString(_iter19);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.cities != null) {
        oprot.writeFieldBegin(CITIES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, struct.cities.size()));
          for (java.util.List<java.lang.String> _iter20 : struct.cities)
          {
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter20.size()));
              for (java.lang.String _iter21 : _iter20)
              {
                oprot.writeString(_iter21);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SALARY_DISCUSS_FIELD_DESC);
      oprot.writeBool(struct.salary_discuss);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALARY_MONTH_FIELD_DESC);
      oprot.writeI32(struct.salary_month);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUANTITY_FIELD_DESC);
      oprot.writeI32(struct.quantity);
      oprot.writeFieldEnd();
      if (struct.degree_code != null) {
        oprot.writeFieldBegin(DEGREE_CODE_FIELD_DESC);
        oprot.writeString(struct.degree_code);
        oprot.writeFieldEnd();
      }
      if (struct.degree != null) {
        oprot.writeFieldBegin(DEGREE_FIELD_DESC);
        oprot.writeString(struct.degree);
        oprot.writeFieldEnd();
      }
      if (struct.experience_code != null) {
        oprot.writeFieldBegin(EXPERIENCE_CODE_FIELD_DESC);
        oprot.writeString(struct.experience_code);
        oprot.writeFieldEnd();
      }
      if (struct.experience != null) {
        oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
        oprot.writeString(struct.experience);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SALARY_BOTTOM_FIELD_DESC);
      oprot.writeI32(struct.salary_bottom);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALARY_TOP_FIELD_DESC);
      oprot.writeI32(struct.salary_top);
      oprot.writeFieldEnd();
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.pub_place_code != null) {
        oprot.writeFieldBegin(PUB_PLACE_CODE_FIELD_DESC);
        oprot.writeString(struct.pub_place_code);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
      oprot.writeI32(struct.position_id);
      oprot.writeFieldEnd();
      if (struct.work_place != null) {
        oprot.writeFieldBegin(WORK_PLACE_FIELD_DESC);
        oprot.writeString(struct.work_place);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.stop_date != null) {
        oprot.writeFieldBegin(STOP_DATE_FIELD_DESC);
        oprot.writeString(struct.stop_date);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
      oprot.writeI32(struct.channel);
      oprot.writeFieldEnd();
      if (struct.work_type != null) {
        oprot.writeFieldBegin(WORK_TYPE_FIELD_DESC);
        oprot.writeString(struct.work_type);
        oprot.writeFieldEnd();
      }
      if (struct.job_id != null) {
        oprot.writeFieldBegin(JOB_ID_FIELD_DESC);
        oprot.writeString(struct.job_id);
        oprot.writeFieldEnd();
      }
      if (struct.pub_place_name != null) {
        oprot.writeFieldBegin(PUB_PLACE_NAME_FIELD_DESC);
        oprot.writeString(struct.pub_place_name);
        oprot.writeFieldEnd();
      }
      if (struct.department != null) {
        oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
        oprot.writeString(struct.department);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
      oprot.writeI32(struct.account_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FEEDBACK_PERIOD_FIELD_DESC);
      oprot.writeI32(struct.feedback_period);
      oprot.writeFieldEnd();
      if (struct.recruit_type != null) {
        oprot.writeFieldBegin(RECRUIT_TYPE_FIELD_DESC);
        oprot.writeString(struct.recruit_type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRACTICE_SALARY_FIELD_DESC);
      oprot.writeI32(struct.practice_salary);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRACTICE_PER_WEEK_FIELD_DESC);
      oprot.writeByte(struct.practice_per_week);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRACTICE_SALARY_UNIT_FIELD_DESC);
      oprot.writeByte(struct.practice_salary_unit);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdPartyPositionForSynchronizationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdPartyPositionForSynchronizationTupleScheme getScheme() {
      return new ThirdPartyPositionForSynchronizationTupleScheme();
    }
  }

  private static class ThirdPartyPositionForSynchronizationTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdPartyPositionForSynchronization> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTitle()) {
        optionals.set(0);
      }
      if (struct.isSetOccupation()) {
        optionals.set(1);
      }
      if (struct.isSetCities()) {
        optionals.set(2);
      }
      if (struct.isSetSalary_discuss()) {
        optionals.set(3);
      }
      if (struct.isSetSalary_month()) {
        optionals.set(4);
      }
      if (struct.isSetQuantity()) {
        optionals.set(5);
      }
      if (struct.isSetDegree_code()) {
        optionals.set(6);
      }
      if (struct.isSetDegree()) {
        optionals.set(7);
      }
      if (struct.isSetExperience_code()) {
        optionals.set(8);
      }
      if (struct.isSetExperience()) {
        optionals.set(9);
      }
      if (struct.isSetSalary_bottom()) {
        optionals.set(10);
      }
      if (struct.isSetSalary_top()) {
        optionals.set(11);
      }
      if (struct.isSetDescription()) {
        optionals.set(12);
      }
      if (struct.isSetPub_place_code()) {
        optionals.set(13);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(14);
      }
      if (struct.isSetWork_place()) {
        optionals.set(15);
      }
      if (struct.isSetEmail()) {
        optionals.set(16);
      }
      if (struct.isSetStop_date()) {
        optionals.set(17);
      }
      if (struct.isSetChannel()) {
        optionals.set(18);
      }
      if (struct.isSetWork_type()) {
        optionals.set(19);
      }
      if (struct.isSetJob_id()) {
        optionals.set(20);
      }
      if (struct.isSetPub_place_name()) {
        optionals.set(21);
      }
      if (struct.isSetDepartment()) {
        optionals.set(22);
      }
      if (struct.isSetAccount_id()) {
        optionals.set(23);
      }
      if (struct.isSetFeedback_period()) {
        optionals.set(24);
      }
      if (struct.isSetRecruit_type()) {
        optionals.set(25);
      }
      if (struct.isSetPractice_salary()) {
        optionals.set(26);
      }
      if (struct.isSetPractice_per_week()) {
        optionals.set(27);
      }
      if (struct.isSetPractice_salary_unit()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetOccupation()) {
        {
          oprot.writeI32(struct.occupation.size());
          for (java.lang.String _iter22 : struct.occupation)
          {
            oprot.writeString(_iter22);
          }
        }
      }
      if (struct.isSetCities()) {
        {
          oprot.writeI32(struct.cities.size());
          for (java.util.List<java.lang.String> _iter23 : struct.cities)
          {
            {
              oprot.writeI32(_iter23.size());
              for (java.lang.String _iter24 : _iter23)
              {
                oprot.writeString(_iter24);
              }
            }
          }
        }
      }
      if (struct.isSetSalary_discuss()) {
        oprot.writeBool(struct.salary_discuss);
      }
      if (struct.isSetSalary_month()) {
        oprot.writeI32(struct.salary_month);
      }
      if (struct.isSetQuantity()) {
        oprot.writeI32(struct.quantity);
      }
      if (struct.isSetDegree_code()) {
        oprot.writeString(struct.degree_code);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetExperience_code()) {
        oprot.writeString(struct.experience_code);
      }
      if (struct.isSetExperience()) {
        oprot.writeString(struct.experience);
      }
      if (struct.isSetSalary_bottom()) {
        oprot.writeI32(struct.salary_bottom);
      }
      if (struct.isSetSalary_top()) {
        oprot.writeI32(struct.salary_top);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetPub_place_code()) {
        oprot.writeString(struct.pub_place_code);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetWork_place()) {
        oprot.writeString(struct.work_place);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetStop_date()) {
        oprot.writeString(struct.stop_date);
      }
      if (struct.isSetChannel()) {
        oprot.writeI32(struct.channel);
      }
      if (struct.isSetWork_type()) {
        oprot.writeString(struct.work_type);
      }
      if (struct.isSetJob_id()) {
        oprot.writeString(struct.job_id);
      }
      if (struct.isSetPub_place_name()) {
        oprot.writeString(struct.pub_place_name);
      }
      if (struct.isSetDepartment()) {
        oprot.writeString(struct.department);
      }
      if (struct.isSetAccount_id()) {
        oprot.writeI32(struct.account_id);
      }
      if (struct.isSetFeedback_period()) {
        oprot.writeI32(struct.feedback_period);
      }
      if (struct.isSetRecruit_type()) {
        oprot.writeString(struct.recruit_type);
      }
      if (struct.isSetPractice_salary()) {
        oprot.writeI32(struct.practice_salary);
      }
      if (struct.isSetPractice_per_week()) {
        oprot.writeByte(struct.practice_per_week);
      }
      if (struct.isSetPractice_salary_unit()) {
        oprot.writeByte(struct.practice_salary_unit);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list25 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.occupation = new java.util.ArrayList<java.lang.String>(_list25.size);
          java.lang.String _elem26;
          for (int _i27 = 0; _i27 < _list25.size; ++_i27)
          {
            _elem26 = iprot.readString();
            struct.occupation.add(_elem26);
          }
        }
        struct.setOccupationIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list28 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.cities = new java.util.ArrayList<java.util.List<java.lang.String>>(_list28.size);
          java.util.List<java.lang.String> _elem29;
          for (int _i30 = 0; _i30 < _list28.size; ++_i30)
          {
            {
              org.apache.thrift.protocol.TList _list31 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _elem29 = new java.util.ArrayList<java.lang.String>(_list31.size);
              java.lang.String _elem32;
              for (int _i33 = 0; _i33 < _list31.size; ++_i33)
              {
                _elem32 = iprot.readString();
                _elem29.add(_elem32);
              }
            }
            struct.cities.add(_elem29);
          }
        }
        struct.setCitiesIsSet(true);
      }
      if (incoming.get(3)) {
        struct.salary_discuss = iprot.readBool();
        struct.setSalary_discussIsSet(true);
      }
      if (incoming.get(4)) {
        struct.salary_month = iprot.readI32();
        struct.setSalary_monthIsSet(true);
      }
      if (incoming.get(5)) {
        struct.quantity = iprot.readI32();
        struct.setQuantityIsSet(true);
      }
      if (incoming.get(6)) {
        struct.degree_code = iprot.readString();
        struct.setDegree_codeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.experience_code = iprot.readString();
        struct.setExperience_codeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.experience = iprot.readString();
        struct.setExperienceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.salary_bottom = iprot.readI32();
        struct.setSalary_bottomIsSet(true);
      }
      if (incoming.get(11)) {
        struct.salary_top = iprot.readI32();
        struct.setSalary_topIsSet(true);
      }
      if (incoming.get(12)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(13)) {
        struct.pub_place_code = iprot.readString();
        struct.setPub_place_codeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(15)) {
        struct.work_place = iprot.readString();
        struct.setWork_placeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(17)) {
        struct.stop_date = iprot.readString();
        struct.setStop_dateIsSet(true);
      }
      if (incoming.get(18)) {
        struct.channel = iprot.readI32();
        struct.setChannelIsSet(true);
      }
      if (incoming.get(19)) {
        struct.work_type = iprot.readString();
        struct.setWork_typeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.job_id = iprot.readString();
        struct.setJob_idIsSet(true);
      }
      if (incoming.get(21)) {
        struct.pub_place_name = iprot.readString();
        struct.setPub_place_nameIsSet(true);
      }
      if (incoming.get(22)) {
        struct.department = iprot.readString();
        struct.setDepartmentIsSet(true);
      }
      if (incoming.get(23)) {
        struct.account_id = iprot.readI32();
        struct.setAccount_idIsSet(true);
      }
      if (incoming.get(24)) {
        struct.feedback_period = iprot.readI32();
        struct.setFeedback_periodIsSet(true);
      }
      if (incoming.get(25)) {
        struct.recruit_type = iprot.readString();
        struct.setRecruit_typeIsSet(true);
      }
      if (incoming.get(26)) {
        struct.practice_salary = iprot.readI32();
        struct.setPractice_salaryIsSet(true);
      }
      if (incoming.get(27)) {
        struct.practice_per_week = iprot.readByte();
        struct.setPractice_per_weekIsSet(true);
      }
      if (incoming.get(28)) {
        struct.practice_salary_unit = iprot.readByte();
        struct.setPractice_salary_unitIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

