/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.position.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-11-25")
public class ThirdPartyPositionForSynchronization implements org.apache.thrift.TBase<ThirdPartyPositionForSynchronization, ThirdPartyPositionForSynchronization._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdPartyPositionForSynchronization> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdPartyPositionForSynchronization");

  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CATEGORY_MAIN_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("category_main_code", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CATEGORY_MAIN_FIELD_DESC = new org.apache.thrift.protocol.TField("category_main", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CATEGORY_SUB_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("category_sub_code", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CATEGORY_SUB_FIELD_DESC = new org.apache.thrift.protocol.TField("category_sub", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("quantity", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DEGREE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree_code", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience_code", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SALARY_LOW_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_low", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SALARY_HIGH_FIELD_DESC = new org.apache.thrift.protocol.TField("salary_high", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PUB_PLACE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("pub_place_code", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField WORK_PLACE_FIELD_DESC = new org.apache.thrift.protocol.TField("work_place", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField STOP_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("stop_date", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField TYPE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("type_code", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ThirdPartyPositionForSynchronizationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ThirdPartyPositionForSynchronizationTupleSchemeFactory());
  }

  public String title; // required
  public String category_main_code; // required
  public String category_main; // required
  public String category_sub_code; // required
  public String category_sub; // required
  public String quantity; // required
  public String degree_code; // required
  public String degree; // required
  public String experience_code; // required
  public String experience; // required
  public String salary_low; // required
  public String salary_high; // required
  public String description; // required
  public String pub_place_code; // required
  public int position_id; // required
  public String work_place; // required
  public String email; // required
  public String stop_date; // required
  public int channel; // required
  public String type_code; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TITLE((short)1, "title"),
    CATEGORY_MAIN_CODE((short)2, "category_main_code"),
    CATEGORY_MAIN((short)3, "category_main"),
    CATEGORY_SUB_CODE((short)4, "category_sub_code"),
    CATEGORY_SUB((short)5, "category_sub"),
    QUANTITY((short)6, "quantity"),
    DEGREE_CODE((short)7, "degree_code"),
    DEGREE((short)8, "degree"),
    EXPERIENCE_CODE((short)9, "experience_code"),
    EXPERIENCE((short)10, "experience"),
    SALARY_LOW((short)11, "salary_low"),
    SALARY_HIGH((short)12, "salary_high"),
    DESCRIPTION((short)13, "description"),
    PUB_PLACE_CODE((short)14, "pub_place_code"),
    POSITION_ID((short)15, "position_id"),
    WORK_PLACE((short)16, "work_place"),
    EMAIL((short)17, "email"),
    STOP_DATE((short)18, "stop_date"),
    CHANNEL((short)19, "channel"),
    TYPE_CODE((short)20, "type_code");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TITLE
          return TITLE;
        case 2: // CATEGORY_MAIN_CODE
          return CATEGORY_MAIN_CODE;
        case 3: // CATEGORY_MAIN
          return CATEGORY_MAIN;
        case 4: // CATEGORY_SUB_CODE
          return CATEGORY_SUB_CODE;
        case 5: // CATEGORY_SUB
          return CATEGORY_SUB;
        case 6: // QUANTITY
          return QUANTITY;
        case 7: // DEGREE_CODE
          return DEGREE_CODE;
        case 8: // DEGREE
          return DEGREE;
        case 9: // EXPERIENCE_CODE
          return EXPERIENCE_CODE;
        case 10: // EXPERIENCE
          return EXPERIENCE;
        case 11: // SALARY_LOW
          return SALARY_LOW;
        case 12: // SALARY_HIGH
          return SALARY_HIGH;
        case 13: // DESCRIPTION
          return DESCRIPTION;
        case 14: // PUB_PLACE_CODE
          return PUB_PLACE_CODE;
        case 15: // POSITION_ID
          return POSITION_ID;
        case 16: // WORK_PLACE
          return WORK_PLACE;
        case 17: // EMAIL
          return EMAIL;
        case 18: // STOP_DATE
          return STOP_DATE;
        case 19: // CHANNEL
          return CHANNEL;
        case 20: // TYPE_CODE
          return TYPE_CODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __POSITION_ID_ISSET_ID = 0;
  private static final int __CHANNEL_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_MAIN_CODE, new org.apache.thrift.meta_data.FieldMetaData("category_main_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_MAIN, new org.apache.thrift.meta_data.FieldMetaData("category_main", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_SUB_CODE, new org.apache.thrift.meta_data.FieldMetaData("category_sub_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_SUB, new org.apache.thrift.meta_data.FieldMetaData("category_sub", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("quantity", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE_CODE, new org.apache.thrift.meta_data.FieldMetaData("degree_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE_CODE, new org.apache.thrift.meta_data.FieldMetaData("experience_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY_LOW, new org.apache.thrift.meta_data.FieldMetaData("salary_low", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY_HIGH, new org.apache.thrift.meta_data.FieldMetaData("salary_high", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUB_PLACE_CODE, new org.apache.thrift.meta_data.FieldMetaData("pub_place_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORK_PLACE, new org.apache.thrift.meta_data.FieldMetaData("work_place", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STOP_DATE, new org.apache.thrift.meta_data.FieldMetaData("stop_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE_CODE, new org.apache.thrift.meta_data.FieldMetaData("type_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdPartyPositionForSynchronization.class, metaDataMap);
  }

  public ThirdPartyPositionForSynchronization() {
  }

  public ThirdPartyPositionForSynchronization(
    String title,
    String category_main_code,
    String category_main,
    String category_sub_code,
    String category_sub,
    String quantity,
    String degree_code,
    String degree,
    String experience_code,
    String experience,
    String salary_low,
    String salary_high,
    String description,
    String pub_place_code,
    int position_id,
    String work_place,
    String email,
    String stop_date,
    int channel,
    String type_code)
  {
    this();
    this.title = title;
    this.category_main_code = category_main_code;
    this.category_main = category_main;
    this.category_sub_code = category_sub_code;
    this.category_sub = category_sub;
    this.quantity = quantity;
    this.degree_code = degree_code;
    this.degree = degree;
    this.experience_code = experience_code;
    this.experience = experience;
    this.salary_low = salary_low;
    this.salary_high = salary_high;
    this.description = description;
    this.pub_place_code = pub_place_code;
    this.position_id = position_id;
    setPosition_idIsSet(true);
    this.work_place = work_place;
    this.email = email;
    this.stop_date = stop_date;
    this.channel = channel;
    setChannelIsSet(true);
    this.type_code = type_code;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartyPositionForSynchronization(ThirdPartyPositionForSynchronization other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetCategory_main_code()) {
      this.category_main_code = other.category_main_code;
    }
    if (other.isSetCategory_main()) {
      this.category_main = other.category_main;
    }
    if (other.isSetCategory_sub_code()) {
      this.category_sub_code = other.category_sub_code;
    }
    if (other.isSetCategory_sub()) {
      this.category_sub = other.category_sub;
    }
    if (other.isSetQuantity()) {
      this.quantity = other.quantity;
    }
    if (other.isSetDegree_code()) {
      this.degree_code = other.degree_code;
    }
    if (other.isSetDegree()) {
      this.degree = other.degree;
    }
    if (other.isSetExperience_code()) {
      this.experience_code = other.experience_code;
    }
    if (other.isSetExperience()) {
      this.experience = other.experience;
    }
    if (other.isSetSalary_low()) {
      this.salary_low = other.salary_low;
    }
    if (other.isSetSalary_high()) {
      this.salary_high = other.salary_high;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPub_place_code()) {
      this.pub_place_code = other.pub_place_code;
    }
    this.position_id = other.position_id;
    if (other.isSetWork_place()) {
      this.work_place = other.work_place;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetStop_date()) {
      this.stop_date = other.stop_date;
    }
    this.channel = other.channel;
    if (other.isSetType_code()) {
      this.type_code = other.type_code;
    }
  }

  public ThirdPartyPositionForSynchronization deepCopy() {
    return new ThirdPartyPositionForSynchronization(this);
  }

  @Override
  public void clear() {
    this.title = null;
    this.category_main_code = null;
    this.category_main = null;
    this.category_sub_code = null;
    this.category_sub = null;
    this.quantity = null;
    this.degree_code = null;
    this.degree = null;
    this.experience_code = null;
    this.experience = null;
    this.salary_low = null;
    this.salary_high = null;
    this.description = null;
    this.pub_place_code = null;
    setPosition_idIsSet(false);
    this.position_id = 0;
    this.work_place = null;
    this.email = null;
    this.stop_date = null;
    setChannelIsSet(false);
    this.channel = 0;
    this.type_code = null;
  }

  public String getTitle() {
    return this.title;
  }

  public ThirdPartyPositionForSynchronization setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getCategory_main_code() {
    return this.category_main_code;
  }

  public ThirdPartyPositionForSynchronization setCategory_main_code(String category_main_code) {
    this.category_main_code = category_main_code;
    return this;
  }

  public void unsetCategory_main_code() {
    this.category_main_code = null;
  }

  /** Returns true if field category_main_code is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory_main_code() {
    return this.category_main_code != null;
  }

  public void setCategory_main_codeIsSet(boolean value) {
    if (!value) {
      this.category_main_code = null;
    }
  }

  public String getCategory_main() {
    return this.category_main;
  }

  public ThirdPartyPositionForSynchronization setCategory_main(String category_main) {
    this.category_main = category_main;
    return this;
  }

  public void unsetCategory_main() {
    this.category_main = null;
  }

  /** Returns true if field category_main is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory_main() {
    return this.category_main != null;
  }

  public void setCategory_mainIsSet(boolean value) {
    if (!value) {
      this.category_main = null;
    }
  }

  public String getCategory_sub_code() {
    return this.category_sub_code;
  }

  public ThirdPartyPositionForSynchronization setCategory_sub_code(String category_sub_code) {
    this.category_sub_code = category_sub_code;
    return this;
  }

  public void unsetCategory_sub_code() {
    this.category_sub_code = null;
  }

  /** Returns true if field category_sub_code is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory_sub_code() {
    return this.category_sub_code != null;
  }

  public void setCategory_sub_codeIsSet(boolean value) {
    if (!value) {
      this.category_sub_code = null;
    }
  }

  public String getCategory_sub() {
    return this.category_sub;
  }

  public ThirdPartyPositionForSynchronization setCategory_sub(String category_sub) {
    this.category_sub = category_sub;
    return this;
  }

  public void unsetCategory_sub() {
    this.category_sub = null;
  }

  /** Returns true if field category_sub is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory_sub() {
    return this.category_sub != null;
  }

  public void setCategory_subIsSet(boolean value) {
    if (!value) {
      this.category_sub = null;
    }
  }

  public String getQuantity() {
    return this.quantity;
  }

  public ThirdPartyPositionForSynchronization setQuantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

  public void unsetQuantity() {
    this.quantity = null;
  }

  /** Returns true if field quantity is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantity() {
    return this.quantity != null;
  }

  public void setQuantityIsSet(boolean value) {
    if (!value) {
      this.quantity = null;
    }
  }

  public String getDegree_code() {
    return this.degree_code;
  }

  public ThirdPartyPositionForSynchronization setDegree_code(String degree_code) {
    this.degree_code = degree_code;
    return this;
  }

  public void unsetDegree_code() {
    this.degree_code = null;
  }

  /** Returns true if field degree_code is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree_code() {
    return this.degree_code != null;
  }

  public void setDegree_codeIsSet(boolean value) {
    if (!value) {
      this.degree_code = null;
    }
  }

  public String getDegree() {
    return this.degree;
  }

  public ThirdPartyPositionForSynchronization setDegree(String degree) {
    this.degree = degree;
    return this;
  }

  public void unsetDegree() {
    this.degree = null;
  }

  /** Returns true if field degree is set (has been assigned a value) and false otherwise */
  public boolean isSetDegree() {
    return this.degree != null;
  }

  public void setDegreeIsSet(boolean value) {
    if (!value) {
      this.degree = null;
    }
  }

  public String getExperience_code() {
    return this.experience_code;
  }

  public ThirdPartyPositionForSynchronization setExperience_code(String experience_code) {
    this.experience_code = experience_code;
    return this;
  }

  public void unsetExperience_code() {
    this.experience_code = null;
  }

  /** Returns true if field experience_code is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience_code() {
    return this.experience_code != null;
  }

  public void setExperience_codeIsSet(boolean value) {
    if (!value) {
      this.experience_code = null;
    }
  }

  public String getExperience() {
    return this.experience;
  }

  public ThirdPartyPositionForSynchronization setExperience(String experience) {
    this.experience = experience;
    return this;
  }

  public void unsetExperience() {
    this.experience = null;
  }

  /** Returns true if field experience is set (has been assigned a value) and false otherwise */
  public boolean isSetExperience() {
    return this.experience != null;
  }

  public void setExperienceIsSet(boolean value) {
    if (!value) {
      this.experience = null;
    }
  }

  public String getSalary_low() {
    return this.salary_low;
  }

  public ThirdPartyPositionForSynchronization setSalary_low(String salary_low) {
    this.salary_low = salary_low;
    return this;
  }

  public void unsetSalary_low() {
    this.salary_low = null;
  }

  /** Returns true if field salary_low is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_low() {
    return this.salary_low != null;
  }

  public void setSalary_lowIsSet(boolean value) {
    if (!value) {
      this.salary_low = null;
    }
  }

  public String getSalary_high() {
    return this.salary_high;
  }

  public ThirdPartyPositionForSynchronization setSalary_high(String salary_high) {
    this.salary_high = salary_high;
    return this;
  }

  public void unsetSalary_high() {
    this.salary_high = null;
  }

  /** Returns true if field salary_high is set (has been assigned a value) and false otherwise */
  public boolean isSetSalary_high() {
    return this.salary_high != null;
  }

  public void setSalary_highIsSet(boolean value) {
    if (!value) {
      this.salary_high = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public ThirdPartyPositionForSynchronization setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getPub_place_code() {
    return this.pub_place_code;
  }

  public ThirdPartyPositionForSynchronization setPub_place_code(String pub_place_code) {
    this.pub_place_code = pub_place_code;
    return this;
  }

  public void unsetPub_place_code() {
    this.pub_place_code = null;
  }

  /** Returns true if field pub_place_code is set (has been assigned a value) and false otherwise */
  public boolean isSetPub_place_code() {
    return this.pub_place_code != null;
  }

  public void setPub_place_codeIsSet(boolean value) {
    if (!value) {
      this.pub_place_code = null;
    }
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public ThirdPartyPositionForSynchronization setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public String getWork_place() {
    return this.work_place;
  }

  public ThirdPartyPositionForSynchronization setWork_place(String work_place) {
    this.work_place = work_place;
    return this;
  }

  public void unsetWork_place() {
    this.work_place = null;
  }

  /** Returns true if field work_place is set (has been assigned a value) and false otherwise */
  public boolean isSetWork_place() {
    return this.work_place != null;
  }

  public void setWork_placeIsSet(boolean value) {
    if (!value) {
      this.work_place = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public ThirdPartyPositionForSynchronization setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getStop_date() {
    return this.stop_date;
  }

  public ThirdPartyPositionForSynchronization setStop_date(String stop_date) {
    this.stop_date = stop_date;
    return this;
  }

  public void unsetStop_date() {
    this.stop_date = null;
  }

  /** Returns true if field stop_date is set (has been assigned a value) and false otherwise */
  public boolean isSetStop_date() {
    return this.stop_date != null;
  }

  public void setStop_dateIsSet(boolean value) {
    if (!value) {
      this.stop_date = null;
    }
  }

  public int getChannel() {
    return this.channel;
  }

  public ThirdPartyPositionForSynchronization setChannel(int channel) {
    this.channel = channel;
    setChannelIsSet(true);
    return this;
  }

  public void unsetChannel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  public void setChannelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
  }

  public String getType_code() {
    return this.type_code;
  }

  public ThirdPartyPositionForSynchronization setType_code(String type_code) {
    this.type_code = type_code;
    return this;
  }

  public void unsetType_code() {
    this.type_code = null;
  }

  /** Returns true if field type_code is set (has been assigned a value) and false otherwise */
  public boolean isSetType_code() {
    return this.type_code != null;
  }

  public void setType_codeIsSet(boolean value) {
    if (!value) {
      this.type_code = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case CATEGORY_MAIN_CODE:
      if (value == null) {
        unsetCategory_main_code();
      } else {
        setCategory_main_code((String)value);
      }
      break;

    case CATEGORY_MAIN:
      if (value == null) {
        unsetCategory_main();
      } else {
        setCategory_main((String)value);
      }
      break;

    case CATEGORY_SUB_CODE:
      if (value == null) {
        unsetCategory_sub_code();
      } else {
        setCategory_sub_code((String)value);
      }
      break;

    case CATEGORY_SUB:
      if (value == null) {
        unsetCategory_sub();
      } else {
        setCategory_sub((String)value);
      }
      break;

    case QUANTITY:
      if (value == null) {
        unsetQuantity();
      } else {
        setQuantity((String)value);
      }
      break;

    case DEGREE_CODE:
      if (value == null) {
        unsetDegree_code();
      } else {
        setDegree_code((String)value);
      }
      break;

    case DEGREE:
      if (value == null) {
        unsetDegree();
      } else {
        setDegree((String)value);
      }
      break;

    case EXPERIENCE_CODE:
      if (value == null) {
        unsetExperience_code();
      } else {
        setExperience_code((String)value);
      }
      break;

    case EXPERIENCE:
      if (value == null) {
        unsetExperience();
      } else {
        setExperience((String)value);
      }
      break;

    case SALARY_LOW:
      if (value == null) {
        unsetSalary_low();
      } else {
        setSalary_low((String)value);
      }
      break;

    case SALARY_HIGH:
      if (value == null) {
        unsetSalary_high();
      } else {
        setSalary_high((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case PUB_PLACE_CODE:
      if (value == null) {
        unsetPub_place_code();
      } else {
        setPub_place_code((String)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((Integer)value);
      }
      break;

    case WORK_PLACE:
      if (value == null) {
        unsetWork_place();
      } else {
        setWork_place((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case STOP_DATE:
      if (value == null) {
        unsetStop_date();
      } else {
        setStop_date((String)value);
      }
      break;

    case CHANNEL:
      if (value == null) {
        unsetChannel();
      } else {
        setChannel((Integer)value);
      }
      break;

    case TYPE_CODE:
      if (value == null) {
        unsetType_code();
      } else {
        setType_code((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TITLE:
      return getTitle();

    case CATEGORY_MAIN_CODE:
      return getCategory_main_code();

    case CATEGORY_MAIN:
      return getCategory_main();

    case CATEGORY_SUB_CODE:
      return getCategory_sub_code();

    case CATEGORY_SUB:
      return getCategory_sub();

    case QUANTITY:
      return getQuantity();

    case DEGREE_CODE:
      return getDegree_code();

    case DEGREE:
      return getDegree();

    case EXPERIENCE_CODE:
      return getExperience_code();

    case EXPERIENCE:
      return getExperience();

    case SALARY_LOW:
      return getSalary_low();

    case SALARY_HIGH:
      return getSalary_high();

    case DESCRIPTION:
      return getDescription();

    case PUB_PLACE_CODE:
      return getPub_place_code();

    case POSITION_ID:
      return Integer.valueOf(getPosition_id());

    case WORK_PLACE:
      return getWork_place();

    case EMAIL:
      return getEmail();

    case STOP_DATE:
      return getStop_date();

    case CHANNEL:
      return Integer.valueOf(getChannel());

    case TYPE_CODE:
      return getType_code();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TITLE:
      return isSetTitle();
    case CATEGORY_MAIN_CODE:
      return isSetCategory_main_code();
    case CATEGORY_MAIN:
      return isSetCategory_main();
    case CATEGORY_SUB_CODE:
      return isSetCategory_sub_code();
    case CATEGORY_SUB:
      return isSetCategory_sub();
    case QUANTITY:
      return isSetQuantity();
    case DEGREE_CODE:
      return isSetDegree_code();
    case DEGREE:
      return isSetDegree();
    case EXPERIENCE_CODE:
      return isSetExperience_code();
    case EXPERIENCE:
      return isSetExperience();
    case SALARY_LOW:
      return isSetSalary_low();
    case SALARY_HIGH:
      return isSetSalary_high();
    case DESCRIPTION:
      return isSetDescription();
    case PUB_PLACE_CODE:
      return isSetPub_place_code();
    case POSITION_ID:
      return isSetPosition_id();
    case WORK_PLACE:
      return isSetWork_place();
    case EMAIL:
      return isSetEmail();
    case STOP_DATE:
      return isSetStop_date();
    case CHANNEL:
      return isSetChannel();
    case TYPE_CODE:
      return isSetType_code();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartyPositionForSynchronization)
      return this.equals((ThirdPartyPositionForSynchronization)that);
    return false;
  }

  public boolean equals(ThirdPartyPositionForSynchronization that) {
    if (that == null)
      return false;

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_category_main_code = true && this.isSetCategory_main_code();
    boolean that_present_category_main_code = true && that.isSetCategory_main_code();
    if (this_present_category_main_code || that_present_category_main_code) {
      if (!(this_present_category_main_code && that_present_category_main_code))
        return false;
      if (!this.category_main_code.equals(that.category_main_code))
        return false;
    }

    boolean this_present_category_main = true && this.isSetCategory_main();
    boolean that_present_category_main = true && that.isSetCategory_main();
    if (this_present_category_main || that_present_category_main) {
      if (!(this_present_category_main && that_present_category_main))
        return false;
      if (!this.category_main.equals(that.category_main))
        return false;
    }

    boolean this_present_category_sub_code = true && this.isSetCategory_sub_code();
    boolean that_present_category_sub_code = true && that.isSetCategory_sub_code();
    if (this_present_category_sub_code || that_present_category_sub_code) {
      if (!(this_present_category_sub_code && that_present_category_sub_code))
        return false;
      if (!this.category_sub_code.equals(that.category_sub_code))
        return false;
    }

    boolean this_present_category_sub = true && this.isSetCategory_sub();
    boolean that_present_category_sub = true && that.isSetCategory_sub();
    if (this_present_category_sub || that_present_category_sub) {
      if (!(this_present_category_sub && that_present_category_sub))
        return false;
      if (!this.category_sub.equals(that.category_sub))
        return false;
    }

    boolean this_present_quantity = true && this.isSetQuantity();
    boolean that_present_quantity = true && that.isSetQuantity();
    if (this_present_quantity || that_present_quantity) {
      if (!(this_present_quantity && that_present_quantity))
        return false;
      if (!this.quantity.equals(that.quantity))
        return false;
    }

    boolean this_present_degree_code = true && this.isSetDegree_code();
    boolean that_present_degree_code = true && that.isSetDegree_code();
    if (this_present_degree_code || that_present_degree_code) {
      if (!(this_present_degree_code && that_present_degree_code))
        return false;
      if (!this.degree_code.equals(that.degree_code))
        return false;
    }

    boolean this_present_degree = true && this.isSetDegree();
    boolean that_present_degree = true && that.isSetDegree();
    if (this_present_degree || that_present_degree) {
      if (!(this_present_degree && that_present_degree))
        return false;
      if (!this.degree.equals(that.degree))
        return false;
    }

    boolean this_present_experience_code = true && this.isSetExperience_code();
    boolean that_present_experience_code = true && that.isSetExperience_code();
    if (this_present_experience_code || that_present_experience_code) {
      if (!(this_present_experience_code && that_present_experience_code))
        return false;
      if (!this.experience_code.equals(that.experience_code))
        return false;
    }

    boolean this_present_experience = true && this.isSetExperience();
    boolean that_present_experience = true && that.isSetExperience();
    if (this_present_experience || that_present_experience) {
      if (!(this_present_experience && that_present_experience))
        return false;
      if (!this.experience.equals(that.experience))
        return false;
    }

    boolean this_present_salary_low = true && this.isSetSalary_low();
    boolean that_present_salary_low = true && that.isSetSalary_low();
    if (this_present_salary_low || that_present_salary_low) {
      if (!(this_present_salary_low && that_present_salary_low))
        return false;
      if (!this.salary_low.equals(that.salary_low))
        return false;
    }

    boolean this_present_salary_high = true && this.isSetSalary_high();
    boolean that_present_salary_high = true && that.isSetSalary_high();
    if (this_present_salary_high || that_present_salary_high) {
      if (!(this_present_salary_high && that_present_salary_high))
        return false;
      if (!this.salary_high.equals(that.salary_high))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_pub_place_code = true && this.isSetPub_place_code();
    boolean that_present_pub_place_code = true && that.isSetPub_place_code();
    if (this_present_pub_place_code || that_present_pub_place_code) {
      if (!(this_present_pub_place_code && that_present_pub_place_code))
        return false;
      if (!this.pub_place_code.equals(that.pub_place_code))
        return false;
    }

    boolean this_present_position_id = true;
    boolean that_present_position_id = true;
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_work_place = true && this.isSetWork_place();
    boolean that_present_work_place = true && that.isSetWork_place();
    if (this_present_work_place || that_present_work_place) {
      if (!(this_present_work_place && that_present_work_place))
        return false;
      if (!this.work_place.equals(that.work_place))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_stop_date = true && this.isSetStop_date();
    boolean that_present_stop_date = true && that.isSetStop_date();
    if (this_present_stop_date || that_present_stop_date) {
      if (!(this_present_stop_date && that_present_stop_date))
        return false;
      if (!this.stop_date.equals(that.stop_date))
        return false;
    }

    boolean this_present_channel = true;
    boolean that_present_channel = true;
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (this.channel != that.channel)
        return false;
    }

    boolean this_present_type_code = true && this.isSetType_code();
    boolean that_present_type_code = true && that.isSetType_code();
    if (this_present_type_code || that_present_type_code) {
      if (!(this_present_type_code && that_present_type_code))
        return false;
      if (!this.type_code.equals(that.type_code))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_title = true && (isSetTitle());
    list.add(present_title);
    if (present_title)
      list.add(title);

    boolean present_category_main_code = true && (isSetCategory_main_code());
    list.add(present_category_main_code);
    if (present_category_main_code)
      list.add(category_main_code);

    boolean present_category_main = true && (isSetCategory_main());
    list.add(present_category_main);
    if (present_category_main)
      list.add(category_main);

    boolean present_category_sub_code = true && (isSetCategory_sub_code());
    list.add(present_category_sub_code);
    if (present_category_sub_code)
      list.add(category_sub_code);

    boolean present_category_sub = true && (isSetCategory_sub());
    list.add(present_category_sub);
    if (present_category_sub)
      list.add(category_sub);

    boolean present_quantity = true && (isSetQuantity());
    list.add(present_quantity);
    if (present_quantity)
      list.add(quantity);

    boolean present_degree_code = true && (isSetDegree_code());
    list.add(present_degree_code);
    if (present_degree_code)
      list.add(degree_code);

    boolean present_degree = true && (isSetDegree());
    list.add(present_degree);
    if (present_degree)
      list.add(degree);

    boolean present_experience_code = true && (isSetExperience_code());
    list.add(present_experience_code);
    if (present_experience_code)
      list.add(experience_code);

    boolean present_experience = true && (isSetExperience());
    list.add(present_experience);
    if (present_experience)
      list.add(experience);

    boolean present_salary_low = true && (isSetSalary_low());
    list.add(present_salary_low);
    if (present_salary_low)
      list.add(salary_low);

    boolean present_salary_high = true && (isSetSalary_high());
    list.add(present_salary_high);
    if (present_salary_high)
      list.add(salary_high);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_pub_place_code = true && (isSetPub_place_code());
    list.add(present_pub_place_code);
    if (present_pub_place_code)
      list.add(pub_place_code);

    boolean present_position_id = true;
    list.add(present_position_id);
    if (present_position_id)
      list.add(position_id);

    boolean present_work_place = true && (isSetWork_place());
    list.add(present_work_place);
    if (present_work_place)
      list.add(work_place);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    boolean present_stop_date = true && (isSetStop_date());
    list.add(present_stop_date);
    if (present_stop_date)
      list.add(stop_date);

    boolean present_channel = true;
    list.add(present_channel);
    if (present_channel)
      list.add(channel);

    boolean present_type_code = true && (isSetType_code());
    list.add(present_type_code);
    if (present_type_code)
      list.add(type_code);

    return list.hashCode();
  }

  @Override
  public int compareTo(ThirdPartyPositionForSynchronization other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategory_main_code()).compareTo(other.isSetCategory_main_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory_main_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category_main_code, other.category_main_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategory_main()).compareTo(other.isSetCategory_main());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory_main()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category_main, other.category_main);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategory_sub_code()).compareTo(other.isSetCategory_sub_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory_sub_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category_sub_code, other.category_sub_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategory_sub()).compareTo(other.isSetCategory_sub());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory_sub()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category_sub, other.category_sub);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantity()).compareTo(other.isSetQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantity, other.quantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDegree_code()).compareTo(other.isSetDegree_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree_code, other.degree_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDegree()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExperience_code()).compareTo(other.isSetExperience_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience_code, other.experience_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExperience()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalary_low()).compareTo(other.isSetSalary_low());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_low()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_low, other.salary_low);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalary_high()).compareTo(other.isSetSalary_high());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalary_high()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary_high, other.salary_high);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPub_place_code()).compareTo(other.isSetPub_place_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPub_place_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pub_place_code, other.pub_place_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWork_place()).compareTo(other.isSetWork_place());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWork_place()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.work_place, other.work_place);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStop_date()).compareTo(other.isSetStop_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStop_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop_date, other.stop_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType_code()).compareTo(other.isSetType_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type_code, other.type_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdPartyPositionForSynchronization(");
    boolean first = true;

    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("category_main_code:");
    if (this.category_main_code == null) {
      sb.append("null");
    } else {
      sb.append(this.category_main_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("category_main:");
    if (this.category_main == null) {
      sb.append("null");
    } else {
      sb.append(this.category_main);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("category_sub_code:");
    if (this.category_sub_code == null) {
      sb.append("null");
    } else {
      sb.append(this.category_sub_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("category_sub:");
    if (this.category_sub == null) {
      sb.append("null");
    } else {
      sb.append(this.category_sub);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantity:");
    if (this.quantity == null) {
      sb.append("null");
    } else {
      sb.append(this.quantity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree_code:");
    if (this.degree_code == null) {
      sb.append("null");
    } else {
      sb.append(this.degree_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("degree:");
    if (this.degree == null) {
      sb.append("null");
    } else {
      sb.append(this.degree);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience_code:");
    if (this.experience_code == null) {
      sb.append("null");
    } else {
      sb.append(this.experience_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("experience:");
    if (this.experience == null) {
      sb.append("null");
    } else {
      sb.append(this.experience);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_low:");
    if (this.salary_low == null) {
      sb.append("null");
    } else {
      sb.append(this.salary_low);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("salary_high:");
    if (this.salary_high == null) {
      sb.append("null");
    } else {
      sb.append(this.salary_high);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pub_place_code:");
    if (this.pub_place_code == null) {
      sb.append("null");
    } else {
      sb.append(this.pub_place_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("position_id:");
    sb.append(this.position_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("work_place:");
    if (this.work_place == null) {
      sb.append("null");
    } else {
      sb.append(this.work_place);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stop_date:");
    if (this.stop_date == null) {
      sb.append("null");
    } else {
      sb.append(this.stop_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channel:");
    sb.append(this.channel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type_code:");
    if (this.type_code == null) {
      sb.append("null");
    } else {
      sb.append(this.type_code);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdPartyPositionForSynchronizationStandardSchemeFactory implements SchemeFactory {
    public ThirdPartyPositionForSynchronizationStandardScheme getScheme() {
      return new ThirdPartyPositionForSynchronizationStandardScheme();
    }
  }

  private static class ThirdPartyPositionForSynchronizationStandardScheme extends StandardScheme<ThirdPartyPositionForSynchronization> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CATEGORY_MAIN_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.category_main_code = iprot.readString();
              struct.setCategory_main_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CATEGORY_MAIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.category_main = iprot.readString();
              struct.setCategory_mainIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CATEGORY_SUB_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.category_sub_code = iprot.readString();
              struct.setCategory_sub_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CATEGORY_SUB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.category_sub = iprot.readString();
              struct.setCategory_subIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.quantity = iprot.readString();
              struct.setQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DEGREE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree_code = iprot.readString();
              struct.setDegree_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DEGREE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.degree = iprot.readString();
              struct.setDegreeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EXPERIENCE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience_code = iprot.readString();
              struct.setExperience_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // EXPERIENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.experience = iprot.readString();
              struct.setExperienceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SALARY_LOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salary_low = iprot.readString();
              struct.setSalary_lowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SALARY_HIGH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salary_high = iprot.readString();
              struct.setSalary_highIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PUB_PLACE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pub_place_code = iprot.readString();
              struct.setPub_place_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // WORK_PLACE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.work_place = iprot.readString();
              struct.setWork_placeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STOP_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stop_date = iprot.readString();
              struct.setStop_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channel = iprot.readI32();
              struct.setChannelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // TYPE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type_code = iprot.readString();
              struct.setType_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.category_main_code != null) {
        oprot.writeFieldBegin(CATEGORY_MAIN_CODE_FIELD_DESC);
        oprot.writeString(struct.category_main_code);
        oprot.writeFieldEnd();
      }
      if (struct.category_main != null) {
        oprot.writeFieldBegin(CATEGORY_MAIN_FIELD_DESC);
        oprot.writeString(struct.category_main);
        oprot.writeFieldEnd();
      }
      if (struct.category_sub_code != null) {
        oprot.writeFieldBegin(CATEGORY_SUB_CODE_FIELD_DESC);
        oprot.writeString(struct.category_sub_code);
        oprot.writeFieldEnd();
      }
      if (struct.category_sub != null) {
        oprot.writeFieldBegin(CATEGORY_SUB_FIELD_DESC);
        oprot.writeString(struct.category_sub);
        oprot.writeFieldEnd();
      }
      if (struct.quantity != null) {
        oprot.writeFieldBegin(QUANTITY_FIELD_DESC);
        oprot.writeString(struct.quantity);
        oprot.writeFieldEnd();
      }
      if (struct.degree_code != null) {
        oprot.writeFieldBegin(DEGREE_CODE_FIELD_DESC);
        oprot.writeString(struct.degree_code);
        oprot.writeFieldEnd();
      }
      if (struct.degree != null) {
        oprot.writeFieldBegin(DEGREE_FIELD_DESC);
        oprot.writeString(struct.degree);
        oprot.writeFieldEnd();
      }
      if (struct.experience_code != null) {
        oprot.writeFieldBegin(EXPERIENCE_CODE_FIELD_DESC);
        oprot.writeString(struct.experience_code);
        oprot.writeFieldEnd();
      }
      if (struct.experience != null) {
        oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
        oprot.writeString(struct.experience);
        oprot.writeFieldEnd();
      }
      if (struct.salary_low != null) {
        oprot.writeFieldBegin(SALARY_LOW_FIELD_DESC);
        oprot.writeString(struct.salary_low);
        oprot.writeFieldEnd();
      }
      if (struct.salary_high != null) {
        oprot.writeFieldBegin(SALARY_HIGH_FIELD_DESC);
        oprot.writeString(struct.salary_high);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.pub_place_code != null) {
        oprot.writeFieldBegin(PUB_PLACE_CODE_FIELD_DESC);
        oprot.writeString(struct.pub_place_code);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
      oprot.writeI32(struct.position_id);
      oprot.writeFieldEnd();
      if (struct.work_place != null) {
        oprot.writeFieldBegin(WORK_PLACE_FIELD_DESC);
        oprot.writeString(struct.work_place);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.stop_date != null) {
        oprot.writeFieldBegin(STOP_DATE_FIELD_DESC);
        oprot.writeString(struct.stop_date);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
      oprot.writeI32(struct.channel);
      oprot.writeFieldEnd();
      if (struct.type_code != null) {
        oprot.writeFieldBegin(TYPE_CODE_FIELD_DESC);
        oprot.writeString(struct.type_code);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdPartyPositionForSynchronizationTupleSchemeFactory implements SchemeFactory {
    public ThirdPartyPositionForSynchronizationTupleScheme getScheme() {
      return new ThirdPartyPositionForSynchronizationTupleScheme();
    }
  }

  private static class ThirdPartyPositionForSynchronizationTupleScheme extends TupleScheme<ThirdPartyPositionForSynchronization> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTitle()) {
        optionals.set(0);
      }
      if (struct.isSetCategory_main_code()) {
        optionals.set(1);
      }
      if (struct.isSetCategory_main()) {
        optionals.set(2);
      }
      if (struct.isSetCategory_sub_code()) {
        optionals.set(3);
      }
      if (struct.isSetCategory_sub()) {
        optionals.set(4);
      }
      if (struct.isSetQuantity()) {
        optionals.set(5);
      }
      if (struct.isSetDegree_code()) {
        optionals.set(6);
      }
      if (struct.isSetDegree()) {
        optionals.set(7);
      }
      if (struct.isSetExperience_code()) {
        optionals.set(8);
      }
      if (struct.isSetExperience()) {
        optionals.set(9);
      }
      if (struct.isSetSalary_low()) {
        optionals.set(10);
      }
      if (struct.isSetSalary_high()) {
        optionals.set(11);
      }
      if (struct.isSetDescription()) {
        optionals.set(12);
      }
      if (struct.isSetPub_place_code()) {
        optionals.set(13);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(14);
      }
      if (struct.isSetWork_place()) {
        optionals.set(15);
      }
      if (struct.isSetEmail()) {
        optionals.set(16);
      }
      if (struct.isSetStop_date()) {
        optionals.set(17);
      }
      if (struct.isSetChannel()) {
        optionals.set(18);
      }
      if (struct.isSetType_code()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetCategory_main_code()) {
        oprot.writeString(struct.category_main_code);
      }
      if (struct.isSetCategory_main()) {
        oprot.writeString(struct.category_main);
      }
      if (struct.isSetCategory_sub_code()) {
        oprot.writeString(struct.category_sub_code);
      }
      if (struct.isSetCategory_sub()) {
        oprot.writeString(struct.category_sub);
      }
      if (struct.isSetQuantity()) {
        oprot.writeString(struct.quantity);
      }
      if (struct.isSetDegree_code()) {
        oprot.writeString(struct.degree_code);
      }
      if (struct.isSetDegree()) {
        oprot.writeString(struct.degree);
      }
      if (struct.isSetExperience_code()) {
        oprot.writeString(struct.experience_code);
      }
      if (struct.isSetExperience()) {
        oprot.writeString(struct.experience);
      }
      if (struct.isSetSalary_low()) {
        oprot.writeString(struct.salary_low);
      }
      if (struct.isSetSalary_high()) {
        oprot.writeString(struct.salary_high);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetPub_place_code()) {
        oprot.writeString(struct.pub_place_code);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetWork_place()) {
        oprot.writeString(struct.work_place);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetStop_date()) {
        oprot.writeString(struct.stop_date);
      }
      if (struct.isSetChannel()) {
        oprot.writeI32(struct.channel);
      }
      if (struct.isSetType_code()) {
        oprot.writeString(struct.type_code);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdPartyPositionForSynchronization struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(1)) {
        struct.category_main_code = iprot.readString();
        struct.setCategory_main_codeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.category_main = iprot.readString();
        struct.setCategory_mainIsSet(true);
      }
      if (incoming.get(3)) {
        struct.category_sub_code = iprot.readString();
        struct.setCategory_sub_codeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.category_sub = iprot.readString();
        struct.setCategory_subIsSet(true);
      }
      if (incoming.get(5)) {
        struct.quantity = iprot.readString();
        struct.setQuantityIsSet(true);
      }
      if (incoming.get(6)) {
        struct.degree_code = iprot.readString();
        struct.setDegree_codeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.degree = iprot.readString();
        struct.setDegreeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.experience_code = iprot.readString();
        struct.setExperience_codeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.experience = iprot.readString();
        struct.setExperienceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.salary_low = iprot.readString();
        struct.setSalary_lowIsSet(true);
      }
      if (incoming.get(11)) {
        struct.salary_high = iprot.readString();
        struct.setSalary_highIsSet(true);
      }
      if (incoming.get(12)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(13)) {
        struct.pub_place_code = iprot.readString();
        struct.setPub_place_codeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(15)) {
        struct.work_place = iprot.readString();
        struct.setWork_placeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(17)) {
        struct.stop_date = iprot.readString();
        struct.setStop_dateIsSet(true);
      }
      if (incoming.get(18)) {
        struct.channel = iprot.readI32();
        struct.setChannelIsSet(true);
      }
      if (incoming.get(19)) {
        struct.type_code = iprot.readString();
        struct.setType_codeIsSet(true);
      }
    }
  }

}

