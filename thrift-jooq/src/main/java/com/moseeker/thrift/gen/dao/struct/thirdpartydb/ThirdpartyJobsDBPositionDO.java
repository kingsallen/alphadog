/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.thirdpartydb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-03-14")
public class ThirdpartyJobsDBPositionDO implements org.apache.thrift.TBase<ThirdpartyJobsDBPositionDO, ThirdpartyJobsDBPositionDO._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdpartyJobsDBPositionDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdpartyJobsDBPositionDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField SUMMARY1_FIELD_DESC = new org.apache.thrift.protocol.TField("summary1", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SUMMARY2_FIELD_DESC = new org.apache.thrift.protocol.TField("summary2", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SUMMARY3_FIELD_DESC = new org.apache.thrift.protocol.TField("summary3", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField OCCUPATION_EXT1_FIELD_DESC = new org.apache.thrift.protocol.TField("occupationExt1", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField OCCUPATION_EXT2_FIELD_DESC = new org.apache.thrift.protocol.TField("occupationExt2", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CHILD_ADDRESS_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("childAddressId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CHILD_ADDRESS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("childAddressName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)14);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ThirdpartyJobsDBPositionDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ThirdpartyJobsDBPositionDOTupleSchemeFactory();

  public int id; // optional
  public int pid; // optional
  public String summary1; // optional
  public String summary2; // optional
  public String summary3; // optional
  public String occupationExt1; // optional
  public String occupationExt2; // optional
  public String childAddressId; // optional
  public String childAddressName; // optional
  public byte status; // optional
  public String createTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PID((short)2, "pid"),
    SUMMARY1((short)3, "summary1"),
    SUMMARY2((short)4, "summary2"),
    SUMMARY3((short)5, "summary3"),
    OCCUPATION_EXT1((short)6, "occupationExt1"),
    OCCUPATION_EXT2((short)7, "occupationExt2"),
    CHILD_ADDRESS_ID((short)8, "childAddressId"),
    CHILD_ADDRESS_NAME((short)9, "childAddressName"),
    STATUS((short)14, "status"),
    CREATE_TIME((short)15, "createTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PID
          return PID;
        case 3: // SUMMARY1
          return SUMMARY1;
        case 4: // SUMMARY2
          return SUMMARY2;
        case 5: // SUMMARY3
          return SUMMARY3;
        case 6: // OCCUPATION_EXT1
          return OCCUPATION_EXT1;
        case 7: // OCCUPATION_EXT2
          return OCCUPATION_EXT2;
        case 8: // CHILD_ADDRESS_ID
          return CHILD_ADDRESS_ID;
        case 9: // CHILD_ADDRESS_NAME
          return CHILD_ADDRESS_NAME;
        case 14: // STATUS
          return STATUS;
        case 15: // CREATE_TIME
          return CREATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __PID_ISSET_ID = 1;
  private static final int __STATUS_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.PID,_Fields.SUMMARY1,_Fields.SUMMARY2,_Fields.SUMMARY3,_Fields.OCCUPATION_EXT1,_Fields.OCCUPATION_EXT2,_Fields.CHILD_ADDRESS_ID,_Fields.CHILD_ADDRESS_NAME,_Fields.STATUS,_Fields.CREATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUMMARY1, new org.apache.thrift.meta_data.FieldMetaData("summary1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY2, new org.apache.thrift.meta_data.FieldMetaData("summary2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY3, new org.apache.thrift.meta_data.FieldMetaData("summary3", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OCCUPATION_EXT1, new org.apache.thrift.meta_data.FieldMetaData("occupationExt1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OCCUPATION_EXT2, new org.apache.thrift.meta_data.FieldMetaData("occupationExt2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHILD_ADDRESS_ID, new org.apache.thrift.meta_data.FieldMetaData("childAddressId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHILD_ADDRESS_NAME, new org.apache.thrift.meta_data.FieldMetaData("childAddressName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdpartyJobsDBPositionDO.class, metaDataMap);
  }

  public ThirdpartyJobsDBPositionDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdpartyJobsDBPositionDO(ThirdpartyJobsDBPositionDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.pid = other.pid;
    if (other.isSetSummary1()) {
      this.summary1 = other.summary1;
    }
    if (other.isSetSummary2()) {
      this.summary2 = other.summary2;
    }
    if (other.isSetSummary3()) {
      this.summary3 = other.summary3;
    }
    if (other.isSetOccupationExt1()) {
      this.occupationExt1 = other.occupationExt1;
    }
    if (other.isSetOccupationExt2()) {
      this.occupationExt2 = other.occupationExt2;
    }
    if (other.isSetChildAddressId()) {
      this.childAddressId = other.childAddressId;
    }
    if (other.isSetChildAddressName()) {
      this.childAddressName = other.childAddressName;
    }
    this.status = other.status;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
  }

  public ThirdpartyJobsDBPositionDO deepCopy() {
    return new ThirdpartyJobsDBPositionDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPidIsSet(false);
    this.pid = 0;
    this.summary1 = null;
    this.summary2 = null;
    this.summary3 = null;
    this.occupationExt1 = null;
    this.occupationExt2 = null;
    this.childAddressId = null;
    this.childAddressName = null;
    setStatusIsSet(false);
    this.status = 0;
    this.createTime = null;
  }

  public int getId() {
    return this.id;
  }

  public ThirdpartyJobsDBPositionDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPid() {
    return this.pid;
  }

  public ThirdpartyJobsDBPositionDO setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
    return this;
  }

  public void unsetPid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  public String getSummary1() {
    return this.summary1;
  }

  public ThirdpartyJobsDBPositionDO setSummary1(String summary1) {
    this.summary1 = summary1;
    return this;
  }

  public void unsetSummary1() {
    this.summary1 = null;
  }

  /** Returns true if field summary1 is set (has been assigned a value) and false otherwise */
  public boolean isSetSummary1() {
    return this.summary1 != null;
  }

  public void setSummary1IsSet(boolean value) {
    if (!value) {
      this.summary1 = null;
    }
  }

  public String getSummary2() {
    return this.summary2;
  }

  public ThirdpartyJobsDBPositionDO setSummary2(String summary2) {
    this.summary2 = summary2;
    return this;
  }

  public void unsetSummary2() {
    this.summary2 = null;
  }

  /** Returns true if field summary2 is set (has been assigned a value) and false otherwise */
  public boolean isSetSummary2() {
    return this.summary2 != null;
  }

  public void setSummary2IsSet(boolean value) {
    if (!value) {
      this.summary2 = null;
    }
  }

  public String getSummary3() {
    return this.summary3;
  }

  public ThirdpartyJobsDBPositionDO setSummary3(String summary3) {
    this.summary3 = summary3;
    return this;
  }

  public void unsetSummary3() {
    this.summary3 = null;
  }

  /** Returns true if field summary3 is set (has been assigned a value) and false otherwise */
  public boolean isSetSummary3() {
    return this.summary3 != null;
  }

  public void setSummary3IsSet(boolean value) {
    if (!value) {
      this.summary3 = null;
    }
  }

  public String getOccupationExt1() {
    return this.occupationExt1;
  }

  public ThirdpartyJobsDBPositionDO setOccupationExt1(String occupationExt1) {
    this.occupationExt1 = occupationExt1;
    return this;
  }

  public void unsetOccupationExt1() {
    this.occupationExt1 = null;
  }

  /** Returns true if field occupationExt1 is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupationExt1() {
    return this.occupationExt1 != null;
  }

  public void setOccupationExt1IsSet(boolean value) {
    if (!value) {
      this.occupationExt1 = null;
    }
  }

  public String getOccupationExt2() {
    return this.occupationExt2;
  }

  public ThirdpartyJobsDBPositionDO setOccupationExt2(String occupationExt2) {
    this.occupationExt2 = occupationExt2;
    return this;
  }

  public void unsetOccupationExt2() {
    this.occupationExt2 = null;
  }

  /** Returns true if field occupationExt2 is set (has been assigned a value) and false otherwise */
  public boolean isSetOccupationExt2() {
    return this.occupationExt2 != null;
  }

  public void setOccupationExt2IsSet(boolean value) {
    if (!value) {
      this.occupationExt2 = null;
    }
  }

  public String getChildAddressId() {
    return this.childAddressId;
  }

  public ThirdpartyJobsDBPositionDO setChildAddressId(String childAddressId) {
    this.childAddressId = childAddressId;
    return this;
  }

  public void unsetChildAddressId() {
    this.childAddressId = null;
  }

  /** Returns true if field childAddressId is set (has been assigned a value) and false otherwise */
  public boolean isSetChildAddressId() {
    return this.childAddressId != null;
  }

  public void setChildAddressIdIsSet(boolean value) {
    if (!value) {
      this.childAddressId = null;
    }
  }

  public String getChildAddressName() {
    return this.childAddressName;
  }

  public ThirdpartyJobsDBPositionDO setChildAddressName(String childAddressName) {
    this.childAddressName = childAddressName;
    return this;
  }

  public void unsetChildAddressName() {
    this.childAddressName = null;
  }

  /** Returns true if field childAddressName is set (has been assigned a value) and false otherwise */
  public boolean isSetChildAddressName() {
    return this.childAddressName != null;
  }

  public void setChildAddressNameIsSet(boolean value) {
    if (!value) {
      this.childAddressName = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public ThirdpartyJobsDBPositionDO setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public ThirdpartyJobsDBPositionDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((Integer)value);
      }
      break;

    case SUMMARY1:
      if (value == null) {
        unsetSummary1();
      } else {
        setSummary1((String)value);
      }
      break;

    case SUMMARY2:
      if (value == null) {
        unsetSummary2();
      } else {
        setSummary2((String)value);
      }
      break;

    case SUMMARY3:
      if (value == null) {
        unsetSummary3();
      } else {
        setSummary3((String)value);
      }
      break;

    case OCCUPATION_EXT1:
      if (value == null) {
        unsetOccupationExt1();
      } else {
        setOccupationExt1((String)value);
      }
      break;

    case OCCUPATION_EXT2:
      if (value == null) {
        unsetOccupationExt2();
      } else {
        setOccupationExt2((String)value);
      }
      break;

    case CHILD_ADDRESS_ID:
      if (value == null) {
        unsetChildAddressId();
      } else {
        setChildAddressId((String)value);
      }
      break;

    case CHILD_ADDRESS_NAME:
      if (value == null) {
        unsetChildAddressName();
      } else {
        setChildAddressName((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Byte)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PID:
      return getPid();

    case SUMMARY1:
      return getSummary1();

    case SUMMARY2:
      return getSummary2();

    case SUMMARY3:
      return getSummary3();

    case OCCUPATION_EXT1:
      return getOccupationExt1();

    case OCCUPATION_EXT2:
      return getOccupationExt2();

    case CHILD_ADDRESS_ID:
      return getChildAddressId();

    case CHILD_ADDRESS_NAME:
      return getChildAddressName();

    case STATUS:
      return getStatus();

    case CREATE_TIME:
      return getCreateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PID:
      return isSetPid();
    case SUMMARY1:
      return isSetSummary1();
    case SUMMARY2:
      return isSetSummary2();
    case SUMMARY3:
      return isSetSummary3();
    case OCCUPATION_EXT1:
      return isSetOccupationExt1();
    case OCCUPATION_EXT2:
      return isSetOccupationExt2();
    case CHILD_ADDRESS_ID:
      return isSetChildAddressId();
    case CHILD_ADDRESS_NAME:
      return isSetChildAddressName();
    case STATUS:
      return isSetStatus();
    case CREATE_TIME:
      return isSetCreateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdpartyJobsDBPositionDO)
      return this.equals((ThirdpartyJobsDBPositionDO)that);
    return false;
  }

  public boolean equals(ThirdpartyJobsDBPositionDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_summary1 = true && this.isSetSummary1();
    boolean that_present_summary1 = true && that.isSetSummary1();
    if (this_present_summary1 || that_present_summary1) {
      if (!(this_present_summary1 && that_present_summary1))
        return false;
      if (!this.summary1.equals(that.summary1))
        return false;
    }

    boolean this_present_summary2 = true && this.isSetSummary2();
    boolean that_present_summary2 = true && that.isSetSummary2();
    if (this_present_summary2 || that_present_summary2) {
      if (!(this_present_summary2 && that_present_summary2))
        return false;
      if (!this.summary2.equals(that.summary2))
        return false;
    }

    boolean this_present_summary3 = true && this.isSetSummary3();
    boolean that_present_summary3 = true && that.isSetSummary3();
    if (this_present_summary3 || that_present_summary3) {
      if (!(this_present_summary3 && that_present_summary3))
        return false;
      if (!this.summary3.equals(that.summary3))
        return false;
    }

    boolean this_present_occupationExt1 = true && this.isSetOccupationExt1();
    boolean that_present_occupationExt1 = true && that.isSetOccupationExt1();
    if (this_present_occupationExt1 || that_present_occupationExt1) {
      if (!(this_present_occupationExt1 && that_present_occupationExt1))
        return false;
      if (!this.occupationExt1.equals(that.occupationExt1))
        return false;
    }

    boolean this_present_occupationExt2 = true && this.isSetOccupationExt2();
    boolean that_present_occupationExt2 = true && that.isSetOccupationExt2();
    if (this_present_occupationExt2 || that_present_occupationExt2) {
      if (!(this_present_occupationExt2 && that_present_occupationExt2))
        return false;
      if (!this.occupationExt2.equals(that.occupationExt2))
        return false;
    }

    boolean this_present_childAddressId = true && this.isSetChildAddressId();
    boolean that_present_childAddressId = true && that.isSetChildAddressId();
    if (this_present_childAddressId || that_present_childAddressId) {
      if (!(this_present_childAddressId && that_present_childAddressId))
        return false;
      if (!this.childAddressId.equals(that.childAddressId))
        return false;
    }

    boolean this_present_childAddressName = true && this.isSetChildAddressName();
    boolean that_present_childAddressName = true && that.isSetChildAddressName();
    if (this_present_childAddressName || that_present_childAddressName) {
      if (!(this_present_childAddressName && that_present_childAddressName))
        return false;
      if (!this.childAddressName.equals(that.childAddressName))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPid()) ? 131071 : 524287);
    if (isSetPid())
      hashCode = hashCode * 8191 + pid;

    hashCode = hashCode * 8191 + ((isSetSummary1()) ? 131071 : 524287);
    if (isSetSummary1())
      hashCode = hashCode * 8191 + summary1.hashCode();

    hashCode = hashCode * 8191 + ((isSetSummary2()) ? 131071 : 524287);
    if (isSetSummary2())
      hashCode = hashCode * 8191 + summary2.hashCode();

    hashCode = hashCode * 8191 + ((isSetSummary3()) ? 131071 : 524287);
    if (isSetSummary3())
      hashCode = hashCode * 8191 + summary3.hashCode();

    hashCode = hashCode * 8191 + ((isSetOccupationExt1()) ? 131071 : 524287);
    if (isSetOccupationExt1())
      hashCode = hashCode * 8191 + occupationExt1.hashCode();

    hashCode = hashCode * 8191 + ((isSetOccupationExt2()) ? 131071 : 524287);
    if (isSetOccupationExt2())
      hashCode = hashCode * 8191 + occupationExt2.hashCode();

    hashCode = hashCode * 8191 + ((isSetChildAddressId()) ? 131071 : 524287);
    if (isSetChildAddressId())
      hashCode = hashCode * 8191 + childAddressId.hashCode();

    hashCode = hashCode * 8191 + ((isSetChildAddressName()) ? 131071 : 524287);
    if (isSetChildAddressName())
      hashCode = hashCode * 8191 + childAddressName.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + (int) (status);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ThirdpartyJobsDBPositionDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary1()).compareTo(other.isSetSummary1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary1, other.summary1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary2()).compareTo(other.isSetSummary2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary2, other.summary2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary3()).compareTo(other.isSetSummary3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary3, other.summary3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOccupationExt1()).compareTo(other.isSetOccupationExt1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupationExt1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupationExt1, other.occupationExt1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOccupationExt2()).compareTo(other.isSetOccupationExt2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOccupationExt2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupationExt2, other.occupationExt2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChildAddressId()).compareTo(other.isSetChildAddressId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChildAddressId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.childAddressId, other.childAddressId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChildAddressName()).compareTo(other.isSetChildAddressName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChildAddressName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.childAddressName, other.childAddressName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdpartyJobsDBPositionDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPid()) {
      if (!first) sb.append(", ");
      sb.append("pid:");
      sb.append(this.pid);
      first = false;
    }
    if (isSetSummary1()) {
      if (!first) sb.append(", ");
      sb.append("summary1:");
      if (this.summary1 == null) {
        sb.append("null");
      } else {
        sb.append(this.summary1);
      }
      first = false;
    }
    if (isSetSummary2()) {
      if (!first) sb.append(", ");
      sb.append("summary2:");
      if (this.summary2 == null) {
        sb.append("null");
      } else {
        sb.append(this.summary2);
      }
      first = false;
    }
    if (isSetSummary3()) {
      if (!first) sb.append(", ");
      sb.append("summary3:");
      if (this.summary3 == null) {
        sb.append("null");
      } else {
        sb.append(this.summary3);
      }
      first = false;
    }
    if (isSetOccupationExt1()) {
      if (!first) sb.append(", ");
      sb.append("occupationExt1:");
      if (this.occupationExt1 == null) {
        sb.append("null");
      } else {
        sb.append(this.occupationExt1);
      }
      first = false;
    }
    if (isSetOccupationExt2()) {
      if (!first) sb.append(", ");
      sb.append("occupationExt2:");
      if (this.occupationExt2 == null) {
        sb.append("null");
      } else {
        sb.append(this.occupationExt2);
      }
      first = false;
    }
    if (isSetChildAddressId()) {
      if (!first) sb.append(", ");
      sb.append("childAddressId:");
      if (this.childAddressId == null) {
        sb.append("null");
      } else {
        sb.append(this.childAddressId);
      }
      first = false;
    }
    if (isSetChildAddressName()) {
      if (!first) sb.append(", ");
      sb.append("childAddressName:");
      if (this.childAddressName == null) {
        sb.append("null");
      } else {
        sb.append(this.childAddressName);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdpartyJobsDBPositionDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyJobsDBPositionDOStandardScheme getScheme() {
      return new ThirdpartyJobsDBPositionDOStandardScheme();
    }
  }

  private static class ThirdpartyJobsDBPositionDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ThirdpartyJobsDBPositionDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdpartyJobsDBPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUMMARY1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary1 = iprot.readString();
              struct.setSummary1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SUMMARY2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary2 = iprot.readString();
              struct.setSummary2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUMMARY3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary3 = iprot.readString();
              struct.setSummary3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OCCUPATION_EXT1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.occupationExt1 = iprot.readString();
              struct.setOccupationExt1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OCCUPATION_EXT2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.occupationExt2 = iprot.readString();
              struct.setOccupationExt2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHILD_ADDRESS_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.childAddressId = iprot.readString();
              struct.setChildAddressIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CHILD_ADDRESS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.childAddressName = iprot.readString();
              struct.setChildAddressNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdpartyJobsDBPositionDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPid()) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeI32(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.summary1 != null) {
        if (struct.isSetSummary1()) {
          oprot.writeFieldBegin(SUMMARY1_FIELD_DESC);
          oprot.writeString(struct.summary1);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary2 != null) {
        if (struct.isSetSummary2()) {
          oprot.writeFieldBegin(SUMMARY2_FIELD_DESC);
          oprot.writeString(struct.summary2);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary3 != null) {
        if (struct.isSetSummary3()) {
          oprot.writeFieldBegin(SUMMARY3_FIELD_DESC);
          oprot.writeString(struct.summary3);
          oprot.writeFieldEnd();
        }
      }
      if (struct.occupationExt1 != null) {
        if (struct.isSetOccupationExt1()) {
          oprot.writeFieldBegin(OCCUPATION_EXT1_FIELD_DESC);
          oprot.writeString(struct.occupationExt1);
          oprot.writeFieldEnd();
        }
      }
      if (struct.occupationExt2 != null) {
        if (struct.isSetOccupationExt2()) {
          oprot.writeFieldBegin(OCCUPATION_EXT2_FIELD_DESC);
          oprot.writeString(struct.occupationExt2);
          oprot.writeFieldEnd();
        }
      }
      if (struct.childAddressId != null) {
        if (struct.isSetChildAddressId()) {
          oprot.writeFieldBegin(CHILD_ADDRESS_ID_FIELD_DESC);
          oprot.writeString(struct.childAddressId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.childAddressName != null) {
        if (struct.isSetChildAddressName()) {
          oprot.writeFieldBegin(CHILD_ADDRESS_NAME_FIELD_DESC);
          oprot.writeString(struct.childAddressName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeByte(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdpartyJobsDBPositionDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ThirdpartyJobsDBPositionDOTupleScheme getScheme() {
      return new ThirdpartyJobsDBPositionDOTupleScheme();
    }
  }

  private static class ThirdpartyJobsDBPositionDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ThirdpartyJobsDBPositionDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdpartyJobsDBPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPid()) {
        optionals.set(1);
      }
      if (struct.isSetSummary1()) {
        optionals.set(2);
      }
      if (struct.isSetSummary2()) {
        optionals.set(3);
      }
      if (struct.isSetSummary3()) {
        optionals.set(4);
      }
      if (struct.isSetOccupationExt1()) {
        optionals.set(5);
      }
      if (struct.isSetOccupationExt2()) {
        optionals.set(6);
      }
      if (struct.isSetChildAddressId()) {
        optionals.set(7);
      }
      if (struct.isSetChildAddressName()) {
        optionals.set(8);
      }
      if (struct.isSetStatus()) {
        optionals.set(9);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetSummary1()) {
        oprot.writeString(struct.summary1);
      }
      if (struct.isSetSummary2()) {
        oprot.writeString(struct.summary2);
      }
      if (struct.isSetSummary3()) {
        oprot.writeString(struct.summary3);
      }
      if (struct.isSetOccupationExt1()) {
        oprot.writeString(struct.occupationExt1);
      }
      if (struct.isSetOccupationExt2()) {
        oprot.writeString(struct.occupationExt2);
      }
      if (struct.isSetChildAddressId()) {
        oprot.writeString(struct.childAddressId);
      }
      if (struct.isSetChildAddressName()) {
        oprot.writeString(struct.childAddressName);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdpartyJobsDBPositionDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.summary1 = iprot.readString();
        struct.setSummary1IsSet(true);
      }
      if (incoming.get(3)) {
        struct.summary2 = iprot.readString();
        struct.setSummary2IsSet(true);
      }
      if (incoming.get(4)) {
        struct.summary3 = iprot.readString();
        struct.setSummary3IsSet(true);
      }
      if (incoming.get(5)) {
        struct.occupationExt1 = iprot.readString();
        struct.setOccupationExt1IsSet(true);
      }
      if (incoming.get(6)) {
        struct.occupationExt2 = iprot.readString();
        struct.setOccupationExt2IsSet(true);
      }
      if (incoming.get(7)) {
        struct.childAddressId = iprot.readString();
        struct.setChildAddressIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.childAddressName = iprot.readString();
        struct.setChildAddressNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

