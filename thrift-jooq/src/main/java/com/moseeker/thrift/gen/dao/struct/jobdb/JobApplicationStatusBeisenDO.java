/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.jobdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-08")
public class JobApplicationStatusBeisenDO implements org.apache.thrift.TBase<JobApplicationStatusBeisenDO, JobApplicationStatusBeisenDO._Fields>, java.io.Serializable, Cloneable, Comparable<JobApplicationStatusBeisenDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobApplicationStatusBeisenDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField APPLIER_MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("applierMobile", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField APPLIER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("applierName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField JOBNUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("jobnumber", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField JOBTITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobtitle", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHASECODE_FIELD_DESC = new org.apache.thrift.protocol.TField("phasecode", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PHASENAME_FIELD_DESC = new org.apache.thrift.protocol.TField("phasename", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField STATUSCODE_FIELD_DESC = new org.apache.thrift.protocol.TField("statuscode", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField STATUSNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("statusname", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobApplicationStatusBeisenDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobApplicationStatusBeisenDOTupleSchemeFactory();

  public int id; // optional
  public int companyId; // optional
  public double applierMobile; // optional
  public String applierName; // optional
  public String jobnumber; // optional
  public String jobtitle; // optional
  public int phasecode; // optional
  public String phasename; // optional
  public int statuscode; // optional
  public String statusname; // optional
  public String createTime; // optional
  public String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "companyId"),
    APPLIER_MOBILE((short)3, "applierMobile"),
    APPLIER_NAME((short)4, "applierName"),
    JOBNUMBER((short)5, "jobnumber"),
    JOBTITLE((short)6, "jobtitle"),
    PHASECODE((short)7, "phasecode"),
    PHASENAME((short)8, "phasename"),
    STATUSCODE((short)9, "statuscode"),
    STATUSNAME((short)10, "statusname"),
    CREATE_TIME((short)11, "createTime"),
    UPDATE_TIME((short)12, "updateTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // APPLIER_MOBILE
          return APPLIER_MOBILE;
        case 4: // APPLIER_NAME
          return APPLIER_NAME;
        case 5: // JOBNUMBER
          return JOBNUMBER;
        case 6: // JOBTITLE
          return JOBTITLE;
        case 7: // PHASECODE
          return PHASECODE;
        case 8: // PHASENAME
          return PHASENAME;
        case 9: // STATUSCODE
          return STATUSCODE;
        case 10: // STATUSNAME
          return STATUSNAME;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __APPLIERMOBILE_ISSET_ID = 2;
  private static final int __PHASECODE_ISSET_ID = 3;
  private static final int __STATUSCODE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.APPLIER_MOBILE,_Fields.APPLIER_NAME,_Fields.JOBNUMBER,_Fields.JOBTITLE,_Fields.PHASECODE,_Fields.PHASENAME,_Fields.STATUSCODE,_Fields.STATUSNAME,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLIER_MOBILE, new org.apache.thrift.meta_data.FieldMetaData("applierMobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.APPLIER_NAME, new org.apache.thrift.meta_data.FieldMetaData("applierName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOBNUMBER, new org.apache.thrift.meta_data.FieldMetaData("jobnumber", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOBTITLE, new org.apache.thrift.meta_data.FieldMetaData("jobtitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHASECODE, new org.apache.thrift.meta_data.FieldMetaData("phasecode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PHASENAME, new org.apache.thrift.meta_data.FieldMetaData("phasename", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUSCODE, new org.apache.thrift.meta_data.FieldMetaData("statuscode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUSNAME, new org.apache.thrift.meta_data.FieldMetaData("statusname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobApplicationStatusBeisenDO.class, metaDataMap);
  }

  public JobApplicationStatusBeisenDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobApplicationStatusBeisenDO(JobApplicationStatusBeisenDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.companyId = other.companyId;
    this.applierMobile = other.applierMobile;
    if (other.isSetApplierName()) {
      this.applierName = other.applierName;
    }
    if (other.isSetJobnumber()) {
      this.jobnumber = other.jobnumber;
    }
    if (other.isSetJobtitle()) {
      this.jobtitle = other.jobtitle;
    }
    this.phasecode = other.phasecode;
    if (other.isSetPhasename()) {
      this.phasename = other.phasename;
    }
    this.statuscode = other.statuscode;
    if (other.isSetStatusname()) {
      this.statusname = other.statusname;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public JobApplicationStatusBeisenDO deepCopy() {
    return new JobApplicationStatusBeisenDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setApplierMobileIsSet(false);
    this.applierMobile = 0.0;
    this.applierName = null;
    this.jobnumber = null;
    this.jobtitle = null;
    setPhasecodeIsSet(false);
    this.phasecode = 0;
    this.phasename = null;
    setStatuscodeIsSet(false);
    this.statuscode = 0;
    this.statusname = null;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public JobApplicationStatusBeisenDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public JobApplicationStatusBeisenDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public double getApplierMobile() {
    return this.applierMobile;
  }

  public JobApplicationStatusBeisenDO setApplierMobile(double applierMobile) {
    this.applierMobile = applierMobile;
    setApplierMobileIsSet(true);
    return this;
  }

  public void unsetApplierMobile() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLIERMOBILE_ISSET_ID);
  }

  /** Returns true if field applierMobile is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierMobile() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLIERMOBILE_ISSET_ID);
  }

  public void setApplierMobileIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLIERMOBILE_ISSET_ID, value);
  }

  public String getApplierName() {
    return this.applierName;
  }

  public JobApplicationStatusBeisenDO setApplierName(String applierName) {
    this.applierName = applierName;
    return this;
  }

  public void unsetApplierName() {
    this.applierName = null;
  }

  /** Returns true if field applierName is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierName() {
    return this.applierName != null;
  }

  public void setApplierNameIsSet(boolean value) {
    if (!value) {
      this.applierName = null;
    }
  }

  public String getJobnumber() {
    return this.jobnumber;
  }

  public JobApplicationStatusBeisenDO setJobnumber(String jobnumber) {
    this.jobnumber = jobnumber;
    return this;
  }

  public void unsetJobnumber() {
    this.jobnumber = null;
  }

  /** Returns true if field jobnumber is set (has been assigned a value) and false otherwise */
  public boolean isSetJobnumber() {
    return this.jobnumber != null;
  }

  public void setJobnumberIsSet(boolean value) {
    if (!value) {
      this.jobnumber = null;
    }
  }

  public String getJobtitle() {
    return this.jobtitle;
  }

  public JobApplicationStatusBeisenDO setJobtitle(String jobtitle) {
    this.jobtitle = jobtitle;
    return this;
  }

  public void unsetJobtitle() {
    this.jobtitle = null;
  }

  /** Returns true if field jobtitle is set (has been assigned a value) and false otherwise */
  public boolean isSetJobtitle() {
    return this.jobtitle != null;
  }

  public void setJobtitleIsSet(boolean value) {
    if (!value) {
      this.jobtitle = null;
    }
  }

  public int getPhasecode() {
    return this.phasecode;
  }

  public JobApplicationStatusBeisenDO setPhasecode(int phasecode) {
    this.phasecode = phasecode;
    setPhasecodeIsSet(true);
    return this;
  }

  public void unsetPhasecode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PHASECODE_ISSET_ID);
  }

  /** Returns true if field phasecode is set (has been assigned a value) and false otherwise */
  public boolean isSetPhasecode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PHASECODE_ISSET_ID);
  }

  public void setPhasecodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PHASECODE_ISSET_ID, value);
  }

  public String getPhasename() {
    return this.phasename;
  }

  public JobApplicationStatusBeisenDO setPhasename(String phasename) {
    this.phasename = phasename;
    return this;
  }

  public void unsetPhasename() {
    this.phasename = null;
  }

  /** Returns true if field phasename is set (has been assigned a value) and false otherwise */
  public boolean isSetPhasename() {
    return this.phasename != null;
  }

  public void setPhasenameIsSet(boolean value) {
    if (!value) {
      this.phasename = null;
    }
  }

  public int getStatuscode() {
    return this.statuscode;
  }

  public JobApplicationStatusBeisenDO setStatuscode(int statuscode) {
    this.statuscode = statuscode;
    setStatuscodeIsSet(true);
    return this;
  }

  public void unsetStatuscode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUSCODE_ISSET_ID);
  }

  /** Returns true if field statuscode is set (has been assigned a value) and false otherwise */
  public boolean isSetStatuscode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUSCODE_ISSET_ID);
  }

  public void setStatuscodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUSCODE_ISSET_ID, value);
  }

  public String getStatusname() {
    return this.statusname;
  }

  public JobApplicationStatusBeisenDO setStatusname(String statusname) {
    this.statusname = statusname;
    return this;
  }

  public void unsetStatusname() {
    this.statusname = null;
  }

  /** Returns true if field statusname is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusname() {
    return this.statusname != null;
  }

  public void setStatusnameIsSet(boolean value) {
    if (!value) {
      this.statusname = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public JobApplicationStatusBeisenDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public JobApplicationStatusBeisenDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case APPLIER_MOBILE:
      if (value == null) {
        unsetApplierMobile();
      } else {
        setApplierMobile((Double)value);
      }
      break;

    case APPLIER_NAME:
      if (value == null) {
        unsetApplierName();
      } else {
        setApplierName((String)value);
      }
      break;

    case JOBNUMBER:
      if (value == null) {
        unsetJobnumber();
      } else {
        setJobnumber((String)value);
      }
      break;

    case JOBTITLE:
      if (value == null) {
        unsetJobtitle();
      } else {
        setJobtitle((String)value);
      }
      break;

    case PHASECODE:
      if (value == null) {
        unsetPhasecode();
      } else {
        setPhasecode((Integer)value);
      }
      break;

    case PHASENAME:
      if (value == null) {
        unsetPhasename();
      } else {
        setPhasename((String)value);
      }
      break;

    case STATUSCODE:
      if (value == null) {
        unsetStatuscode();
      } else {
        setStatuscode((Integer)value);
      }
      break;

    case STATUSNAME:
      if (value == null) {
        unsetStatusname();
      } else {
        setStatusname((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompanyId();

    case APPLIER_MOBILE:
      return getApplierMobile();

    case APPLIER_NAME:
      return getApplierName();

    case JOBNUMBER:
      return getJobnumber();

    case JOBTITLE:
      return getJobtitle();

    case PHASECODE:
      return getPhasecode();

    case PHASENAME:
      return getPhasename();

    case STATUSCODE:
      return getStatuscode();

    case STATUSNAME:
      return getStatusname();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompanyId();
    case APPLIER_MOBILE:
      return isSetApplierMobile();
    case APPLIER_NAME:
      return isSetApplierName();
    case JOBNUMBER:
      return isSetJobnumber();
    case JOBTITLE:
      return isSetJobtitle();
    case PHASECODE:
      return isSetPhasecode();
    case PHASENAME:
      return isSetPhasename();
    case STATUSCODE:
      return isSetStatuscode();
    case STATUSNAME:
      return isSetStatusname();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof JobApplicationStatusBeisenDO)
      return this.equals((JobApplicationStatusBeisenDO)that);
    return false;
  }

  public boolean equals(JobApplicationStatusBeisenDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_applierMobile = true && this.isSetApplierMobile();
    boolean that_present_applierMobile = true && that.isSetApplierMobile();
    if (this_present_applierMobile || that_present_applierMobile) {
      if (!(this_present_applierMobile && that_present_applierMobile))
        return false;
      if (this.applierMobile != that.applierMobile)
        return false;
    }

    boolean this_present_applierName = true && this.isSetApplierName();
    boolean that_present_applierName = true && that.isSetApplierName();
    if (this_present_applierName || that_present_applierName) {
      if (!(this_present_applierName && that_present_applierName))
        return false;
      if (!this.applierName.equals(that.applierName))
        return false;
    }

    boolean this_present_jobnumber = true && this.isSetJobnumber();
    boolean that_present_jobnumber = true && that.isSetJobnumber();
    if (this_present_jobnumber || that_present_jobnumber) {
      if (!(this_present_jobnumber && that_present_jobnumber))
        return false;
      if (!this.jobnumber.equals(that.jobnumber))
        return false;
    }

    boolean this_present_jobtitle = true && this.isSetJobtitle();
    boolean that_present_jobtitle = true && that.isSetJobtitle();
    if (this_present_jobtitle || that_present_jobtitle) {
      if (!(this_present_jobtitle && that_present_jobtitle))
        return false;
      if (!this.jobtitle.equals(that.jobtitle))
        return false;
    }

    boolean this_present_phasecode = true && this.isSetPhasecode();
    boolean that_present_phasecode = true && that.isSetPhasecode();
    if (this_present_phasecode || that_present_phasecode) {
      if (!(this_present_phasecode && that_present_phasecode))
        return false;
      if (this.phasecode != that.phasecode)
        return false;
    }

    boolean this_present_phasename = true && this.isSetPhasename();
    boolean that_present_phasename = true && that.isSetPhasename();
    if (this_present_phasename || that_present_phasename) {
      if (!(this_present_phasename && that_present_phasename))
        return false;
      if (!this.phasename.equals(that.phasename))
        return false;
    }

    boolean this_present_statuscode = true && this.isSetStatuscode();
    boolean that_present_statuscode = true && that.isSetStatuscode();
    if (this_present_statuscode || that_present_statuscode) {
      if (!(this_present_statuscode && that_present_statuscode))
        return false;
      if (this.statuscode != that.statuscode)
        return false;
    }

    boolean this_present_statusname = true && this.isSetStatusname();
    boolean that_present_statusname = true && that.isSetStatusname();
    if (this_present_statusname || that_present_statusname) {
      if (!(this_present_statusname && that_present_statusname))
        return false;
      if (!this.statusname.equals(that.statusname))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetApplierMobile()) ? 131071 : 524287);
    if (isSetApplierMobile())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(applierMobile);

    hashCode = hashCode * 8191 + ((isSetApplierName()) ? 131071 : 524287);
    if (isSetApplierName())
      hashCode = hashCode * 8191 + applierName.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobnumber()) ? 131071 : 524287);
    if (isSetJobnumber())
      hashCode = hashCode * 8191 + jobnumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobtitle()) ? 131071 : 524287);
    if (isSetJobtitle())
      hashCode = hashCode * 8191 + jobtitle.hashCode();

    hashCode = hashCode * 8191 + ((isSetPhasecode()) ? 131071 : 524287);
    if (isSetPhasecode())
      hashCode = hashCode * 8191 + phasecode;

    hashCode = hashCode * 8191 + ((isSetPhasename()) ? 131071 : 524287);
    if (isSetPhasename())
      hashCode = hashCode * 8191 + phasename.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatuscode()) ? 131071 : 524287);
    if (isSetStatuscode())
      hashCode = hashCode * 8191 + statuscode;

    hashCode = hashCode * 8191 + ((isSetStatusname()) ? 131071 : 524287);
    if (isSetStatusname())
      hashCode = hashCode * 8191 + statusname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(JobApplicationStatusBeisenDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplierMobile()).compareTo(other.isSetApplierMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierMobile, other.applierMobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApplierName()).compareTo(other.isSetApplierName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applierName, other.applierName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobnumber()).compareTo(other.isSetJobnumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobnumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobnumber, other.jobnumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobtitle()).compareTo(other.isSetJobtitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobtitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobtitle, other.jobtitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhasecode()).compareTo(other.isSetPhasecode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhasecode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phasecode, other.phasecode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhasename()).compareTo(other.isSetPhasename());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhasename()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phasename, other.phasename);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatuscode()).compareTo(other.isSetStatuscode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatuscode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statuscode, other.statuscode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusname()).compareTo(other.isSetStatusname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusname, other.statusname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("JobApplicationStatusBeisenDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetApplierMobile()) {
      if (!first) sb.append(", ");
      sb.append("applierMobile:");
      sb.append(this.applierMobile);
      first = false;
    }
    if (isSetApplierName()) {
      if (!first) sb.append(", ");
      sb.append("applierName:");
      if (this.applierName == null) {
        sb.append("null");
      } else {
        sb.append(this.applierName);
      }
      first = false;
    }
    if (isSetJobnumber()) {
      if (!first) sb.append(", ");
      sb.append("jobnumber:");
      if (this.jobnumber == null) {
        sb.append("null");
      } else {
        sb.append(this.jobnumber);
      }
      first = false;
    }
    if (isSetJobtitle()) {
      if (!first) sb.append(", ");
      sb.append("jobtitle:");
      if (this.jobtitle == null) {
        sb.append("null");
      } else {
        sb.append(this.jobtitle);
      }
      first = false;
    }
    if (isSetPhasecode()) {
      if (!first) sb.append(", ");
      sb.append("phasecode:");
      sb.append(this.phasecode);
      first = false;
    }
    if (isSetPhasename()) {
      if (!first) sb.append(", ");
      sb.append("phasename:");
      if (this.phasename == null) {
        sb.append("null");
      } else {
        sb.append(this.phasename);
      }
      first = false;
    }
    if (isSetStatuscode()) {
      if (!first) sb.append(", ");
      sb.append("statuscode:");
      sb.append(this.statuscode);
      first = false;
    }
    if (isSetStatusname()) {
      if (!first) sb.append(", ");
      sb.append("statusname:");
      if (this.statusname == null) {
        sb.append("null");
      } else {
        sb.append(this.statusname);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobApplicationStatusBeisenDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationStatusBeisenDOStandardScheme getScheme() {
      return new JobApplicationStatusBeisenDOStandardScheme();
    }
  }

  private static class JobApplicationStatusBeisenDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobApplicationStatusBeisenDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobApplicationStatusBeisenDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APPLIER_MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.applierMobile = iprot.readDouble();
              struct.setApplierMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APPLIER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applierName = iprot.readString();
              struct.setApplierNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // JOBNUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobnumber = iprot.readString();
              struct.setJobnumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // JOBTITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobtitle = iprot.readString();
              struct.setJobtitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHASECODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.phasecode = iprot.readI32();
              struct.setPhasecodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PHASENAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phasename = iprot.readString();
              struct.setPhasenameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STATUSCODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.statuscode = iprot.readI32();
              struct.setStatuscodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUSNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.statusname = iprot.readString();
              struct.setStatusnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobApplicationStatusBeisenDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApplierMobile()) {
        oprot.writeFieldBegin(APPLIER_MOBILE_FIELD_DESC);
        oprot.writeDouble(struct.applierMobile);
        oprot.writeFieldEnd();
      }
      if (struct.applierName != null) {
        if (struct.isSetApplierName()) {
          oprot.writeFieldBegin(APPLIER_NAME_FIELD_DESC);
          oprot.writeString(struct.applierName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobnumber != null) {
        if (struct.isSetJobnumber()) {
          oprot.writeFieldBegin(JOBNUMBER_FIELD_DESC);
          oprot.writeString(struct.jobnumber);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobtitle != null) {
        if (struct.isSetJobtitle()) {
          oprot.writeFieldBegin(JOBTITLE_FIELD_DESC);
          oprot.writeString(struct.jobtitle);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPhasecode()) {
        oprot.writeFieldBegin(PHASECODE_FIELD_DESC);
        oprot.writeI32(struct.phasecode);
        oprot.writeFieldEnd();
      }
      if (struct.phasename != null) {
        if (struct.isSetPhasename()) {
          oprot.writeFieldBegin(PHASENAME_FIELD_DESC);
          oprot.writeString(struct.phasename);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatuscode()) {
        oprot.writeFieldBegin(STATUSCODE_FIELD_DESC);
        oprot.writeI32(struct.statuscode);
        oprot.writeFieldEnd();
      }
      if (struct.statusname != null) {
        if (struct.isSetStatusname()) {
          oprot.writeFieldBegin(STATUSNAME_FIELD_DESC);
          oprot.writeString(struct.statusname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobApplicationStatusBeisenDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobApplicationStatusBeisenDOTupleScheme getScheme() {
      return new JobApplicationStatusBeisenDOTupleScheme();
    }
  }

  private static class JobApplicationStatusBeisenDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobApplicationStatusBeisenDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobApplicationStatusBeisenDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(1);
      }
      if (struct.isSetApplierMobile()) {
        optionals.set(2);
      }
      if (struct.isSetApplierName()) {
        optionals.set(3);
      }
      if (struct.isSetJobnumber()) {
        optionals.set(4);
      }
      if (struct.isSetJobtitle()) {
        optionals.set(5);
      }
      if (struct.isSetPhasecode()) {
        optionals.set(6);
      }
      if (struct.isSetPhasename()) {
        optionals.set(7);
      }
      if (struct.isSetStatuscode()) {
        optionals.set(8);
      }
      if (struct.isSetStatusname()) {
        optionals.set(9);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(10);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetApplierMobile()) {
        oprot.writeDouble(struct.applierMobile);
      }
      if (struct.isSetApplierName()) {
        oprot.writeString(struct.applierName);
      }
      if (struct.isSetJobnumber()) {
        oprot.writeString(struct.jobnumber);
      }
      if (struct.isSetJobtitle()) {
        oprot.writeString(struct.jobtitle);
      }
      if (struct.isSetPhasecode()) {
        oprot.writeI32(struct.phasecode);
      }
      if (struct.isSetPhasename()) {
        oprot.writeString(struct.phasename);
      }
      if (struct.isSetStatuscode()) {
        oprot.writeI32(struct.statuscode);
      }
      if (struct.isSetStatusname()) {
        oprot.writeString(struct.statusname);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobApplicationStatusBeisenDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.applierMobile = iprot.readDouble();
        struct.setApplierMobileIsSet(true);
      }
      if (incoming.get(3)) {
        struct.applierName = iprot.readString();
        struct.setApplierNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.jobnumber = iprot.readString();
        struct.setJobnumberIsSet(true);
      }
      if (incoming.get(5)) {
        struct.jobtitle = iprot.readString();
        struct.setJobtitleIsSet(true);
      }
      if (incoming.get(6)) {
        struct.phasecode = iprot.readI32();
        struct.setPhasecodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.phasename = iprot.readString();
        struct.setPhasenameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.statuscode = iprot.readI32();
        struct.setStatuscodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.statusname = iprot.readString();
        struct.setStatusnameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

