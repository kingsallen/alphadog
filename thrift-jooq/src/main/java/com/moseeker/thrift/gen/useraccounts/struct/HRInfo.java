/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-11-19")
public class HRInfo implements org.apache.thrift.TBase<HRInfo, HRInfo._Fields>, java.io.Serializable, Cloneable, Comparable<HRInfo> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HRInfo");

    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField NICKNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("nickname", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("company", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField COMPANY_ABBREVIATION_FIELD_DESC = new org.apache.thrift.protocol.TField("companyAbbreviation", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField ACCOUNT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountType", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField HEAD_IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("headImg", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)10);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HRInfoStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HRInfoTupleSchemeFactory();

    public int id; // optional
    public java.lang.String name; // optional
    public java.lang.String nickname; // optional
    public java.lang.String company; // optional
    public java.lang.String companyAbbreviation; // optional
    public java.lang.String accountType; // optional
    public java.lang.String mobile; // optional
    public java.lang.String email; // optional
    public java.lang.String headImg; // optional
    public int companyId; // optional

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        ID((short)1, "id"),
        NAME((short)2, "name"),
        NICKNAME((short)3, "nickname"),
        COMPANY((short)4, "company"),
        COMPANY_ABBREVIATION((short)5, "companyAbbreviation"),
        ACCOUNT_TYPE((short)6, "accountType"),
        MOBILE((short)7, "mobile"),
        EMAIL((short)8, "email"),
        HEAD_IMG((short)9, "headImg"),
        COMPANY_ID((short)10, "companyId");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch(fieldId) {
                case 1: // ID
                    return ID;
                case 2: // NAME
                    return NAME;
                case 3: // NICKNAME
                    return NICKNAME;
                case 4: // COMPANY
                    return COMPANY;
                case 5: // COMPANY_ABBREVIATION
                    return COMPANY_ABBREVIATION;
                case 6: // ACCOUNT_TYPE
                    return ACCOUNT_TYPE;
                case 7: // MOBILE
                    return MOBILE;
                case 8: // EMAIL
                    return EMAIL;
                case 9: // HEAD_IMG
                    return HEAD_IMG;
                case 10: // COMPANY_ID
                    return COMPANY_ID;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private static final int __COMPANYID_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    private static final _Fields optionals[] = {_Fields.ID,_Fields.NAME,_Fields.NICKNAME,_Fields.COMPANY,_Fields.COMPANY_ABBREVIATION,_Fields.ACCOUNT_TYPE,_Fields.MOBILE,_Fields.EMAIL,_Fields.HEAD_IMG,_Fields.COMPANY_ID};
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.NICKNAME, new org.apache.thrift.meta_data.FieldMetaData("nickname", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COMPANY, new org.apache.thrift.meta_data.FieldMetaData("company", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COMPANY_ABBREVIATION, new org.apache.thrift.meta_data.FieldMetaData("companyAbbreviation", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.ACCOUNT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("accountType", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.HEAD_IMG, new org.apache.thrift.meta_data.FieldMetaData("headImg", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HRInfo.class, metaDataMap);
    }

    public HRInfo() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public HRInfo(HRInfo other) {
        __isset_bitfield = other.__isset_bitfield;
        this.id = other.id;
        if (other.isSetName()) {
            this.name = other.name;
        }
        if (other.isSetNickname()) {
            this.nickname = other.nickname;
        }
        if (other.isSetCompany()) {
            this.company = other.company;
        }
        if (other.isSetCompanyAbbreviation()) {
            this.companyAbbreviation = other.companyAbbreviation;
        }
        if (other.isSetAccountType()) {
            this.accountType = other.accountType;
        }
        if (other.isSetMobile()) {
            this.mobile = other.mobile;
        }
        if (other.isSetEmail()) {
            this.email = other.email;
        }
        if (other.isSetHeadImg()) {
            this.headImg = other.headImg;
        }
        this.companyId = other.companyId;
    }

    public HRInfo deepCopy() {
        return new HRInfo(this);
    }

    @Override
    public void clear() {
        setIdIsSet(false);
        this.id = 0;
        this.name = null;
        this.nickname = null;
        this.company = null;
        this.companyAbbreviation = null;
        this.accountType = null;
        this.mobile = null;
        this.email = null;
        this.headImg = null;
        setCompanyIdIsSet(false);
        this.companyId = 0;
    }

    public int getId() {
        return this.id;
    }

    public HRInfo setId(int id) {
        this.id = id;
        setIdIsSet(true);
        return this;
    }

    public void unsetId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public java.lang.String getName() {
        return this.name;
    }

    public HRInfo setName(java.lang.String name) {
        this.name = name;
        return this;
    }

    public void unsetName() {
        this.name = null;
    }

    /** Returns true if field name is set (has been assigned a value) and false otherwise */
    public boolean isSetName() {
        return this.name != null;
    }

    public void setNameIsSet(boolean value) {
        if (!value) {
            this.name = null;
        }
    }

    public java.lang.String getNickname() {
        return this.nickname;
    }

    public HRInfo setNickname(java.lang.String nickname) {
        this.nickname = nickname;
        return this;
    }

    public void unsetNickname() {
        this.nickname = null;
    }

    /** Returns true if field nickname is set (has been assigned a value) and false otherwise */
    public boolean isSetNickname() {
        return this.nickname != null;
    }

    public void setNicknameIsSet(boolean value) {
        if (!value) {
            this.nickname = null;
        }
    }

    public java.lang.String getCompany() {
        return this.company;
    }

    public HRInfo setCompany(java.lang.String company) {
        this.company = company;
        return this;
    }

    public void unsetCompany() {
        this.company = null;
    }

    /** Returns true if field company is set (has been assigned a value) and false otherwise */
    public boolean isSetCompany() {
        return this.company != null;
    }

    public void setCompanyIsSet(boolean value) {
        if (!value) {
            this.company = null;
        }
    }

    public java.lang.String getCompanyAbbreviation() {
        return this.companyAbbreviation;
    }

    public HRInfo setCompanyAbbreviation(java.lang.String companyAbbreviation) {
        this.companyAbbreviation = companyAbbreviation;
        return this;
    }

    public void unsetCompanyAbbreviation() {
        this.companyAbbreviation = null;
    }

    /** Returns true if field companyAbbreviation is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyAbbreviation() {
        return this.companyAbbreviation != null;
    }

    public void setCompanyAbbreviationIsSet(boolean value) {
        if (!value) {
            this.companyAbbreviation = null;
        }
    }

    public java.lang.String getAccountType() {
        return this.accountType;
    }

    public HRInfo setAccountType(java.lang.String accountType) {
        this.accountType = accountType;
        return this;
    }

    public void unsetAccountType() {
        this.accountType = null;
    }

    /** Returns true if field accountType is set (has been assigned a value) and false otherwise */
    public boolean isSetAccountType() {
        return this.accountType != null;
    }

    public void setAccountTypeIsSet(boolean value) {
        if (!value) {
            this.accountType = null;
        }
    }

    public java.lang.String getMobile() {
        return this.mobile;
    }

    public HRInfo setMobile(java.lang.String mobile) {
        this.mobile = mobile;
        return this;
    }

    public void unsetMobile() {
        this.mobile = null;
    }

    /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
    public boolean isSetMobile() {
        return this.mobile != null;
    }

    public void setMobileIsSet(boolean value) {
        if (!value) {
            this.mobile = null;
        }
    }

    public java.lang.String getEmail() {
        return this.email;
    }

    public HRInfo setEmail(java.lang.String email) {
        this.email = email;
        return this;
    }

    public void unsetEmail() {
        this.email = null;
    }

    /** Returns true if field email is set (has been assigned a value) and false otherwise */
    public boolean isSetEmail() {
        return this.email != null;
    }

    public void setEmailIsSet(boolean value) {
        if (!value) {
            this.email = null;
        }
    }

    public java.lang.String getHeadImg() {
        return this.headImg;
    }

    public HRInfo setHeadImg(java.lang.String headImg) {
        this.headImg = headImg;
        return this;
    }

    public void unsetHeadImg() {
        this.headImg = null;
    }

    /** Returns true if field headImg is set (has been assigned a value) and false otherwise */
    public boolean isSetHeadImg() {
        return this.headImg != null;
    }

    public void setHeadImgIsSet(boolean value) {
        if (!value) {
            this.headImg = null;
        }
    }

    public int getCompanyId() {
        return this.companyId;
    }

    public HRInfo setCompanyId(int companyId) {
        this.companyId = companyId;
        setCompanyIdIsSet(true);
        return this;
    }

    public void unsetCompanyId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case ID:
                if (value == null) {
                    unsetId();
                } else {
                    setId((java.lang.Integer)value);
                }
                break;

            case NAME:
                if (value == null) {
                    unsetName();
                } else {
                    setName((java.lang.String)value);
                }
                break;

            case NICKNAME:
                if (value == null) {
                    unsetNickname();
                } else {
                    setNickname((java.lang.String)value);
                }
                break;

            case COMPANY:
                if (value == null) {
                    unsetCompany();
                } else {
                    setCompany((java.lang.String)value);
                }
                break;

            case COMPANY_ABBREVIATION:
                if (value == null) {
                    unsetCompanyAbbreviation();
                } else {
                    setCompanyAbbreviation((java.lang.String)value);
                }
                break;

            case ACCOUNT_TYPE:
                if (value == null) {
                    unsetAccountType();
                } else {
                    setAccountType((java.lang.String)value);
                }
                break;

            case MOBILE:
                if (value == null) {
                    unsetMobile();
                } else {
                    setMobile((java.lang.String)value);
                }
                break;

            case EMAIL:
                if (value == null) {
                    unsetEmail();
                } else {
                    setEmail((java.lang.String)value);
                }
                break;

            case HEAD_IMG:
                if (value == null) {
                    unsetHeadImg();
                } else {
                    setHeadImg((java.lang.String)value);
                }
                break;

            case COMPANY_ID:
                if (value == null) {
                    unsetCompanyId();
                } else {
                    setCompanyId((java.lang.Integer)value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case ID:
                return getId();

            case NAME:
                return getName();

            case NICKNAME:
                return getNickname();

            case COMPANY:
                return getCompany();

            case COMPANY_ABBREVIATION:
                return getCompanyAbbreviation();

            case ACCOUNT_TYPE:
                return getAccountType();

            case MOBILE:
                return getMobile();

            case EMAIL:
                return getEmail();

            case HEAD_IMG:
                return getHeadImg();

            case COMPANY_ID:
                return getCompanyId();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case ID:
                return isSetId();
            case NAME:
                return isSetName();
            case NICKNAME:
                return isSetNickname();
            case COMPANY:
                return isSetCompany();
            case COMPANY_ABBREVIATION:
                return isSetCompanyAbbreviation();
            case ACCOUNT_TYPE:
                return isSetAccountType();
            case MOBILE:
                return isSetMobile();
            case EMAIL:
                return isSetEmail();
            case HEAD_IMG:
                return isSetHeadImg();
            case COMPANY_ID:
                return isSetCompanyId();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof HRInfo)
            return this.equals((HRInfo)that);
        return false;
    }

    public boolean equals(HRInfo that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_id = true && this.isSetId();
        boolean that_present_id = true && that.isSetId();
        if (this_present_id || that_present_id) {
            if (!(this_present_id && that_present_id))
                return false;
            if (this.id != that.id)
                return false;
        }

        boolean this_present_name = true && this.isSetName();
        boolean that_present_name = true && that.isSetName();
        if (this_present_name || that_present_name) {
            if (!(this_present_name && that_present_name))
                return false;
            if (!this.name.equals(that.name))
                return false;
        }

        boolean this_present_nickname = true && this.isSetNickname();
        boolean that_present_nickname = true && that.isSetNickname();
        if (this_present_nickname || that_present_nickname) {
            if (!(this_present_nickname && that_present_nickname))
                return false;
            if (!this.nickname.equals(that.nickname))
                return false;
        }

        boolean this_present_company = true && this.isSetCompany();
        boolean that_present_company = true && that.isSetCompany();
        if (this_present_company || that_present_company) {
            if (!(this_present_company && that_present_company))
                return false;
            if (!this.company.equals(that.company))
                return false;
        }

        boolean this_present_companyAbbreviation = true && this.isSetCompanyAbbreviation();
        boolean that_present_companyAbbreviation = true && that.isSetCompanyAbbreviation();
        if (this_present_companyAbbreviation || that_present_companyAbbreviation) {
            if (!(this_present_companyAbbreviation && that_present_companyAbbreviation))
                return false;
            if (!this.companyAbbreviation.equals(that.companyAbbreviation))
                return false;
        }

        boolean this_present_accountType = true && this.isSetAccountType();
        boolean that_present_accountType = true && that.isSetAccountType();
        if (this_present_accountType || that_present_accountType) {
            if (!(this_present_accountType && that_present_accountType))
                return false;
            if (!this.accountType.equals(that.accountType))
                return false;
        }

        boolean this_present_mobile = true && this.isSetMobile();
        boolean that_present_mobile = true && that.isSetMobile();
        if (this_present_mobile || that_present_mobile) {
            if (!(this_present_mobile && that_present_mobile))
                return false;
            if (!this.mobile.equals(that.mobile))
                return false;
        }

        boolean this_present_email = true && this.isSetEmail();
        boolean that_present_email = true && that.isSetEmail();
        if (this_present_email || that_present_email) {
            if (!(this_present_email && that_present_email))
                return false;
            if (!this.email.equals(that.email))
                return false;
        }

        boolean this_present_headImg = true && this.isSetHeadImg();
        boolean that_present_headImg = true && that.isSetHeadImg();
        if (this_present_headImg || that_present_headImg) {
            if (!(this_present_headImg && that_present_headImg))
                return false;
            if (!this.headImg.equals(that.headImg))
                return false;
        }

        boolean this_present_companyId = true && this.isSetCompanyId();
        boolean that_present_companyId = true && that.isSetCompanyId();
        if (this_present_companyId || that_present_companyId) {
            if (!(this_present_companyId && that_present_companyId))
                return false;
            if (this.companyId != that.companyId)
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
        if (isSetId())
            hashCode = hashCode * 8191 + id;

        hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
        if (isSetName())
            hashCode = hashCode * 8191 + name.hashCode();

        hashCode = hashCode * 8191 + ((isSetNickname()) ? 131071 : 524287);
        if (isSetNickname())
            hashCode = hashCode * 8191 + nickname.hashCode();

        hashCode = hashCode * 8191 + ((isSetCompany()) ? 131071 : 524287);
        if (isSetCompany())
            hashCode = hashCode * 8191 + company.hashCode();

        hashCode = hashCode * 8191 + ((isSetCompanyAbbreviation()) ? 131071 : 524287);
        if (isSetCompanyAbbreviation())
            hashCode = hashCode * 8191 + companyAbbreviation.hashCode();

        hashCode = hashCode * 8191 + ((isSetAccountType()) ? 131071 : 524287);
        if (isSetAccountType())
            hashCode = hashCode * 8191 + accountType.hashCode();

        hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
        if (isSetMobile())
            hashCode = hashCode * 8191 + mobile.hashCode();

        hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
        if (isSetEmail())
            hashCode = hashCode * 8191 + email.hashCode();

        hashCode = hashCode * 8191 + ((isSetHeadImg()) ? 131071 : 524287);
        if (isSetHeadImg())
            hashCode = hashCode * 8191 + headImg.hashCode();

        hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
        if (isSetCompanyId())
            hashCode = hashCode * 8191 + companyId;

        return hashCode;
    }

    @Override
    public int compareTo(HRInfo other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetName()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetNickname()).compareTo(other.isSetNickname());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetNickname()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nickname, other.nickname);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompany()).compareTo(other.isSetCompany());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompany()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company, other.company);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompanyAbbreviation()).compareTo(other.isSetCompanyAbbreviation());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompanyAbbreviation()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyAbbreviation, other.companyAbbreviation);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetAccountType()).compareTo(other.isSetAccountType());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetAccountType()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountType, other.accountType);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMobile()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEmail()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetHeadImg()).compareTo(other.isSetHeadImg());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetHeadImg()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headImg, other.headImg);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCompanyId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("HRInfo(");
        boolean first = true;

        if (isSetId()) {
            sb.append("id:");
            sb.append(this.id);
            first = false;
        }
        if (isSetName()) {
            if (!first) sb.append(", ");
            sb.append("name:");
            if (this.name == null) {
                sb.append("null");
            } else {
                sb.append(this.name);
            }
            first = false;
        }
        if (isSetNickname()) {
            if (!first) sb.append(", ");
            sb.append("nickname:");
            if (this.nickname == null) {
                sb.append("null");
            } else {
                sb.append(this.nickname);
            }
            first = false;
        }
        if (isSetCompany()) {
            if (!first) sb.append(", ");
            sb.append("company:");
            if (this.company == null) {
                sb.append("null");
            } else {
                sb.append(this.company);
            }
            first = false;
        }
        if (isSetCompanyAbbreviation()) {
            if (!first) sb.append(", ");
            sb.append("companyAbbreviation:");
            if (this.companyAbbreviation == null) {
                sb.append("null");
            } else {
                sb.append(this.companyAbbreviation);
            }
            first = false;
        }
        if (isSetAccountType()) {
            if (!first) sb.append(", ");
            sb.append("accountType:");
            if (this.accountType == null) {
                sb.append("null");
            } else {
                sb.append(this.accountType);
            }
            first = false;
        }
        if (isSetMobile()) {
            if (!first) sb.append(", ");
            sb.append("mobile:");
            if (this.mobile == null) {
                sb.append("null");
            } else {
                sb.append(this.mobile);
            }
            first = false;
        }
        if (isSetEmail()) {
            if (!first) sb.append(", ");
            sb.append("email:");
            if (this.email == null) {
                sb.append("null");
            } else {
                sb.append(this.email);
            }
            first = false;
        }
        if (isSetHeadImg()) {
            if (!first) sb.append(", ");
            sb.append("headImg:");
            if (this.headImg == null) {
                sb.append("null");
            } else {
                sb.append(this.headImg);
            }
            first = false;
        }
        if (isSetCompanyId()) {
            if (!first) sb.append(", ");
            sb.append("companyId:");
            sb.append(this.companyId);
            first = false;
        }
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class HRInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HRInfoStandardScheme getScheme() {
            return new HRInfoStandardScheme();
        }
    }

    private static class HRInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<HRInfo> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, HRInfo struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true)
            {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.id = iprot.readI32();
                            struct.setIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // NAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.name = iprot.readString();
                            struct.setNameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // NICKNAME
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.nickname = iprot.readString();
                            struct.setNicknameIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // COMPANY
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.company = iprot.readString();
                            struct.setCompanyIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // COMPANY_ABBREVIATION
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.companyAbbreviation = iprot.readString();
                            struct.setCompanyAbbreviationIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // ACCOUNT_TYPE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.accountType = iprot.readString();
                            struct.setAccountTypeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // MOBILE
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.mobile = iprot.readString();
                            struct.setMobileIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // EMAIL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.email = iprot.readString();
                            struct.setEmailIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // HEAD_IMG
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.headImg = iprot.readString();
                            struct.setHeadImgIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 10: // COMPANY_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.companyId = iprot.readI32();
                            struct.setCompanyIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, HRInfo struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.isSetId()) {
                oprot.writeFieldBegin(ID_FIELD_DESC);
                oprot.writeI32(struct.id);
                oprot.writeFieldEnd();
            }
            if (struct.name != null) {
                if (struct.isSetName()) {
                    oprot.writeFieldBegin(NAME_FIELD_DESC);
                    oprot.writeString(struct.name);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.nickname != null) {
                if (struct.isSetNickname()) {
                    oprot.writeFieldBegin(NICKNAME_FIELD_DESC);
                    oprot.writeString(struct.nickname);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.company != null) {
                if (struct.isSetCompany()) {
                    oprot.writeFieldBegin(COMPANY_FIELD_DESC);
                    oprot.writeString(struct.company);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.companyAbbreviation != null) {
                if (struct.isSetCompanyAbbreviation()) {
                    oprot.writeFieldBegin(COMPANY_ABBREVIATION_FIELD_DESC);
                    oprot.writeString(struct.companyAbbreviation);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.accountType != null) {
                if (struct.isSetAccountType()) {
                    oprot.writeFieldBegin(ACCOUNT_TYPE_FIELD_DESC);
                    oprot.writeString(struct.accountType);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.mobile != null) {
                if (struct.isSetMobile()) {
                    oprot.writeFieldBegin(MOBILE_FIELD_DESC);
                    oprot.writeString(struct.mobile);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.email != null) {
                if (struct.isSetEmail()) {
                    oprot.writeFieldBegin(EMAIL_FIELD_DESC);
                    oprot.writeString(struct.email);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.headImg != null) {
                if (struct.isSetHeadImg()) {
                    oprot.writeFieldBegin(HEAD_IMG_FIELD_DESC);
                    oprot.writeString(struct.headImg);
                    oprot.writeFieldEnd();
                }
            }
            if (struct.isSetCompanyId()) {
                oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
                oprot.writeI32(struct.companyId);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class HRInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public HRInfoTupleScheme getScheme() {
            return new HRInfoTupleScheme();
        }
    }

    private static class HRInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<HRInfo> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, HRInfo struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetId()) {
                optionals.set(0);
            }
            if (struct.isSetName()) {
                optionals.set(1);
            }
            if (struct.isSetNickname()) {
                optionals.set(2);
            }
            if (struct.isSetCompany()) {
                optionals.set(3);
            }
            if (struct.isSetCompanyAbbreviation()) {
                optionals.set(4);
            }
            if (struct.isSetAccountType()) {
                optionals.set(5);
            }
            if (struct.isSetMobile()) {
                optionals.set(6);
            }
            if (struct.isSetEmail()) {
                optionals.set(7);
            }
            if (struct.isSetHeadImg()) {
                optionals.set(8);
            }
            if (struct.isSetCompanyId()) {
                optionals.set(9);
            }
            oprot.writeBitSet(optionals, 10);
            if (struct.isSetId()) {
                oprot.writeI32(struct.id);
            }
            if (struct.isSetName()) {
                oprot.writeString(struct.name);
            }
            if (struct.isSetNickname()) {
                oprot.writeString(struct.nickname);
            }
            if (struct.isSetCompany()) {
                oprot.writeString(struct.company);
            }
            if (struct.isSetCompanyAbbreviation()) {
                oprot.writeString(struct.companyAbbreviation);
            }
            if (struct.isSetAccountType()) {
                oprot.writeString(struct.accountType);
            }
            if (struct.isSetMobile()) {
                oprot.writeString(struct.mobile);
            }
            if (struct.isSetEmail()) {
                oprot.writeString(struct.email);
            }
            if (struct.isSetHeadImg()) {
                oprot.writeString(struct.headImg);
            }
            if (struct.isSetCompanyId()) {
                oprot.writeI32(struct.companyId);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, HRInfo struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(10);
            if (incoming.get(0)) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.name = iprot.readString();
                struct.setNameIsSet(true);
            }
            if (incoming.get(2)) {
                struct.nickname = iprot.readString();
                struct.setNicknameIsSet(true);
            }
            if (incoming.get(3)) {
                struct.company = iprot.readString();
                struct.setCompanyIsSet(true);
            }
            if (incoming.get(4)) {
                struct.companyAbbreviation = iprot.readString();
                struct.setCompanyAbbreviationIsSet(true);
            }
            if (incoming.get(5)) {
                struct.accountType = iprot.readString();
                struct.setAccountTypeIsSet(true);
            }
            if (incoming.get(6)) {
                struct.mobile = iprot.readString();
                struct.setMobileIsSet(true);
            }
            if (incoming.get(7)) {
                struct.email = iprot.readString();
                struct.setEmailIsSet(true);
            }
            if (incoming.get(8)) {
                struct.headImg = iprot.readString();
                struct.setHeadImgIsSet(true);
            }
            if (incoming.get(9)) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

