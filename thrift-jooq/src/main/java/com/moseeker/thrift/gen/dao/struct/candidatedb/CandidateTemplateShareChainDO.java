/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.candidatedb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-01-17")
public class CandidateTemplateShareChainDO implements org.apache.thrift.TBase<CandidateTemplateShareChainDO, CandidateTemplateShareChainDO._Fields>, java.io.Serializable, Cloneable, Comparable<CandidateTemplateShareChainDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CandidateTemplateShareChainDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CHAIN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("chainId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ROOT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("rootUserId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ROOT2_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("root2UserId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField RECOM_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recomUserId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField PRESENTEE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("presenteeUserId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField DEPTH_FIELD_DESC = new org.apache.thrift.protocol.TField("depth", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PARENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("parentId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField SEEK_REFERRAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("seekReferralId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SEND_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("sendTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CandidateTemplateShareChainDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CandidateTemplateShareChainDOTupleSchemeFactory();

  public int id; // optional
  public int chainId; // optional
  public int positionId; // optional
  public int rootUserId; // optional
  public int root2UserId; // optional
  public int recomUserId; // optional
  public int presenteeUserId; // optional
  public int depth; // optional
  public int parentId; // optional
  public int seekReferralId; // optional
  public int type; // optional
  public long sendTime; // optional
  public String createTime; // optional
  public String updateTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CHAIN_ID((short)2, "chainId"),
    POSITION_ID((short)3, "positionId"),
    ROOT_USER_ID((short)4, "rootUserId"),
    ROOT2_USER_ID((short)5, "root2UserId"),
    RECOM_USER_ID((short)6, "recomUserId"),
    PRESENTEE_USER_ID((short)7, "presenteeUserId"),
    DEPTH((short)8, "depth"),
    PARENT_ID((short)9, "parentId"),
    SEEK_REFERRAL_ID((short)10, "seekReferralId"),
    TYPE((short)11, "type"),
    SEND_TIME((short)12, "sendTime"),
    CREATE_TIME((short)13, "createTime"),
    UPDATE_TIME((short)14, "updateTime");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CHAIN_ID
          return CHAIN_ID;
        case 3: // POSITION_ID
          return POSITION_ID;
        case 4: // ROOT_USER_ID
          return ROOT_USER_ID;
        case 5: // ROOT2_USER_ID
          return ROOT2_USER_ID;
        case 6: // RECOM_USER_ID
          return RECOM_USER_ID;
        case 7: // PRESENTEE_USER_ID
          return PRESENTEE_USER_ID;
        case 8: // DEPTH
          return DEPTH;
        case 9: // PARENT_ID
          return PARENT_ID;
        case 10: // SEEK_REFERRAL_ID
          return SEEK_REFERRAL_ID;
        case 11: // TYPE
          return TYPE;
        case 12: // SEND_TIME
          return SEND_TIME;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CHAINID_ISSET_ID = 1;
  private static final int __POSITIONID_ISSET_ID = 2;
  private static final int __ROOTUSERID_ISSET_ID = 3;
  private static final int __ROOT2USERID_ISSET_ID = 4;
  private static final int __RECOMUSERID_ISSET_ID = 5;
  private static final int __PRESENTEEUSERID_ISSET_ID = 6;
  private static final int __DEPTH_ISSET_ID = 7;
  private static final int __PARENTID_ISSET_ID = 8;
  private static final int __SEEKREFERRALID_ISSET_ID = 9;
  private static final int __TYPE_ISSET_ID = 10;
  private static final int __SENDTIME_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.CHAIN_ID,_Fields.POSITION_ID,_Fields.ROOT_USER_ID,_Fields.ROOT2_USER_ID,_Fields.RECOM_USER_ID,_Fields.PRESENTEE_USER_ID,_Fields.DEPTH,_Fields.PARENT_ID,_Fields.SEEK_REFERRAL_ID,_Fields.TYPE,_Fields.SEND_TIME,_Fields.CREATE_TIME,_Fields.UPDATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHAIN_ID, new org.apache.thrift.meta_data.FieldMetaData("chainId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROOT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("rootUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROOT2_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("root2UserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("recomUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRESENTEE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("presenteeUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEPTH, new org.apache.thrift.meta_data.FieldMetaData("depth", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARENT_ID, new org.apache.thrift.meta_data.FieldMetaData("parentId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEEK_REFERRAL_ID, new org.apache.thrift.meta_data.FieldMetaData("seekReferralId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEND_TIME, new org.apache.thrift.meta_data.FieldMetaData("sendTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CandidateTemplateShareChainDO.class, metaDataMap);
  }

  public CandidateTemplateShareChainDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CandidateTemplateShareChainDO(CandidateTemplateShareChainDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.chainId = other.chainId;
    this.positionId = other.positionId;
    this.rootUserId = other.rootUserId;
    this.root2UserId = other.root2UserId;
    this.recomUserId = other.recomUserId;
    this.presenteeUserId = other.presenteeUserId;
    this.depth = other.depth;
    this.parentId = other.parentId;
    this.seekReferralId = other.seekReferralId;
    this.type = other.type;
    this.sendTime = other.sendTime;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
  }

  public CandidateTemplateShareChainDO deepCopy() {
    return new CandidateTemplateShareChainDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setChainIdIsSet(false);
    this.chainId = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setRootUserIdIsSet(false);
    this.rootUserId = 0;
    setRoot2UserIdIsSet(false);
    this.root2UserId = 0;
    setRecomUserIdIsSet(false);
    this.recomUserId = 0;
    setPresenteeUserIdIsSet(false);
    this.presenteeUserId = 0;
    setDepthIsSet(false);
    this.depth = 0;
    setParentIdIsSet(false);
    this.parentId = 0;
    setSeekReferralIdIsSet(false);
    this.seekReferralId = 0;
    setTypeIsSet(false);
    this.type = 0;
    setSendTimeIsSet(false);
    this.sendTime = 0;
    this.createTime = null;
    this.updateTime = null;
  }

  public int getId() {
    return this.id;
  }

  public CandidateTemplateShareChainDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getChainId() {
    return this.chainId;
  }

  public CandidateTemplateShareChainDO setChainId(int chainId) {
    this.chainId = chainId;
    setChainIdIsSet(true);
    return this;
  }

  public void unsetChainId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHAINID_ISSET_ID);
  }

  /** Returns true if field chainId is set (has been assigned a value) and false otherwise */
  public boolean isSetChainId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHAINID_ISSET_ID);
  }

  public void setChainIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHAINID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public CandidateTemplateShareChainDO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public int getRootUserId() {
    return this.rootUserId;
  }

  public CandidateTemplateShareChainDO setRootUserId(int rootUserId) {
    this.rootUserId = rootUserId;
    setRootUserIdIsSet(true);
    return this;
  }

  public void unsetRootUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROOTUSERID_ISSET_ID);
  }

  /** Returns true if field rootUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetRootUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROOTUSERID_ISSET_ID);
  }

  public void setRootUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROOTUSERID_ISSET_ID, value);
  }

  public int getRoot2UserId() {
    return this.root2UserId;
  }

  public CandidateTemplateShareChainDO setRoot2UserId(int root2UserId) {
    this.root2UserId = root2UserId;
    setRoot2UserIdIsSet(true);
    return this;
  }

  public void unsetRoot2UserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROOT2USERID_ISSET_ID);
  }

  /** Returns true if field root2UserId is set (has been assigned a value) and false otherwise */
  public boolean isSetRoot2UserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROOT2USERID_ISSET_ID);
  }

  public void setRoot2UserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROOT2USERID_ISSET_ID, value);
  }

  public int getRecomUserId() {
    return this.recomUserId;
  }

  public CandidateTemplateShareChainDO setRecomUserId(int recomUserId) {
    this.recomUserId = recomUserId;
    setRecomUserIdIsSet(true);
    return this;
  }

  public void unsetRecomUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMUSERID_ISSET_ID);
  }

  /** Returns true if field recomUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMUSERID_ISSET_ID);
  }

  public void setRecomUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMUSERID_ISSET_ID, value);
  }

  public int getPresenteeUserId() {
    return this.presenteeUserId;
  }

  public CandidateTemplateShareChainDO setPresenteeUserId(int presenteeUserId) {
    this.presenteeUserId = presenteeUserId;
    setPresenteeUserIdIsSet(true);
    return this;
  }

  public void unsetPresenteeUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID);
  }

  /** Returns true if field presenteeUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPresenteeUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID);
  }

  public void setPresenteeUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID, value);
  }

  public int getDepth() {
    return this.depth;
  }

  public CandidateTemplateShareChainDO setDepth(int depth) {
    this.depth = depth;
    setDepthIsSet(true);
    return this;
  }

  public void unsetDepth() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPTH_ISSET_ID);
  }

  /** Returns true if field depth is set (has been assigned a value) and false otherwise */
  public boolean isSetDepth() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPTH_ISSET_ID);
  }

  public void setDepthIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPTH_ISSET_ID, value);
  }

  public int getParentId() {
    return this.parentId;
  }

  public CandidateTemplateShareChainDO setParentId(int parentId) {
    this.parentId = parentId;
    setParentIdIsSet(true);
    return this;
  }

  public void unsetParentId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  /** Returns true if field parentId is set (has been assigned a value) and false otherwise */
  public boolean isSetParentId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  public void setParentIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PARENTID_ISSET_ID, value);
  }

  public int getSeekReferralId() {
    return this.seekReferralId;
  }

  public CandidateTemplateShareChainDO setSeekReferralId(int seekReferralId) {
    this.seekReferralId = seekReferralId;
    setSeekReferralIdIsSet(true);
    return this;
  }

  public void unsetSeekReferralId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEEKREFERRALID_ISSET_ID);
  }

  /** Returns true if field seekReferralId is set (has been assigned a value) and false otherwise */
  public boolean isSetSeekReferralId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEEKREFERRALID_ISSET_ID);
  }

  public void setSeekReferralIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEEKREFERRALID_ISSET_ID, value);
  }

  public int getType() {
    return this.type;
  }

  public CandidateTemplateShareChainDO setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public long getSendTime() {
    return this.sendTime;
  }

  public CandidateTemplateShareChainDO setSendTime(long sendTime) {
    this.sendTime = sendTime;
    setSendTimeIsSet(true);
    return this;
  }

  public void unsetSendTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SENDTIME_ISSET_ID);
  }

  /** Returns true if field sendTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSendTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SENDTIME_ISSET_ID);
  }

  public void setSendTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SENDTIME_ISSET_ID, value);
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public CandidateTemplateShareChainDO setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public CandidateTemplateShareChainDO setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case CHAIN_ID:
      if (value == null) {
        unsetChainId();
      } else {
        setChainId((Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((Integer)value);
      }
      break;

    case ROOT_USER_ID:
      if (value == null) {
        unsetRootUserId();
      } else {
        setRootUserId((Integer)value);
      }
      break;

    case ROOT2_USER_ID:
      if (value == null) {
        unsetRoot2UserId();
      } else {
        setRoot2UserId((Integer)value);
      }
      break;

    case RECOM_USER_ID:
      if (value == null) {
        unsetRecomUserId();
      } else {
        setRecomUserId((Integer)value);
      }
      break;

    case PRESENTEE_USER_ID:
      if (value == null) {
        unsetPresenteeUserId();
      } else {
        setPresenteeUserId((Integer)value);
      }
      break;

    case DEPTH:
      if (value == null) {
        unsetDepth();
      } else {
        setDepth((Integer)value);
      }
      break;

    case PARENT_ID:
      if (value == null) {
        unsetParentId();
      } else {
        setParentId((Integer)value);
      }
      break;

    case SEEK_REFERRAL_ID:
      if (value == null) {
        unsetSeekReferralId();
      } else {
        setSeekReferralId((Integer)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Integer)value);
      }
      break;

    case SEND_TIME:
      if (value == null) {
        unsetSendTime();
      } else {
        setSendTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CHAIN_ID:
      return getChainId();

    case POSITION_ID:
      return getPositionId();

    case ROOT_USER_ID:
      return getRootUserId();

    case ROOT2_USER_ID:
      return getRoot2UserId();

    case RECOM_USER_ID:
      return getRecomUserId();

    case PRESENTEE_USER_ID:
      return getPresenteeUserId();

    case DEPTH:
      return getDepth();

    case PARENT_ID:
      return getParentId();

    case SEEK_REFERRAL_ID:
      return getSeekReferralId();

    case TYPE:
      return getType();

    case SEND_TIME:
      return getSendTime();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CHAIN_ID:
      return isSetChainId();
    case POSITION_ID:
      return isSetPositionId();
    case ROOT_USER_ID:
      return isSetRootUserId();
    case ROOT2_USER_ID:
      return isSetRoot2UserId();
    case RECOM_USER_ID:
      return isSetRecomUserId();
    case PRESENTEE_USER_ID:
      return isSetPresenteeUserId();
    case DEPTH:
      return isSetDepth();
    case PARENT_ID:
      return isSetParentId();
    case SEEK_REFERRAL_ID:
      return isSetSeekReferralId();
    case TYPE:
      return isSetType();
    case SEND_TIME:
      return isSetSendTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CandidateTemplateShareChainDO)
      return this.equals((CandidateTemplateShareChainDO)that);
    return false;
  }

  public boolean equals(CandidateTemplateShareChainDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_chainId = true && this.isSetChainId();
    boolean that_present_chainId = true && that.isSetChainId();
    if (this_present_chainId || that_present_chainId) {
      if (!(this_present_chainId && that_present_chainId))
        return false;
      if (this.chainId != that.chainId)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_rootUserId = true && this.isSetRootUserId();
    boolean that_present_rootUserId = true && that.isSetRootUserId();
    if (this_present_rootUserId || that_present_rootUserId) {
      if (!(this_present_rootUserId && that_present_rootUserId))
        return false;
      if (this.rootUserId != that.rootUserId)
        return false;
    }

    boolean this_present_root2UserId = true && this.isSetRoot2UserId();
    boolean that_present_root2UserId = true && that.isSetRoot2UserId();
    if (this_present_root2UserId || that_present_root2UserId) {
      if (!(this_present_root2UserId && that_present_root2UserId))
        return false;
      if (this.root2UserId != that.root2UserId)
        return false;
    }

    boolean this_present_recomUserId = true && this.isSetRecomUserId();
    boolean that_present_recomUserId = true && that.isSetRecomUserId();
    if (this_present_recomUserId || that_present_recomUserId) {
      if (!(this_present_recomUserId && that_present_recomUserId))
        return false;
      if (this.recomUserId != that.recomUserId)
        return false;
    }

    boolean this_present_presenteeUserId = true && this.isSetPresenteeUserId();
    boolean that_present_presenteeUserId = true && that.isSetPresenteeUserId();
    if (this_present_presenteeUserId || that_present_presenteeUserId) {
      if (!(this_present_presenteeUserId && that_present_presenteeUserId))
        return false;
      if (this.presenteeUserId != that.presenteeUserId)
        return false;
    }

    boolean this_present_depth = true && this.isSetDepth();
    boolean that_present_depth = true && that.isSetDepth();
    if (this_present_depth || that_present_depth) {
      if (!(this_present_depth && that_present_depth))
        return false;
      if (this.depth != that.depth)
        return false;
    }

    boolean this_present_parentId = true && this.isSetParentId();
    boolean that_present_parentId = true && that.isSetParentId();
    if (this_present_parentId || that_present_parentId) {
      if (!(this_present_parentId && that_present_parentId))
        return false;
      if (this.parentId != that.parentId)
        return false;
    }

    boolean this_present_seekReferralId = true && this.isSetSeekReferralId();
    boolean that_present_seekReferralId = true && that.isSetSeekReferralId();
    if (this_present_seekReferralId || that_present_seekReferralId) {
      if (!(this_present_seekReferralId && that_present_seekReferralId))
        return false;
      if (this.seekReferralId != that.seekReferralId)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_sendTime = true && this.isSetSendTime();
    boolean that_present_sendTime = true && that.isSetSendTime();
    if (this_present_sendTime || that_present_sendTime) {
      if (!(this_present_sendTime && that_present_sendTime))
        return false;
      if (this.sendTime != that.sendTime)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetChainId()) ? 131071 : 524287);
    if (isSetChainId())
      hashCode = hashCode * 8191 + chainId;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetRootUserId()) ? 131071 : 524287);
    if (isSetRootUserId())
      hashCode = hashCode * 8191 + rootUserId;

    hashCode = hashCode * 8191 + ((isSetRoot2UserId()) ? 131071 : 524287);
    if (isSetRoot2UserId())
      hashCode = hashCode * 8191 + root2UserId;

    hashCode = hashCode * 8191 + ((isSetRecomUserId()) ? 131071 : 524287);
    if (isSetRecomUserId())
      hashCode = hashCode * 8191 + recomUserId;

    hashCode = hashCode * 8191 + ((isSetPresenteeUserId()) ? 131071 : 524287);
    if (isSetPresenteeUserId())
      hashCode = hashCode * 8191 + presenteeUserId;

    hashCode = hashCode * 8191 + ((isSetDepth()) ? 131071 : 524287);
    if (isSetDepth())
      hashCode = hashCode * 8191 + depth;

    hashCode = hashCode * 8191 + ((isSetParentId()) ? 131071 : 524287);
    if (isSetParentId())
      hashCode = hashCode * 8191 + parentId;

    hashCode = hashCode * 8191 + ((isSetSeekReferralId()) ? 131071 : 524287);
    if (isSetSeekReferralId())
      hashCode = hashCode * 8191 + seekReferralId;

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetSendTime()) ? 131071 : 524287);
    if (isSetSendTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(sendTime);

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(CandidateTemplateShareChainDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChainId()).compareTo(other.isSetChainId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChainId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chainId, other.chainId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRootUserId()).compareTo(other.isSetRootUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRootUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rootUserId, other.rootUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRoot2UserId()).compareTo(other.isSetRoot2UserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoot2UserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.root2UserId, other.root2UserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecomUserId()).compareTo(other.isSetRecomUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomUserId, other.recomUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPresenteeUserId()).compareTo(other.isSetPresenteeUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPresenteeUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.presenteeUserId, other.presenteeUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDepth()).compareTo(other.isSetDepth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.depth, other.depth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParentId()).compareTo(other.isSetParentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentId, other.parentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSeekReferralId()).compareTo(other.isSetSeekReferralId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSeekReferralId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seekReferralId, other.seekReferralId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSendTime()).compareTo(other.isSetSendTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSendTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sendTime, other.sendTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CandidateTemplateShareChainDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetChainId()) {
      if (!first) sb.append(", ");
      sb.append("chainId:");
      sb.append(this.chainId);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetRootUserId()) {
      if (!first) sb.append(", ");
      sb.append("rootUserId:");
      sb.append(this.rootUserId);
      first = false;
    }
    if (isSetRoot2UserId()) {
      if (!first) sb.append(", ");
      sb.append("root2UserId:");
      sb.append(this.root2UserId);
      first = false;
    }
    if (isSetRecomUserId()) {
      if (!first) sb.append(", ");
      sb.append("recomUserId:");
      sb.append(this.recomUserId);
      first = false;
    }
    if (isSetPresenteeUserId()) {
      if (!first) sb.append(", ");
      sb.append("presenteeUserId:");
      sb.append(this.presenteeUserId);
      first = false;
    }
    if (isSetDepth()) {
      if (!first) sb.append(", ");
      sb.append("depth:");
      sb.append(this.depth);
      first = false;
    }
    if (isSetParentId()) {
      if (!first) sb.append(", ");
      sb.append("parentId:");
      sb.append(this.parentId);
      first = false;
    }
    if (isSetSeekReferralId()) {
      if (!first) sb.append(", ");
      sb.append("seekReferralId:");
      sb.append(this.seekReferralId);
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      sb.append(this.type);
      first = false;
    }
    if (isSetSendTime()) {
      if (!first) sb.append(", ");
      sb.append("sendTime:");
      sb.append(this.sendTime);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CandidateTemplateShareChainDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateTemplateShareChainDOStandardScheme getScheme() {
      return new CandidateTemplateShareChainDOStandardScheme();
    }
  }

  private static class CandidateTemplateShareChainDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<CandidateTemplateShareChainDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CandidateTemplateShareChainDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHAIN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.chainId = iprot.readI32();
              struct.setChainIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ROOT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rootUserId = iprot.readI32();
              struct.setRootUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ROOT2_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.root2UserId = iprot.readI32();
              struct.setRoot2UserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RECOM_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recomUserId = iprot.readI32();
              struct.setRecomUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PRESENTEE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.presenteeUserId = iprot.readI32();
              struct.setPresenteeUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DEPTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.depth = iprot.readI32();
              struct.setDepthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PARENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.parentId = iprot.readI32();
              struct.setParentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SEEK_REFERRAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.seekReferralId = iprot.readI32();
              struct.setSeekReferralIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SEND_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sendTime = iprot.readI64();
              struct.setSendTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CandidateTemplateShareChainDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetChainId()) {
        oprot.writeFieldBegin(CHAIN_ID_FIELD_DESC);
        oprot.writeI32(struct.chainId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRootUserId()) {
        oprot.writeFieldBegin(ROOT_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.rootUserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRoot2UserId()) {
        oprot.writeFieldBegin(ROOT2_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.root2UserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecomUserId()) {
        oprot.writeFieldBegin(RECOM_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.recomUserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPresenteeUserId()) {
        oprot.writeFieldBegin(PRESENTEE_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.presenteeUserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDepth()) {
        oprot.writeFieldBegin(DEPTH_FIELD_DESC);
        oprot.writeI32(struct.depth);
        oprot.writeFieldEnd();
      }
      if (struct.isSetParentId()) {
        oprot.writeFieldBegin(PARENT_ID_FIELD_DESC);
        oprot.writeI32(struct.parentId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSeekReferralId()) {
        oprot.writeFieldBegin(SEEK_REFERRAL_ID_FIELD_DESC);
        oprot.writeI32(struct.seekReferralId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetType()) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSendTime()) {
        oprot.writeFieldBegin(SEND_TIME_FIELD_DESC);
        oprot.writeI64(struct.sendTime);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CandidateTemplateShareChainDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateTemplateShareChainDOTupleScheme getScheme() {
      return new CandidateTemplateShareChainDOTupleScheme();
    }
  }

  private static class CandidateTemplateShareChainDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<CandidateTemplateShareChainDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CandidateTemplateShareChainDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetChainId()) {
        optionals.set(1);
      }
      if (struct.isSetPositionId()) {
        optionals.set(2);
      }
      if (struct.isSetRootUserId()) {
        optionals.set(3);
      }
      if (struct.isSetRoot2UserId()) {
        optionals.set(4);
      }
      if (struct.isSetRecomUserId()) {
        optionals.set(5);
      }
      if (struct.isSetPresenteeUserId()) {
        optionals.set(6);
      }
      if (struct.isSetDepth()) {
        optionals.set(7);
      }
      if (struct.isSetParentId()) {
        optionals.set(8);
      }
      if (struct.isSetSeekReferralId()) {
        optionals.set(9);
      }
      if (struct.isSetType()) {
        optionals.set(10);
      }
      if (struct.isSetSendTime()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(12);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetChainId()) {
        oprot.writeI32(struct.chainId);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetRootUserId()) {
        oprot.writeI32(struct.rootUserId);
      }
      if (struct.isSetRoot2UserId()) {
        oprot.writeI32(struct.root2UserId);
      }
      if (struct.isSetRecomUserId()) {
        oprot.writeI32(struct.recomUserId);
      }
      if (struct.isSetPresenteeUserId()) {
        oprot.writeI32(struct.presenteeUserId);
      }
      if (struct.isSetDepth()) {
        oprot.writeI32(struct.depth);
      }
      if (struct.isSetParentId()) {
        oprot.writeI32(struct.parentId);
      }
      if (struct.isSetSeekReferralId()) {
        oprot.writeI32(struct.seekReferralId);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetSendTime()) {
        oprot.writeI64(struct.sendTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CandidateTemplateShareChainDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.chainId = iprot.readI32();
        struct.setChainIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.rootUserId = iprot.readI32();
        struct.setRootUserIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.root2UserId = iprot.readI32();
        struct.setRoot2UserIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.recomUserId = iprot.readI32();
        struct.setRecomUserIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.presenteeUserId = iprot.readI32();
        struct.setPresenteeUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.depth = iprot.readI32();
        struct.setDepthIsSet(true);
      }
      if (incoming.get(8)) {
        struct.parentId = iprot.readI32();
        struct.setParentIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.seekReferralId = iprot.readI32();
        struct.setSeekReferralIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.sendTime = iprot.readI64();
        struct.setSendTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

