/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.chat.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-09")
public class ResultOfSaveRoomVO implements org.apache.thrift.TBase<ResultOfSaveRoomVO, ResultOfSaveRoomVO._Fields>, java.io.Serializable, Cloneable, Comparable<ResultOfSaveRoomVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ResultOfSaveRoomVO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("positionTitle", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SALARY_BOTTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryBottom", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField SALARY_TOP_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryTop", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField POSITION_UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("positionUpdateTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField HR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("hrName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField HR_HEAD_IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("hrHeadImgUrl", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hrId", org.apache.thrift.protocol.TType.I32, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ResultOfSaveRoomVOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ResultOfSaveRoomVOTupleSchemeFactory();

  public int id; // optional
  public int positionId; // optional
  public java.lang.String positionTitle; // optional
  public java.lang.String companyName; // optional
  public java.lang.String city; // optional
  public int salaryBottom; // optional
  public int salaryTop; // optional
  public java.lang.String positionUpdateTime; // optional
  public java.lang.String hrName; // optional
  public java.lang.String hrHeadImgUrl; // optional
  public int hrId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    POSITION_ID((short)2, "positionId"),
    POSITION_TITLE((short)3, "positionTitle"),
    COMPANY_NAME((short)4, "companyName"),
    CITY((short)5, "city"),
    SALARY_BOTTOM((short)6, "salaryBottom"),
    SALARY_TOP((short)7, "salaryTop"),
    POSITION_UPDATE_TIME((short)8, "positionUpdateTime"),
    HR_NAME((short)9, "hrName"),
    HR_HEAD_IMG_URL((short)10, "hrHeadImgUrl"),
    HR_ID((short)11, "hrId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // POSITION_ID
          return POSITION_ID;
        case 3: // POSITION_TITLE
          return POSITION_TITLE;
        case 4: // COMPANY_NAME
          return COMPANY_NAME;
        case 5: // CITY
          return CITY;
        case 6: // SALARY_BOTTOM
          return SALARY_BOTTOM;
        case 7: // SALARY_TOP
          return SALARY_TOP;
        case 8: // POSITION_UPDATE_TIME
          return POSITION_UPDATE_TIME;
        case 9: // HR_NAME
          return HR_NAME;
        case 10: // HR_HEAD_IMG_URL
          return HR_HEAD_IMG_URL;
        case 11: // HR_ID
          return HR_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __POSITIONID_ISSET_ID = 1;
  private static final int __SALARYBOTTOM_ISSET_ID = 2;
  private static final int __SALARYTOP_ISSET_ID = 3;
  private static final int __HRID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.POSITION_ID,_Fields.POSITION_TITLE,_Fields.COMPANY_NAME,_Fields.CITY,_Fields.SALARY_BOTTOM,_Fields.SALARY_TOP,_Fields.POSITION_UPDATE_TIME,_Fields.HR_NAME,_Fields.HR_HEAD_IMG_URL,_Fields.HR_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_TITLE, new org.apache.thrift.meta_data.FieldMetaData("positionTitle", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALARY_BOTTOM, new org.apache.thrift.meta_data.FieldMetaData("salaryBottom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALARY_TOP, new org.apache.thrift.meta_data.FieldMetaData("salaryTop", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("positionUpdateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_NAME, new org.apache.thrift.meta_data.FieldMetaData("hrName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_HEAD_IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("hrHeadImgUrl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hrId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ResultOfSaveRoomVO.class, metaDataMap);
  }

  public ResultOfSaveRoomVO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ResultOfSaveRoomVO(ResultOfSaveRoomVO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.positionId = other.positionId;
    if (other.isSetPositionTitle()) {
      this.positionTitle = other.positionTitle;
    }
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    if (other.isSetCity()) {
      this.city = other.city;
    }
    this.salaryBottom = other.salaryBottom;
    this.salaryTop = other.salaryTop;
    if (other.isSetPositionUpdateTime()) {
      this.positionUpdateTime = other.positionUpdateTime;
    }
    if (other.isSetHrName()) {
      this.hrName = other.hrName;
    }
    if (other.isSetHrHeadImgUrl()) {
      this.hrHeadImgUrl = other.hrHeadImgUrl;
    }
    this.hrId = other.hrId;
  }

  public ResultOfSaveRoomVO deepCopy() {
    return new ResultOfSaveRoomVO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    this.positionTitle = null;
    this.companyName = null;
    this.city = null;
    setSalaryBottomIsSet(false);
    this.salaryBottom = 0;
    setSalaryTopIsSet(false);
    this.salaryTop = 0;
    this.positionUpdateTime = null;
    this.hrName = null;
    this.hrHeadImgUrl = null;
    setHrIdIsSet(false);
    this.hrId = 0;
  }

  public int getId() {
    return this.id;
  }

  public ResultOfSaveRoomVO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public ResultOfSaveRoomVO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public java.lang.String getPositionTitle() {
    return this.positionTitle;
  }

  public ResultOfSaveRoomVO setPositionTitle(java.lang.String positionTitle) {
    this.positionTitle = positionTitle;
    return this;
  }

  public void unsetPositionTitle() {
    this.positionTitle = null;
  }

  /** Returns true if field positionTitle is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionTitle() {
    return this.positionTitle != null;
  }

  public void setPositionTitleIsSet(boolean value) {
    if (!value) {
      this.positionTitle = null;
    }
  }

  public java.lang.String getCompanyName() {
    return this.companyName;
  }

  public ResultOfSaveRoomVO setCompanyName(java.lang.String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public java.lang.String getCity() {
    return this.city;
  }

  public ResultOfSaveRoomVO setCity(java.lang.String city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public int getSalaryBottom() {
    return this.salaryBottom;
  }

  public ResultOfSaveRoomVO setSalaryBottom(int salaryBottom) {
    this.salaryBottom = salaryBottom;
    setSalaryBottomIsSet(true);
    return this;
  }

  public void unsetSalaryBottom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID);
  }

  /** Returns true if field salaryBottom is set (has been assigned a value) and false otherwise */
  public boolean isSetSalaryBottom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID);
  }

  public void setSalaryBottomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARYBOTTOM_ISSET_ID, value);
  }

  public int getSalaryTop() {
    return this.salaryTop;
  }

  public ResultOfSaveRoomVO setSalaryTop(int salaryTop) {
    this.salaryTop = salaryTop;
    setSalaryTopIsSet(true);
    return this;
  }

  public void unsetSalaryTop() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALARYTOP_ISSET_ID);
  }

  /** Returns true if field salaryTop is set (has been assigned a value) and false otherwise */
  public boolean isSetSalaryTop() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALARYTOP_ISSET_ID);
  }

  public void setSalaryTopIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALARYTOP_ISSET_ID, value);
  }

  public java.lang.String getPositionUpdateTime() {
    return this.positionUpdateTime;
  }

  public ResultOfSaveRoomVO setPositionUpdateTime(java.lang.String positionUpdateTime) {
    this.positionUpdateTime = positionUpdateTime;
    return this;
  }

  public void unsetPositionUpdateTime() {
    this.positionUpdateTime = null;
  }

  /** Returns true if field positionUpdateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionUpdateTime() {
    return this.positionUpdateTime != null;
  }

  public void setPositionUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.positionUpdateTime = null;
    }
  }

  public java.lang.String getHrName() {
    return this.hrName;
  }

  public ResultOfSaveRoomVO setHrName(java.lang.String hrName) {
    this.hrName = hrName;
    return this;
  }

  public void unsetHrName() {
    this.hrName = null;
  }

  /** Returns true if field hrName is set (has been assigned a value) and false otherwise */
  public boolean isSetHrName() {
    return this.hrName != null;
  }

  public void setHrNameIsSet(boolean value) {
    if (!value) {
      this.hrName = null;
    }
  }

  public java.lang.String getHrHeadImgUrl() {
    return this.hrHeadImgUrl;
  }

  public ResultOfSaveRoomVO setHrHeadImgUrl(java.lang.String hrHeadImgUrl) {
    this.hrHeadImgUrl = hrHeadImgUrl;
    return this;
  }

  public void unsetHrHeadImgUrl() {
    this.hrHeadImgUrl = null;
  }

  /** Returns true if field hrHeadImgUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetHrHeadImgUrl() {
    return this.hrHeadImgUrl != null;
  }

  public void setHrHeadImgUrlIsSet(boolean value) {
    if (!value) {
      this.hrHeadImgUrl = null;
    }
  }

  public int getHrId() {
    return this.hrId;
  }

  public ResultOfSaveRoomVO setHrId(int hrId) {
    this.hrId = hrId;
    setHrIdIsSet(true);
    return this;
  }

  public void unsetHrId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRID_ISSET_ID);
  }

  /** Returns true if field hrId is set (has been assigned a value) and false otherwise */
  public boolean isSetHrId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRID_ISSET_ID);
  }

  public void setHrIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Integer)value);
      }
      break;

    case POSITION_TITLE:
      if (value == null) {
        unsetPositionTitle();
      } else {
        setPositionTitle((java.lang.String)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((java.lang.String)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((java.lang.String)value);
      }
      break;

    case SALARY_BOTTOM:
      if (value == null) {
        unsetSalaryBottom();
      } else {
        setSalaryBottom((java.lang.Integer)value);
      }
      break;

    case SALARY_TOP:
      if (value == null) {
        unsetSalaryTop();
      } else {
        setSalaryTop((java.lang.Integer)value);
      }
      break;

    case POSITION_UPDATE_TIME:
      if (value == null) {
        unsetPositionUpdateTime();
      } else {
        setPositionUpdateTime((java.lang.String)value);
      }
      break;

    case HR_NAME:
      if (value == null) {
        unsetHrName();
      } else {
        setHrName((java.lang.String)value);
      }
      break;

    case HR_HEAD_IMG_URL:
      if (value == null) {
        unsetHrHeadImgUrl();
      } else {
        setHrHeadImgUrl((java.lang.String)value);
      }
      break;

    case HR_ID:
      if (value == null) {
        unsetHrId();
      } else {
        setHrId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case POSITION_ID:
      return getPositionId();

    case POSITION_TITLE:
      return getPositionTitle();

    case COMPANY_NAME:
      return getCompanyName();

    case CITY:
      return getCity();

    case SALARY_BOTTOM:
      return getSalaryBottom();

    case SALARY_TOP:
      return getSalaryTop();

    case POSITION_UPDATE_TIME:
      return getPositionUpdateTime();

    case HR_NAME:
      return getHrName();

    case HR_HEAD_IMG_URL:
      return getHrHeadImgUrl();

    case HR_ID:
      return getHrId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case POSITION_ID:
      return isSetPositionId();
    case POSITION_TITLE:
      return isSetPositionTitle();
    case COMPANY_NAME:
      return isSetCompanyName();
    case CITY:
      return isSetCity();
    case SALARY_BOTTOM:
      return isSetSalaryBottom();
    case SALARY_TOP:
      return isSetSalaryTop();
    case POSITION_UPDATE_TIME:
      return isSetPositionUpdateTime();
    case HR_NAME:
      return isSetHrName();
    case HR_HEAD_IMG_URL:
      return isSetHrHeadImgUrl();
    case HR_ID:
      return isSetHrId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ResultOfSaveRoomVO)
      return this.equals((ResultOfSaveRoomVO)that);
    return false;
  }

  public boolean equals(ResultOfSaveRoomVO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_positionTitle = true && this.isSetPositionTitle();
    boolean that_present_positionTitle = true && that.isSetPositionTitle();
    if (this_present_positionTitle || that_present_positionTitle) {
      if (!(this_present_positionTitle && that_present_positionTitle))
        return false;
      if (!this.positionTitle.equals(that.positionTitle))
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_salaryBottom = true && this.isSetSalaryBottom();
    boolean that_present_salaryBottom = true && that.isSetSalaryBottom();
    if (this_present_salaryBottom || that_present_salaryBottom) {
      if (!(this_present_salaryBottom && that_present_salaryBottom))
        return false;
      if (this.salaryBottom != that.salaryBottom)
        return false;
    }

    boolean this_present_salaryTop = true && this.isSetSalaryTop();
    boolean that_present_salaryTop = true && that.isSetSalaryTop();
    if (this_present_salaryTop || that_present_salaryTop) {
      if (!(this_present_salaryTop && that_present_salaryTop))
        return false;
      if (this.salaryTop != that.salaryTop)
        return false;
    }

    boolean this_present_positionUpdateTime = true && this.isSetPositionUpdateTime();
    boolean that_present_positionUpdateTime = true && that.isSetPositionUpdateTime();
    if (this_present_positionUpdateTime || that_present_positionUpdateTime) {
      if (!(this_present_positionUpdateTime && that_present_positionUpdateTime))
        return false;
      if (!this.positionUpdateTime.equals(that.positionUpdateTime))
        return false;
    }

    boolean this_present_hrName = true && this.isSetHrName();
    boolean that_present_hrName = true && that.isSetHrName();
    if (this_present_hrName || that_present_hrName) {
      if (!(this_present_hrName && that_present_hrName))
        return false;
      if (!this.hrName.equals(that.hrName))
        return false;
    }

    boolean this_present_hrHeadImgUrl = true && this.isSetHrHeadImgUrl();
    boolean that_present_hrHeadImgUrl = true && that.isSetHrHeadImgUrl();
    if (this_present_hrHeadImgUrl || that_present_hrHeadImgUrl) {
      if (!(this_present_hrHeadImgUrl && that_present_hrHeadImgUrl))
        return false;
      if (!this.hrHeadImgUrl.equals(that.hrHeadImgUrl))
        return false;
    }

    boolean this_present_hrId = true && this.isSetHrId();
    boolean that_present_hrId = true && that.isSetHrId();
    if (this_present_hrId || that_present_hrId) {
      if (!(this_present_hrId && that_present_hrId))
        return false;
      if (this.hrId != that.hrId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetPositionTitle()) ? 131071 : 524287);
    if (isSetPositionTitle())
      hashCode = hashCode * 8191 + positionTitle.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompanyName()) ? 131071 : 524287);
    if (isSetCompanyName())
      hashCode = hashCode * 8191 + companyName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetSalaryBottom()) ? 131071 : 524287);
    if (isSetSalaryBottom())
      hashCode = hashCode * 8191 + salaryBottom;

    hashCode = hashCode * 8191 + ((isSetSalaryTop()) ? 131071 : 524287);
    if (isSetSalaryTop())
      hashCode = hashCode * 8191 + salaryTop;

    hashCode = hashCode * 8191 + ((isSetPositionUpdateTime()) ? 131071 : 524287);
    if (isSetPositionUpdateTime())
      hashCode = hashCode * 8191 + positionUpdateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrName()) ? 131071 : 524287);
    if (isSetHrName())
      hashCode = hashCode * 8191 + hrName.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrHeadImgUrl()) ? 131071 : 524287);
    if (isSetHrHeadImgUrl())
      hashCode = hashCode * 8191 + hrHeadImgUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetHrId()) ? 131071 : 524287);
    if (isSetHrId())
      hashCode = hashCode * 8191 + hrId;

    return hashCode;
  }

  @Override
  public int compareTo(ResultOfSaveRoomVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionTitle()).compareTo(other.isSetPositionTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionTitle, other.positionTitle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalaryBottom()).compareTo(other.isSetSalaryBottom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalaryBottom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryBottom, other.salaryBottom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalaryTop()).compareTo(other.isSetSalaryTop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalaryTop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryTop, other.salaryTop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionUpdateTime()).compareTo(other.isSetPositionUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionUpdateTime, other.positionUpdateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrName()).compareTo(other.isSetHrName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrName, other.hrName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrHeadImgUrl()).compareTo(other.isSetHrHeadImgUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrHeadImgUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrHeadImgUrl, other.hrHeadImgUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrId()).compareTo(other.isSetHrId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrId, other.hrId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ResultOfSaveRoomVO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetPositionTitle()) {
      if (!first) sb.append(", ");
      sb.append("positionTitle:");
      if (this.positionTitle == null) {
        sb.append("null");
      } else {
        sb.append(this.positionTitle);
      }
      first = false;
    }
    if (isSetCompanyName()) {
      if (!first) sb.append(", ");
      sb.append("companyName:");
      if (this.companyName == null) {
        sb.append("null");
      } else {
        sb.append(this.companyName);
      }
      first = false;
    }
    if (isSetCity()) {
      if (!first) sb.append(", ");
      sb.append("city:");
      if (this.city == null) {
        sb.append("null");
      } else {
        sb.append(this.city);
      }
      first = false;
    }
    if (isSetSalaryBottom()) {
      if (!first) sb.append(", ");
      sb.append("salaryBottom:");
      sb.append(this.salaryBottom);
      first = false;
    }
    if (isSetSalaryTop()) {
      if (!first) sb.append(", ");
      sb.append("salaryTop:");
      sb.append(this.salaryTop);
      first = false;
    }
    if (isSetPositionUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("positionUpdateTime:");
      if (this.positionUpdateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.positionUpdateTime);
      }
      first = false;
    }
    if (isSetHrName()) {
      if (!first) sb.append(", ");
      sb.append("hrName:");
      if (this.hrName == null) {
        sb.append("null");
      } else {
        sb.append(this.hrName);
      }
      first = false;
    }
    if (isSetHrHeadImgUrl()) {
      if (!first) sb.append(", ");
      sb.append("hrHeadImgUrl:");
      if (this.hrHeadImgUrl == null) {
        sb.append("null");
      } else {
        sb.append(this.hrHeadImgUrl);
      }
      first = false;
    }
    if (isSetHrId()) {
      if (!first) sb.append(", ");
      sb.append("hrId:");
      sb.append(this.hrId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ResultOfSaveRoomVOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfSaveRoomVOStandardScheme getScheme() {
      return new ResultOfSaveRoomVOStandardScheme();
    }
  }

  private static class ResultOfSaveRoomVOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ResultOfSaveRoomVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.positionTitle = iprot.readString();
              struct.setPositionTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city = iprot.readString();
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SALARY_BOTTOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salaryBottom = iprot.readI32();
              struct.setSalaryBottomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SALARY_TOP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salaryTop = iprot.readI32();
              struct.setSalaryTopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // POSITION_UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.positionUpdateTime = iprot.readString();
              struct.setPositionUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // HR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hrName = iprot.readString();
              struct.setHrNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // HR_HEAD_IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hrHeadImgUrl = iprot.readString();
              struct.setHrHeadImgUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // HR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hrId = iprot.readI32();
              struct.setHrIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.positionTitle != null) {
        if (struct.isSetPositionTitle()) {
          oprot.writeFieldBegin(POSITION_TITLE_FIELD_DESC);
          oprot.writeString(struct.positionTitle);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyName != null) {
        if (struct.isSetCompanyName()) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.companyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.city != null) {
        if (struct.isSetCity()) {
          oprot.writeFieldBegin(CITY_FIELD_DESC);
          oprot.writeString(struct.city);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSalaryBottom()) {
        oprot.writeFieldBegin(SALARY_BOTTOM_FIELD_DESC);
        oprot.writeI32(struct.salaryBottom);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalaryTop()) {
        oprot.writeFieldBegin(SALARY_TOP_FIELD_DESC);
        oprot.writeI32(struct.salaryTop);
        oprot.writeFieldEnd();
      }
      if (struct.positionUpdateTime != null) {
        if (struct.isSetPositionUpdateTime()) {
          oprot.writeFieldBegin(POSITION_UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.positionUpdateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.hrName != null) {
        if (struct.isSetHrName()) {
          oprot.writeFieldBegin(HR_NAME_FIELD_DESC);
          oprot.writeString(struct.hrName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.hrHeadImgUrl != null) {
        if (struct.isSetHrHeadImgUrl()) {
          oprot.writeFieldBegin(HR_HEAD_IMG_URL_FIELD_DESC);
          oprot.writeString(struct.hrHeadImgUrl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHrId()) {
        oprot.writeFieldBegin(HR_ID_FIELD_DESC);
        oprot.writeI32(struct.hrId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ResultOfSaveRoomVOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfSaveRoomVOTupleScheme getScheme() {
      return new ResultOfSaveRoomVOTupleScheme();
    }
  }

  private static class ResultOfSaveRoomVOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ResultOfSaveRoomVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPositionId()) {
        optionals.set(1);
      }
      if (struct.isSetPositionTitle()) {
        optionals.set(2);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(3);
      }
      if (struct.isSetCity()) {
        optionals.set(4);
      }
      if (struct.isSetSalaryBottom()) {
        optionals.set(5);
      }
      if (struct.isSetSalaryTop()) {
        optionals.set(6);
      }
      if (struct.isSetPositionUpdateTime()) {
        optionals.set(7);
      }
      if (struct.isSetHrName()) {
        optionals.set(8);
      }
      if (struct.isSetHrHeadImgUrl()) {
        optionals.set(9);
      }
      if (struct.isSetHrId()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetPositionTitle()) {
        oprot.writeString(struct.positionTitle);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetCity()) {
        oprot.writeString(struct.city);
      }
      if (struct.isSetSalaryBottom()) {
        oprot.writeI32(struct.salaryBottom);
      }
      if (struct.isSetSalaryTop()) {
        oprot.writeI32(struct.salaryTop);
      }
      if (struct.isSetPositionUpdateTime()) {
        oprot.writeString(struct.positionUpdateTime);
      }
      if (struct.isSetHrName()) {
        oprot.writeString(struct.hrName);
      }
      if (struct.isSetHrHeadImgUrl()) {
        oprot.writeString(struct.hrHeadImgUrl);
      }
      if (struct.isSetHrId()) {
        oprot.writeI32(struct.hrId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.positionTitle = iprot.readString();
        struct.setPositionTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.city = iprot.readString();
        struct.setCityIsSet(true);
      }
      if (incoming.get(5)) {
        struct.salaryBottom = iprot.readI32();
        struct.setSalaryBottomIsSet(true);
      }
      if (incoming.get(6)) {
        struct.salaryTop = iprot.readI32();
        struct.setSalaryTopIsSet(true);
      }
      if (incoming.get(7)) {
        struct.positionUpdateTime = iprot.readString();
        struct.setPositionUpdateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.hrName = iprot.readString();
        struct.setHrNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.hrHeadImgUrl = iprot.readString();
        struct.setHrHeadImgUrlIsSet(true);
      }
      if (incoming.get(10)) {
        struct.hrId = iprot.readI32();
        struct.setHrIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

