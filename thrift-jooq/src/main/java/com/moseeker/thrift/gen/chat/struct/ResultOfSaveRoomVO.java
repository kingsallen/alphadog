/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.chat.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-10")
public class ResultOfSaveRoomVO implements org.apache.thrift.TBase<ResultOfSaveRoomVO, ResultOfSaveRoomVO._Fields>, java.io.Serializable, Cloneable, Comparable<ResultOfSaveRoomVO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ResultOfSaveRoomVO");

  private static final org.apache.thrift.protocol.TField ROOM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roomId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CHAT_DEBUT_FIELD_DESC = new org.apache.thrift.protocol.TField("chatDebut", org.apache.thrift.protocol.TType.BOOL, (short)2);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField USER_FIELD_DESC = new org.apache.thrift.protocol.TField("user", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField HR_FIELD_DESC = new org.apache.thrift.protocol.TField("hr", org.apache.thrift.protocol.TType.STRUCT, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ResultOfSaveRoomVOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ResultOfSaveRoomVOTupleSchemeFactory();

  public int roomId; // optional
  public boolean chatDebut; // optional
  public PositionVO position; // optional
  public UserVO user; // optional
  public HrVO hr; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ROOM_ID((short)1, "roomId"),
    CHAT_DEBUT((short)2, "chatDebut"),
    POSITION((short)3, "position"),
    USER((short)4, "user"),
    HR((short)5, "hr");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ROOM_ID
          return ROOM_ID;
        case 2: // CHAT_DEBUT
          return CHAT_DEBUT;
        case 3: // POSITION
          return POSITION;
        case 4: // USER
          return USER;
        case 5: // HR
          return HR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ROOMID_ISSET_ID = 0;
  private static final int __CHATDEBUT_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ROOM_ID,_Fields.CHAT_DEBUT,_Fields.POSITION,_Fields.USER,_Fields.HR};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ROOM_ID, new org.apache.thrift.meta_data.FieldMetaData("roomId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHAT_DEBUT, new org.apache.thrift.meta_data.FieldMetaData("chatDebut", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PositionVO.class)));
    tmpMap.put(_Fields.USER, new org.apache.thrift.meta_data.FieldMetaData("user", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, UserVO.class)));
    tmpMap.put(_Fields.HR, new org.apache.thrift.meta_data.FieldMetaData("hr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, HrVO.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ResultOfSaveRoomVO.class, metaDataMap);
  }

  public ResultOfSaveRoomVO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ResultOfSaveRoomVO(ResultOfSaveRoomVO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.roomId = other.roomId;
    this.chatDebut = other.chatDebut;
    if (other.isSetPosition()) {
      this.position = new PositionVO(other.position);
    }
    if (other.isSetUser()) {
      this.user = new UserVO(other.user);
    }
    if (other.isSetHr()) {
      this.hr = new HrVO(other.hr);
    }
  }

  public ResultOfSaveRoomVO deepCopy() {
    return new ResultOfSaveRoomVO(this);
  }

  @Override
  public void clear() {
    setRoomIdIsSet(false);
    this.roomId = 0;
    setChatDebutIsSet(false);
    this.chatDebut = false;
    this.position = null;
    this.user = null;
    this.hr = null;
  }

  public int getRoomId() {
    return this.roomId;
  }

  public ResultOfSaveRoomVO setRoomId(int roomId) {
    this.roomId = roomId;
    setRoomIdIsSet(true);
    return this;
  }

  public void unsetRoomId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROOMID_ISSET_ID);
  }

  /** Returns true if field roomId is set (has been assigned a value) and false otherwise */
  public boolean isSetRoomId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROOMID_ISSET_ID);
  }

  public void setRoomIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROOMID_ISSET_ID, value);
  }

  public boolean isChatDebut() {
    return this.chatDebut;
  }

  public ResultOfSaveRoomVO setChatDebut(boolean chatDebut) {
    this.chatDebut = chatDebut;
    setChatDebutIsSet(true);
    return this;
  }

  public void unsetChatDebut() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHATDEBUT_ISSET_ID);
  }

  /** Returns true if field chatDebut is set (has been assigned a value) and false otherwise */
  public boolean isSetChatDebut() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHATDEBUT_ISSET_ID);
  }

  public void setChatDebutIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHATDEBUT_ISSET_ID, value);
  }

  public PositionVO getPosition() {
    return this.position;
  }

  public ResultOfSaveRoomVO setPosition(PositionVO position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public UserVO getUser() {
    return this.user;
  }

  public ResultOfSaveRoomVO setUser(UserVO user) {
    this.user = user;
    return this;
  }

  public void unsetUser() {
    this.user = null;
  }

  /** Returns true if field user is set (has been assigned a value) and false otherwise */
  public boolean isSetUser() {
    return this.user != null;
  }

  public void setUserIsSet(boolean value) {
    if (!value) {
      this.user = null;
    }
  }

  public HrVO getHr() {
    return this.hr;
  }

  public ResultOfSaveRoomVO setHr(HrVO hr) {
    this.hr = hr;
    return this;
  }

  public void unsetHr() {
    this.hr = null;
  }

  /** Returns true if field hr is set (has been assigned a value) and false otherwise */
  public boolean isSetHr() {
    return this.hr != null;
  }

  public void setHrIsSet(boolean value) {
    if (!value) {
      this.hr = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ROOM_ID:
      if (value == null) {
        unsetRoomId();
      } else {
        setRoomId((java.lang.Integer)value);
      }
      break;

    case CHAT_DEBUT:
      if (value == null) {
        unsetChatDebut();
      } else {
        setChatDebut((java.lang.Boolean)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((PositionVO)value);
      }
      break;

    case USER:
      if (value == null) {
        unsetUser();
      } else {
        setUser((UserVO)value);
      }
      break;

    case HR:
      if (value == null) {
        unsetHr();
      } else {
        setHr((HrVO)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ROOM_ID:
      return getRoomId();

    case CHAT_DEBUT:
      return isChatDebut();

    case POSITION:
      return getPosition();

    case USER:
      return getUser();

    case HR:
      return getHr();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ROOM_ID:
      return isSetRoomId();
    case CHAT_DEBUT:
      return isSetChatDebut();
    case POSITION:
      return isSetPosition();
    case USER:
      return isSetUser();
    case HR:
      return isSetHr();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ResultOfSaveRoomVO)
      return this.equals((ResultOfSaveRoomVO)that);
    return false;
  }

  public boolean equals(ResultOfSaveRoomVO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_roomId = true && this.isSetRoomId();
    boolean that_present_roomId = true && that.isSetRoomId();
    if (this_present_roomId || that_present_roomId) {
      if (!(this_present_roomId && that_present_roomId))
        return false;
      if (this.roomId != that.roomId)
        return false;
    }

    boolean this_present_chatDebut = true && this.isSetChatDebut();
    boolean that_present_chatDebut = true && that.isSetChatDebut();
    if (this_present_chatDebut || that_present_chatDebut) {
      if (!(this_present_chatDebut && that_present_chatDebut))
        return false;
      if (this.chatDebut != that.chatDebut)
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_user = true && this.isSetUser();
    boolean that_present_user = true && that.isSetUser();
    if (this_present_user || that_present_user) {
      if (!(this_present_user && that_present_user))
        return false;
      if (!this.user.equals(that.user))
        return false;
    }

    boolean this_present_hr = true && this.isSetHr();
    boolean that_present_hr = true && that.isSetHr();
    if (this_present_hr || that_present_hr) {
      if (!(this_present_hr && that_present_hr))
        return false;
      if (!this.hr.equals(that.hr))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetRoomId()) ? 131071 : 524287);
    if (isSetRoomId())
      hashCode = hashCode * 8191 + roomId;

    hashCode = hashCode * 8191 + ((isSetChatDebut()) ? 131071 : 524287);
    if (isSetChatDebut())
      hashCode = hashCode * 8191 + ((chatDebut) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetUser()) ? 131071 : 524287);
    if (isSetUser())
      hashCode = hashCode * 8191 + user.hashCode();

    hashCode = hashCode * 8191 + ((isSetHr()) ? 131071 : 524287);
    if (isSetHr())
      hashCode = hashCode * 8191 + hr.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ResultOfSaveRoomVO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetRoomId()).compareTo(other.isSetRoomId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoomId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roomId, other.roomId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChatDebut()).compareTo(other.isSetChatDebut());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChatDebut()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chatDebut, other.chatDebut);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUser()).compareTo(other.isSetUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user, other.user);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHr()).compareTo(other.isSetHr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr, other.hr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ResultOfSaveRoomVO(");
    boolean first = true;

    if (isSetRoomId()) {
      sb.append("roomId:");
      sb.append(this.roomId);
      first = false;
    }
    if (isSetChatDebut()) {
      if (!first) sb.append(", ");
      sb.append("chatDebut:");
      sb.append(this.chatDebut);
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetUser()) {
      if (!first) sb.append(", ");
      sb.append("user:");
      if (this.user == null) {
        sb.append("null");
      } else {
        sb.append(this.user);
      }
      first = false;
    }
    if (isSetHr()) {
      if (!first) sb.append(", ");
      sb.append("hr:");
      if (this.hr == null) {
        sb.append("null");
      } else {
        sb.append(this.hr);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (position != null) {
      position.validate();
    }
    if (user != null) {
      user.validate();
    }
    if (hr != null) {
      hr.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ResultOfSaveRoomVOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfSaveRoomVOStandardScheme getScheme() {
      return new ResultOfSaveRoomVOStandardScheme();
    }
  }

  private static class ResultOfSaveRoomVOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ResultOfSaveRoomVO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ROOM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.roomId = iprot.readI32();
              struct.setRoomIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHAT_DEBUT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.chatDebut = iprot.readBool();
              struct.setChatDebutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.position = new PositionVO();
              struct.position.read(iprot);
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.user = new UserVO();
              struct.user.read(iprot);
              struct.setUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.hr = new HrVO();
              struct.hr.read(iprot);
              struct.setHrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetRoomId()) {
        oprot.writeFieldBegin(ROOM_ID_FIELD_DESC);
        oprot.writeI32(struct.roomId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetChatDebut()) {
        oprot.writeFieldBegin(CHAT_DEBUT_FIELD_DESC);
        oprot.writeBool(struct.chatDebut);
        oprot.writeFieldEnd();
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          struct.position.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.user != null) {
        if (struct.isSetUser()) {
          oprot.writeFieldBegin(USER_FIELD_DESC);
          struct.user.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.hr != null) {
        if (struct.isSetHr()) {
          oprot.writeFieldBegin(HR_FIELD_DESC);
          struct.hr.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ResultOfSaveRoomVOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ResultOfSaveRoomVOTupleScheme getScheme() {
      return new ResultOfSaveRoomVOTupleScheme();
    }
  }

  private static class ResultOfSaveRoomVOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ResultOfSaveRoomVO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetRoomId()) {
        optionals.set(0);
      }
      if (struct.isSetChatDebut()) {
        optionals.set(1);
      }
      if (struct.isSetPosition()) {
        optionals.set(2);
      }
      if (struct.isSetUser()) {
        optionals.set(3);
      }
      if (struct.isSetHr()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetRoomId()) {
        oprot.writeI32(struct.roomId);
      }
      if (struct.isSetChatDebut()) {
        oprot.writeBool(struct.chatDebut);
      }
      if (struct.isSetPosition()) {
        struct.position.write(oprot);
      }
      if (struct.isSetUser()) {
        struct.user.write(oprot);
      }
      if (struct.isSetHr()) {
        struct.hr.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ResultOfSaveRoomVO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.roomId = iprot.readI32();
        struct.setRoomIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.chatDebut = iprot.readBool();
        struct.setChatDebutIsSet(true);
      }
      if (incoming.get(2)) {
        struct.position = new PositionVO();
        struct.position.read(iprot);
        struct.setPositionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.user = new UserVO();
        struct.user.read(iprot);
        struct.setUserIsSet(true);
      }
      if (incoming.get(4)) {
        struct.hr = new HrVO();
        struct.hr.read(iprot);
        struct.setHrIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

