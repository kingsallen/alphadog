/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.candidatedb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-20")
public class CandidateRecomRecordDO implements org.apache.thrift.TBase<CandidateRecomRecordDO, CandidateRecomRecordDO._Fields>, java.io.Serializable, Cloneable, Comparable<CandidateRecomRecordDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CandidateRecomRecordDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("positionId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PRESENTEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("presenteeId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CLICK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("clickTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DEPTH_FIELD_DESC = new org.apache.thrift.protocol.TField("depth", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField RECOM_ID2_FIELD_DESC = new org.apache.thrift.protocol.TField("recomId2", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField RECOM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("recomId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField REALNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("realname", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("company", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField RECOM_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("recomReason", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField RECOM_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("recomTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField IS_RECOM_FIELD_DESC = new org.apache.thrift.protocol.TField("isRecom", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField PRESENTEE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("presenteeUserId", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField REPOST_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("repostUserId", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField POST_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("postUserId", org.apache.thrift.protocol.TType.I32, (short)20);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CandidateRecomRecordDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CandidateRecomRecordDOTupleSchemeFactory();

  public int id; // optional
  public int positionId; // optional
  public int appId; // optional
  public int presenteeId; // optional
  public java.lang.String clickTime; // optional
  public int depth; // optional
  public int recomId2; // optional
  public int recomId; // optional
  public java.lang.String realname; // optional
  public java.lang.String company; // optional
  public java.lang.String position; // optional
  public java.lang.String recomReason; // optional
  public java.lang.String recomTime; // optional
  public int isRecom; // optional
  public java.lang.String createTime; // optional
  public java.lang.String updateTime; // optional
  public java.lang.String mobile; // optional
  public int presenteeUserId; // optional
  public int repostUserId; // optional
  public int postUserId; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    POSITION_ID((short)2, "positionId"),
    APP_ID((short)3, "appId"),
    PRESENTEE_ID((short)4, "presenteeId"),
    CLICK_TIME((short)5, "clickTime"),
    DEPTH((short)6, "depth"),
    RECOM_ID2((short)7, "recomId2"),
    RECOM_ID((short)8, "recomId"),
    REALNAME((short)9, "realname"),
    COMPANY((short)10, "company"),
    POSITION((short)11, "position"),
    RECOM_REASON((short)12, "recomReason"),
    RECOM_TIME((short)13, "recomTime"),
    IS_RECOM((short)14, "isRecom"),
    CREATE_TIME((short)15, "createTime"),
    UPDATE_TIME((short)16, "updateTime"),
    MOBILE((short)17, "mobile"),
    PRESENTEE_USER_ID((short)18, "presenteeUserId"),
    REPOST_USER_ID((short)19, "repostUserId"),
    POST_USER_ID((short)20, "postUserId");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // POSITION_ID
          return POSITION_ID;
        case 3: // APP_ID
          return APP_ID;
        case 4: // PRESENTEE_ID
          return PRESENTEE_ID;
        case 5: // CLICK_TIME
          return CLICK_TIME;
        case 6: // DEPTH
          return DEPTH;
        case 7: // RECOM_ID2
          return RECOM_ID2;
        case 8: // RECOM_ID
          return RECOM_ID;
        case 9: // REALNAME
          return REALNAME;
        case 10: // COMPANY
          return COMPANY;
        case 11: // POSITION
          return POSITION;
        case 12: // RECOM_REASON
          return RECOM_REASON;
        case 13: // RECOM_TIME
          return RECOM_TIME;
        case 14: // IS_RECOM
          return IS_RECOM;
        case 15: // CREATE_TIME
          return CREATE_TIME;
        case 16: // UPDATE_TIME
          return UPDATE_TIME;
        case 17: // MOBILE
          return MOBILE;
        case 18: // PRESENTEE_USER_ID
          return PRESENTEE_USER_ID;
        case 19: // REPOST_USER_ID
          return REPOST_USER_ID;
        case 20: // POST_USER_ID
          return POST_USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __POSITIONID_ISSET_ID = 1;
  private static final int __APPID_ISSET_ID = 2;
  private static final int __PRESENTEEID_ISSET_ID = 3;
  private static final int __DEPTH_ISSET_ID = 4;
  private static final int __RECOMID2_ISSET_ID = 5;
  private static final int __RECOMID_ISSET_ID = 6;
  private static final int __ISRECOM_ISSET_ID = 7;
  private static final int __PRESENTEEUSERID_ISSET_ID = 8;
  private static final int __REPOSTUSERID_ISSET_ID = 9;
  private static final int __POSTUSERID_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.POSITION_ID,_Fields.APP_ID,_Fields.PRESENTEE_ID,_Fields.CLICK_TIME,_Fields.DEPTH,_Fields.RECOM_ID2,_Fields.RECOM_ID,_Fields.REALNAME,_Fields.COMPANY,_Fields.POSITION,_Fields.RECOM_REASON,_Fields.RECOM_TIME,_Fields.IS_RECOM,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.MOBILE,_Fields.PRESENTEE_USER_ID,_Fields.REPOST_USER_ID,_Fields.POST_USER_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("positionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("appId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRESENTEE_ID, new org.apache.thrift.meta_data.FieldMetaData("presenteeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLICK_TIME, new org.apache.thrift.meta_data.FieldMetaData("clickTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPTH, new org.apache.thrift.meta_data.FieldMetaData("depth", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_ID2, new org.apache.thrift.meta_data.FieldMetaData("recomId2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOM_ID, new org.apache.thrift.meta_data.FieldMetaData("recomId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REALNAME, new org.apache.thrift.meta_data.FieldMetaData("realname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY, new org.apache.thrift.meta_data.FieldMetaData("company", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_REASON, new org.apache.thrift.meta_data.FieldMetaData("recomReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOM_TIME, new org.apache.thrift.meta_data.FieldMetaData("recomTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RECOM, new org.apache.thrift.meta_data.FieldMetaData("isRecom", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRESENTEE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("presenteeUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REPOST_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("repostUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POST_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("postUserId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CandidateRecomRecordDO.class, metaDataMap);
  }

  public CandidateRecomRecordDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CandidateRecomRecordDO(CandidateRecomRecordDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.positionId = other.positionId;
    this.appId = other.appId;
    this.presenteeId = other.presenteeId;
    if (other.isSetClickTime()) {
      this.clickTime = other.clickTime;
    }
    this.depth = other.depth;
    this.recomId2 = other.recomId2;
    this.recomId = other.recomId;
    if (other.isSetRealname()) {
      this.realname = other.realname;
    }
    if (other.isSetCompany()) {
      this.company = other.company;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetRecomReason()) {
      this.recomReason = other.recomReason;
    }
    if (other.isSetRecomTime()) {
      this.recomTime = other.recomTime;
    }
    this.isRecom = other.isRecom;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    this.presenteeUserId = other.presenteeUserId;
    this.repostUserId = other.repostUserId;
    this.postUserId = other.postUserId;
  }

  public CandidateRecomRecordDO deepCopy() {
    return new CandidateRecomRecordDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setPositionIdIsSet(false);
    this.positionId = 0;
    setAppIdIsSet(false);
    this.appId = 0;
    setPresenteeIdIsSet(false);
    this.presenteeId = 0;
    this.clickTime = null;
    setDepthIsSet(false);
    this.depth = 0;
    setRecomId2IsSet(false);
    this.recomId2 = 0;
    setRecomIdIsSet(false);
    this.recomId = 0;
    this.realname = null;
    this.company = null;
    this.position = null;
    this.recomReason = null;
    this.recomTime = null;
    setIsRecomIsSet(false);
    this.isRecom = 0;
    this.createTime = null;
    this.updateTime = null;
    this.mobile = null;
    setPresenteeUserIdIsSet(false);
    this.presenteeUserId = 0;
    setRepostUserIdIsSet(false);
    this.repostUserId = 0;
    setPostUserIdIsSet(false);
    this.postUserId = 0;
  }

  public int getId() {
    return this.id;
  }

  public CandidateRecomRecordDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getPositionId() {
    return this.positionId;
  }

  public CandidateRecomRecordDO setPositionId(int positionId) {
    this.positionId = positionId;
    setPositionIdIsSet(true);
    return this;
  }

  public void unsetPositionId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  /** Returns true if field positionId is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITIONID_ISSET_ID);
  }

  public void setPositionIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITIONID_ISSET_ID, value);
  }

  public int getAppId() {
    return this.appId;
  }

  public CandidateRecomRecordDO setAppId(int appId) {
    this.appId = appId;
    setAppIdIsSet(true);
    return this;
  }

  public void unsetAppId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPID_ISSET_ID);
  }

  /** Returns true if field appId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPID_ISSET_ID);
  }

  public void setAppIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPID_ISSET_ID, value);
  }

  public int getPresenteeId() {
    return this.presenteeId;
  }

  public CandidateRecomRecordDO setPresenteeId(int presenteeId) {
    this.presenteeId = presenteeId;
    setPresenteeIdIsSet(true);
    return this;
  }

  public void unsetPresenteeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRESENTEEID_ISSET_ID);
  }

  /** Returns true if field presenteeId is set (has been assigned a value) and false otherwise */
  public boolean isSetPresenteeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRESENTEEID_ISSET_ID);
  }

  public void setPresenteeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRESENTEEID_ISSET_ID, value);
  }

  public java.lang.String getClickTime() {
    return this.clickTime;
  }

  public CandidateRecomRecordDO setClickTime(java.lang.String clickTime) {
    this.clickTime = clickTime;
    return this;
  }

  public void unsetClickTime() {
    this.clickTime = null;
  }

  /** Returns true if field clickTime is set (has been assigned a value) and false otherwise */
  public boolean isSetClickTime() {
    return this.clickTime != null;
  }

  public void setClickTimeIsSet(boolean value) {
    if (!value) {
      this.clickTime = null;
    }
  }

  public int getDepth() {
    return this.depth;
  }

  public CandidateRecomRecordDO setDepth(int depth) {
    this.depth = depth;
    setDepthIsSet(true);
    return this;
  }

  public void unsetDepth() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEPTH_ISSET_ID);
  }

  /** Returns true if field depth is set (has been assigned a value) and false otherwise */
  public boolean isSetDepth() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEPTH_ISSET_ID);
  }

  public void setDepthIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEPTH_ISSET_ID, value);
  }

  public int getRecomId2() {
    return this.recomId2;
  }

  public CandidateRecomRecordDO setRecomId2(int recomId2) {
    this.recomId2 = recomId2;
    setRecomId2IsSet(true);
    return this;
  }

  public void unsetRecomId2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMID2_ISSET_ID);
  }

  /** Returns true if field recomId2 is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomId2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMID2_ISSET_ID);
  }

  public void setRecomId2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMID2_ISSET_ID, value);
  }

  public int getRecomId() {
    return this.recomId;
  }

  public CandidateRecomRecordDO setRecomId(int recomId) {
    this.recomId = recomId;
    setRecomIdIsSet(true);
    return this;
  }

  public void unsetRecomId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMID_ISSET_ID);
  }

  /** Returns true if field recomId is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMID_ISSET_ID);
  }

  public void setRecomIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMID_ISSET_ID, value);
  }

  public java.lang.String getRealname() {
    return this.realname;
  }

  public CandidateRecomRecordDO setRealname(java.lang.String realname) {
    this.realname = realname;
    return this;
  }

  public void unsetRealname() {
    this.realname = null;
  }

  /** Returns true if field realname is set (has been assigned a value) and false otherwise */
  public boolean isSetRealname() {
    return this.realname != null;
  }

  public void setRealnameIsSet(boolean value) {
    if (!value) {
      this.realname = null;
    }
  }

  public java.lang.String getCompany() {
    return this.company;
  }

  public CandidateRecomRecordDO setCompany(java.lang.String company) {
    this.company = company;
    return this;
  }

  public void unsetCompany() {
    this.company = null;
  }

  /** Returns true if field company is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany() {
    return this.company != null;
  }

  public void setCompanyIsSet(boolean value) {
    if (!value) {
      this.company = null;
    }
  }

  public java.lang.String getPosition() {
    return this.position;
  }

  public CandidateRecomRecordDO setPosition(java.lang.String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public java.lang.String getRecomReason() {
    return this.recomReason;
  }

  public CandidateRecomRecordDO setRecomReason(java.lang.String recomReason) {
    this.recomReason = recomReason;
    return this;
  }

  public void unsetRecomReason() {
    this.recomReason = null;
  }

  /** Returns true if field recomReason is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomReason() {
    return this.recomReason != null;
  }

  public void setRecomReasonIsSet(boolean value) {
    if (!value) {
      this.recomReason = null;
    }
  }

  public java.lang.String getRecomTime() {
    return this.recomTime;
  }

  public CandidateRecomRecordDO setRecomTime(java.lang.String recomTime) {
    this.recomTime = recomTime;
    return this;
  }

  public void unsetRecomTime() {
    this.recomTime = null;
  }

  /** Returns true if field recomTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRecomTime() {
    return this.recomTime != null;
  }

  public void setRecomTimeIsSet(boolean value) {
    if (!value) {
      this.recomTime = null;
    }
  }

  public int getIsRecom() {
    return this.isRecom;
  }

  public CandidateRecomRecordDO setIsRecom(int isRecom) {
    this.isRecom = isRecom;
    setIsRecomIsSet(true);
    return this;
  }

  public void unsetIsRecom() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISRECOM_ISSET_ID);
  }

  /** Returns true if field isRecom is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRecom() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISRECOM_ISSET_ID);
  }

  public void setIsRecomIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISRECOM_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public CandidateRecomRecordDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public java.lang.String getUpdateTime() {
    return this.updateTime;
  }

  public CandidateRecomRecordDO setUpdateTime(java.lang.String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public java.lang.String getMobile() {
    return this.mobile;
  }

  public CandidateRecomRecordDO setMobile(java.lang.String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public int getPresenteeUserId() {
    return this.presenteeUserId;
  }

  public CandidateRecomRecordDO setPresenteeUserId(int presenteeUserId) {
    this.presenteeUserId = presenteeUserId;
    setPresenteeUserIdIsSet(true);
    return this;
  }

  public void unsetPresenteeUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID);
  }

  /** Returns true if field presenteeUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPresenteeUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID);
  }

  public void setPresenteeUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRESENTEEUSERID_ISSET_ID, value);
  }

  public int getRepostUserId() {
    return this.repostUserId;
  }

  public CandidateRecomRecordDO setRepostUserId(int repostUserId) {
    this.repostUserId = repostUserId;
    setRepostUserIdIsSet(true);
    return this;
  }

  public void unsetRepostUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REPOSTUSERID_ISSET_ID);
  }

  /** Returns true if field repostUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetRepostUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REPOSTUSERID_ISSET_ID);
  }

  public void setRepostUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REPOSTUSERID_ISSET_ID, value);
  }

  public int getPostUserId() {
    return this.postUserId;
  }

  public CandidateRecomRecordDO setPostUserId(int postUserId) {
    this.postUserId = postUserId;
    setPostUserIdIsSet(true);
    return this;
  }

  public void unsetPostUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  /** Returns true if field postUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetPostUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSTUSERID_ISSET_ID);
  }

  public void setPostUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSTUSERID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPositionId();
      } else {
        setPositionId((java.lang.Integer)value);
      }
      break;

    case APP_ID:
      if (value == null) {
        unsetAppId();
      } else {
        setAppId((java.lang.Integer)value);
      }
      break;

    case PRESENTEE_ID:
      if (value == null) {
        unsetPresenteeId();
      } else {
        setPresenteeId((java.lang.Integer)value);
      }
      break;

    case CLICK_TIME:
      if (value == null) {
        unsetClickTime();
      } else {
        setClickTime((java.lang.String)value);
      }
      break;

    case DEPTH:
      if (value == null) {
        unsetDepth();
      } else {
        setDepth((java.lang.Integer)value);
      }
      break;

    case RECOM_ID2:
      if (value == null) {
        unsetRecomId2();
      } else {
        setRecomId2((java.lang.Integer)value);
      }
      break;

    case RECOM_ID:
      if (value == null) {
        unsetRecomId();
      } else {
        setRecomId((java.lang.Integer)value);
      }
      break;

    case REALNAME:
      if (value == null) {
        unsetRealname();
      } else {
        setRealname((java.lang.String)value);
      }
      break;

    case COMPANY:
      if (value == null) {
        unsetCompany();
      } else {
        setCompany((java.lang.String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((java.lang.String)value);
      }
      break;

    case RECOM_REASON:
      if (value == null) {
        unsetRecomReason();
      } else {
        setRecomReason((java.lang.String)value);
      }
      break;

    case RECOM_TIME:
      if (value == null) {
        unsetRecomTime();
      } else {
        setRecomTime((java.lang.String)value);
      }
      break;

    case IS_RECOM:
      if (value == null) {
        unsetIsRecom();
      } else {
        setIsRecom((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((java.lang.String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((java.lang.String)value);
      }
      break;

    case PRESENTEE_USER_ID:
      if (value == null) {
        unsetPresenteeUserId();
      } else {
        setPresenteeUserId((java.lang.Integer)value);
      }
      break;

    case REPOST_USER_ID:
      if (value == null) {
        unsetRepostUserId();
      } else {
        setRepostUserId((java.lang.Integer)value);
      }
      break;

    case POST_USER_ID:
      if (value == null) {
        unsetPostUserId();
      } else {
        setPostUserId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case POSITION_ID:
      return getPositionId();

    case APP_ID:
      return getAppId();

    case PRESENTEE_ID:
      return getPresenteeId();

    case CLICK_TIME:
      return getClickTime();

    case DEPTH:
      return getDepth();

    case RECOM_ID2:
      return getRecomId2();

    case RECOM_ID:
      return getRecomId();

    case REALNAME:
      return getRealname();

    case COMPANY:
      return getCompany();

    case POSITION:
      return getPosition();

    case RECOM_REASON:
      return getRecomReason();

    case RECOM_TIME:
      return getRecomTime();

    case IS_RECOM:
      return getIsRecom();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_TIME:
      return getUpdateTime();

    case MOBILE:
      return getMobile();

    case PRESENTEE_USER_ID:
      return getPresenteeUserId();

    case REPOST_USER_ID:
      return getRepostUserId();

    case POST_USER_ID:
      return getPostUserId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case POSITION_ID:
      return isSetPositionId();
    case APP_ID:
      return isSetAppId();
    case PRESENTEE_ID:
      return isSetPresenteeId();
    case CLICK_TIME:
      return isSetClickTime();
    case DEPTH:
      return isSetDepth();
    case RECOM_ID2:
      return isSetRecomId2();
    case RECOM_ID:
      return isSetRecomId();
    case REALNAME:
      return isSetRealname();
    case COMPANY:
      return isSetCompany();
    case POSITION:
      return isSetPosition();
    case RECOM_REASON:
      return isSetRecomReason();
    case RECOM_TIME:
      return isSetRecomTime();
    case IS_RECOM:
      return isSetIsRecom();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case MOBILE:
      return isSetMobile();
    case PRESENTEE_USER_ID:
      return isSetPresenteeUserId();
    case REPOST_USER_ID:
      return isSetRepostUserId();
    case POST_USER_ID:
      return isSetPostUserId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CandidateRecomRecordDO)
      return this.equals((CandidateRecomRecordDO)that);
    return false;
  }

  public boolean equals(CandidateRecomRecordDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_positionId = true && this.isSetPositionId();
    boolean that_present_positionId = true && that.isSetPositionId();
    if (this_present_positionId || that_present_positionId) {
      if (!(this_present_positionId && that_present_positionId))
        return false;
      if (this.positionId != that.positionId)
        return false;
    }

    boolean this_present_appId = true && this.isSetAppId();
    boolean that_present_appId = true && that.isSetAppId();
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (this.appId != that.appId)
        return false;
    }

    boolean this_present_presenteeId = true && this.isSetPresenteeId();
    boolean that_present_presenteeId = true && that.isSetPresenteeId();
    if (this_present_presenteeId || that_present_presenteeId) {
      if (!(this_present_presenteeId && that_present_presenteeId))
        return false;
      if (this.presenteeId != that.presenteeId)
        return false;
    }

    boolean this_present_clickTime = true && this.isSetClickTime();
    boolean that_present_clickTime = true && that.isSetClickTime();
    if (this_present_clickTime || that_present_clickTime) {
      if (!(this_present_clickTime && that_present_clickTime))
        return false;
      if (!this.clickTime.equals(that.clickTime))
        return false;
    }

    boolean this_present_depth = true && this.isSetDepth();
    boolean that_present_depth = true && that.isSetDepth();
    if (this_present_depth || that_present_depth) {
      if (!(this_present_depth && that_present_depth))
        return false;
      if (this.depth != that.depth)
        return false;
    }

    boolean this_present_recomId2 = true && this.isSetRecomId2();
    boolean that_present_recomId2 = true && that.isSetRecomId2();
    if (this_present_recomId2 || that_present_recomId2) {
      if (!(this_present_recomId2 && that_present_recomId2))
        return false;
      if (this.recomId2 != that.recomId2)
        return false;
    }

    boolean this_present_recomId = true && this.isSetRecomId();
    boolean that_present_recomId = true && that.isSetRecomId();
    if (this_present_recomId || that_present_recomId) {
      if (!(this_present_recomId && that_present_recomId))
        return false;
      if (this.recomId != that.recomId)
        return false;
    }

    boolean this_present_realname = true && this.isSetRealname();
    boolean that_present_realname = true && that.isSetRealname();
    if (this_present_realname || that_present_realname) {
      if (!(this_present_realname && that_present_realname))
        return false;
      if (!this.realname.equals(that.realname))
        return false;
    }

    boolean this_present_company = true && this.isSetCompany();
    boolean that_present_company = true && that.isSetCompany();
    if (this_present_company || that_present_company) {
      if (!(this_present_company && that_present_company))
        return false;
      if (!this.company.equals(that.company))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_recomReason = true && this.isSetRecomReason();
    boolean that_present_recomReason = true && that.isSetRecomReason();
    if (this_present_recomReason || that_present_recomReason) {
      if (!(this_present_recomReason && that_present_recomReason))
        return false;
      if (!this.recomReason.equals(that.recomReason))
        return false;
    }

    boolean this_present_recomTime = true && this.isSetRecomTime();
    boolean that_present_recomTime = true && that.isSetRecomTime();
    if (this_present_recomTime || that_present_recomTime) {
      if (!(this_present_recomTime && that_present_recomTime))
        return false;
      if (!this.recomTime.equals(that.recomTime))
        return false;
    }

    boolean this_present_isRecom = true && this.isSetIsRecom();
    boolean that_present_isRecom = true && that.isSetIsRecom();
    if (this_present_isRecom || that_present_isRecom) {
      if (!(this_present_isRecom && that_present_isRecom))
        return false;
      if (this.isRecom != that.isRecom)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_presenteeUserId = true && this.isSetPresenteeUserId();
    boolean that_present_presenteeUserId = true && that.isSetPresenteeUserId();
    if (this_present_presenteeUserId || that_present_presenteeUserId) {
      if (!(this_present_presenteeUserId && that_present_presenteeUserId))
        return false;
      if (this.presenteeUserId != that.presenteeUserId)
        return false;
    }

    boolean this_present_repostUserId = true && this.isSetRepostUserId();
    boolean that_present_repostUserId = true && that.isSetRepostUserId();
    if (this_present_repostUserId || that_present_repostUserId) {
      if (!(this_present_repostUserId && that_present_repostUserId))
        return false;
      if (this.repostUserId != that.repostUserId)
        return false;
    }

    boolean this_present_postUserId = true && this.isSetPostUserId();
    boolean that_present_postUserId = true && that.isSetPostUserId();
    if (this_present_postUserId || that_present_postUserId) {
      if (!(this_present_postUserId && that_present_postUserId))
        return false;
      if (this.postUserId != that.postUserId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetPositionId()) ? 131071 : 524287);
    if (isSetPositionId())
      hashCode = hashCode * 8191 + positionId;

    hashCode = hashCode * 8191 + ((isSetAppId()) ? 131071 : 524287);
    if (isSetAppId())
      hashCode = hashCode * 8191 + appId;

    hashCode = hashCode * 8191 + ((isSetPresenteeId()) ? 131071 : 524287);
    if (isSetPresenteeId())
      hashCode = hashCode * 8191 + presenteeId;

    hashCode = hashCode * 8191 + ((isSetClickTime()) ? 131071 : 524287);
    if (isSetClickTime())
      hashCode = hashCode * 8191 + clickTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetDepth()) ? 131071 : 524287);
    if (isSetDepth())
      hashCode = hashCode * 8191 + depth;

    hashCode = hashCode * 8191 + ((isSetRecomId2()) ? 131071 : 524287);
    if (isSetRecomId2())
      hashCode = hashCode * 8191 + recomId2;

    hashCode = hashCode * 8191 + ((isSetRecomId()) ? 131071 : 524287);
    if (isSetRecomId())
      hashCode = hashCode * 8191 + recomId;

    hashCode = hashCode * 8191 + ((isSetRealname()) ? 131071 : 524287);
    if (isSetRealname())
      hashCode = hashCode * 8191 + realname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany()) ? 131071 : 524287);
    if (isSetCompany())
      hashCode = hashCode * 8191 + company.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecomReason()) ? 131071 : 524287);
    if (isSetRecomReason())
      hashCode = hashCode * 8191 + recomReason.hashCode();

    hashCode = hashCode * 8191 + ((isSetRecomTime()) ? 131071 : 524287);
    if (isSetRecomTime())
      hashCode = hashCode * 8191 + recomTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsRecom()) ? 131071 : 524287);
    if (isSetIsRecom())
      hashCode = hashCode * 8191 + isRecom;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateTime()) ? 131071 : 524287);
    if (isSetUpdateTime())
      hashCode = hashCode * 8191 + updateTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetPresenteeUserId()) ? 131071 : 524287);
    if (isSetPresenteeUserId())
      hashCode = hashCode * 8191 + presenteeUserId;

    hashCode = hashCode * 8191 + ((isSetRepostUserId()) ? 131071 : 524287);
    if (isSetRepostUserId())
      hashCode = hashCode * 8191 + repostUserId;

    hashCode = hashCode * 8191 + ((isSetPostUserId()) ? 131071 : 524287);
    if (isSetPostUserId())
      hashCode = hashCode * 8191 + postUserId;

    return hashCode;
  }

  @Override
  public int compareTo(CandidateRecomRecordDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPositionId()).compareTo(other.isSetPositionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionId, other.positionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppId()).compareTo(other.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appId, other.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPresenteeId()).compareTo(other.isSetPresenteeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPresenteeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.presenteeId, other.presenteeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClickTime()).compareTo(other.isSetClickTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickTime, other.clickTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDepth()).compareTo(other.isSetDepth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDepth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.depth, other.depth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomId2()).compareTo(other.isSetRecomId2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomId2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomId2, other.recomId2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomId()).compareTo(other.isSetRecomId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomId, other.recomId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRealname()).compareTo(other.isSetRealname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRealname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.realname, other.realname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany()).compareTo(other.isSetCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company, other.company);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomReason()).compareTo(other.isSetRecomReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomReason, other.recomReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecomTime()).compareTo(other.isSetRecomTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecomTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recomTime, other.recomTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsRecom()).compareTo(other.isSetIsRecom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRecom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRecom, other.isRecom);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPresenteeUserId()).compareTo(other.isSetPresenteeUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPresenteeUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.presenteeUserId, other.presenteeUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRepostUserId()).compareTo(other.isSetRepostUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRepostUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.repostUserId, other.repostUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPostUserId()).compareTo(other.isSetPostUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.postUserId, other.postUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CandidateRecomRecordDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetPositionId()) {
      if (!first) sb.append(", ");
      sb.append("positionId:");
      sb.append(this.positionId);
      first = false;
    }
    if (isSetAppId()) {
      if (!first) sb.append(", ");
      sb.append("appId:");
      sb.append(this.appId);
      first = false;
    }
    if (isSetPresenteeId()) {
      if (!first) sb.append(", ");
      sb.append("presenteeId:");
      sb.append(this.presenteeId);
      first = false;
    }
    if (isSetClickTime()) {
      if (!first) sb.append(", ");
      sb.append("clickTime:");
      if (this.clickTime == null) {
        sb.append("null");
      } else {
        sb.append(this.clickTime);
      }
      first = false;
    }
    if (isSetDepth()) {
      if (!first) sb.append(", ");
      sb.append("depth:");
      sb.append(this.depth);
      first = false;
    }
    if (isSetRecomId2()) {
      if (!first) sb.append(", ");
      sb.append("recomId2:");
      sb.append(this.recomId2);
      first = false;
    }
    if (isSetRecomId()) {
      if (!first) sb.append(", ");
      sb.append("recomId:");
      sb.append(this.recomId);
      first = false;
    }
    if (isSetRealname()) {
      if (!first) sb.append(", ");
      sb.append("realname:");
      if (this.realname == null) {
        sb.append("null");
      } else {
        sb.append(this.realname);
      }
      first = false;
    }
    if (isSetCompany()) {
      if (!first) sb.append(", ");
      sb.append("company:");
      if (this.company == null) {
        sb.append("null");
      } else {
        sb.append(this.company);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetRecomReason()) {
      if (!first) sb.append(", ");
      sb.append("recomReason:");
      if (this.recomReason == null) {
        sb.append("null");
      } else {
        sb.append(this.recomReason);
      }
      first = false;
    }
    if (isSetRecomTime()) {
      if (!first) sb.append(", ");
      sb.append("recomTime:");
      if (this.recomTime == null) {
        sb.append("null");
      } else {
        sb.append(this.recomTime);
      }
      first = false;
    }
    if (isSetIsRecom()) {
      if (!first) sb.append(", ");
      sb.append("isRecom:");
      sb.append(this.isRecom);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetUpdateTime()) {
      if (!first) sb.append(", ");
      sb.append("updateTime:");
      if (this.updateTime == null) {
        sb.append("null");
      } else {
        sb.append(this.updateTime);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetPresenteeUserId()) {
      if (!first) sb.append(", ");
      sb.append("presenteeUserId:");
      sb.append(this.presenteeUserId);
      first = false;
    }
    if (isSetRepostUserId()) {
      if (!first) sb.append(", ");
      sb.append("repostUserId:");
      sb.append(this.repostUserId);
      first = false;
    }
    if (isSetPostUserId()) {
      if (!first) sb.append(", ");
      sb.append("postUserId:");
      sb.append(this.postUserId);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CandidateRecomRecordDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateRecomRecordDOStandardScheme getScheme() {
      return new CandidateRecomRecordDOStandardScheme();
    }
  }

  private static class CandidateRecomRecordDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<CandidateRecomRecordDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CandidateRecomRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.positionId = iprot.readI32();
              struct.setPositionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.appId = iprot.readI32();
              struct.setAppIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRESENTEE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.presenteeId = iprot.readI32();
              struct.setPresenteeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLICK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickTime = iprot.readString();
              struct.setClickTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DEPTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.depth = iprot.readI32();
              struct.setDepthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RECOM_ID2
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recomId2 = iprot.readI32();
              struct.setRecomId2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RECOM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recomId = iprot.readI32();
              struct.setRecomIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // REALNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.realname = iprot.readString();
              struct.setRealnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.company = iprot.readString();
              struct.setCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RECOM_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomReason = iprot.readString();
              struct.setRecomReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // RECOM_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recomTime = iprot.readString();
              struct.setRecomTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // IS_RECOM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isRecom = iprot.readI32();
              struct.setIsRecomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PRESENTEE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.presenteeUserId = iprot.readI32();
              struct.setPresenteeUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // REPOST_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.repostUserId = iprot.readI32();
              struct.setRepostUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // POST_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.postUserId = iprot.readI32();
              struct.setPostUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CandidateRecomRecordDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPositionId()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.positionId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAppId()) {
        oprot.writeFieldBegin(APP_ID_FIELD_DESC);
        oprot.writeI32(struct.appId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPresenteeId()) {
        oprot.writeFieldBegin(PRESENTEE_ID_FIELD_DESC);
        oprot.writeI32(struct.presenteeId);
        oprot.writeFieldEnd();
      }
      if (struct.clickTime != null) {
        if (struct.isSetClickTime()) {
          oprot.writeFieldBegin(CLICK_TIME_FIELD_DESC);
          oprot.writeString(struct.clickTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDepth()) {
        oprot.writeFieldBegin(DEPTH_FIELD_DESC);
        oprot.writeI32(struct.depth);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecomId2()) {
        oprot.writeFieldBegin(RECOM_ID2_FIELD_DESC);
        oprot.writeI32(struct.recomId2);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecomId()) {
        oprot.writeFieldBegin(RECOM_ID_FIELD_DESC);
        oprot.writeI32(struct.recomId);
        oprot.writeFieldEnd();
      }
      if (struct.realname != null) {
        if (struct.isSetRealname()) {
          oprot.writeFieldBegin(REALNAME_FIELD_DESC);
          oprot.writeString(struct.realname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.company != null) {
        if (struct.isSetCompany()) {
          oprot.writeFieldBegin(COMPANY_FIELD_DESC);
          oprot.writeString(struct.company);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recomReason != null) {
        if (struct.isSetRecomReason()) {
          oprot.writeFieldBegin(RECOM_REASON_FIELD_DESC);
          oprot.writeString(struct.recomReason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.recomTime != null) {
        if (struct.isSetRecomTime()) {
          oprot.writeFieldBegin(RECOM_TIME_FIELD_DESC);
          oprot.writeString(struct.recomTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsRecom()) {
        oprot.writeFieldBegin(IS_RECOM_FIELD_DESC);
        oprot.writeI32(struct.isRecom);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.updateTime != null) {
        if (struct.isSetUpdateTime()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.updateTime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPresenteeUserId()) {
        oprot.writeFieldBegin(PRESENTEE_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.presenteeUserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRepostUserId()) {
        oprot.writeFieldBegin(REPOST_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.repostUserId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPostUserId()) {
        oprot.writeFieldBegin(POST_USER_ID_FIELD_DESC);
        oprot.writeI32(struct.postUserId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CandidateRecomRecordDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CandidateRecomRecordDOTupleScheme getScheme() {
      return new CandidateRecomRecordDOTupleScheme();
    }
  }

  private static class CandidateRecomRecordDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<CandidateRecomRecordDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CandidateRecomRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetPositionId()) {
        optionals.set(1);
      }
      if (struct.isSetAppId()) {
        optionals.set(2);
      }
      if (struct.isSetPresenteeId()) {
        optionals.set(3);
      }
      if (struct.isSetClickTime()) {
        optionals.set(4);
      }
      if (struct.isSetDepth()) {
        optionals.set(5);
      }
      if (struct.isSetRecomId2()) {
        optionals.set(6);
      }
      if (struct.isSetRecomId()) {
        optionals.set(7);
      }
      if (struct.isSetRealname()) {
        optionals.set(8);
      }
      if (struct.isSetCompany()) {
        optionals.set(9);
      }
      if (struct.isSetPosition()) {
        optionals.set(10);
      }
      if (struct.isSetRecomReason()) {
        optionals.set(11);
      }
      if (struct.isSetRecomTime()) {
        optionals.set(12);
      }
      if (struct.isSetIsRecom()) {
        optionals.set(13);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(14);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(15);
      }
      if (struct.isSetMobile()) {
        optionals.set(16);
      }
      if (struct.isSetPresenteeUserId()) {
        optionals.set(17);
      }
      if (struct.isSetRepostUserId()) {
        optionals.set(18);
      }
      if (struct.isSetPostUserId()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetPositionId()) {
        oprot.writeI32(struct.positionId);
      }
      if (struct.isSetAppId()) {
        oprot.writeI32(struct.appId);
      }
      if (struct.isSetPresenteeId()) {
        oprot.writeI32(struct.presenteeId);
      }
      if (struct.isSetClickTime()) {
        oprot.writeString(struct.clickTime);
      }
      if (struct.isSetDepth()) {
        oprot.writeI32(struct.depth);
      }
      if (struct.isSetRecomId2()) {
        oprot.writeI32(struct.recomId2);
      }
      if (struct.isSetRecomId()) {
        oprot.writeI32(struct.recomId);
      }
      if (struct.isSetRealname()) {
        oprot.writeString(struct.realname);
      }
      if (struct.isSetCompany()) {
        oprot.writeString(struct.company);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetRecomReason()) {
        oprot.writeString(struct.recomReason);
      }
      if (struct.isSetRecomTime()) {
        oprot.writeString(struct.recomTime);
      }
      if (struct.isSetIsRecom()) {
        oprot.writeI32(struct.isRecom);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetPresenteeUserId()) {
        oprot.writeI32(struct.presenteeUserId);
      }
      if (struct.isSetRepostUserId()) {
        oprot.writeI32(struct.repostUserId);
      }
      if (struct.isSetPostUserId()) {
        oprot.writeI32(struct.postUserId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CandidateRecomRecordDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.positionId = iprot.readI32();
        struct.setPositionIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.appId = iprot.readI32();
        struct.setAppIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.presenteeId = iprot.readI32();
        struct.setPresenteeIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.clickTime = iprot.readString();
        struct.setClickTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.depth = iprot.readI32();
        struct.setDepthIsSet(true);
      }
      if (incoming.get(6)) {
        struct.recomId2 = iprot.readI32();
        struct.setRecomId2IsSet(true);
      }
      if (incoming.get(7)) {
        struct.recomId = iprot.readI32();
        struct.setRecomIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.realname = iprot.readString();
        struct.setRealnameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.company = iprot.readString();
        struct.setCompanyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(11)) {
        struct.recomReason = iprot.readString();
        struct.setRecomReasonIsSet(true);
      }
      if (incoming.get(12)) {
        struct.recomTime = iprot.readString();
        struct.setRecomTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.isRecom = iprot.readI32();
        struct.setIsRecomIsSet(true);
      }
      if (incoming.get(14)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(17)) {
        struct.presenteeUserId = iprot.readI32();
        struct.setPresenteeUserIdIsSet(true);
      }
      if (incoming.get(18)) {
        struct.repostUserId = iprot.readI32();
        struct.setRepostUserIdIsSet(true);
      }
      if (incoming.get(19)) {
        struct.postUserId = iprot.readI32();
        struct.setPostUserIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

