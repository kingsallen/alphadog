/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-6-4")
public class Basic implements org.apache.thrift.TBase<Basic, Basic._Fields>, java.io.Serializable, Cloneable, Comparable<Basic> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Basic");

  private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profile_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("gender", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField NATIONALITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("nationality_code", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField NATIONALITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("nationality_name", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("city_code", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("city_name", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BIRTH_FIELD_DESC = new org.apache.thrift.protocol.TField("birth", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField WEIXIN_FIELD_DESC = new org.apache.thrift.protocol.TField("weixin", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField QQ_FIELD_DESC = new org.apache.thrift.protocol.TField("qq", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MOTTO_FIELD_DESC = new org.apache.thrift.protocol.TField("motto", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SELF_INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("self_introduction", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BasicStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BasicTupleSchemeFactory());
  }

  public int profile_id; // required
  public String name; // required
  public short gender; // required
  public int nationality_code; // required
  public String nationality_name; // required
  public int city_code; // required
  public String city_name; // required
  public String birth; // required
  public String weixin; // required
  public String qq; // required
  public String motto; // required
  public String self_introduction; // required
  public String create_time; // required
  public String update_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PROFILE_ID((short)1, "profile_id"),
    NAME((short)2, "name"),
    GENDER((short)3, "gender"),
    NATIONALITY_CODE((short)4, "nationality_code"),
    NATIONALITY_NAME((short)5, "nationality_name"),
    CITY_CODE((short)6, "city_code"),
    CITY_NAME((short)7, "city_name"),
    BIRTH((short)8, "birth"),
    WEIXIN((short)9, "weixin"),
    QQ((short)10, "qq"),
    MOTTO((short)11, "motto"),
    SELF_INTRODUCTION((short)12, "self_introduction"),
    CREATE_TIME((short)13, "create_time"),
    UPDATE_TIME((short)14, "update_time");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROFILE_ID
          return PROFILE_ID;
        case 2: // NAME
          return NAME;
        case 3: // GENDER
          return GENDER;
        case 4: // NATIONALITY_CODE
          return NATIONALITY_CODE;
        case 5: // NATIONALITY_NAME
          return NATIONALITY_NAME;
        case 6: // CITY_CODE
          return CITY_CODE;
        case 7: // CITY_NAME
          return CITY_NAME;
        case 8: // BIRTH
          return BIRTH;
        case 9: // WEIXIN
          return WEIXIN;
        case 10: // QQ
          return QQ;
        case 11: // MOTTO
          return MOTTO;
        case 12: // SELF_INTRODUCTION
          return SELF_INTRODUCTION;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // UPDATE_TIME
          return UPDATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PROFILE_ID_ISSET_ID = 0;
  private static final int __GENDER_ISSET_ID = 1;
  private static final int __NATIONALITY_CODE_ISSET_ID = 2;
  private static final int __CITY_CODE_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profile_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GENDER, new org.apache.thrift.meta_data.FieldMetaData("gender", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.NATIONALITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("nationality_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NATIONALITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("nationality_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("city_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("city_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIRTH, new org.apache.thrift.meta_data.FieldMetaData("birth", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.WEIXIN, new org.apache.thrift.meta_data.FieldMetaData("weixin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QQ, new org.apache.thrift.meta_data.FieldMetaData("qq", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOTTO, new org.apache.thrift.meta_data.FieldMetaData("motto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELF_INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("self_introduction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Basic.class, metaDataMap);
  }

  public Basic() {
  }

  public Basic(
    int profile_id,
    String name,
    short gender,
    int nationality_code,
    String nationality_name,
    int city_code,
    String city_name,
    String birth,
    String weixin,
    String qq,
    String motto,
    String self_introduction,
    String create_time,
    String update_time)
  {
    this();
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    this.name = name;
    this.gender = gender;
    setGenderIsSet(true);
    this.nationality_code = nationality_code;
    setNationality_codeIsSet(true);
    this.nationality_name = nationality_name;
    this.city_code = city_code;
    setCity_codeIsSet(true);
    this.city_name = city_name;
    this.birth = birth;
    this.weixin = weixin;
    this.qq = qq;
    this.motto = motto;
    this.self_introduction = self_introduction;
    this.create_time = create_time;
    this.update_time = update_time;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Basic(Basic other) {
    __isset_bitfield = other.__isset_bitfield;
    this.profile_id = other.profile_id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.gender = other.gender;
    this.nationality_code = other.nationality_code;
    if (other.isSetNationality_name()) {
      this.nationality_name = other.nationality_name;
    }
    this.city_code = other.city_code;
    if (other.isSetCity_name()) {
      this.city_name = other.city_name;
    }
    if (other.isSetBirth()) {
      this.birth = other.birth;
    }
    if (other.isSetWeixin()) {
      this.weixin = other.weixin;
    }
    if (other.isSetQq()) {
      this.qq = other.qq;
    }
    if (other.isSetMotto()) {
      this.motto = other.motto;
    }
    if (other.isSetSelf_introduction()) {
      this.self_introduction = other.self_introduction;
    }
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
  }

  public Basic deepCopy() {
    return new Basic(this);
  }

  @Override
  public void clear() {
    setProfile_idIsSet(false);
    this.profile_id = 0;
    this.name = null;
    setGenderIsSet(false);
    this.gender = 0;
    setNationality_codeIsSet(false);
    this.nationality_code = 0;
    this.nationality_name = null;
    setCity_codeIsSet(false);
    this.city_code = 0;
    this.city_name = null;
    this.birth = null;
    this.weixin = null;
    this.qq = null;
    this.motto = null;
    this.self_introduction = null;
    this.create_time = null;
    this.update_time = null;
  }

  public int getProfile_id() {
    return this.profile_id;
  }

  public Basic setProfile_id(int profile_id) {
    this.profile_id = profile_id;
    setProfile_idIsSet(true);
    return this;
  }

  public void unsetProfile_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  /** Returns true if field profile_id is set (has been assigned a value) and false otherwise */
  public boolean isSetProfile_id() {
    return EncodingUtils.testBit(__isset_bitfield, __PROFILE_ID_ISSET_ID);
  }

  public void setProfile_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROFILE_ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public Basic setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public short getGender() {
    return this.gender;
  }

  public Basic setGender(short gender) {
    this.gender = gender;
    setGenderIsSet(true);
    return this;
  }

  public void unsetGender() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  /** Returns true if field gender is set (has been assigned a value) and false otherwise */
  public boolean isSetGender() {
    return EncodingUtils.testBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  public void setGenderIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GENDER_ISSET_ID, value);
  }

  public int getNationality_code() {
    return this.nationality_code;
  }

  public Basic setNationality_code(int nationality_code) {
    this.nationality_code = nationality_code;
    setNationality_codeIsSet(true);
    return this;
  }

  public void unsetNationality_code() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NATIONALITY_CODE_ISSET_ID);
  }

  /** Returns true if field nationality_code is set (has been assigned a value) and false otherwise */
  public boolean isSetNationality_code() {
    return EncodingUtils.testBit(__isset_bitfield, __NATIONALITY_CODE_ISSET_ID);
  }

  public void setNationality_codeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NATIONALITY_CODE_ISSET_ID, value);
  }

  public String getNationality_name() {
    return this.nationality_name;
  }

  public Basic setNationality_name(String nationality_name) {
    this.nationality_name = nationality_name;
    return this;
  }

  public void unsetNationality_name() {
    this.nationality_name = null;
  }

  /** Returns true if field nationality_name is set (has been assigned a value) and false otherwise */
  public boolean isSetNationality_name() {
    return this.nationality_name != null;
  }

  public void setNationality_nameIsSet(boolean value) {
    if (!value) {
      this.nationality_name = null;
    }
  }

  public int getCity_code() {
    return this.city_code;
  }

  public Basic setCity_code(int city_code) {
    this.city_code = city_code;
    setCity_codeIsSet(true);
    return this;
  }

  public void unsetCity_code() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CITY_CODE_ISSET_ID);
  }

  /** Returns true if field city_code is set (has been assigned a value) and false otherwise */
  public boolean isSetCity_code() {
    return EncodingUtils.testBit(__isset_bitfield, __CITY_CODE_ISSET_ID);
  }

  public void setCity_codeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CITY_CODE_ISSET_ID, value);
  }

  public String getCity_name() {
    return this.city_name;
  }

  public Basic setCity_name(String city_name) {
    this.city_name = city_name;
    return this;
  }

  public void unsetCity_name() {
    this.city_name = null;
  }

  /** Returns true if field city_name is set (has been assigned a value) and false otherwise */
  public boolean isSetCity_name() {
    return this.city_name != null;
  }

  public void setCity_nameIsSet(boolean value) {
    if (!value) {
      this.city_name = null;
    }
  }

  public String getBirth() {
    return this.birth;
  }

  public Basic setBirth(String birth) {
    this.birth = birth;
    return this;
  }

  public void unsetBirth() {
    this.birth = null;
  }

  /** Returns true if field birth is set (has been assigned a value) and false otherwise */
  public boolean isSetBirth() {
    return this.birth != null;
  }

  public void setBirthIsSet(boolean value) {
    if (!value) {
      this.birth = null;
    }
  }

  public String getWeixin() {
    return this.weixin;
  }

  public Basic setWeixin(String weixin) {
    this.weixin = weixin;
    return this;
  }

  public void unsetWeixin() {
    this.weixin = null;
  }

  /** Returns true if field weixin is set (has been assigned a value) and false otherwise */
  public boolean isSetWeixin() {
    return this.weixin != null;
  }

  public void setWeixinIsSet(boolean value) {
    if (!value) {
      this.weixin = null;
    }
  }

  public String getQq() {
    return this.qq;
  }

  public Basic setQq(String qq) {
    this.qq = qq;
    return this;
  }

  public void unsetQq() {
    this.qq = null;
  }

  /** Returns true if field qq is set (has been assigned a value) and false otherwise */
  public boolean isSetQq() {
    return this.qq != null;
  }

  public void setQqIsSet(boolean value) {
    if (!value) {
      this.qq = null;
    }
  }

  public String getMotto() {
    return this.motto;
  }

  public Basic setMotto(String motto) {
    this.motto = motto;
    return this;
  }

  public void unsetMotto() {
    this.motto = null;
  }

  /** Returns true if field motto is set (has been assigned a value) and false otherwise */
  public boolean isSetMotto() {
    return this.motto != null;
  }

  public void setMottoIsSet(boolean value) {
    if (!value) {
      this.motto = null;
    }
  }

  public String getSelf_introduction() {
    return this.self_introduction;
  }

  public Basic setSelf_introduction(String self_introduction) {
    this.self_introduction = self_introduction;
    return this;
  }

  public void unsetSelf_introduction() {
    this.self_introduction = null;
  }

  /** Returns true if field self_introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetSelf_introduction() {
    return this.self_introduction != null;
  }

  public void setSelf_introductionIsSet(boolean value) {
    if (!value) {
      this.self_introduction = null;
    }
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public Basic setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public Basic setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROFILE_ID:
      if (value == null) {
        unsetProfile_id();
      } else {
        setProfile_id((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case GENDER:
      if (value == null) {
        unsetGender();
      } else {
        setGender((Short)value);
      }
      break;

    case NATIONALITY_CODE:
      if (value == null) {
        unsetNationality_code();
      } else {
        setNationality_code((Integer)value);
      }
      break;

    case NATIONALITY_NAME:
      if (value == null) {
        unsetNationality_name();
      } else {
        setNationality_name((String)value);
      }
      break;

    case CITY_CODE:
      if (value == null) {
        unsetCity_code();
      } else {
        setCity_code((Integer)value);
      }
      break;

    case CITY_NAME:
      if (value == null) {
        unsetCity_name();
      } else {
        setCity_name((String)value);
      }
      break;

    case BIRTH:
      if (value == null) {
        unsetBirth();
      } else {
        setBirth((String)value);
      }
      break;

    case WEIXIN:
      if (value == null) {
        unsetWeixin();
      } else {
        setWeixin((String)value);
      }
      break;

    case QQ:
      if (value == null) {
        unsetQq();
      } else {
        setQq((String)value);
      }
      break;

    case MOTTO:
      if (value == null) {
        unsetMotto();
      } else {
        setMotto((String)value);
      }
      break;

    case SELF_INTRODUCTION:
      if (value == null) {
        unsetSelf_introduction();
      } else {
        setSelf_introduction((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROFILE_ID:
      return Integer.valueOf(getProfile_id());

    case NAME:
      return getName();

    case GENDER:
      return Short.valueOf(getGender());

    case NATIONALITY_CODE:
      return Integer.valueOf(getNationality_code());

    case NATIONALITY_NAME:
      return getNationality_name();

    case CITY_CODE:
      return Integer.valueOf(getCity_code());

    case CITY_NAME:
      return getCity_name();

    case BIRTH:
      return getBirth();

    case WEIXIN:
      return getWeixin();

    case QQ:
      return getQq();

    case MOTTO:
      return getMotto();

    case SELF_INTRODUCTION:
      return getSelf_introduction();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROFILE_ID:
      return isSetProfile_id();
    case NAME:
      return isSetName();
    case GENDER:
      return isSetGender();
    case NATIONALITY_CODE:
      return isSetNationality_code();
    case NATIONALITY_NAME:
      return isSetNationality_name();
    case CITY_CODE:
      return isSetCity_code();
    case CITY_NAME:
      return isSetCity_name();
    case BIRTH:
      return isSetBirth();
    case WEIXIN:
      return isSetWeixin();
    case QQ:
      return isSetQq();
    case MOTTO:
      return isSetMotto();
    case SELF_INTRODUCTION:
      return isSetSelf_introduction();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Basic)
      return this.equals((Basic)that);
    return false;
  }

  public boolean equals(Basic that) {
    if (that == null)
      return false;

    boolean this_present_profile_id = true;
    boolean that_present_profile_id = true;
    if (this_present_profile_id || that_present_profile_id) {
      if (!(this_present_profile_id && that_present_profile_id))
        return false;
      if (this.profile_id != that.profile_id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_gender = true;
    boolean that_present_gender = true;
    if (this_present_gender || that_present_gender) {
      if (!(this_present_gender && that_present_gender))
        return false;
      if (this.gender != that.gender)
        return false;
    }

    boolean this_present_nationality_code = true;
    boolean that_present_nationality_code = true;
    if (this_present_nationality_code || that_present_nationality_code) {
      if (!(this_present_nationality_code && that_present_nationality_code))
        return false;
      if (this.nationality_code != that.nationality_code)
        return false;
    }

    boolean this_present_nationality_name = true && this.isSetNationality_name();
    boolean that_present_nationality_name = true && that.isSetNationality_name();
    if (this_present_nationality_name || that_present_nationality_name) {
      if (!(this_present_nationality_name && that_present_nationality_name))
        return false;
      if (!this.nationality_name.equals(that.nationality_name))
        return false;
    }

    boolean this_present_city_code = true;
    boolean that_present_city_code = true;
    if (this_present_city_code || that_present_city_code) {
      if (!(this_present_city_code && that_present_city_code))
        return false;
      if (this.city_code != that.city_code)
        return false;
    }

    boolean this_present_city_name = true && this.isSetCity_name();
    boolean that_present_city_name = true && that.isSetCity_name();
    if (this_present_city_name || that_present_city_name) {
      if (!(this_present_city_name && that_present_city_name))
        return false;
      if (!this.city_name.equals(that.city_name))
        return false;
    }

    boolean this_present_birth = true && this.isSetBirth();
    boolean that_present_birth = true && that.isSetBirth();
    if (this_present_birth || that_present_birth) {
      if (!(this_present_birth && that_present_birth))
        return false;
      if (!this.birth.equals(that.birth))
        return false;
    }

    boolean this_present_weixin = true && this.isSetWeixin();
    boolean that_present_weixin = true && that.isSetWeixin();
    if (this_present_weixin || that_present_weixin) {
      if (!(this_present_weixin && that_present_weixin))
        return false;
      if (!this.weixin.equals(that.weixin))
        return false;
    }

    boolean this_present_qq = true && this.isSetQq();
    boolean that_present_qq = true && that.isSetQq();
    if (this_present_qq || that_present_qq) {
      if (!(this_present_qq && that_present_qq))
        return false;
      if (!this.qq.equals(that.qq))
        return false;
    }

    boolean this_present_motto = true && this.isSetMotto();
    boolean that_present_motto = true && that.isSetMotto();
    if (this_present_motto || that_present_motto) {
      if (!(this_present_motto && that_present_motto))
        return false;
      if (!this.motto.equals(that.motto))
        return false;
    }

    boolean this_present_self_introduction = true && this.isSetSelf_introduction();
    boolean that_present_self_introduction = true && that.isSetSelf_introduction();
    if (this_present_self_introduction || that_present_self_introduction) {
      if (!(this_present_self_introduction && that_present_self_introduction))
        return false;
      if (!this.self_introduction.equals(that.self_introduction))
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_profile_id = true;
    list.add(present_profile_id);
    if (present_profile_id)
      list.add(profile_id);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_gender = true;
    list.add(present_gender);
    if (present_gender)
      list.add(gender);

    boolean present_nationality_code = true;
    list.add(present_nationality_code);
    if (present_nationality_code)
      list.add(nationality_code);

    boolean present_nationality_name = true && (isSetNationality_name());
    list.add(present_nationality_name);
    if (present_nationality_name)
      list.add(nationality_name);

    boolean present_city_code = true;
    list.add(present_city_code);
    if (present_city_code)
      list.add(city_code);

    boolean present_city_name = true && (isSetCity_name());
    list.add(present_city_name);
    if (present_city_name)
      list.add(city_name);

    boolean present_birth = true && (isSetBirth());
    list.add(present_birth);
    if (present_birth)
      list.add(birth);

    boolean present_weixin = true && (isSetWeixin());
    list.add(present_weixin);
    if (present_weixin)
      list.add(weixin);

    boolean present_qq = true && (isSetQq());
    list.add(present_qq);
    if (present_qq)
      list.add(qq);

    boolean present_motto = true && (isSetMotto());
    list.add(present_motto);
    if (present_motto)
      list.add(motto);

    boolean present_self_introduction = true && (isSetSelf_introduction());
    list.add(present_self_introduction);
    if (present_self_introduction)
      list.add(self_introduction);

    boolean present_create_time = true && (isSetCreate_time());
    list.add(present_create_time);
    if (present_create_time)
      list.add(create_time);

    boolean present_update_time = true && (isSetUpdate_time());
    list.add(present_update_time);
    if (present_update_time)
      list.add(update_time);

    return list.hashCode();
  }

  @Override
  public int compareTo(Basic other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProfile_id()).compareTo(other.isSetProfile_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfile_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profile_id, other.profile_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGender()).compareTo(other.isSetGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gender, other.gender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNationality_code()).compareTo(other.isSetNationality_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNationality_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nationality_code, other.nationality_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNationality_name()).compareTo(other.isSetNationality_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNationality_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nationality_name, other.nationality_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCity_code()).compareTo(other.isSetCity_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city_code, other.city_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCity_name()).compareTo(other.isSetCity_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city_name, other.city_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirth()).compareTo(other.isSetBirth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birth, other.birth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWeixin()).compareTo(other.isSetWeixin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeixin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weixin, other.weixin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQq()).compareTo(other.isSetQq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.qq, other.qq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMotto()).compareTo(other.isSetMotto());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMotto()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.motto, other.motto);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSelf_introduction()).compareTo(other.isSetSelf_introduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelf_introduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.self_introduction, other.self_introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Basic(");
    boolean first = true;

    sb.append("profile_id:");
    sb.append(this.profile_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("gender:");
    sb.append(this.gender);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nationality_code:");
    sb.append(this.nationality_code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nationality_name:");
    if (this.nationality_name == null) {
      sb.append("null");
    } else {
      sb.append(this.nationality_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("city_code:");
    sb.append(this.city_code);
    first = false;
    if (!first) sb.append(", ");
    sb.append("city_name:");
    if (this.city_name == null) {
      sb.append("null");
    } else {
      sb.append(this.city_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("birth:");
    if (this.birth == null) {
      sb.append("null");
    } else {
      sb.append(this.birth);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("weixin:");
    if (this.weixin == null) {
      sb.append("null");
    } else {
      sb.append(this.weixin);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("qq:");
    if (this.qq == null) {
      sb.append("null");
    } else {
      sb.append(this.qq);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("motto:");
    if (this.motto == null) {
      sb.append("null");
    } else {
      sb.append(this.motto);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("self_introduction:");
    if (this.self_introduction == null) {
      sb.append("null");
    } else {
      sb.append(this.self_introduction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("create_time:");
    if (this.create_time == null) {
      sb.append("null");
    } else {
      sb.append(this.create_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("update_time:");
    if (this.update_time == null) {
      sb.append("null");
    } else {
      sb.append(this.update_time);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BasicStandardSchemeFactory implements SchemeFactory {
    public BasicStandardScheme getScheme() {
      return new BasicStandardScheme();
    }
  }

  private static class BasicStandardScheme extends StandardScheme<Basic> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Basic struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROFILE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profile_id = iprot.readI32();
              struct.setProfile_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.gender = iprot.readI16();
              struct.setGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NATIONALITY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nationality_code = iprot.readI32();
              struct.setNationality_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NATIONALITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nationality_name = iprot.readString();
              struct.setNationality_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CITY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.city_code = iprot.readI32();
              struct.setCity_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city_name = iprot.readString();
              struct.setCity_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BIRTH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.birth = iprot.readString();
              struct.setBirthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // WEIXIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weixin = iprot.readString();
              struct.setWeixinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // QQ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.qq = iprot.readString();
              struct.setQqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MOTTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.motto = iprot.readString();
              struct.setMottoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SELF_INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.self_introduction = iprot.readString();
              struct.setSelf_introductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Basic struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
      oprot.writeI32(struct.profile_id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(GENDER_FIELD_DESC);
      oprot.writeI16(struct.gender);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NATIONALITY_CODE_FIELD_DESC);
      oprot.writeI32(struct.nationality_code);
      oprot.writeFieldEnd();
      if (struct.nationality_name != null) {
        oprot.writeFieldBegin(NATIONALITY_NAME_FIELD_DESC);
        oprot.writeString(struct.nationality_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CITY_CODE_FIELD_DESC);
      oprot.writeI32(struct.city_code);
      oprot.writeFieldEnd();
      if (struct.city_name != null) {
        oprot.writeFieldBegin(CITY_NAME_FIELD_DESC);
        oprot.writeString(struct.city_name);
        oprot.writeFieldEnd();
      }
      if (struct.birth != null) {
        oprot.writeFieldBegin(BIRTH_FIELD_DESC);
        oprot.writeString(struct.birth);
        oprot.writeFieldEnd();
      }
      if (struct.weixin != null) {
        oprot.writeFieldBegin(WEIXIN_FIELD_DESC);
        oprot.writeString(struct.weixin);
        oprot.writeFieldEnd();
      }
      if (struct.qq != null) {
        oprot.writeFieldBegin(QQ_FIELD_DESC);
        oprot.writeString(struct.qq);
        oprot.writeFieldEnd();
      }
      if (struct.motto != null) {
        oprot.writeFieldBegin(MOTTO_FIELD_DESC);
        oprot.writeString(struct.motto);
        oprot.writeFieldEnd();
      }
      if (struct.self_introduction != null) {
        oprot.writeFieldBegin(SELF_INTRODUCTION_FIELD_DESC);
        oprot.writeString(struct.self_introduction);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.create_time);
        oprot.writeFieldEnd();
      }
      if (struct.update_time != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.update_time);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BasicTupleSchemeFactory implements SchemeFactory {
    public BasicTupleScheme getScheme() {
      return new BasicTupleScheme();
    }
  }

  private static class BasicTupleScheme extends TupleScheme<Basic> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Basic struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProfile_id()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetGender()) {
        optionals.set(2);
      }
      if (struct.isSetNationality_code()) {
        optionals.set(3);
      }
      if (struct.isSetNationality_name()) {
        optionals.set(4);
      }
      if (struct.isSetCity_code()) {
        optionals.set(5);
      }
      if (struct.isSetCity_name()) {
        optionals.set(6);
      }
      if (struct.isSetBirth()) {
        optionals.set(7);
      }
      if (struct.isSetWeixin()) {
        optionals.set(8);
      }
      if (struct.isSetQq()) {
        optionals.set(9);
      }
      if (struct.isSetMotto()) {
        optionals.set(10);
      }
      if (struct.isSetSelf_introduction()) {
        optionals.set(11);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(12);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetProfile_id()) {
        oprot.writeI32(struct.profile_id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetGender()) {
        oprot.writeI16(struct.gender);
      }
      if (struct.isSetNationality_code()) {
        oprot.writeI32(struct.nationality_code);
      }
      if (struct.isSetNationality_name()) {
        oprot.writeString(struct.nationality_name);
      }
      if (struct.isSetCity_code()) {
        oprot.writeI32(struct.city_code);
      }
      if (struct.isSetCity_name()) {
        oprot.writeString(struct.city_name);
      }
      if (struct.isSetBirth()) {
        oprot.writeString(struct.birth);
      }
      if (struct.isSetWeixin()) {
        oprot.writeString(struct.weixin);
      }
      if (struct.isSetQq()) {
        oprot.writeString(struct.qq);
      }
      if (struct.isSetMotto()) {
        oprot.writeString(struct.motto);
      }
      if (struct.isSetSelf_introduction()) {
        oprot.writeString(struct.self_introduction);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Basic struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.profile_id = iprot.readI32();
        struct.setProfile_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.gender = iprot.readI16();
        struct.setGenderIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nationality_code = iprot.readI32();
        struct.setNationality_codeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.nationality_name = iprot.readString();
        struct.setNationality_nameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.city_code = iprot.readI32();
        struct.setCity_codeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.city_name = iprot.readString();
        struct.setCity_nameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.birth = iprot.readString();
        struct.setBirthIsSet(true);
      }
      if (incoming.get(8)) {
        struct.weixin = iprot.readString();
        struct.setWeixinIsSet(true);
      }
      if (incoming.get(9)) {
        struct.qq = iprot.readString();
        struct.setQqIsSet(true);
      }
      if (incoming.get(10)) {
        struct.motto = iprot.readString();
        struct.setMottoIsSet(true);
      }
      if (incoming.get(11)) {
        struct.self_introduction = iprot.readString();
        struct.setSelf_introductionIsSet(true);
      }
      if (incoming.get(12)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
    }
  }

}

