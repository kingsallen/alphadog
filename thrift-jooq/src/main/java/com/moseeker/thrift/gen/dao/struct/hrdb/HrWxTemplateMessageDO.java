/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.hrdb;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-04-26")
public class HrWxTemplateMessageDO implements org.apache.thrift.TBase<HrWxTemplateMessageDO, HrWxTemplateMessageDO._Fields>, java.io.Serializable, Cloneable, Comparable<HrWxTemplateMessageDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("HrWxTemplateMessageDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SYS_TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sysTemplateId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField WX_TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wxTemplateId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DISPLAY_FIELD_DESC = new org.apache.thrift.protocol.TField("display", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField WECHAT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wechatId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField URL_FIELD_DESC = new org.apache.thrift.protocol.TField("url", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TOPCOLOR_FIELD_DESC = new org.apache.thrift.protocol.TField("topcolor", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("first", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrWxTemplateMessageDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrWxTemplateMessageDOTupleSchemeFactory();

  public int id; // optional
  public int sysTemplateId; // optional
  public java.lang.String wxTemplateId; // optional
  public int display; // optional
  public int priority; // optional
  public int wechatId; // optional
  public int disable; // optional
  public java.lang.String url; // optional
  public java.lang.String topcolor; // optional
  public java.lang.String first; // optional
  public java.lang.String remark; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    SYS_TEMPLATE_ID((short)2, "sysTemplateId"),
    WX_TEMPLATE_ID((short)3, "wxTemplateId"),
    DISPLAY((short)4, "display"),
    PRIORITY((short)5, "priority"),
    WECHAT_ID((short)6, "wechatId"),
    DISABLE((short)7, "disable"),
    URL((short)8, "url"),
    TOPCOLOR((short)9, "topcolor"),
    FIRST((short)10, "first"),
    REMARK((short)11, "remark");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SYS_TEMPLATE_ID
          return SYS_TEMPLATE_ID;
        case 3: // WX_TEMPLATE_ID
          return WX_TEMPLATE_ID;
        case 4: // DISPLAY
          return DISPLAY;
        case 5: // PRIORITY
          return PRIORITY;
        case 6: // WECHAT_ID
          return WECHAT_ID;
        case 7: // DISABLE
          return DISABLE;
        case 8: // URL
          return URL;
        case 9: // TOPCOLOR
          return TOPCOLOR;
        case 10: // FIRST
          return FIRST;
        case 11: // REMARK
          return REMARK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SYSTEMPLATEID_ISSET_ID = 1;
  private static final int __DISPLAY_ISSET_ID = 2;
  private static final int __PRIORITY_ISSET_ID = 3;
  private static final int __WECHATID_ISSET_ID = 4;
  private static final int __DISABLE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.SYS_TEMPLATE_ID,_Fields.WX_TEMPLATE_ID,_Fields.DISPLAY,_Fields.PRIORITY,_Fields.WECHAT_ID,_Fields.DISABLE,_Fields.URL,_Fields.TOPCOLOR,_Fields.FIRST,_Fields.REMARK};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SYS_TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("sysTemplateId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WX_TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("wxTemplateId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY, new org.apache.thrift.meta_data.FieldMetaData("display", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("priority", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WECHAT_ID, new org.apache.thrift.meta_data.FieldMetaData("wechatId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.URL, new org.apache.thrift.meta_data.FieldMetaData("url", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOPCOLOR, new org.apache.thrift.meta_data.FieldMetaData("topcolor", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FIRST, new org.apache.thrift.meta_data.FieldMetaData("first", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(HrWxTemplateMessageDO.class, metaDataMap);
  }

  public HrWxTemplateMessageDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public HrWxTemplateMessageDO(HrWxTemplateMessageDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.sysTemplateId = other.sysTemplateId;
    if (other.isSetWxTemplateId()) {
      this.wxTemplateId = other.wxTemplateId;
    }
    this.display = other.display;
    this.priority = other.priority;
    this.wechatId = other.wechatId;
    this.disable = other.disable;
    if (other.isSetUrl()) {
      this.url = other.url;
    }
    if (other.isSetTopcolor()) {
      this.topcolor = other.topcolor;
    }
    if (other.isSetFirst()) {
      this.first = other.first;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
  }

  public HrWxTemplateMessageDO deepCopy() {
    return new HrWxTemplateMessageDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setSysTemplateIdIsSet(false);
    this.sysTemplateId = 0;
    this.wxTemplateId = null;
    setDisplayIsSet(false);
    this.display = 0;
    setPriorityIsSet(false);
    this.priority = 0;
    setWechatIdIsSet(false);
    this.wechatId = 0;
    setDisableIsSet(false);
    this.disable = 0;
    this.url = null;
    this.topcolor = null;
    this.first = null;
    this.remark = null;
  }

  public int getId() {
    return this.id;
  }

  public HrWxTemplateMessageDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getSysTemplateId() {
    return this.sysTemplateId;
  }

  public HrWxTemplateMessageDO setSysTemplateId(int sysTemplateId) {
    this.sysTemplateId = sysTemplateId;
    setSysTemplateIdIsSet(true);
    return this;
  }

  public void unsetSysTemplateId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYSTEMPLATEID_ISSET_ID);
  }

  /** Returns true if field sysTemplateId is set (has been assigned a value) and false otherwise */
  public boolean isSetSysTemplateId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYSTEMPLATEID_ISSET_ID);
  }

  public void setSysTemplateIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYSTEMPLATEID_ISSET_ID, value);
  }

  public java.lang.String getWxTemplateId() {
    return this.wxTemplateId;
  }

  public HrWxTemplateMessageDO setWxTemplateId(java.lang.String wxTemplateId) {
    this.wxTemplateId = wxTemplateId;
    return this;
  }

  public void unsetWxTemplateId() {
    this.wxTemplateId = null;
  }

  /** Returns true if field wxTemplateId is set (has been assigned a value) and false otherwise */
  public boolean isSetWxTemplateId() {
    return this.wxTemplateId != null;
  }

  public void setWxTemplateIdIsSet(boolean value) {
    if (!value) {
      this.wxTemplateId = null;
    }
  }

  public int getDisplay() {
    return this.display;
  }

  public HrWxTemplateMessageDO setDisplay(int display) {
    this.display = display;
    setDisplayIsSet(true);
    return this;
  }

  public void unsetDisplay() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISPLAY_ISSET_ID);
  }

  /** Returns true if field display is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplay() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISPLAY_ISSET_ID);
  }

  public void setDisplayIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISPLAY_ISSET_ID, value);
  }

  public int getPriority() {
    return this.priority;
  }

  public HrWxTemplateMessageDO setPriority(int priority) {
    this.priority = priority;
    setPriorityIsSet(true);
    return this;
  }

  public void unsetPriority() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRIORITY_ISSET_ID);
  }

  /** Returns true if field priority is set (has been assigned a value) and false otherwise */
  public boolean isSetPriority() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRIORITY_ISSET_ID);
  }

  public void setPriorityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRIORITY_ISSET_ID, value);
  }

  public int getWechatId() {
    return this.wechatId;
  }

  public HrWxTemplateMessageDO setWechatId(int wechatId) {
    this.wechatId = wechatId;
    setWechatIdIsSet(true);
    return this;
  }

  public void unsetWechatId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WECHATID_ISSET_ID);
  }

  /** Returns true if field wechatId is set (has been assigned a value) and false otherwise */
  public boolean isSetWechatId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WECHATID_ISSET_ID);
  }

  public void setWechatIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WECHATID_ISSET_ID, value);
  }

  public int getDisable() {
    return this.disable;
  }

  public HrWxTemplateMessageDO setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public java.lang.String getUrl() {
    return this.url;
  }

  public HrWxTemplateMessageDO setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  public void unsetUrl() {
    this.url = null;
  }

  /** Returns true if field url is set (has been assigned a value) and false otherwise */
  public boolean isSetUrl() {
    return this.url != null;
  }

  public void setUrlIsSet(boolean value) {
    if (!value) {
      this.url = null;
    }
  }

  public java.lang.String getTopcolor() {
    return this.topcolor;
  }

  public HrWxTemplateMessageDO setTopcolor(java.lang.String topcolor) {
    this.topcolor = topcolor;
    return this;
  }

  public void unsetTopcolor() {
    this.topcolor = null;
  }

  /** Returns true if field topcolor is set (has been assigned a value) and false otherwise */
  public boolean isSetTopcolor() {
    return this.topcolor != null;
  }

  public void setTopcolorIsSet(boolean value) {
    if (!value) {
      this.topcolor = null;
    }
  }

  public java.lang.String getFirst() {
    return this.first;
  }

  public HrWxTemplateMessageDO setFirst(java.lang.String first) {
    this.first = first;
    return this;
  }

  public void unsetFirst() {
    this.first = null;
  }

  /** Returns true if field first is set (has been assigned a value) and false otherwise */
  public boolean isSetFirst() {
    return this.first != null;
  }

  public void setFirstIsSet(boolean value) {
    if (!value) {
      this.first = null;
    }
  }

  public java.lang.String getRemark() {
    return this.remark;
  }

  public HrWxTemplateMessageDO setRemark(java.lang.String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case SYS_TEMPLATE_ID:
      if (value == null) {
        unsetSysTemplateId();
      } else {
        setSysTemplateId((java.lang.Integer)value);
      }
      break;

    case WX_TEMPLATE_ID:
      if (value == null) {
        unsetWxTemplateId();
      } else {
        setWxTemplateId((java.lang.String)value);
      }
      break;

    case DISPLAY:
      if (value == null) {
        unsetDisplay();
      } else {
        setDisplay((java.lang.Integer)value);
      }
      break;

    case PRIORITY:
      if (value == null) {
        unsetPriority();
      } else {
        setPriority((java.lang.Integer)value);
      }
      break;

    case WECHAT_ID:
      if (value == null) {
        unsetWechatId();
      } else {
        setWechatId((java.lang.Integer)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((java.lang.Integer)value);
      }
      break;

    case URL:
      if (value == null) {
        unsetUrl();
      } else {
        setUrl((java.lang.String)value);
      }
      break;

    case TOPCOLOR:
      if (value == null) {
        unsetTopcolor();
      } else {
        setTopcolor((java.lang.String)value);
      }
      break;

    case FIRST:
      if (value == null) {
        unsetFirst();
      } else {
        setFirst((java.lang.String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case SYS_TEMPLATE_ID:
      return getSysTemplateId();

    case WX_TEMPLATE_ID:
      return getWxTemplateId();

    case DISPLAY:
      return getDisplay();

    case PRIORITY:
      return getPriority();

    case WECHAT_ID:
      return getWechatId();

    case DISABLE:
      return getDisable();

    case URL:
      return getUrl();

    case TOPCOLOR:
      return getTopcolor();

    case FIRST:
      return getFirst();

    case REMARK:
      return getRemark();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SYS_TEMPLATE_ID:
      return isSetSysTemplateId();
    case WX_TEMPLATE_ID:
      return isSetWxTemplateId();
    case DISPLAY:
      return isSetDisplay();
    case PRIORITY:
      return isSetPriority();
    case WECHAT_ID:
      return isSetWechatId();
    case DISABLE:
      return isSetDisable();
    case URL:
      return isSetUrl();
    case TOPCOLOR:
      return isSetTopcolor();
    case FIRST:
      return isSetFirst();
    case REMARK:
      return isSetRemark();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof HrWxTemplateMessageDO)
      return this.equals((HrWxTemplateMessageDO)that);
    return false;
  }

  public boolean equals(HrWxTemplateMessageDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_sysTemplateId = true && this.isSetSysTemplateId();
    boolean that_present_sysTemplateId = true && that.isSetSysTemplateId();
    if (this_present_sysTemplateId || that_present_sysTemplateId) {
      if (!(this_present_sysTemplateId && that_present_sysTemplateId))
        return false;
      if (this.sysTemplateId != that.sysTemplateId)
        return false;
    }

    boolean this_present_wxTemplateId = true && this.isSetWxTemplateId();
    boolean that_present_wxTemplateId = true && that.isSetWxTemplateId();
    if (this_present_wxTemplateId || that_present_wxTemplateId) {
      if (!(this_present_wxTemplateId && that_present_wxTemplateId))
        return false;
      if (!this.wxTemplateId.equals(that.wxTemplateId))
        return false;
    }

    boolean this_present_display = true && this.isSetDisplay();
    boolean that_present_display = true && that.isSetDisplay();
    if (this_present_display || that_present_display) {
      if (!(this_present_display && that_present_display))
        return false;
      if (this.display != that.display)
        return false;
    }

    boolean this_present_priority = true && this.isSetPriority();
    boolean that_present_priority = true && that.isSetPriority();
    if (this_present_priority || that_present_priority) {
      if (!(this_present_priority && that_present_priority))
        return false;
      if (this.priority != that.priority)
        return false;
    }

    boolean this_present_wechatId = true && this.isSetWechatId();
    boolean that_present_wechatId = true && that.isSetWechatId();
    if (this_present_wechatId || that_present_wechatId) {
      if (!(this_present_wechatId && that_present_wechatId))
        return false;
      if (this.wechatId != that.wechatId)
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_url = true && this.isSetUrl();
    boolean that_present_url = true && that.isSetUrl();
    if (this_present_url || that_present_url) {
      if (!(this_present_url && that_present_url))
        return false;
      if (!this.url.equals(that.url))
        return false;
    }

    boolean this_present_topcolor = true && this.isSetTopcolor();
    boolean that_present_topcolor = true && that.isSetTopcolor();
    if (this_present_topcolor || that_present_topcolor) {
      if (!(this_present_topcolor && that_present_topcolor))
        return false;
      if (!this.topcolor.equals(that.topcolor))
        return false;
    }

    boolean this_present_first = true && this.isSetFirst();
    boolean that_present_first = true && that.isSetFirst();
    if (this_present_first || that_present_first) {
      if (!(this_present_first && that_present_first))
        return false;
      if (!this.first.equals(that.first))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetSysTemplateId()) ? 131071 : 524287);
    if (isSetSysTemplateId())
      hashCode = hashCode * 8191 + sysTemplateId;

    hashCode = hashCode * 8191 + ((isSetWxTemplateId()) ? 131071 : 524287);
    if (isSetWxTemplateId())
      hashCode = hashCode * 8191 + wxTemplateId.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplay()) ? 131071 : 524287);
    if (isSetDisplay())
      hashCode = hashCode * 8191 + display;

    hashCode = hashCode * 8191 + ((isSetPriority()) ? 131071 : 524287);
    if (isSetPriority())
      hashCode = hashCode * 8191 + priority;

    hashCode = hashCode * 8191 + ((isSetWechatId()) ? 131071 : 524287);
    if (isSetWechatId())
      hashCode = hashCode * 8191 + wechatId;

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetUrl()) ? 131071 : 524287);
    if (isSetUrl())
      hashCode = hashCode * 8191 + url.hashCode();

    hashCode = hashCode * 8191 + ((isSetTopcolor()) ? 131071 : 524287);
    if (isSetTopcolor())
      hashCode = hashCode * 8191 + topcolor.hashCode();

    hashCode = hashCode * 8191 + ((isSetFirst()) ? 131071 : 524287);
    if (isSetFirst())
      hashCode = hashCode * 8191 + first.hashCode();

    hashCode = hashCode * 8191 + ((isSetRemark()) ? 131071 : 524287);
    if (isSetRemark())
      hashCode = hashCode * 8191 + remark.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(HrWxTemplateMessageDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSysTemplateId()).compareTo(other.isSetSysTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysTemplateId, other.sysTemplateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWxTemplateId()).compareTo(other.isSetWxTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWxTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wxTemplateId, other.wxTemplateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisplay()).compareTo(other.isSetDisplay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.display, other.display);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPriority()).compareTo(other.isSetPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priority, other.priority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWechatId()).compareTo(other.isSetWechatId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWechatId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wechatId, other.wechatId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUrl()).compareTo(other.isSetUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.url, other.url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTopcolor()).compareTo(other.isSetTopcolor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTopcolor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.topcolor, other.topcolor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFirst()).compareTo(other.isSetFirst());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirst()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.first, other.first);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("HrWxTemplateMessageDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetSysTemplateId()) {
      if (!first) sb.append(", ");
      sb.append("sysTemplateId:");
      sb.append(this.sysTemplateId);
      first = false;
    }
    if (isSetWxTemplateId()) {
      if (!first) sb.append(", ");
      sb.append("wxTemplateId:");
      if (this.wxTemplateId == null) {
        sb.append("null");
      } else {
        sb.append(this.wxTemplateId);
      }
      first = false;
    }
    if (isSetDisplay()) {
      if (!first) sb.append(", ");
      sb.append("display:");
      sb.append(this.display);
      first = false;
    }
    if (isSetPriority()) {
      if (!first) sb.append(", ");
      sb.append("priority:");
      sb.append(this.priority);
      first = false;
    }
    if (isSetWechatId()) {
      if (!first) sb.append(", ");
      sb.append("wechatId:");
      sb.append(this.wechatId);
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetUrl()) {
      if (!first) sb.append(", ");
      sb.append("url:");
      if (this.url == null) {
        sb.append("null");
      } else {
        sb.append(this.url);
      }
      first = false;
    }
    if (isSetTopcolor()) {
      if (!first) sb.append(", ");
      sb.append("topcolor:");
      if (this.topcolor == null) {
        sb.append("null");
      } else {
        sb.append(this.topcolor);
      }
      first = false;
    }
    if (isSetFirst()) {
      if (!first) sb.append(", ");
      sb.append("first:");
      if (this.first == null) {
        sb.append("null");
      } else {
        sb.append(this.first);
      }
      first = false;
    }
    if (isSetRemark()) {
      if (!first) sb.append(", ");
      sb.append("remark:");
      if (this.remark == null) {
        sb.append("null");
      } else {
        sb.append(this.remark);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrWxTemplateMessageDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxTemplateMessageDOStandardScheme getScheme() {
      return new HrWxTemplateMessageDOStandardScheme();
    }
  }

  private static class HrWxTemplateMessageDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<HrWxTemplateMessageDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, HrWxTemplateMessageDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SYS_TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sysTemplateId = iprot.readI32();
              struct.setSysTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WX_TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.wxTemplateId = iprot.readString();
              struct.setWxTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DISPLAY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.display = iprot.readI32();
              struct.setDisplayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.priority = iprot.readI32();
              struct.setPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // WECHAT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wechatId = iprot.readI32();
              struct.setWechatIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.url = iprot.readString();
              struct.setUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TOPCOLOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.topcolor = iprot.readString();
              struct.setTopcolorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.first = iprot.readString();
              struct.setFirstIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, HrWxTemplateMessageDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSysTemplateId()) {
        oprot.writeFieldBegin(SYS_TEMPLATE_ID_FIELD_DESC);
        oprot.writeI32(struct.sysTemplateId);
        oprot.writeFieldEnd();
      }
      if (struct.wxTemplateId != null) {
        if (struct.isSetWxTemplateId()) {
          oprot.writeFieldBegin(WX_TEMPLATE_ID_FIELD_DESC);
          oprot.writeString(struct.wxTemplateId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisplay()) {
        oprot.writeFieldBegin(DISPLAY_FIELD_DESC);
        oprot.writeI32(struct.display);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPriority()) {
        oprot.writeFieldBegin(PRIORITY_FIELD_DESC);
        oprot.writeI32(struct.priority);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWechatId()) {
        oprot.writeFieldBegin(WECHAT_ID_FIELD_DESC);
        oprot.writeI32(struct.wechatId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.url != null) {
        if (struct.isSetUrl()) {
          oprot.writeFieldBegin(URL_FIELD_DESC);
          oprot.writeString(struct.url);
          oprot.writeFieldEnd();
        }
      }
      if (struct.topcolor != null) {
        if (struct.isSetTopcolor()) {
          oprot.writeFieldBegin(TOPCOLOR_FIELD_DESC);
          oprot.writeString(struct.topcolor);
          oprot.writeFieldEnd();
        }
      }
      if (struct.first != null) {
        if (struct.isSetFirst()) {
          oprot.writeFieldBegin(FIRST_FIELD_DESC);
          oprot.writeString(struct.first);
          oprot.writeFieldEnd();
        }
      }
      if (struct.remark != null) {
        if (struct.isSetRemark()) {
          oprot.writeFieldBegin(REMARK_FIELD_DESC);
          oprot.writeString(struct.remark);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrWxTemplateMessageDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrWxTemplateMessageDOTupleScheme getScheme() {
      return new HrWxTemplateMessageDOTupleScheme();
    }
  }

  private static class HrWxTemplateMessageDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<HrWxTemplateMessageDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, HrWxTemplateMessageDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetSysTemplateId()) {
        optionals.set(1);
      }
      if (struct.isSetWxTemplateId()) {
        optionals.set(2);
      }
      if (struct.isSetDisplay()) {
        optionals.set(3);
      }
      if (struct.isSetPriority()) {
        optionals.set(4);
      }
      if (struct.isSetWechatId()) {
        optionals.set(5);
      }
      if (struct.isSetDisable()) {
        optionals.set(6);
      }
      if (struct.isSetUrl()) {
        optionals.set(7);
      }
      if (struct.isSetTopcolor()) {
        optionals.set(8);
      }
      if (struct.isSetFirst()) {
        optionals.set(9);
      }
      if (struct.isSetRemark()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetSysTemplateId()) {
        oprot.writeI32(struct.sysTemplateId);
      }
      if (struct.isSetWxTemplateId()) {
        oprot.writeString(struct.wxTemplateId);
      }
      if (struct.isSetDisplay()) {
        oprot.writeI32(struct.display);
      }
      if (struct.isSetPriority()) {
        oprot.writeI32(struct.priority);
      }
      if (struct.isSetWechatId()) {
        oprot.writeI32(struct.wechatId);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetUrl()) {
        oprot.writeString(struct.url);
      }
      if (struct.isSetTopcolor()) {
        oprot.writeString(struct.topcolor);
      }
      if (struct.isSetFirst()) {
        oprot.writeString(struct.first);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, HrWxTemplateMessageDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.sysTemplateId = iprot.readI32();
        struct.setSysTemplateIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.wxTemplateId = iprot.readString();
        struct.setWxTemplateIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.display = iprot.readI32();
        struct.setDisplayIsSet(true);
      }
      if (incoming.get(4)) {
        struct.priority = iprot.readI32();
        struct.setPriorityIsSet(true);
      }
      if (incoming.get(5)) {
        struct.wechatId = iprot.readI32();
        struct.setWechatIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(7)) {
        struct.url = iprot.readString();
        struct.setUrlIsSet(true);
      }
      if (incoming.get(8)) {
        struct.topcolor = iprot.readString();
        struct.setTopcolorIsSet(true);
      }
      if (incoming.get(9)) {
        struct.first = iprot.readString();
        struct.setFirstIsSet(true);
      }
      if (incoming.get(10)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

