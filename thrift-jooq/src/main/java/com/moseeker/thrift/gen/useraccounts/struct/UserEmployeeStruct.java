/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-15")
public class UserEmployeeStruct implements org.apache.thrift.TBase<UserEmployeeStruct, UserEmployeeStruct._Fields>, java.io.Serializable, Cloneable, Comparable<UserEmployeeStruct> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEmployeeStruct");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEEID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("role_id", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wxuser_id", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SEX_FIELD_DESC = new org.apache.thrift.protocol.TField("sex", org.apache.thrift.protocol.TType.BYTE, (short)6);
  private static final org.apache.thrift.protocol.TField ENAME_FIELD_DESC = new org.apache.thrift.protocol.TField("ename", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField EFNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("efname", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cname", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CFNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cfname", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField IS_ADMIN_FIELD_DESC = new org.apache.thrift.protocol.TField("is_admin", org.apache.thrift.protocol.TType.BYTE, (short)12);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField COMPANYBODY_FIELD_DESC = new org.apache.thrift.protocol.TField("companybody", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField GROUPNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("groupname", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField EMPLOYDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("employdate", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField MANAGERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("managername", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField BIRTHDAY_FIELD_DESC = new org.apache.thrift.protocol.TField("birthday", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField RETIREDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("retiredate", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField EDUCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("education", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField IDCARD_FIELD_DESC = new org.apache.thrift.protocol.TField("idcard", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField AWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("award", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField BINDING_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("binding_time", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField ACTIVATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("activation_code", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.BYTE, (short)30);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField AUTH_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("auth_level", org.apache.thrift.protocol.TType.BYTE, (short)33);
  private static final org.apache.thrift.protocol.TField REGISTER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("register_time", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField REGISTER_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("register_ip", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("last_login_time", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("last_login_ip", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField LOGIN_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("login_count", org.apache.thrift.protocol.TType.I32, (short)38);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.BYTE, (short)39);
  private static final org.apache.thrift.protocol.TField DOWNLOAD_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("download_token", org.apache.thrift.protocol.TType.STRING, (short)40);
  private static final org.apache.thrift.protocol.TField HR_WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hr_wxuser_id", org.apache.thrift.protocol.TType.I32, (short)41);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_field", org.apache.thrift.protocol.TType.STRING, (short)42);
  private static final org.apache.thrift.protocol.TField IS_RP_SENT_FIELD_DESC = new org.apache.thrift.protocol.TField("is_rp_sent", org.apache.thrift.protocol.TType.BYTE, (short)43);
  private static final org.apache.thrift.protocol.TField SYSUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sysuser_id", org.apache.thrift.protocol.TType.I32, (short)44);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)45);
  private static final org.apache.thrift.protocol.TField SECTION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("section_id", org.apache.thrift.protocol.TType.I32, (short)46);
  private static final org.apache.thrift.protocol.TField EMAIL_ISVALID_FIELD_DESC = new org.apache.thrift.protocol.TField("email_isvalid", org.apache.thrift.protocol.TType.BYTE, (short)47);
  private static final org.apache.thrift.protocol.TField AUTH_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("auth_method", org.apache.thrift.protocol.TType.BYTE, (short)48);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_field_values", org.apache.thrift.protocol.TType.STRING, (short)49);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserEmployeeStructStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserEmployeeStructTupleSchemeFactory();

  public int id; // optional
  public String employeeid; // optional
  public int company_id; // optional
  public int role_id; // optional
  public int wxuser_id; // optional
  public byte sex; // optional
  public String ename; // optional
  public String efname; // optional
  public String cname; // optional
  public String cfname; // optional
  public String password; // optional
  public byte is_admin; // optional
  public int status; // optional
  public String companybody; // optional
  public String groupname; // optional
  public String position; // optional
  public String employdate; // optional
  public String managername; // optional
  public String city; // optional
  public String birthday; // optional
  public String retiredate; // optional
  public String education; // optional
  public String address; // optional
  public String idcard; // optional
  public String mobile; // optional
  public long award; // optional
  public String binding_time; // optional
  public String email; // optional
  public String activation_code; // optional
  public byte disable; // optional
  public String create_time; // optional
  public String update_time; // optional
  public byte auth_level; // optional
  public String register_time; // optional
  public String register_ip; // optional
  public String last_login_time; // optional
  public String last_login_ip; // optional
  public int login_count; // optional
  public byte source; // optional
  public String download_token; // optional
  public int hr_wxuser_id; // optional
  public String custom_field; // optional
  public byte is_rp_sent; // optional
  public int sysuser_id; // optional
  public int position_id; // optional
  public int section_id; // optional
  public byte email_isvalid; // optional
  public byte auth_method; // optional
  public String custom_field_values; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    EMPLOYEEID((short)2, "employeeid"),
    COMPANY_ID((short)3, "company_id"),
    ROLE_ID((short)4, "role_id"),
    WXUSER_ID((short)5, "wxuser_id"),
    SEX((short)6, "sex"),
    ENAME((short)7, "ename"),
    EFNAME((short)8, "efname"),
    CNAME((short)9, "cname"),
    CFNAME((short)10, "cfname"),
    PASSWORD((short)11, "password"),
    IS_ADMIN((short)12, "is_admin"),
    STATUS((short)13, "status"),
    COMPANYBODY((short)14, "companybody"),
    GROUPNAME((short)15, "groupname"),
    POSITION((short)16, "position"),
    EMPLOYDATE((short)17, "employdate"),
    MANAGERNAME((short)18, "managername"),
    CITY((short)19, "city"),
    BIRTHDAY((short)20, "birthday"),
    RETIREDATE((short)21, "retiredate"),
    EDUCATION((short)22, "education"),
    ADDRESS((short)23, "address"),
    IDCARD((short)24, "idcard"),
    MOBILE((short)25, "mobile"),
    AWARD((short)26, "award"),
    BINDING_TIME((short)27, "binding_time"),
    EMAIL((short)28, "email"),
    ACTIVATION_CODE((short)29, "activation_code"),
    DISABLE((short)30, "disable"),
    CREATE_TIME((short)31, "create_time"),
    UPDATE_TIME((short)32, "update_time"),
    AUTH_LEVEL((short)33, "auth_level"),
    REGISTER_TIME((short)34, "register_time"),
    REGISTER_IP((short)35, "register_ip"),
    LAST_LOGIN_TIME((short)36, "last_login_time"),
    LAST_LOGIN_IP((short)37, "last_login_ip"),
    LOGIN_COUNT((short)38, "login_count"),
    SOURCE((short)39, "source"),
    DOWNLOAD_TOKEN((short)40, "download_token"),
    HR_WXUSER_ID((short)41, "hr_wxuser_id"),
    CUSTOM_FIELD((short)42, "custom_field"),
    IS_RP_SENT((short)43, "is_rp_sent"),
    SYSUSER_ID((short)44, "sysuser_id"),
    POSITION_ID((short)45, "position_id"),
    SECTION_ID((short)46, "section_id"),
    EMAIL_ISVALID((short)47, "email_isvalid"),
    AUTH_METHOD((short)48, "auth_method"),
    CUSTOM_FIELD_VALUES((short)49, "custom_field_values");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // EMPLOYEEID
          return EMPLOYEEID;
        case 3: // COMPANY_ID
          return COMPANY_ID;
        case 4: // ROLE_ID
          return ROLE_ID;
        case 5: // WXUSER_ID
          return WXUSER_ID;
        case 6: // SEX
          return SEX;
        case 7: // ENAME
          return ENAME;
        case 8: // EFNAME
          return EFNAME;
        case 9: // CNAME
          return CNAME;
        case 10: // CFNAME
          return CFNAME;
        case 11: // PASSWORD
          return PASSWORD;
        case 12: // IS_ADMIN
          return IS_ADMIN;
        case 13: // STATUS
          return STATUS;
        case 14: // COMPANYBODY
          return COMPANYBODY;
        case 15: // GROUPNAME
          return GROUPNAME;
        case 16: // POSITION
          return POSITION;
        case 17: // EMPLOYDATE
          return EMPLOYDATE;
        case 18: // MANAGERNAME
          return MANAGERNAME;
        case 19: // CITY
          return CITY;
        case 20: // BIRTHDAY
          return BIRTHDAY;
        case 21: // RETIREDATE
          return RETIREDATE;
        case 22: // EDUCATION
          return EDUCATION;
        case 23: // ADDRESS
          return ADDRESS;
        case 24: // IDCARD
          return IDCARD;
        case 25: // MOBILE
          return MOBILE;
        case 26: // AWARD
          return AWARD;
        case 27: // BINDING_TIME
          return BINDING_TIME;
        case 28: // EMAIL
          return EMAIL;
        case 29: // ACTIVATION_CODE
          return ACTIVATION_CODE;
        case 30: // DISABLE
          return DISABLE;
        case 31: // CREATE_TIME
          return CREATE_TIME;
        case 32: // UPDATE_TIME
          return UPDATE_TIME;
        case 33: // AUTH_LEVEL
          return AUTH_LEVEL;
        case 34: // REGISTER_TIME
          return REGISTER_TIME;
        case 35: // REGISTER_IP
          return REGISTER_IP;
        case 36: // LAST_LOGIN_TIME
          return LAST_LOGIN_TIME;
        case 37: // LAST_LOGIN_IP
          return LAST_LOGIN_IP;
        case 38: // LOGIN_COUNT
          return LOGIN_COUNT;
        case 39: // SOURCE
          return SOURCE;
        case 40: // DOWNLOAD_TOKEN
          return DOWNLOAD_TOKEN;
        case 41: // HR_WXUSER_ID
          return HR_WXUSER_ID;
        case 42: // CUSTOM_FIELD
          return CUSTOM_FIELD;
        case 43: // IS_RP_SENT
          return IS_RP_SENT;
        case 44: // SYSUSER_ID
          return SYSUSER_ID;
        case 45: // POSITION_ID
          return POSITION_ID;
        case 46: // SECTION_ID
          return SECTION_ID;
        case 47: // EMAIL_ISVALID
          return EMAIL_ISVALID;
        case 48: // AUTH_METHOD
          return AUTH_METHOD;
        case 49: // CUSTOM_FIELD_VALUES
          return CUSTOM_FIELD_VALUES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANY_ID_ISSET_ID = 1;
  private static final int __ROLE_ID_ISSET_ID = 2;
  private static final int __WXUSER_ID_ISSET_ID = 3;
  private static final int __SEX_ISSET_ID = 4;
  private static final int __IS_ADMIN_ISSET_ID = 5;
  private static final int __STATUS_ISSET_ID = 6;
  private static final int __AWARD_ISSET_ID = 7;
  private static final int __DISABLE_ISSET_ID = 8;
  private static final int __AUTH_LEVEL_ISSET_ID = 9;
  private static final int __LOGIN_COUNT_ISSET_ID = 10;
  private static final int __SOURCE_ISSET_ID = 11;
  private static final int __HR_WXUSER_ID_ISSET_ID = 12;
  private static final int __IS_RP_SENT_ISSET_ID = 13;
  private static final int __SYSUSER_ID_ISSET_ID = 14;
  private static final int __POSITION_ID_ISSET_ID = 15;
  private static final int __SECTION_ID_ISSET_ID = 16;
  private static final int __EMAIL_ISVALID_ISSET_ID = 17;
  private static final int __AUTH_METHOD_ISSET_ID = 18;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.EMPLOYEEID,_Fields.COMPANY_ID,_Fields.ROLE_ID,_Fields.WXUSER_ID,_Fields.SEX,_Fields.ENAME,_Fields.EFNAME,_Fields.CNAME,_Fields.CFNAME,_Fields.PASSWORD,_Fields.IS_ADMIN,_Fields.STATUS,_Fields.COMPANYBODY,_Fields.GROUPNAME,_Fields.POSITION,_Fields.EMPLOYDATE,_Fields.MANAGERNAME,_Fields.CITY,_Fields.BIRTHDAY,_Fields.RETIREDATE,_Fields.EDUCATION,_Fields.ADDRESS,_Fields.IDCARD,_Fields.MOBILE,_Fields.AWARD,_Fields.BINDING_TIME,_Fields.EMAIL,_Fields.ACTIVATION_CODE,_Fields.DISABLE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.AUTH_LEVEL,_Fields.REGISTER_TIME,_Fields.REGISTER_IP,_Fields.LAST_LOGIN_TIME,_Fields.LAST_LOGIN_IP,_Fields.LOGIN_COUNT,_Fields.SOURCE,_Fields.DOWNLOAD_TOKEN,_Fields.HR_WXUSER_ID,_Fields.CUSTOM_FIELD,_Fields.IS_RP_SENT,_Fields.SYSUSER_ID,_Fields.POSITION_ID,_Fields.SECTION_ID,_Fields.EMAIL_ISVALID,_Fields.AUTH_METHOD,_Fields.CUSTOM_FIELD_VALUES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEEID, new org.apache.thrift.meta_data.FieldMetaData("employeeid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("role_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("wxuser_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEX, new org.apache.thrift.meta_data.FieldMetaData("sex", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.ENAME, new org.apache.thrift.meta_data.FieldMetaData("ename", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EFNAME, new org.apache.thrift.meta_data.FieldMetaData("efname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNAME, new org.apache.thrift.meta_data.FieldMetaData("cname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CFNAME, new org.apache.thrift.meta_data.FieldMetaData("cfname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_ADMIN, new org.apache.thrift.meta_data.FieldMetaData("is_admin", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANYBODY, new org.apache.thrift.meta_data.FieldMetaData("companybody", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GROUPNAME, new org.apache.thrift.meta_data.FieldMetaData("groupname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMPLOYDATE, new org.apache.thrift.meta_data.FieldMetaData("employdate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.MANAGERNAME, new org.apache.thrift.meta_data.FieldMetaData("managername", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BIRTHDAY, new org.apache.thrift.meta_data.FieldMetaData("birthday", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.RETIREDATE, new org.apache.thrift.meta_data.FieldMetaData("retiredate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.EDUCATION, new org.apache.thrift.meta_data.FieldMetaData("education", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IDCARD, new org.apache.thrift.meta_data.FieldMetaData("idcard", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AWARD, new org.apache.thrift.meta_data.FieldMetaData("award", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BINDING_TIME, new org.apache.thrift.meta_data.FieldMetaData("binding_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACTIVATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("activation_code", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.AUTH_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("auth_level", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.REGISTER_TIME, new org.apache.thrift.meta_data.FieldMetaData("register_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.REGISTER_IP, new org.apache.thrift.meta_data.FieldMetaData("register_ip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("last_login_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.LAST_LOGIN_IP, new org.apache.thrift.meta_data.FieldMetaData("last_login_ip", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGIN_COUNT, new org.apache.thrift.meta_data.FieldMetaData("login_count", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.DOWNLOAD_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("download_token", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HR_WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("hr_wxuser_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUSTOM_FIELD, new org.apache.thrift.meta_data.FieldMetaData("custom_field", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_RP_SENT, new org.apache.thrift.meta_data.FieldMetaData("is_rp_sent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.SYSUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("sysuser_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SECTION_ID, new org.apache.thrift.meta_data.FieldMetaData("section_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMAIL_ISVALID, new org.apache.thrift.meta_data.FieldMetaData("email_isvalid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.AUTH_METHOD, new org.apache.thrift.meta_data.FieldMetaData("auth_method", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.CUSTOM_FIELD_VALUES, new org.apache.thrift.meta_data.FieldMetaData("custom_field_values", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEmployeeStruct.class, metaDataMap);
  }

  public UserEmployeeStruct() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEmployeeStruct(UserEmployeeStruct other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetEmployeeid()) {
      this.employeeid = other.employeeid;
    }
    this.company_id = other.company_id;
    this.role_id = other.role_id;
    this.wxuser_id = other.wxuser_id;
    this.sex = other.sex;
    if (other.isSetEname()) {
      this.ename = other.ename;
    }
    if (other.isSetEfname()) {
      this.efname = other.efname;
    }
    if (other.isSetCname()) {
      this.cname = other.cname;
    }
    if (other.isSetCfname()) {
      this.cfname = other.cfname;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    this.is_admin = other.is_admin;
    this.status = other.status;
    if (other.isSetCompanybody()) {
      this.companybody = other.companybody;
    }
    if (other.isSetGroupname()) {
      this.groupname = other.groupname;
    }
    if (other.isSetPosition()) {
      this.position = other.position;
    }
    if (other.isSetEmploydate()) {
      this.employdate = other.employdate;
    }
    if (other.isSetManagername()) {
      this.managername = other.managername;
    }
    if (other.isSetCity()) {
      this.city = other.city;
    }
    if (other.isSetBirthday()) {
      this.birthday = other.birthday;
    }
    if (other.isSetRetiredate()) {
      this.retiredate = other.retiredate;
    }
    if (other.isSetEducation()) {
      this.education = other.education;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetIdcard()) {
      this.idcard = other.idcard;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    this.award = other.award;
    if (other.isSetBinding_time()) {
      this.binding_time = other.binding_time;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetActivation_code()) {
      this.activation_code = other.activation_code;
    }
    this.disable = other.disable;
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    this.auth_level = other.auth_level;
    if (other.isSetRegister_time()) {
      this.register_time = other.register_time;
    }
    if (other.isSetRegister_ip()) {
      this.register_ip = other.register_ip;
    }
    if (other.isSetLast_login_time()) {
      this.last_login_time = other.last_login_time;
    }
    if (other.isSetLast_login_ip()) {
      this.last_login_ip = other.last_login_ip;
    }
    this.login_count = other.login_count;
    this.source = other.source;
    if (other.isSetDownload_token()) {
      this.download_token = other.download_token;
    }
    this.hr_wxuser_id = other.hr_wxuser_id;
    if (other.isSetCustom_field()) {
      this.custom_field = other.custom_field;
    }
    this.is_rp_sent = other.is_rp_sent;
    this.sysuser_id = other.sysuser_id;
    this.position_id = other.position_id;
    this.section_id = other.section_id;
    this.email_isvalid = other.email_isvalid;
    this.auth_method = other.auth_method;
    if (other.isSetCustom_field_values()) {
      this.custom_field_values = other.custom_field_values;
    }
  }

  public UserEmployeeStruct deepCopy() {
    return new UserEmployeeStruct(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.employeeid = null;
    setCompany_idIsSet(false);
    this.company_id = 0;
    setRole_idIsSet(false);
    this.role_id = 0;
    setWxuser_idIsSet(false);
    this.wxuser_id = 0;
    setSexIsSet(false);
    this.sex = 0;
    this.ename = null;
    this.efname = null;
    this.cname = null;
    this.cfname = null;
    this.password = null;
    setIs_adminIsSet(false);
    this.is_admin = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.companybody = null;
    this.groupname = null;
    this.position = null;
    this.employdate = null;
    this.managername = null;
    this.city = null;
    this.birthday = null;
    this.retiredate = null;
    this.education = null;
    this.address = null;
    this.idcard = null;
    this.mobile = null;
    setAwardIsSet(false);
    this.award = 0;
    this.binding_time = null;
    this.email = null;
    this.activation_code = null;
    setDisableIsSet(false);
    this.disable = 0;
    this.create_time = null;
    this.update_time = null;
    setAuth_levelIsSet(false);
    this.auth_level = 0;
    this.register_time = null;
    this.register_ip = null;
    this.last_login_time = null;
    this.last_login_ip = null;
    setLogin_countIsSet(false);
    this.login_count = 0;
    setSourceIsSet(false);
    this.source = 0;
    this.download_token = null;
    setHr_wxuser_idIsSet(false);
    this.hr_wxuser_id = 0;
    this.custom_field = null;
    setIs_rp_sentIsSet(false);
    this.is_rp_sent = 0;
    setSysuser_idIsSet(false);
    this.sysuser_id = 0;
    setPosition_idIsSet(false);
    this.position_id = 0;
    setSection_idIsSet(false);
    this.section_id = 0;
    setEmail_isvalidIsSet(false);
    this.email_isvalid = 0;
    setAuth_methodIsSet(false);
    this.auth_method = 0;
    this.custom_field_values = null;
  }

  public int getId() {
    return this.id;
  }

  public UserEmployeeStruct setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getEmployeeid() {
    return this.employeeid;
  }

  public UserEmployeeStruct setEmployeeid(String employeeid) {
    this.employeeid = employeeid;
    return this;
  }

  public void unsetEmployeeid() {
    this.employeeid = null;
  }

  /** Returns true if field employeeid is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeid() {
    return this.employeeid != null;
  }

  public void setEmployeeidIsSet(boolean value) {
    if (!value) {
      this.employeeid = null;
    }
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public UserEmployeeStruct setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getRole_id() {
    return this.role_id;
  }

  public UserEmployeeStruct setRole_id(int role_id) {
    this.role_id = role_id;
    setRole_idIsSet(true);
    return this;
  }

  public void unsetRole_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROLE_ID_ISSET_ID);
  }

  /** Returns true if field role_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRole_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROLE_ID_ISSET_ID);
  }

  public void setRole_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROLE_ID_ISSET_ID, value);
  }

  public int getWxuser_id() {
    return this.wxuser_id;
  }

  public UserEmployeeStruct setWxuser_id(int wxuser_id) {
    this.wxuser_id = wxuser_id;
    setWxuser_idIsSet(true);
    return this;
  }

  public void unsetWxuser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WXUSER_ID_ISSET_ID);
  }

  /** Returns true if field wxuser_id is set (has been assigned a value) and false otherwise */
  public boolean isSetWxuser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WXUSER_ID_ISSET_ID);
  }

  public void setWxuser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WXUSER_ID_ISSET_ID, value);
  }

  public byte getSex() {
    return this.sex;
  }

  public UserEmployeeStruct setSex(byte sex) {
    this.sex = sex;
    setSexIsSet(true);
    return this;
  }

  public void unsetSex() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  /** Returns true if field sex is set (has been assigned a value) and false otherwise */
  public boolean isSetSex() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEX_ISSET_ID);
  }

  public void setSexIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEX_ISSET_ID, value);
  }

  public String getEname() {
    return this.ename;
  }

  public UserEmployeeStruct setEname(String ename) {
    this.ename = ename;
    return this;
  }

  public void unsetEname() {
    this.ename = null;
  }

  /** Returns true if field ename is set (has been assigned a value) and false otherwise */
  public boolean isSetEname() {
    return this.ename != null;
  }

  public void setEnameIsSet(boolean value) {
    if (!value) {
      this.ename = null;
    }
  }

  public String getEfname() {
    return this.efname;
  }

  public UserEmployeeStruct setEfname(String efname) {
    this.efname = efname;
    return this;
  }

  public void unsetEfname() {
    this.efname = null;
  }

  /** Returns true if field efname is set (has been assigned a value) and false otherwise */
  public boolean isSetEfname() {
    return this.efname != null;
  }

  public void setEfnameIsSet(boolean value) {
    if (!value) {
      this.efname = null;
    }
  }

  public String getCname() {
    return this.cname;
  }

  public UserEmployeeStruct setCname(String cname) {
    this.cname = cname;
    return this;
  }

  public void unsetCname() {
    this.cname = null;
  }

  /** Returns true if field cname is set (has been assigned a value) and false otherwise */
  public boolean isSetCname() {
    return this.cname != null;
  }

  public void setCnameIsSet(boolean value) {
    if (!value) {
      this.cname = null;
    }
  }

  public String getCfname() {
    return this.cfname;
  }

  public UserEmployeeStruct setCfname(String cfname) {
    this.cfname = cfname;
    return this;
  }

  public void unsetCfname() {
    this.cfname = null;
  }

  /** Returns true if field cfname is set (has been assigned a value) and false otherwise */
  public boolean isSetCfname() {
    return this.cfname != null;
  }

  public void setCfnameIsSet(boolean value) {
    if (!value) {
      this.cfname = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public UserEmployeeStruct setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public byte getIs_admin() {
    return this.is_admin;
  }

  public UserEmployeeStruct setIs_admin(byte is_admin) {
    this.is_admin = is_admin;
    setIs_adminIsSet(true);
    return this;
  }

  public void unsetIs_admin() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_ADMIN_ISSET_ID);
  }

  /** Returns true if field is_admin is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_admin() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_ADMIN_ISSET_ID);
  }

  public void setIs_adminIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_ADMIN_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public UserEmployeeStruct setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getCompanybody() {
    return this.companybody;
  }

  public UserEmployeeStruct setCompanybody(String companybody) {
    this.companybody = companybody;
    return this;
  }

  public void unsetCompanybody() {
    this.companybody = null;
  }

  /** Returns true if field companybody is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanybody() {
    return this.companybody != null;
  }

  public void setCompanybodyIsSet(boolean value) {
    if (!value) {
      this.companybody = null;
    }
  }

  public String getGroupname() {
    return this.groupname;
  }

  public UserEmployeeStruct setGroupname(String groupname) {
    this.groupname = groupname;
    return this;
  }

  public void unsetGroupname() {
    this.groupname = null;
  }

  /** Returns true if field groupname is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupname() {
    return this.groupname != null;
  }

  public void setGroupnameIsSet(boolean value) {
    if (!value) {
      this.groupname = null;
    }
  }

  public String getPosition() {
    return this.position;
  }

  public UserEmployeeStruct setPosition(String position) {
    this.position = position;
    return this;
  }

  public void unsetPosition() {
    this.position = null;
  }

  /** Returns true if field position is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition() {
    return this.position != null;
  }

  public void setPositionIsSet(boolean value) {
    if (!value) {
      this.position = null;
    }
  }

  public String getEmploydate() {
    return this.employdate;
  }

  public UserEmployeeStruct setEmploydate(String employdate) {
    this.employdate = employdate;
    return this;
  }

  public void unsetEmploydate() {
    this.employdate = null;
  }

  /** Returns true if field employdate is set (has been assigned a value) and false otherwise */
  public boolean isSetEmploydate() {
    return this.employdate != null;
  }

  public void setEmploydateIsSet(boolean value) {
    if (!value) {
      this.employdate = null;
    }
  }

  public String getManagername() {
    return this.managername;
  }

  public UserEmployeeStruct setManagername(String managername) {
    this.managername = managername;
    return this;
  }

  public void unsetManagername() {
    this.managername = null;
  }

  /** Returns true if field managername is set (has been assigned a value) and false otherwise */
  public boolean isSetManagername() {
    return this.managername != null;
  }

  public void setManagernameIsSet(boolean value) {
    if (!value) {
      this.managername = null;
    }
  }

  public String getCity() {
    return this.city;
  }

  public UserEmployeeStruct setCity(String city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public String getBirthday() {
    return this.birthday;
  }

  public UserEmployeeStruct setBirthday(String birthday) {
    this.birthday = birthday;
    return this;
  }

  public void unsetBirthday() {
    this.birthday = null;
  }

  /** Returns true if field birthday is set (has been assigned a value) and false otherwise */
  public boolean isSetBirthday() {
    return this.birthday != null;
  }

  public void setBirthdayIsSet(boolean value) {
    if (!value) {
      this.birthday = null;
    }
  }

  public String getRetiredate() {
    return this.retiredate;
  }

  public UserEmployeeStruct setRetiredate(String retiredate) {
    this.retiredate = retiredate;
    return this;
  }

  public void unsetRetiredate() {
    this.retiredate = null;
  }

  /** Returns true if field retiredate is set (has been assigned a value) and false otherwise */
  public boolean isSetRetiredate() {
    return this.retiredate != null;
  }

  public void setRetiredateIsSet(boolean value) {
    if (!value) {
      this.retiredate = null;
    }
  }

  public String getEducation() {
    return this.education;
  }

  public UserEmployeeStruct setEducation(String education) {
    this.education = education;
    return this;
  }

  public void unsetEducation() {
    this.education = null;
  }

  /** Returns true if field education is set (has been assigned a value) and false otherwise */
  public boolean isSetEducation() {
    return this.education != null;
  }

  public void setEducationIsSet(boolean value) {
    if (!value) {
      this.education = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public UserEmployeeStruct setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getIdcard() {
    return this.idcard;
  }

  public UserEmployeeStruct setIdcard(String idcard) {
    this.idcard = idcard;
    return this;
  }

  public void unsetIdcard() {
    this.idcard = null;
  }

  /** Returns true if field idcard is set (has been assigned a value) and false otherwise */
  public boolean isSetIdcard() {
    return this.idcard != null;
  }

  public void setIdcardIsSet(boolean value) {
    if (!value) {
      this.idcard = null;
    }
  }

  public String getMobile() {
    return this.mobile;
  }

  public UserEmployeeStruct setMobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public long getAward() {
    return this.award;
  }

  public UserEmployeeStruct setAward(long award) {
    this.award = award;
    setAwardIsSet(true);
    return this;
  }

  public void unsetAward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  /** Returns true if field award is set (has been assigned a value) and false otherwise */
  public boolean isSetAward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  public void setAwardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_ISSET_ID, value);
  }

  public String getBinding_time() {
    return this.binding_time;
  }

  public UserEmployeeStruct setBinding_time(String binding_time) {
    this.binding_time = binding_time;
    return this;
  }

  public void unsetBinding_time() {
    this.binding_time = null;
  }

  /** Returns true if field binding_time is set (has been assigned a value) and false otherwise */
  public boolean isSetBinding_time() {
    return this.binding_time != null;
  }

  public void setBinding_timeIsSet(boolean value) {
    if (!value) {
      this.binding_time = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public UserEmployeeStruct setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getActivation_code() {
    return this.activation_code;
  }

  public UserEmployeeStruct setActivation_code(String activation_code) {
    this.activation_code = activation_code;
    return this;
  }

  public void unsetActivation_code() {
    this.activation_code = null;
  }

  /** Returns true if field activation_code is set (has been assigned a value) and false otherwise */
  public boolean isSetActivation_code() {
    return this.activation_code != null;
  }

  public void setActivation_codeIsSet(boolean value) {
    if (!value) {
      this.activation_code = null;
    }
  }

  public byte getDisable() {
    return this.disable;
  }

  public UserEmployeeStruct setDisable(byte disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public UserEmployeeStruct setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public UserEmployeeStruct setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public byte getAuth_level() {
    return this.auth_level;
  }

  public UserEmployeeStruct setAuth_level(byte auth_level) {
    this.auth_level = auth_level;
    setAuth_levelIsSet(true);
    return this;
  }

  public void unsetAuth_level() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTH_LEVEL_ISSET_ID);
  }

  /** Returns true if field auth_level is set (has been assigned a value) and false otherwise */
  public boolean isSetAuth_level() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTH_LEVEL_ISSET_ID);
  }

  public void setAuth_levelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTH_LEVEL_ISSET_ID, value);
  }

  public String getRegister_time() {
    return this.register_time;
  }

  public UserEmployeeStruct setRegister_time(String register_time) {
    this.register_time = register_time;
    return this;
  }

  public void unsetRegister_time() {
    this.register_time = null;
  }

  /** Returns true if field register_time is set (has been assigned a value) and false otherwise */
  public boolean isSetRegister_time() {
    return this.register_time != null;
  }

  public void setRegister_timeIsSet(boolean value) {
    if (!value) {
      this.register_time = null;
    }
  }

  public String getRegister_ip() {
    return this.register_ip;
  }

  public UserEmployeeStruct setRegister_ip(String register_ip) {
    this.register_ip = register_ip;
    return this;
  }

  public void unsetRegister_ip() {
    this.register_ip = null;
  }

  /** Returns true if field register_ip is set (has been assigned a value) and false otherwise */
  public boolean isSetRegister_ip() {
    return this.register_ip != null;
  }

  public void setRegister_ipIsSet(boolean value) {
    if (!value) {
      this.register_ip = null;
    }
  }

  public String getLast_login_time() {
    return this.last_login_time;
  }

  public UserEmployeeStruct setLast_login_time(String last_login_time) {
    this.last_login_time = last_login_time;
    return this;
  }

  public void unsetLast_login_time() {
    this.last_login_time = null;
  }

  /** Returns true if field last_login_time is set (has been assigned a value) and false otherwise */
  public boolean isSetLast_login_time() {
    return this.last_login_time != null;
  }

  public void setLast_login_timeIsSet(boolean value) {
    if (!value) {
      this.last_login_time = null;
    }
  }

  public String getLast_login_ip() {
    return this.last_login_ip;
  }

  public UserEmployeeStruct setLast_login_ip(String last_login_ip) {
    this.last_login_ip = last_login_ip;
    return this;
  }

  public void unsetLast_login_ip() {
    this.last_login_ip = null;
  }

  /** Returns true if field last_login_ip is set (has been assigned a value) and false otherwise */
  public boolean isSetLast_login_ip() {
    return this.last_login_ip != null;
  }

  public void setLast_login_ipIsSet(boolean value) {
    if (!value) {
      this.last_login_ip = null;
    }
  }

  public int getLogin_count() {
    return this.login_count;
  }

  public UserEmployeeStruct setLogin_count(int login_count) {
    this.login_count = login_count;
    setLogin_countIsSet(true);
    return this;
  }

  public void unsetLogin_count() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOGIN_COUNT_ISSET_ID);
  }

  /** Returns true if field login_count is set (has been assigned a value) and false otherwise */
  public boolean isSetLogin_count() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOGIN_COUNT_ISSET_ID);
  }

  public void setLogin_countIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOGIN_COUNT_ISSET_ID, value);
  }

  public byte getSource() {
    return this.source;
  }

  public UserEmployeeStruct setSource(byte source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
  }

  public String getDownload_token() {
    return this.download_token;
  }

  public UserEmployeeStruct setDownload_token(String download_token) {
    this.download_token = download_token;
    return this;
  }

  public void unsetDownload_token() {
    this.download_token = null;
  }

  /** Returns true if field download_token is set (has been assigned a value) and false otherwise */
  public boolean isSetDownload_token() {
    return this.download_token != null;
  }

  public void setDownload_tokenIsSet(boolean value) {
    if (!value) {
      this.download_token = null;
    }
  }

  public int getHr_wxuser_id() {
    return this.hr_wxuser_id;
  }

  public UserEmployeeStruct setHr_wxuser_id(int hr_wxuser_id) {
    this.hr_wxuser_id = hr_wxuser_id;
    setHr_wxuser_idIsSet(true);
    return this;
  }

  public void unsetHr_wxuser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HR_WXUSER_ID_ISSET_ID);
  }

  /** Returns true if field hr_wxuser_id is set (has been assigned a value) and false otherwise */
  public boolean isSetHr_wxuser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HR_WXUSER_ID_ISSET_ID);
  }

  public void setHr_wxuser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HR_WXUSER_ID_ISSET_ID, value);
  }

  public String getCustom_field() {
    return this.custom_field;
  }

  public UserEmployeeStruct setCustom_field(String custom_field) {
    this.custom_field = custom_field;
    return this;
  }

  public void unsetCustom_field() {
    this.custom_field = null;
  }

  /** Returns true if field custom_field is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_field() {
    return this.custom_field != null;
  }

  public void setCustom_fieldIsSet(boolean value) {
    if (!value) {
      this.custom_field = null;
    }
  }

  public byte getIs_rp_sent() {
    return this.is_rp_sent;
  }

  public UserEmployeeStruct setIs_rp_sent(byte is_rp_sent) {
    this.is_rp_sent = is_rp_sent;
    setIs_rp_sentIsSet(true);
    return this;
  }

  public void unsetIs_rp_sent() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_RP_SENT_ISSET_ID);
  }

  /** Returns true if field is_rp_sent is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_rp_sent() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_RP_SENT_ISSET_ID);
  }

  public void setIs_rp_sentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_RP_SENT_ISSET_ID, value);
  }

  public int getSysuser_id() {
    return this.sysuser_id;
  }

  public UserEmployeeStruct setSysuser_id(int sysuser_id) {
    this.sysuser_id = sysuser_id;
    setSysuser_idIsSet(true);
    return this;
  }

  public void unsetSysuser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYSUSER_ID_ISSET_ID);
  }

  /** Returns true if field sysuser_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSysuser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYSUSER_ID_ISSET_ID);
  }

  public void setSysuser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYSUSER_ID_ISSET_ID, value);
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public UserEmployeeStruct setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public int getSection_id() {
    return this.section_id;
  }

  public UserEmployeeStruct setSection_id(int section_id) {
    this.section_id = section_id;
    setSection_idIsSet(true);
    return this;
  }

  public void unsetSection_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SECTION_ID_ISSET_ID);
  }

  /** Returns true if field section_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSection_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SECTION_ID_ISSET_ID);
  }

  public void setSection_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SECTION_ID_ISSET_ID, value);
  }

  public byte getEmail_isvalid() {
    return this.email_isvalid;
  }

  public UserEmployeeStruct setEmail_isvalid(byte email_isvalid) {
    this.email_isvalid = email_isvalid;
    setEmail_isvalidIsSet(true);
    return this;
  }

  public void unsetEmail_isvalid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMAIL_ISVALID_ISSET_ID);
  }

  /** Returns true if field email_isvalid is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail_isvalid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMAIL_ISVALID_ISSET_ID);
  }

  public void setEmail_isvalidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMAIL_ISVALID_ISSET_ID, value);
  }

  public byte getAuth_method() {
    return this.auth_method;
  }

  public UserEmployeeStruct setAuth_method(byte auth_method) {
    this.auth_method = auth_method;
    setAuth_methodIsSet(true);
    return this;
  }

  public void unsetAuth_method() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUTH_METHOD_ISSET_ID);
  }

  /** Returns true if field auth_method is set (has been assigned a value) and false otherwise */
  public boolean isSetAuth_method() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUTH_METHOD_ISSET_ID);
  }

  public void setAuth_methodIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUTH_METHOD_ISSET_ID, value);
  }

  public String getCustom_field_values() {
    return this.custom_field_values;
  }

  public UserEmployeeStruct setCustom_field_values(String custom_field_values) {
    this.custom_field_values = custom_field_values;
    return this;
  }

  public void unsetCustom_field_values() {
    this.custom_field_values = null;
  }

  /** Returns true if field custom_field_values is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_field_values() {
    return this.custom_field_values != null;
  }

  public void setCustom_field_valuesIsSet(boolean value) {
    if (!value) {
      this.custom_field_values = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case EMPLOYEEID:
      if (value == null) {
        unsetEmployeeid();
      } else {
        setEmployeeid((String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((Integer)value);
      }
      break;

    case ROLE_ID:
      if (value == null) {
        unsetRole_id();
      } else {
        setRole_id((Integer)value);
      }
      break;

    case WXUSER_ID:
      if (value == null) {
        unsetWxuser_id();
      } else {
        setWxuser_id((Integer)value);
      }
      break;

    case SEX:
      if (value == null) {
        unsetSex();
      } else {
        setSex((Byte)value);
      }
      break;

    case ENAME:
      if (value == null) {
        unsetEname();
      } else {
        setEname((String)value);
      }
      break;

    case EFNAME:
      if (value == null) {
        unsetEfname();
      } else {
        setEfname((String)value);
      }
      break;

    case CNAME:
      if (value == null) {
        unsetCname();
      } else {
        setCname((String)value);
      }
      break;

    case CFNAME:
      if (value == null) {
        unsetCfname();
      } else {
        setCfname((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case IS_ADMIN:
      if (value == null) {
        unsetIs_admin();
      } else {
        setIs_admin((Byte)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case COMPANYBODY:
      if (value == null) {
        unsetCompanybody();
      } else {
        setCompanybody((String)value);
      }
      break;

    case GROUPNAME:
      if (value == null) {
        unsetGroupname();
      } else {
        setGroupname((String)value);
      }
      break;

    case POSITION:
      if (value == null) {
        unsetPosition();
      } else {
        setPosition((String)value);
      }
      break;

    case EMPLOYDATE:
      if (value == null) {
        unsetEmploydate();
      } else {
        setEmploydate((String)value);
      }
      break;

    case MANAGERNAME:
      if (value == null) {
        unsetManagername();
      } else {
        setManagername((String)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((String)value);
      }
      break;

    case BIRTHDAY:
      if (value == null) {
        unsetBirthday();
      } else {
        setBirthday((String)value);
      }
      break;

    case RETIREDATE:
      if (value == null) {
        unsetRetiredate();
      } else {
        setRetiredate((String)value);
      }
      break;

    case EDUCATION:
      if (value == null) {
        unsetEducation();
      } else {
        setEducation((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case IDCARD:
      if (value == null) {
        unsetIdcard();
      } else {
        setIdcard((String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((String)value);
      }
      break;

    case AWARD:
      if (value == null) {
        unsetAward();
      } else {
        setAward((Long)value);
      }
      break;

    case BINDING_TIME:
      if (value == null) {
        unsetBinding_time();
      } else {
        setBinding_time((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case ACTIVATION_CODE:
      if (value == null) {
        unsetActivation_code();
      } else {
        setActivation_code((String)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((Byte)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    case AUTH_LEVEL:
      if (value == null) {
        unsetAuth_level();
      } else {
        setAuth_level((Byte)value);
      }
      break;

    case REGISTER_TIME:
      if (value == null) {
        unsetRegister_time();
      } else {
        setRegister_time((String)value);
      }
      break;

    case REGISTER_IP:
      if (value == null) {
        unsetRegister_ip();
      } else {
        setRegister_ip((String)value);
      }
      break;

    case LAST_LOGIN_TIME:
      if (value == null) {
        unsetLast_login_time();
      } else {
        setLast_login_time((String)value);
      }
      break;

    case LAST_LOGIN_IP:
      if (value == null) {
        unsetLast_login_ip();
      } else {
        setLast_login_ip((String)value);
      }
      break;

    case LOGIN_COUNT:
      if (value == null) {
        unsetLogin_count();
      } else {
        setLogin_count((Integer)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((Byte)value);
      }
      break;

    case DOWNLOAD_TOKEN:
      if (value == null) {
        unsetDownload_token();
      } else {
        setDownload_token((String)value);
      }
      break;

    case HR_WXUSER_ID:
      if (value == null) {
        unsetHr_wxuser_id();
      } else {
        setHr_wxuser_id((Integer)value);
      }
      break;

    case CUSTOM_FIELD:
      if (value == null) {
        unsetCustom_field();
      } else {
        setCustom_field((String)value);
      }
      break;

    case IS_RP_SENT:
      if (value == null) {
        unsetIs_rp_sent();
      } else {
        setIs_rp_sent((Byte)value);
      }
      break;

    case SYSUSER_ID:
      if (value == null) {
        unsetSysuser_id();
      } else {
        setSysuser_id((Integer)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((Integer)value);
      }
      break;

    case SECTION_ID:
      if (value == null) {
        unsetSection_id();
      } else {
        setSection_id((Integer)value);
      }
      break;

    case EMAIL_ISVALID:
      if (value == null) {
        unsetEmail_isvalid();
      } else {
        setEmail_isvalid((Byte)value);
      }
      break;

    case AUTH_METHOD:
      if (value == null) {
        unsetAuth_method();
      } else {
        setAuth_method((Byte)value);
      }
      break;

    case CUSTOM_FIELD_VALUES:
      if (value == null) {
        unsetCustom_field_values();
      } else {
        setCustom_field_values((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case EMPLOYEEID:
      return getEmployeeid();

    case COMPANY_ID:
      return getCompany_id();

    case ROLE_ID:
      return getRole_id();

    case WXUSER_ID:
      return getWxuser_id();

    case SEX:
      return getSex();

    case ENAME:
      return getEname();

    case EFNAME:
      return getEfname();

    case CNAME:
      return getCname();

    case CFNAME:
      return getCfname();

    case PASSWORD:
      return getPassword();

    case IS_ADMIN:
      return getIs_admin();

    case STATUS:
      return getStatus();

    case COMPANYBODY:
      return getCompanybody();

    case GROUPNAME:
      return getGroupname();

    case POSITION:
      return getPosition();

    case EMPLOYDATE:
      return getEmploydate();

    case MANAGERNAME:
      return getManagername();

    case CITY:
      return getCity();

    case BIRTHDAY:
      return getBirthday();

    case RETIREDATE:
      return getRetiredate();

    case EDUCATION:
      return getEducation();

    case ADDRESS:
      return getAddress();

    case IDCARD:
      return getIdcard();

    case MOBILE:
      return getMobile();

    case AWARD:
      return getAward();

    case BINDING_TIME:
      return getBinding_time();

    case EMAIL:
      return getEmail();

    case ACTIVATION_CODE:
      return getActivation_code();

    case DISABLE:
      return getDisable();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    case AUTH_LEVEL:
      return getAuth_level();

    case REGISTER_TIME:
      return getRegister_time();

    case REGISTER_IP:
      return getRegister_ip();

    case LAST_LOGIN_TIME:
      return getLast_login_time();

    case LAST_LOGIN_IP:
      return getLast_login_ip();

    case LOGIN_COUNT:
      return getLogin_count();

    case SOURCE:
      return getSource();

    case DOWNLOAD_TOKEN:
      return getDownload_token();

    case HR_WXUSER_ID:
      return getHr_wxuser_id();

    case CUSTOM_FIELD:
      return getCustom_field();

    case IS_RP_SENT:
      return getIs_rp_sent();

    case SYSUSER_ID:
      return getSysuser_id();

    case POSITION_ID:
      return getPosition_id();

    case SECTION_ID:
      return getSection_id();

    case EMAIL_ISVALID:
      return getEmail_isvalid();

    case AUTH_METHOD:
      return getAuth_method();

    case CUSTOM_FIELD_VALUES:
      return getCustom_field_values();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case EMPLOYEEID:
      return isSetEmployeeid();
    case COMPANY_ID:
      return isSetCompany_id();
    case ROLE_ID:
      return isSetRole_id();
    case WXUSER_ID:
      return isSetWxuser_id();
    case SEX:
      return isSetSex();
    case ENAME:
      return isSetEname();
    case EFNAME:
      return isSetEfname();
    case CNAME:
      return isSetCname();
    case CFNAME:
      return isSetCfname();
    case PASSWORD:
      return isSetPassword();
    case IS_ADMIN:
      return isSetIs_admin();
    case STATUS:
      return isSetStatus();
    case COMPANYBODY:
      return isSetCompanybody();
    case GROUPNAME:
      return isSetGroupname();
    case POSITION:
      return isSetPosition();
    case EMPLOYDATE:
      return isSetEmploydate();
    case MANAGERNAME:
      return isSetManagername();
    case CITY:
      return isSetCity();
    case BIRTHDAY:
      return isSetBirthday();
    case RETIREDATE:
      return isSetRetiredate();
    case EDUCATION:
      return isSetEducation();
    case ADDRESS:
      return isSetAddress();
    case IDCARD:
      return isSetIdcard();
    case MOBILE:
      return isSetMobile();
    case AWARD:
      return isSetAward();
    case BINDING_TIME:
      return isSetBinding_time();
    case EMAIL:
      return isSetEmail();
    case ACTIVATION_CODE:
      return isSetActivation_code();
    case DISABLE:
      return isSetDisable();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case AUTH_LEVEL:
      return isSetAuth_level();
    case REGISTER_TIME:
      return isSetRegister_time();
    case REGISTER_IP:
      return isSetRegister_ip();
    case LAST_LOGIN_TIME:
      return isSetLast_login_time();
    case LAST_LOGIN_IP:
      return isSetLast_login_ip();
    case LOGIN_COUNT:
      return isSetLogin_count();
    case SOURCE:
      return isSetSource();
    case DOWNLOAD_TOKEN:
      return isSetDownload_token();
    case HR_WXUSER_ID:
      return isSetHr_wxuser_id();
    case CUSTOM_FIELD:
      return isSetCustom_field();
    case IS_RP_SENT:
      return isSetIs_rp_sent();
    case SYSUSER_ID:
      return isSetSysuser_id();
    case POSITION_ID:
      return isSetPosition_id();
    case SECTION_ID:
      return isSetSection_id();
    case EMAIL_ISVALID:
      return isSetEmail_isvalid();
    case AUTH_METHOD:
      return isSetAuth_method();
    case CUSTOM_FIELD_VALUES:
      return isSetCustom_field_values();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEmployeeStruct)
      return this.equals((UserEmployeeStruct)that);
    return false;
  }

  public boolean equals(UserEmployeeStruct that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_employeeid = true && this.isSetEmployeeid();
    boolean that_present_employeeid = true && that.isSetEmployeeid();
    if (this_present_employeeid || that_present_employeeid) {
      if (!(this_present_employeeid && that_present_employeeid))
        return false;
      if (!this.employeeid.equals(that.employeeid))
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_role_id = true && this.isSetRole_id();
    boolean that_present_role_id = true && that.isSetRole_id();
    if (this_present_role_id || that_present_role_id) {
      if (!(this_present_role_id && that_present_role_id))
        return false;
      if (this.role_id != that.role_id)
        return false;
    }

    boolean this_present_wxuser_id = true && this.isSetWxuser_id();
    boolean that_present_wxuser_id = true && that.isSetWxuser_id();
    if (this_present_wxuser_id || that_present_wxuser_id) {
      if (!(this_present_wxuser_id && that_present_wxuser_id))
        return false;
      if (this.wxuser_id != that.wxuser_id)
        return false;
    }

    boolean this_present_sex = true && this.isSetSex();
    boolean that_present_sex = true && that.isSetSex();
    if (this_present_sex || that_present_sex) {
      if (!(this_present_sex && that_present_sex))
        return false;
      if (this.sex != that.sex)
        return false;
    }

    boolean this_present_ename = true && this.isSetEname();
    boolean that_present_ename = true && that.isSetEname();
    if (this_present_ename || that_present_ename) {
      if (!(this_present_ename && that_present_ename))
        return false;
      if (!this.ename.equals(that.ename))
        return false;
    }

    boolean this_present_efname = true && this.isSetEfname();
    boolean that_present_efname = true && that.isSetEfname();
    if (this_present_efname || that_present_efname) {
      if (!(this_present_efname && that_present_efname))
        return false;
      if (!this.efname.equals(that.efname))
        return false;
    }

    boolean this_present_cname = true && this.isSetCname();
    boolean that_present_cname = true && that.isSetCname();
    if (this_present_cname || that_present_cname) {
      if (!(this_present_cname && that_present_cname))
        return false;
      if (!this.cname.equals(that.cname))
        return false;
    }

    boolean this_present_cfname = true && this.isSetCfname();
    boolean that_present_cfname = true && that.isSetCfname();
    if (this_present_cfname || that_present_cfname) {
      if (!(this_present_cfname && that_present_cfname))
        return false;
      if (!this.cfname.equals(that.cfname))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_is_admin = true && this.isSetIs_admin();
    boolean that_present_is_admin = true && that.isSetIs_admin();
    if (this_present_is_admin || that_present_is_admin) {
      if (!(this_present_is_admin && that_present_is_admin))
        return false;
      if (this.is_admin != that.is_admin)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_companybody = true && this.isSetCompanybody();
    boolean that_present_companybody = true && that.isSetCompanybody();
    if (this_present_companybody || that_present_companybody) {
      if (!(this_present_companybody && that_present_companybody))
        return false;
      if (!this.companybody.equals(that.companybody))
        return false;
    }

    boolean this_present_groupname = true && this.isSetGroupname();
    boolean that_present_groupname = true && that.isSetGroupname();
    if (this_present_groupname || that_present_groupname) {
      if (!(this_present_groupname && that_present_groupname))
        return false;
      if (!this.groupname.equals(that.groupname))
        return false;
    }

    boolean this_present_position = true && this.isSetPosition();
    boolean that_present_position = true && that.isSetPosition();
    if (this_present_position || that_present_position) {
      if (!(this_present_position && that_present_position))
        return false;
      if (!this.position.equals(that.position))
        return false;
    }

    boolean this_present_employdate = true && this.isSetEmploydate();
    boolean that_present_employdate = true && that.isSetEmploydate();
    if (this_present_employdate || that_present_employdate) {
      if (!(this_present_employdate && that_present_employdate))
        return false;
      if (!this.employdate.equals(that.employdate))
        return false;
    }

    boolean this_present_managername = true && this.isSetManagername();
    boolean that_present_managername = true && that.isSetManagername();
    if (this_present_managername || that_present_managername) {
      if (!(this_present_managername && that_present_managername))
        return false;
      if (!this.managername.equals(that.managername))
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_birthday = true && this.isSetBirthday();
    boolean that_present_birthday = true && that.isSetBirthday();
    if (this_present_birthday || that_present_birthday) {
      if (!(this_present_birthday && that_present_birthday))
        return false;
      if (!this.birthday.equals(that.birthday))
        return false;
    }

    boolean this_present_retiredate = true && this.isSetRetiredate();
    boolean that_present_retiredate = true && that.isSetRetiredate();
    if (this_present_retiredate || that_present_retiredate) {
      if (!(this_present_retiredate && that_present_retiredate))
        return false;
      if (!this.retiredate.equals(that.retiredate))
        return false;
    }

    boolean this_present_education = true && this.isSetEducation();
    boolean that_present_education = true && that.isSetEducation();
    if (this_present_education || that_present_education) {
      if (!(this_present_education && that_present_education))
        return false;
      if (!this.education.equals(that.education))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_idcard = true && this.isSetIdcard();
    boolean that_present_idcard = true && that.isSetIdcard();
    if (this_present_idcard || that_present_idcard) {
      if (!(this_present_idcard && that_present_idcard))
        return false;
      if (!this.idcard.equals(that.idcard))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_award = true && this.isSetAward();
    boolean that_present_award = true && that.isSetAward();
    if (this_present_award || that_present_award) {
      if (!(this_present_award && that_present_award))
        return false;
      if (this.award != that.award)
        return false;
    }

    boolean this_present_binding_time = true && this.isSetBinding_time();
    boolean that_present_binding_time = true && that.isSetBinding_time();
    if (this_present_binding_time || that_present_binding_time) {
      if (!(this_present_binding_time && that_present_binding_time))
        return false;
      if (!this.binding_time.equals(that.binding_time))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_activation_code = true && this.isSetActivation_code();
    boolean that_present_activation_code = true && that.isSetActivation_code();
    if (this_present_activation_code || that_present_activation_code) {
      if (!(this_present_activation_code && that_present_activation_code))
        return false;
      if (!this.activation_code.equals(that.activation_code))
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_auth_level = true && this.isSetAuth_level();
    boolean that_present_auth_level = true && that.isSetAuth_level();
    if (this_present_auth_level || that_present_auth_level) {
      if (!(this_present_auth_level && that_present_auth_level))
        return false;
      if (this.auth_level != that.auth_level)
        return false;
    }

    boolean this_present_register_time = true && this.isSetRegister_time();
    boolean that_present_register_time = true && that.isSetRegister_time();
    if (this_present_register_time || that_present_register_time) {
      if (!(this_present_register_time && that_present_register_time))
        return false;
      if (!this.register_time.equals(that.register_time))
        return false;
    }

    boolean this_present_register_ip = true && this.isSetRegister_ip();
    boolean that_present_register_ip = true && that.isSetRegister_ip();
    if (this_present_register_ip || that_present_register_ip) {
      if (!(this_present_register_ip && that_present_register_ip))
        return false;
      if (!this.register_ip.equals(that.register_ip))
        return false;
    }

    boolean this_present_last_login_time = true && this.isSetLast_login_time();
    boolean that_present_last_login_time = true && that.isSetLast_login_time();
    if (this_present_last_login_time || that_present_last_login_time) {
      if (!(this_present_last_login_time && that_present_last_login_time))
        return false;
      if (!this.last_login_time.equals(that.last_login_time))
        return false;
    }

    boolean this_present_last_login_ip = true && this.isSetLast_login_ip();
    boolean that_present_last_login_ip = true && that.isSetLast_login_ip();
    if (this_present_last_login_ip || that_present_last_login_ip) {
      if (!(this_present_last_login_ip && that_present_last_login_ip))
        return false;
      if (!this.last_login_ip.equals(that.last_login_ip))
        return false;
    }

    boolean this_present_login_count = true && this.isSetLogin_count();
    boolean that_present_login_count = true && that.isSetLogin_count();
    if (this_present_login_count || that_present_login_count) {
      if (!(this_present_login_count && that_present_login_count))
        return false;
      if (this.login_count != that.login_count)
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_download_token = true && this.isSetDownload_token();
    boolean that_present_download_token = true && that.isSetDownload_token();
    if (this_present_download_token || that_present_download_token) {
      if (!(this_present_download_token && that_present_download_token))
        return false;
      if (!this.download_token.equals(that.download_token))
        return false;
    }

    boolean this_present_hr_wxuser_id = true && this.isSetHr_wxuser_id();
    boolean that_present_hr_wxuser_id = true && that.isSetHr_wxuser_id();
    if (this_present_hr_wxuser_id || that_present_hr_wxuser_id) {
      if (!(this_present_hr_wxuser_id && that_present_hr_wxuser_id))
        return false;
      if (this.hr_wxuser_id != that.hr_wxuser_id)
        return false;
    }

    boolean this_present_custom_field = true && this.isSetCustom_field();
    boolean that_present_custom_field = true && that.isSetCustom_field();
    if (this_present_custom_field || that_present_custom_field) {
      if (!(this_present_custom_field && that_present_custom_field))
        return false;
      if (!this.custom_field.equals(that.custom_field))
        return false;
    }

    boolean this_present_is_rp_sent = true && this.isSetIs_rp_sent();
    boolean that_present_is_rp_sent = true && that.isSetIs_rp_sent();
    if (this_present_is_rp_sent || that_present_is_rp_sent) {
      if (!(this_present_is_rp_sent && that_present_is_rp_sent))
        return false;
      if (this.is_rp_sent != that.is_rp_sent)
        return false;
    }

    boolean this_present_sysuser_id = true && this.isSetSysuser_id();
    boolean that_present_sysuser_id = true && that.isSetSysuser_id();
    if (this_present_sysuser_id || that_present_sysuser_id) {
      if (!(this_present_sysuser_id && that_present_sysuser_id))
        return false;
      if (this.sysuser_id != that.sysuser_id)
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_section_id = true && this.isSetSection_id();
    boolean that_present_section_id = true && that.isSetSection_id();
    if (this_present_section_id || that_present_section_id) {
      if (!(this_present_section_id && that_present_section_id))
        return false;
      if (this.section_id != that.section_id)
        return false;
    }

    boolean this_present_email_isvalid = true && this.isSetEmail_isvalid();
    boolean that_present_email_isvalid = true && that.isSetEmail_isvalid();
    if (this_present_email_isvalid || that_present_email_isvalid) {
      if (!(this_present_email_isvalid && that_present_email_isvalid))
        return false;
      if (this.email_isvalid != that.email_isvalid)
        return false;
    }

    boolean this_present_auth_method = true && this.isSetAuth_method();
    boolean that_present_auth_method = true && that.isSetAuth_method();
    if (this_present_auth_method || that_present_auth_method) {
      if (!(this_present_auth_method && that_present_auth_method))
        return false;
      if (this.auth_method != that.auth_method)
        return false;
    }

    boolean this_present_custom_field_values = true && this.isSetCustom_field_values();
    boolean that_present_custom_field_values = true && that.isSetCustom_field_values();
    if (this_present_custom_field_values || that_present_custom_field_values) {
      if (!(this_present_custom_field_values && that_present_custom_field_values))
        return false;
      if (!this.custom_field_values.equals(that.custom_field_values))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetEmployeeid()) ? 131071 : 524287);
    if (isSetEmployeeid())
      hashCode = hashCode * 8191 + employeeid.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetRole_id()) ? 131071 : 524287);
    if (isSetRole_id())
      hashCode = hashCode * 8191 + role_id;

    hashCode = hashCode * 8191 + ((isSetWxuser_id()) ? 131071 : 524287);
    if (isSetWxuser_id())
      hashCode = hashCode * 8191 + wxuser_id;

    hashCode = hashCode * 8191 + ((isSetSex()) ? 131071 : 524287);
    if (isSetSex())
      hashCode = hashCode * 8191 + (int) (sex);

    hashCode = hashCode * 8191 + ((isSetEname()) ? 131071 : 524287);
    if (isSetEname())
      hashCode = hashCode * 8191 + ename.hashCode();

    hashCode = hashCode * 8191 + ((isSetEfname()) ? 131071 : 524287);
    if (isSetEfname())
      hashCode = hashCode * 8191 + efname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCname()) ? 131071 : 524287);
    if (isSetCname())
      hashCode = hashCode * 8191 + cname.hashCode();

    hashCode = hashCode * 8191 + ((isSetCfname()) ? 131071 : 524287);
    if (isSetCfname())
      hashCode = hashCode * 8191 + cfname.hashCode();

    hashCode = hashCode * 8191 + ((isSetPassword()) ? 131071 : 524287);
    if (isSetPassword())
      hashCode = hashCode * 8191 + password.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_admin()) ? 131071 : 524287);
    if (isSetIs_admin())
      hashCode = hashCode * 8191 + (int) (is_admin);

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + status;

    hashCode = hashCode * 8191 + ((isSetCompanybody()) ? 131071 : 524287);
    if (isSetCompanybody())
      hashCode = hashCode * 8191 + companybody.hashCode();

    hashCode = hashCode * 8191 + ((isSetGroupname()) ? 131071 : 524287);
    if (isSetGroupname())
      hashCode = hashCode * 8191 + groupname.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
    if (isSetPosition())
      hashCode = hashCode * 8191 + position.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmploydate()) ? 131071 : 524287);
    if (isSetEmploydate())
      hashCode = hashCode * 8191 + employdate.hashCode();

    hashCode = hashCode * 8191 + ((isSetManagername()) ? 131071 : 524287);
    if (isSetManagername())
      hashCode = hashCode * 8191 + managername.hashCode();

    hashCode = hashCode * 8191 + ((isSetCity()) ? 131071 : 524287);
    if (isSetCity())
      hashCode = hashCode * 8191 + city.hashCode();

    hashCode = hashCode * 8191 + ((isSetBirthday()) ? 131071 : 524287);
    if (isSetBirthday())
      hashCode = hashCode * 8191 + birthday.hashCode();

    hashCode = hashCode * 8191 + ((isSetRetiredate()) ? 131071 : 524287);
    if (isSetRetiredate())
      hashCode = hashCode * 8191 + retiredate.hashCode();

    hashCode = hashCode * 8191 + ((isSetEducation()) ? 131071 : 524287);
    if (isSetEducation())
      hashCode = hashCode * 8191 + education.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetIdcard()) ? 131071 : 524287);
    if (isSetIdcard())
      hashCode = hashCode * 8191 + idcard.hashCode();

    hashCode = hashCode * 8191 + ((isSetMobile()) ? 131071 : 524287);
    if (isSetMobile())
      hashCode = hashCode * 8191 + mobile.hashCode();

    hashCode = hashCode * 8191 + ((isSetAward()) ? 131071 : 524287);
    if (isSetAward())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(award);

    hashCode = hashCode * 8191 + ((isSetBinding_time()) ? 131071 : 524287);
    if (isSetBinding_time())
      hashCode = hashCode * 8191 + binding_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetActivation_code()) ? 131071 : 524287);
    if (isSetActivation_code())
      hashCode = hashCode * 8191 + activation_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + (int) (disable);

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuth_level()) ? 131071 : 524287);
    if (isSetAuth_level())
      hashCode = hashCode * 8191 + (int) (auth_level);

    hashCode = hashCode * 8191 + ((isSetRegister_time()) ? 131071 : 524287);
    if (isSetRegister_time())
      hashCode = hashCode * 8191 + register_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetRegister_ip()) ? 131071 : 524287);
    if (isSetRegister_ip())
      hashCode = hashCode * 8191 + register_ip.hashCode();

    hashCode = hashCode * 8191 + ((isSetLast_login_time()) ? 131071 : 524287);
    if (isSetLast_login_time())
      hashCode = hashCode * 8191 + last_login_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetLast_login_ip()) ? 131071 : 524287);
    if (isSetLast_login_ip())
      hashCode = hashCode * 8191 + last_login_ip.hashCode();

    hashCode = hashCode * 8191 + ((isSetLogin_count()) ? 131071 : 524287);
    if (isSetLogin_count())
      hashCode = hashCode * 8191 + login_count;

    hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
    if (isSetSource())
      hashCode = hashCode * 8191 + (int) (source);

    hashCode = hashCode * 8191 + ((isSetDownload_token()) ? 131071 : 524287);
    if (isSetDownload_token())
      hashCode = hashCode * 8191 + download_token.hashCode();

    hashCode = hashCode * 8191 + ((isSetHr_wxuser_id()) ? 131071 : 524287);
    if (isSetHr_wxuser_id())
      hashCode = hashCode * 8191 + hr_wxuser_id;

    hashCode = hashCode * 8191 + ((isSetCustom_field()) ? 131071 : 524287);
    if (isSetCustom_field())
      hashCode = hashCode * 8191 + custom_field.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_rp_sent()) ? 131071 : 524287);
    if (isSetIs_rp_sent())
      hashCode = hashCode * 8191 + (int) (is_rp_sent);

    hashCode = hashCode * 8191 + ((isSetSysuser_id()) ? 131071 : 524287);
    if (isSetSysuser_id())
      hashCode = hashCode * 8191 + sysuser_id;

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + position_id;

    hashCode = hashCode * 8191 + ((isSetSection_id()) ? 131071 : 524287);
    if (isSetSection_id())
      hashCode = hashCode * 8191 + section_id;

    hashCode = hashCode * 8191 + ((isSetEmail_isvalid()) ? 131071 : 524287);
    if (isSetEmail_isvalid())
      hashCode = hashCode * 8191 + (int) (email_isvalid);

    hashCode = hashCode * 8191 + ((isSetAuth_method()) ? 131071 : 524287);
    if (isSetAuth_method())
      hashCode = hashCode * 8191 + (int) (auth_method);

    hashCode = hashCode * 8191 + ((isSetCustom_field_values()) ? 131071 : 524287);
    if (isSetCustom_field_values())
      hashCode = hashCode * 8191 + custom_field_values.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UserEmployeeStruct other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmployeeid()).compareTo(other.isSetEmployeeid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeid, other.employeeid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRole_id()).compareTo(other.isSetRole_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role_id, other.role_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWxuser_id()).compareTo(other.isSetWxuser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWxuser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wxuser_id, other.wxuser_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSex()).compareTo(other.isSetSex());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSex()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sex, other.sex);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEname()).compareTo(other.isSetEname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ename, other.ename);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEfname()).compareTo(other.isSetEfname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEfname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.efname, other.efname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCname()).compareTo(other.isSetCname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cname, other.cname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCfname()).compareTo(other.isSetCfname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCfname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cfname, other.cfname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_admin()).compareTo(other.isSetIs_admin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_admin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_admin, other.is_admin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanybody()).compareTo(other.isSetCompanybody());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanybody()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companybody, other.companybody);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupname()).compareTo(other.isSetGroupname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupname, other.groupname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmploydate()).compareTo(other.isSetEmploydate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmploydate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employdate, other.employdate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetManagername()).compareTo(other.isSetManagername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetManagername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.managername, other.managername);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirthday()).compareTo(other.isSetBirthday());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirthday()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birthday, other.birthday);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRetiredate()).compareTo(other.isSetRetiredate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRetiredate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.retiredate, other.retiredate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEducation()).compareTo(other.isSetEducation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEducation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.education, other.education);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdcard()).compareTo(other.isSetIdcard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdcard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idcard, other.idcard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAward()).compareTo(other.isSetAward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award, other.award);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBinding_time()).compareTo(other.isSetBinding_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBinding_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.binding_time, other.binding_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActivation_code()).compareTo(other.isSetActivation_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivation_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activation_code, other.activation_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuth_level()).compareTo(other.isSetAuth_level());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuth_level()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auth_level, other.auth_level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegister_time()).compareTo(other.isSetRegister_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegister_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.register_time, other.register_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegister_ip()).compareTo(other.isSetRegister_ip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegister_ip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.register_ip, other.register_ip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLast_login_time()).compareTo(other.isSetLast_login_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLast_login_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.last_login_time, other.last_login_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLast_login_ip()).compareTo(other.isSetLast_login_ip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLast_login_ip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.last_login_ip, other.last_login_ip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogin_count()).compareTo(other.isSetLogin_count());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogin_count()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.login_count, other.login_count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDownload_token()).compareTo(other.isSetDownload_token());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownload_token()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.download_token, other.download_token);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHr_wxuser_id()).compareTo(other.isSetHr_wxuser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHr_wxuser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hr_wxuser_id, other.hr_wxuser_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom_field()).compareTo(other.isSetCustom_field());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_field()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_field, other.custom_field);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_rp_sent()).compareTo(other.isSetIs_rp_sent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_rp_sent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_rp_sent, other.is_rp_sent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSysuser_id()).compareTo(other.isSetSysuser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSysuser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sysuser_id, other.sysuser_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSection_id()).compareTo(other.isSetSection_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSection_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.section_id, other.section_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail_isvalid()).compareTo(other.isSetEmail_isvalid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail_isvalid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email_isvalid, other.email_isvalid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuth_method()).compareTo(other.isSetAuth_method());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuth_method()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auth_method, other.auth_method);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom_field_values()).compareTo(other.isSetCustom_field_values());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_field_values()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_field_values, other.custom_field_values);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserEmployeeStruct(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetEmployeeid()) {
      if (!first) sb.append(", ");
      sb.append("employeeid:");
      if (this.employeeid == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeid);
      }
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetRole_id()) {
      if (!first) sb.append(", ");
      sb.append("role_id:");
      sb.append(this.role_id);
      first = false;
    }
    if (isSetWxuser_id()) {
      if (!first) sb.append(", ");
      sb.append("wxuser_id:");
      sb.append(this.wxuser_id);
      first = false;
    }
    if (isSetSex()) {
      if (!first) sb.append(", ");
      sb.append("sex:");
      sb.append(this.sex);
      first = false;
    }
    if (isSetEname()) {
      if (!first) sb.append(", ");
      sb.append("ename:");
      if (this.ename == null) {
        sb.append("null");
      } else {
        sb.append(this.ename);
      }
      first = false;
    }
    if (isSetEfname()) {
      if (!first) sb.append(", ");
      sb.append("efname:");
      if (this.efname == null) {
        sb.append("null");
      } else {
        sb.append(this.efname);
      }
      first = false;
    }
    if (isSetCname()) {
      if (!first) sb.append(", ");
      sb.append("cname:");
      if (this.cname == null) {
        sb.append("null");
      } else {
        sb.append(this.cname);
      }
      first = false;
    }
    if (isSetCfname()) {
      if (!first) sb.append(", ");
      sb.append("cfname:");
      if (this.cfname == null) {
        sb.append("null");
      } else {
        sb.append(this.cfname);
      }
      first = false;
    }
    if (isSetPassword()) {
      if (!first) sb.append(", ");
      sb.append("password:");
      if (this.password == null) {
        sb.append("null");
      } else {
        sb.append(this.password);
      }
      first = false;
    }
    if (isSetIs_admin()) {
      if (!first) sb.append(", ");
      sb.append("is_admin:");
      sb.append(this.is_admin);
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      sb.append(this.status);
      first = false;
    }
    if (isSetCompanybody()) {
      if (!first) sb.append(", ");
      sb.append("companybody:");
      if (this.companybody == null) {
        sb.append("null");
      } else {
        sb.append(this.companybody);
      }
      first = false;
    }
    if (isSetGroupname()) {
      if (!first) sb.append(", ");
      sb.append("groupname:");
      if (this.groupname == null) {
        sb.append("null");
      } else {
        sb.append(this.groupname);
      }
      first = false;
    }
    if (isSetPosition()) {
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
    }
    if (isSetEmploydate()) {
      if (!first) sb.append(", ");
      sb.append("employdate:");
      if (this.employdate == null) {
        sb.append("null");
      } else {
        sb.append(this.employdate);
      }
      first = false;
    }
    if (isSetManagername()) {
      if (!first) sb.append(", ");
      sb.append("managername:");
      if (this.managername == null) {
        sb.append("null");
      } else {
        sb.append(this.managername);
      }
      first = false;
    }
    if (isSetCity()) {
      if (!first) sb.append(", ");
      sb.append("city:");
      if (this.city == null) {
        sb.append("null");
      } else {
        sb.append(this.city);
      }
      first = false;
    }
    if (isSetBirthday()) {
      if (!first) sb.append(", ");
      sb.append("birthday:");
      if (this.birthday == null) {
        sb.append("null");
      } else {
        sb.append(this.birthday);
      }
      first = false;
    }
    if (isSetRetiredate()) {
      if (!first) sb.append(", ");
      sb.append("retiredate:");
      if (this.retiredate == null) {
        sb.append("null");
      } else {
        sb.append(this.retiredate);
      }
      first = false;
    }
    if (isSetEducation()) {
      if (!first) sb.append(", ");
      sb.append("education:");
      if (this.education == null) {
        sb.append("null");
      } else {
        sb.append(this.education);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetIdcard()) {
      if (!first) sb.append(", ");
      sb.append("idcard:");
      if (this.idcard == null) {
        sb.append("null");
      } else {
        sb.append(this.idcard);
      }
      first = false;
    }
    if (isSetMobile()) {
      if (!first) sb.append(", ");
      sb.append("mobile:");
      if (this.mobile == null) {
        sb.append("null");
      } else {
        sb.append(this.mobile);
      }
      first = false;
    }
    if (isSetAward()) {
      if (!first) sb.append(", ");
      sb.append("award:");
      sb.append(this.award);
      first = false;
    }
    if (isSetBinding_time()) {
      if (!first) sb.append(", ");
      sb.append("binding_time:");
      if (this.binding_time == null) {
        sb.append("null");
      } else {
        sb.append(this.binding_time);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetActivation_code()) {
      if (!first) sb.append(", ");
      sb.append("activation_code:");
      if (this.activation_code == null) {
        sb.append("null");
      } else {
        sb.append(this.activation_code);
      }
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetCreate_time()) {
      if (!first) sb.append(", ");
      sb.append("create_time:");
      if (this.create_time == null) {
        sb.append("null");
      } else {
        sb.append(this.create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetAuth_level()) {
      if (!first) sb.append(", ");
      sb.append("auth_level:");
      sb.append(this.auth_level);
      first = false;
    }
    if (isSetRegister_time()) {
      if (!first) sb.append(", ");
      sb.append("register_time:");
      if (this.register_time == null) {
        sb.append("null");
      } else {
        sb.append(this.register_time);
      }
      first = false;
    }
    if (isSetRegister_ip()) {
      if (!first) sb.append(", ");
      sb.append("register_ip:");
      if (this.register_ip == null) {
        sb.append("null");
      } else {
        sb.append(this.register_ip);
      }
      first = false;
    }
    if (isSetLast_login_time()) {
      if (!first) sb.append(", ");
      sb.append("last_login_time:");
      if (this.last_login_time == null) {
        sb.append("null");
      } else {
        sb.append(this.last_login_time);
      }
      first = false;
    }
    if (isSetLast_login_ip()) {
      if (!first) sb.append(", ");
      sb.append("last_login_ip:");
      if (this.last_login_ip == null) {
        sb.append("null");
      } else {
        sb.append(this.last_login_ip);
      }
      first = false;
    }
    if (isSetLogin_count()) {
      if (!first) sb.append(", ");
      sb.append("login_count:");
      sb.append(this.login_count);
      first = false;
    }
    if (isSetSource()) {
      if (!first) sb.append(", ");
      sb.append("source:");
      sb.append(this.source);
      first = false;
    }
    if (isSetDownload_token()) {
      if (!first) sb.append(", ");
      sb.append("download_token:");
      if (this.download_token == null) {
        sb.append("null");
      } else {
        sb.append(this.download_token);
      }
      first = false;
    }
    if (isSetHr_wxuser_id()) {
      if (!first) sb.append(", ");
      sb.append("hr_wxuser_id:");
      sb.append(this.hr_wxuser_id);
      first = false;
    }
    if (isSetCustom_field()) {
      if (!first) sb.append(", ");
      sb.append("custom_field:");
      if (this.custom_field == null) {
        sb.append("null");
      } else {
        sb.append(this.custom_field);
      }
      first = false;
    }
    if (isSetIs_rp_sent()) {
      if (!first) sb.append(", ");
      sb.append("is_rp_sent:");
      sb.append(this.is_rp_sent);
      first = false;
    }
    if (isSetSysuser_id()) {
      if (!first) sb.append(", ");
      sb.append("sysuser_id:");
      sb.append(this.sysuser_id);
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetSection_id()) {
      if (!first) sb.append(", ");
      sb.append("section_id:");
      sb.append(this.section_id);
      first = false;
    }
    if (isSetEmail_isvalid()) {
      if (!first) sb.append(", ");
      sb.append("email_isvalid:");
      sb.append(this.email_isvalid);
      first = false;
    }
    if (isSetAuth_method()) {
      if (!first) sb.append(", ");
      sb.append("auth_method:");
      sb.append(this.auth_method);
      first = false;
    }
    if (isSetCustom_field_values()) {
      if (!first) sb.append(", ");
      sb.append("custom_field_values:");
      if (this.custom_field_values == null) {
        sb.append("null");
      } else {
        sb.append(this.custom_field_values);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEmployeeStructStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeStructStandardScheme getScheme() {
      return new UserEmployeeStructStandardScheme();
    }
  }

  private static class UserEmployeeStructStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserEmployeeStruct> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEEID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employeeid = iprot.readString();
              struct.setEmployeeidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ROLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.role_id = iprot.readI32();
              struct.setRole_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wxuser_id = iprot.readI32();
              struct.setWxuser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SEX
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.sex = iprot.readByte();
              struct.setSexIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ENAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ename = iprot.readString();
              struct.setEnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // EFNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.efname = iprot.readString();
              struct.setEfnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cname = iprot.readString();
              struct.setCnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CFNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cfname = iprot.readString();
              struct.setCfnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_ADMIN
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.is_admin = iprot.readByte();
              struct.setIs_adminIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // COMPANYBODY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companybody = iprot.readString();
              struct.setCompanybodyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // GROUPNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.groupname = iprot.readString();
              struct.setGroupnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.position = iprot.readString();
              struct.setPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EMPLOYDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employdate = iprot.readString();
              struct.setEmploydateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // MANAGERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.managername = iprot.readString();
              struct.setManagernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city = iprot.readString();
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // BIRTHDAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.birthday = iprot.readString();
              struct.setBirthdayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // RETIREDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.retiredate = iprot.readString();
              struct.setRetiredateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // EDUCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.education = iprot.readString();
              struct.setEducationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // IDCARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.idcard = iprot.readString();
              struct.setIdcardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // AWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.award = iprot.readI64();
              struct.setAwardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // BINDING_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.binding_time = iprot.readString();
              struct.setBinding_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // ACTIVATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.activation_code = iprot.readString();
              struct.setActivation_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.disable = iprot.readByte();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // AUTH_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.auth_level = iprot.readByte();
              struct.setAuth_levelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // REGISTER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.register_time = iprot.readString();
              struct.setRegister_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // REGISTER_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.register_ip = iprot.readString();
              struct.setRegister_ipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // LAST_LOGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.last_login_time = iprot.readString();
              struct.setLast_login_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // LAST_LOGIN_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.last_login_ip = iprot.readString();
              struct.setLast_login_ipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // LOGIN_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.login_count = iprot.readI32();
              struct.setLogin_countIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.source = iprot.readByte();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // DOWNLOAD_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.download_token = iprot.readString();
              struct.setDownload_tokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // HR_WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hr_wxuser_id = iprot.readI32();
              struct.setHr_wxuser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // CUSTOM_FIELD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_field = iprot.readString();
              struct.setCustom_fieldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // IS_RP_SENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.is_rp_sent = iprot.readByte();
              struct.setIs_rp_sentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // SYSUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sysuser_id = iprot.readI32();
              struct.setSysuser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // SECTION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.section_id = iprot.readI32();
              struct.setSection_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // EMAIL_ISVALID
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.email_isvalid = iprot.readByte();
              struct.setEmail_isvalidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // AUTH_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.auth_method = iprot.readByte();
              struct.setAuth_methodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // CUSTOM_FIELD_VALUES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_field_values = iprot.readString();
              struct.setCustom_field_valuesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.employeeid != null) {
        if (struct.isSetEmployeeid()) {
          oprot.writeFieldBegin(EMPLOYEEID_FIELD_DESC);
          oprot.writeString(struct.employeeid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRole_id()) {
        oprot.writeFieldBegin(ROLE_ID_FIELD_DESC);
        oprot.writeI32(struct.role_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWxuser_id()) {
        oprot.writeFieldBegin(WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.wxuser_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSex()) {
        oprot.writeFieldBegin(SEX_FIELD_DESC);
        oprot.writeByte(struct.sex);
        oprot.writeFieldEnd();
      }
      if (struct.ename != null) {
        if (struct.isSetEname()) {
          oprot.writeFieldBegin(ENAME_FIELD_DESC);
          oprot.writeString(struct.ename);
          oprot.writeFieldEnd();
        }
      }
      if (struct.efname != null) {
        if (struct.isSetEfname()) {
          oprot.writeFieldBegin(EFNAME_FIELD_DESC);
          oprot.writeString(struct.efname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cname != null) {
        if (struct.isSetCname()) {
          oprot.writeFieldBegin(CNAME_FIELD_DESC);
          oprot.writeString(struct.cname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cfname != null) {
        if (struct.isSetCfname()) {
          oprot.writeFieldBegin(CFNAME_FIELD_DESC);
          oprot.writeString(struct.cfname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.password != null) {
        if (struct.isSetPassword()) {
          oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
          oprot.writeString(struct.password);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_admin()) {
        oprot.writeFieldBegin(IS_ADMIN_FIELD_DESC);
        oprot.writeByte(struct.is_admin);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatus()) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.companybody != null) {
        if (struct.isSetCompanybody()) {
          oprot.writeFieldBegin(COMPANYBODY_FIELD_DESC);
          oprot.writeString(struct.companybody);
          oprot.writeFieldEnd();
        }
      }
      if (struct.groupname != null) {
        if (struct.isSetGroupname()) {
          oprot.writeFieldBegin(GROUPNAME_FIELD_DESC);
          oprot.writeString(struct.groupname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.position != null) {
        if (struct.isSetPosition()) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
      }
      if (struct.employdate != null) {
        if (struct.isSetEmploydate()) {
          oprot.writeFieldBegin(EMPLOYDATE_FIELD_DESC);
          oprot.writeString(struct.employdate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.managername != null) {
        if (struct.isSetManagername()) {
          oprot.writeFieldBegin(MANAGERNAME_FIELD_DESC);
          oprot.writeString(struct.managername);
          oprot.writeFieldEnd();
        }
      }
      if (struct.city != null) {
        if (struct.isSetCity()) {
          oprot.writeFieldBegin(CITY_FIELD_DESC);
          oprot.writeString(struct.city);
          oprot.writeFieldEnd();
        }
      }
      if (struct.birthday != null) {
        if (struct.isSetBirthday()) {
          oprot.writeFieldBegin(BIRTHDAY_FIELD_DESC);
          oprot.writeString(struct.birthday);
          oprot.writeFieldEnd();
        }
      }
      if (struct.retiredate != null) {
        if (struct.isSetRetiredate()) {
          oprot.writeFieldBegin(RETIREDATE_FIELD_DESC);
          oprot.writeString(struct.retiredate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.education != null) {
        if (struct.isSetEducation()) {
          oprot.writeFieldBegin(EDUCATION_FIELD_DESC);
          oprot.writeString(struct.education);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.idcard != null) {
        if (struct.isSetIdcard()) {
          oprot.writeFieldBegin(IDCARD_FIELD_DESC);
          oprot.writeString(struct.idcard);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mobile != null) {
        if (struct.isSetMobile()) {
          oprot.writeFieldBegin(MOBILE_FIELD_DESC);
          oprot.writeString(struct.mobile);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAward()) {
        oprot.writeFieldBegin(AWARD_FIELD_DESC);
        oprot.writeI64(struct.award);
        oprot.writeFieldEnd();
      }
      if (struct.binding_time != null) {
        if (struct.isSetBinding_time()) {
          oprot.writeFieldBegin(BINDING_TIME_FIELD_DESC);
          oprot.writeString(struct.binding_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.activation_code != null) {
        if (struct.isSetActivation_code()) {
          oprot.writeFieldBegin(ACTIVATION_CODE_FIELD_DESC);
          oprot.writeString(struct.activation_code);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeByte(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        if (struct.isSetCreate_time()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAuth_level()) {
        oprot.writeFieldBegin(AUTH_LEVEL_FIELD_DESC);
        oprot.writeByte(struct.auth_level);
        oprot.writeFieldEnd();
      }
      if (struct.register_time != null) {
        if (struct.isSetRegister_time()) {
          oprot.writeFieldBegin(REGISTER_TIME_FIELD_DESC);
          oprot.writeString(struct.register_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.register_ip != null) {
        if (struct.isSetRegister_ip()) {
          oprot.writeFieldBegin(REGISTER_IP_FIELD_DESC);
          oprot.writeString(struct.register_ip);
          oprot.writeFieldEnd();
        }
      }
      if (struct.last_login_time != null) {
        if (struct.isSetLast_login_time()) {
          oprot.writeFieldBegin(LAST_LOGIN_TIME_FIELD_DESC);
          oprot.writeString(struct.last_login_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.last_login_ip != null) {
        if (struct.isSetLast_login_ip()) {
          oprot.writeFieldBegin(LAST_LOGIN_IP_FIELD_DESC);
          oprot.writeString(struct.last_login_ip);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetLogin_count()) {
        oprot.writeFieldBegin(LOGIN_COUNT_FIELD_DESC);
        oprot.writeI32(struct.login_count);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSource()) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeByte(struct.source);
        oprot.writeFieldEnd();
      }
      if (struct.download_token != null) {
        if (struct.isSetDownload_token()) {
          oprot.writeFieldBegin(DOWNLOAD_TOKEN_FIELD_DESC);
          oprot.writeString(struct.download_token);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHr_wxuser_id()) {
        oprot.writeFieldBegin(HR_WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.hr_wxuser_id);
        oprot.writeFieldEnd();
      }
      if (struct.custom_field != null) {
        if (struct.isSetCustom_field()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_FIELD_DESC);
          oprot.writeString(struct.custom_field);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_rp_sent()) {
        oprot.writeFieldBegin(IS_RP_SENT_FIELD_DESC);
        oprot.writeByte(struct.is_rp_sent);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSysuser_id()) {
        oprot.writeFieldBegin(SYSUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.sysuser_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSection_id()) {
        oprot.writeFieldBegin(SECTION_ID_FIELD_DESC);
        oprot.writeI32(struct.section_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmail_isvalid()) {
        oprot.writeFieldBegin(EMAIL_ISVALID_FIELD_DESC);
        oprot.writeByte(struct.email_isvalid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAuth_method()) {
        oprot.writeFieldBegin(AUTH_METHOD_FIELD_DESC);
        oprot.writeByte(struct.auth_method);
        oprot.writeFieldEnd();
      }
      if (struct.custom_field_values != null) {
        if (struct.isSetCustom_field_values()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_VALUES_FIELD_DESC);
          oprot.writeString(struct.custom_field_values);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEmployeeStructTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeStructTupleScheme getScheme() {
      return new UserEmployeeStructTupleScheme();
    }
  }

  private static class UserEmployeeStructTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserEmployeeStruct> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetEmployeeid()) {
        optionals.set(1);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(2);
      }
      if (struct.isSetRole_id()) {
        optionals.set(3);
      }
      if (struct.isSetWxuser_id()) {
        optionals.set(4);
      }
      if (struct.isSetSex()) {
        optionals.set(5);
      }
      if (struct.isSetEname()) {
        optionals.set(6);
      }
      if (struct.isSetEfname()) {
        optionals.set(7);
      }
      if (struct.isSetCname()) {
        optionals.set(8);
      }
      if (struct.isSetCfname()) {
        optionals.set(9);
      }
      if (struct.isSetPassword()) {
        optionals.set(10);
      }
      if (struct.isSetIs_admin()) {
        optionals.set(11);
      }
      if (struct.isSetStatus()) {
        optionals.set(12);
      }
      if (struct.isSetCompanybody()) {
        optionals.set(13);
      }
      if (struct.isSetGroupname()) {
        optionals.set(14);
      }
      if (struct.isSetPosition()) {
        optionals.set(15);
      }
      if (struct.isSetEmploydate()) {
        optionals.set(16);
      }
      if (struct.isSetManagername()) {
        optionals.set(17);
      }
      if (struct.isSetCity()) {
        optionals.set(18);
      }
      if (struct.isSetBirthday()) {
        optionals.set(19);
      }
      if (struct.isSetRetiredate()) {
        optionals.set(20);
      }
      if (struct.isSetEducation()) {
        optionals.set(21);
      }
      if (struct.isSetAddress()) {
        optionals.set(22);
      }
      if (struct.isSetIdcard()) {
        optionals.set(23);
      }
      if (struct.isSetMobile()) {
        optionals.set(24);
      }
      if (struct.isSetAward()) {
        optionals.set(25);
      }
      if (struct.isSetBinding_time()) {
        optionals.set(26);
      }
      if (struct.isSetEmail()) {
        optionals.set(27);
      }
      if (struct.isSetActivation_code()) {
        optionals.set(28);
      }
      if (struct.isSetDisable()) {
        optionals.set(29);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(30);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(31);
      }
      if (struct.isSetAuth_level()) {
        optionals.set(32);
      }
      if (struct.isSetRegister_time()) {
        optionals.set(33);
      }
      if (struct.isSetRegister_ip()) {
        optionals.set(34);
      }
      if (struct.isSetLast_login_time()) {
        optionals.set(35);
      }
      if (struct.isSetLast_login_ip()) {
        optionals.set(36);
      }
      if (struct.isSetLogin_count()) {
        optionals.set(37);
      }
      if (struct.isSetSource()) {
        optionals.set(38);
      }
      if (struct.isSetDownload_token()) {
        optionals.set(39);
      }
      if (struct.isSetHr_wxuser_id()) {
        optionals.set(40);
      }
      if (struct.isSetCustom_field()) {
        optionals.set(41);
      }
      if (struct.isSetIs_rp_sent()) {
        optionals.set(42);
      }
      if (struct.isSetSysuser_id()) {
        optionals.set(43);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(44);
      }
      if (struct.isSetSection_id()) {
        optionals.set(45);
      }
      if (struct.isSetEmail_isvalid()) {
        optionals.set(46);
      }
      if (struct.isSetAuth_method()) {
        optionals.set(47);
      }
      if (struct.isSetCustom_field_values()) {
        optionals.set(48);
      }
      oprot.writeBitSet(optionals, 49);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetEmployeeid()) {
        oprot.writeString(struct.employeeid);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetRole_id()) {
        oprot.writeI32(struct.role_id);
      }
      if (struct.isSetWxuser_id()) {
        oprot.writeI32(struct.wxuser_id);
      }
      if (struct.isSetSex()) {
        oprot.writeByte(struct.sex);
      }
      if (struct.isSetEname()) {
        oprot.writeString(struct.ename);
      }
      if (struct.isSetEfname()) {
        oprot.writeString(struct.efname);
      }
      if (struct.isSetCname()) {
        oprot.writeString(struct.cname);
      }
      if (struct.isSetCfname()) {
        oprot.writeString(struct.cfname);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetIs_admin()) {
        oprot.writeByte(struct.is_admin);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
      if (struct.isSetCompanybody()) {
        oprot.writeString(struct.companybody);
      }
      if (struct.isSetGroupname()) {
        oprot.writeString(struct.groupname);
      }
      if (struct.isSetPosition()) {
        oprot.writeString(struct.position);
      }
      if (struct.isSetEmploydate()) {
        oprot.writeString(struct.employdate);
      }
      if (struct.isSetManagername()) {
        oprot.writeString(struct.managername);
      }
      if (struct.isSetCity()) {
        oprot.writeString(struct.city);
      }
      if (struct.isSetBirthday()) {
        oprot.writeString(struct.birthday);
      }
      if (struct.isSetRetiredate()) {
        oprot.writeString(struct.retiredate);
      }
      if (struct.isSetEducation()) {
        oprot.writeString(struct.education);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetIdcard()) {
        oprot.writeString(struct.idcard);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetAward()) {
        oprot.writeI64(struct.award);
      }
      if (struct.isSetBinding_time()) {
        oprot.writeString(struct.binding_time);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetActivation_code()) {
        oprot.writeString(struct.activation_code);
      }
      if (struct.isSetDisable()) {
        oprot.writeByte(struct.disable);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetAuth_level()) {
        oprot.writeByte(struct.auth_level);
      }
      if (struct.isSetRegister_time()) {
        oprot.writeString(struct.register_time);
      }
      if (struct.isSetRegister_ip()) {
        oprot.writeString(struct.register_ip);
      }
      if (struct.isSetLast_login_time()) {
        oprot.writeString(struct.last_login_time);
      }
      if (struct.isSetLast_login_ip()) {
        oprot.writeString(struct.last_login_ip);
      }
      if (struct.isSetLogin_count()) {
        oprot.writeI32(struct.login_count);
      }
      if (struct.isSetSource()) {
        oprot.writeByte(struct.source);
      }
      if (struct.isSetDownload_token()) {
        oprot.writeString(struct.download_token);
      }
      if (struct.isSetHr_wxuser_id()) {
        oprot.writeI32(struct.hr_wxuser_id);
      }
      if (struct.isSetCustom_field()) {
        oprot.writeString(struct.custom_field);
      }
      if (struct.isSetIs_rp_sent()) {
        oprot.writeByte(struct.is_rp_sent);
      }
      if (struct.isSetSysuser_id()) {
        oprot.writeI32(struct.sysuser_id);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetSection_id()) {
        oprot.writeI32(struct.section_id);
      }
      if (struct.isSetEmail_isvalid()) {
        oprot.writeByte(struct.email_isvalid);
      }
      if (struct.isSetAuth_method()) {
        oprot.writeByte(struct.auth_method);
      }
      if (struct.isSetCustom_field_values()) {
        oprot.writeString(struct.custom_field_values);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(49);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employeeid = iprot.readString();
        struct.setEmployeeidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.role_id = iprot.readI32();
        struct.setRole_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.wxuser_id = iprot.readI32();
        struct.setWxuser_idIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sex = iprot.readByte();
        struct.setSexIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ename = iprot.readString();
        struct.setEnameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.efname = iprot.readString();
        struct.setEfnameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cname = iprot.readString();
        struct.setCnameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cfname = iprot.readString();
        struct.setCfnameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(11)) {
        struct.is_admin = iprot.readByte();
        struct.setIs_adminIsSet(true);
      }
      if (incoming.get(12)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(13)) {
        struct.companybody = iprot.readString();
        struct.setCompanybodyIsSet(true);
      }
      if (incoming.get(14)) {
        struct.groupname = iprot.readString();
        struct.setGroupnameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.position = iprot.readString();
        struct.setPositionIsSet(true);
      }
      if (incoming.get(16)) {
        struct.employdate = iprot.readString();
        struct.setEmploydateIsSet(true);
      }
      if (incoming.get(17)) {
        struct.managername = iprot.readString();
        struct.setManagernameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.city = iprot.readString();
        struct.setCityIsSet(true);
      }
      if (incoming.get(19)) {
        struct.birthday = iprot.readString();
        struct.setBirthdayIsSet(true);
      }
      if (incoming.get(20)) {
        struct.retiredate = iprot.readString();
        struct.setRetiredateIsSet(true);
      }
      if (incoming.get(21)) {
        struct.education = iprot.readString();
        struct.setEducationIsSet(true);
      }
      if (incoming.get(22)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(23)) {
        struct.idcard = iprot.readString();
        struct.setIdcardIsSet(true);
      }
      if (incoming.get(24)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(25)) {
        struct.award = iprot.readI64();
        struct.setAwardIsSet(true);
      }
      if (incoming.get(26)) {
        struct.binding_time = iprot.readString();
        struct.setBinding_timeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(28)) {
        struct.activation_code = iprot.readString();
        struct.setActivation_codeIsSet(true);
      }
      if (incoming.get(29)) {
        struct.disable = iprot.readByte();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(30)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(31)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(32)) {
        struct.auth_level = iprot.readByte();
        struct.setAuth_levelIsSet(true);
      }
      if (incoming.get(33)) {
        struct.register_time = iprot.readString();
        struct.setRegister_timeIsSet(true);
      }
      if (incoming.get(34)) {
        struct.register_ip = iprot.readString();
        struct.setRegister_ipIsSet(true);
      }
      if (incoming.get(35)) {
        struct.last_login_time = iprot.readString();
        struct.setLast_login_timeIsSet(true);
      }
      if (incoming.get(36)) {
        struct.last_login_ip = iprot.readString();
        struct.setLast_login_ipIsSet(true);
      }
      if (incoming.get(37)) {
        struct.login_count = iprot.readI32();
        struct.setLogin_countIsSet(true);
      }
      if (incoming.get(38)) {
        struct.source = iprot.readByte();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(39)) {
        struct.download_token = iprot.readString();
        struct.setDownload_tokenIsSet(true);
      }
      if (incoming.get(40)) {
        struct.hr_wxuser_id = iprot.readI32();
        struct.setHr_wxuser_idIsSet(true);
      }
      if (incoming.get(41)) {
        struct.custom_field = iprot.readString();
        struct.setCustom_fieldIsSet(true);
      }
      if (incoming.get(42)) {
        struct.is_rp_sent = iprot.readByte();
        struct.setIs_rp_sentIsSet(true);
      }
      if (incoming.get(43)) {
        struct.sysuser_id = iprot.readI32();
        struct.setSysuser_idIsSet(true);
      }
      if (incoming.get(44)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(45)) {
        struct.section_id = iprot.readI32();
        struct.setSection_idIsSet(true);
      }
      if (incoming.get(46)) {
        struct.email_isvalid = iprot.readByte();
        struct.setEmail_isvalidIsSet(true);
      }
      if (incoming.get(47)) {
        struct.auth_method = iprot.readByte();
        struct.setAuth_methodIsSet(true);
      }
      if (incoming.get(48)) {
        struct.custom_field_values = iprot.readString();
        struct.setCustom_field_valuesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

