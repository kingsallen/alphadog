/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.useraccounts.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-02-24")
public class UserEmployeeStruct implements org.apache.thrift.TBase<UserEmployeeStruct, UserEmployeeStruct._Fields>, java.io.Serializable, Cloneable, Comparable<UserEmployeeStruct> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserEmployeeStruct");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField EMPLOYEEID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField ROLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("role_id", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField WXUSER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("wxuser_id", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField ENAME_FIELD_DESC = new org.apache.thrift.protocol.TField("ename", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField POSITION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("position_id", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField SECTION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("section_id", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_field", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField AWARD_FIELD_DESC = new org.apache.thrift.protocol.TField("award", org.apache.thrift.protocol.TType.I64, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserEmployeeStructStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserEmployeeStructTupleSchemeFactory();

  public int id; // optional
  public java.lang.String employeeid; // optional
  public int company_id; // optional
  public int role_id; // optional
  public int wxuser_id; // optional
  public java.lang.String ename; // optional
  public int position_id; // optional
  public int section_id; // optional
  public java.lang.String custom_field; // optional
  public long award; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    EMPLOYEEID((short)2, "employeeid"),
    COMPANY_ID((short)3, "company_id"),
    ROLE_ID((short)4, "role_id"),
    WXUSER_ID((short)5, "wxuser_id"),
    ENAME((short)6, "ename"),
    POSITION_ID((short)7, "position_id"),
    SECTION_ID((short)8, "section_id"),
    CUSTOM_FIELD((short)9, "custom_field"),
    AWARD((short)10, "award");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // EMPLOYEEID
          return EMPLOYEEID;
        case 3: // COMPANY_ID
          return COMPANY_ID;
        case 4: // ROLE_ID
          return ROLE_ID;
        case 5: // WXUSER_ID
          return WXUSER_ID;
        case 6: // ENAME
          return ENAME;
        case 7: // POSITION_ID
          return POSITION_ID;
        case 8: // SECTION_ID
          return SECTION_ID;
        case 9: // CUSTOM_FIELD
          return CUSTOM_FIELD;
        case 10: // AWARD
          return AWARD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANY_ID_ISSET_ID = 1;
  private static final int __ROLE_ID_ISSET_ID = 2;
  private static final int __WXUSER_ID_ISSET_ID = 3;
  private static final int __POSITION_ID_ISSET_ID = 4;
  private static final int __SECTION_ID_ISSET_ID = 5;
  private static final int __AWARD_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.EMPLOYEEID,_Fields.COMPANY_ID,_Fields.ROLE_ID,_Fields.WXUSER_ID,_Fields.ENAME,_Fields.POSITION_ID,_Fields.SECTION_ID,_Fields.CUSTOM_FIELD,_Fields.AWARD};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEEID, new org.apache.thrift.meta_data.FieldMetaData("employeeid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROLE_ID, new org.apache.thrift.meta_data.FieldMetaData("role_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WXUSER_ID, new org.apache.thrift.meta_data.FieldMetaData("wxuser_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ENAME, new org.apache.thrift.meta_data.FieldMetaData("ename", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_ID, new org.apache.thrift.meta_data.FieldMetaData("position_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SECTION_ID, new org.apache.thrift.meta_data.FieldMetaData("section_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUSTOM_FIELD, new org.apache.thrift.meta_data.FieldMetaData("custom_field", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AWARD, new org.apache.thrift.meta_data.FieldMetaData("award", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserEmployeeStruct.class, metaDataMap);
  }

  public UserEmployeeStruct() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserEmployeeStruct(UserEmployeeStruct other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetEmployeeid()) {
      this.employeeid = other.employeeid;
    }
    this.company_id = other.company_id;
    this.role_id = other.role_id;
    this.wxuser_id = other.wxuser_id;
    if (other.isSetEname()) {
      this.ename = other.ename;
    }
    this.position_id = other.position_id;
    this.section_id = other.section_id;
    if (other.isSetCustom_field()) {
      this.custom_field = other.custom_field;
    }
    this.award = other.award;
  }

  public UserEmployeeStruct deepCopy() {
    return new UserEmployeeStruct(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.employeeid = null;
    setCompany_idIsSet(false);
    this.company_id = 0;
    setRole_idIsSet(false);
    this.role_id = 0;
    setWxuser_idIsSet(false);
    this.wxuser_id = 0;
    this.ename = null;
    setPosition_idIsSet(false);
    this.position_id = 0;
    setSection_idIsSet(false);
    this.section_id = 0;
    this.custom_field = null;
    setAwardIsSet(false);
    this.award = 0;
  }

  public int getId() {
    return this.id;
  }

  public UserEmployeeStruct setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getEmployeeid() {
    return this.employeeid;
  }

  public UserEmployeeStruct setEmployeeid(java.lang.String employeeid) {
    this.employeeid = employeeid;
    return this;
  }

  public void unsetEmployeeid() {
    this.employeeid = null;
  }

  /** Returns true if field employeeid is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeid() {
    return this.employeeid != null;
  }

  public void setEmployeeidIsSet(boolean value) {
    if (!value) {
      this.employeeid = null;
    }
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public UserEmployeeStruct setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getRole_id() {
    return this.role_id;
  }

  public UserEmployeeStruct setRole_id(int role_id) {
    this.role_id = role_id;
    setRole_idIsSet(true);
    return this;
  }

  public void unsetRole_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROLE_ID_ISSET_ID);
  }

  /** Returns true if field role_id is set (has been assigned a value) and false otherwise */
  public boolean isSetRole_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROLE_ID_ISSET_ID);
  }

  public void setRole_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROLE_ID_ISSET_ID, value);
  }

  public int getWxuser_id() {
    return this.wxuser_id;
  }

  public UserEmployeeStruct setWxuser_id(int wxuser_id) {
    this.wxuser_id = wxuser_id;
    setWxuser_idIsSet(true);
    return this;
  }

  public void unsetWxuser_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WXUSER_ID_ISSET_ID);
  }

  /** Returns true if field wxuser_id is set (has been assigned a value) and false otherwise */
  public boolean isSetWxuser_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WXUSER_ID_ISSET_ID);
  }

  public void setWxuser_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WXUSER_ID_ISSET_ID, value);
  }

  public java.lang.String getEname() {
    return this.ename;
  }

  public UserEmployeeStruct setEname(java.lang.String ename) {
    this.ename = ename;
    return this;
  }

  public void unsetEname() {
    this.ename = null;
  }

  /** Returns true if field ename is set (has been assigned a value) and false otherwise */
  public boolean isSetEname() {
    return this.ename != null;
  }

  public void setEnameIsSet(boolean value) {
    if (!value) {
      this.ename = null;
    }
  }

  public int getPosition_id() {
    return this.position_id;
  }

  public UserEmployeeStruct setPosition_id(int position_id) {
    this.position_id = position_id;
    setPosition_idIsSet(true);
    return this;
  }

  public void unsetPosition_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  /** Returns true if field position_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPosition_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __POSITION_ID_ISSET_ID);
  }

  public void setPosition_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __POSITION_ID_ISSET_ID, value);
  }

  public int getSection_id() {
    return this.section_id;
  }

  public UserEmployeeStruct setSection_id(int section_id) {
    this.section_id = section_id;
    setSection_idIsSet(true);
    return this;
  }

  public void unsetSection_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SECTION_ID_ISSET_ID);
  }

  /** Returns true if field section_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSection_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SECTION_ID_ISSET_ID);
  }

  public void setSection_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SECTION_ID_ISSET_ID, value);
  }

  public java.lang.String getCustom_field() {
    return this.custom_field;
  }

  public UserEmployeeStruct setCustom_field(java.lang.String custom_field) {
    this.custom_field = custom_field;
    return this;
  }

  public void unsetCustom_field() {
    this.custom_field = null;
  }

  /** Returns true if field custom_field is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_field() {
    return this.custom_field != null;
  }

  public void setCustom_fieldIsSet(boolean value) {
    if (!value) {
      this.custom_field = null;
    }
  }

  public long getAward() {
    return this.award;
  }

  public UserEmployeeStruct setAward(long award) {
    this.award = award;
    setAwardIsSet(true);
    return this;
  }

  public void unsetAward() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  /** Returns true if field award is set (has been assigned a value) and false otherwise */
  public boolean isSetAward() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AWARD_ISSET_ID);
  }

  public void setAwardIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AWARD_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case EMPLOYEEID:
      if (value == null) {
        unsetEmployeeid();
      } else {
        setEmployeeid((java.lang.String)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case ROLE_ID:
      if (value == null) {
        unsetRole_id();
      } else {
        setRole_id((java.lang.Integer)value);
      }
      break;

    case WXUSER_ID:
      if (value == null) {
        unsetWxuser_id();
      } else {
        setWxuser_id((java.lang.Integer)value);
      }
      break;

    case ENAME:
      if (value == null) {
        unsetEname();
      } else {
        setEname((java.lang.String)value);
      }
      break;

    case POSITION_ID:
      if (value == null) {
        unsetPosition_id();
      } else {
        setPosition_id((java.lang.Integer)value);
      }
      break;

    case SECTION_ID:
      if (value == null) {
        unsetSection_id();
      } else {
        setSection_id((java.lang.Integer)value);
      }
      break;

    case CUSTOM_FIELD:
      if (value == null) {
        unsetCustom_field();
      } else {
        setCustom_field((java.lang.String)value);
      }
      break;

    case AWARD:
      if (value == null) {
        unsetAward();
      } else {
        setAward((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case EMPLOYEEID:
      return getEmployeeid();

    case COMPANY_ID:
      return getCompany_id();

    case ROLE_ID:
      return getRole_id();

    case WXUSER_ID:
      return getWxuser_id();

    case ENAME:
      return getEname();

    case POSITION_ID:
      return getPosition_id();

    case SECTION_ID:
      return getSection_id();

    case CUSTOM_FIELD:
      return getCustom_field();

    case AWARD:
      return getAward();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case EMPLOYEEID:
      return isSetEmployeeid();
    case COMPANY_ID:
      return isSetCompany_id();
    case ROLE_ID:
      return isSetRole_id();
    case WXUSER_ID:
      return isSetWxuser_id();
    case ENAME:
      return isSetEname();
    case POSITION_ID:
      return isSetPosition_id();
    case SECTION_ID:
      return isSetSection_id();
    case CUSTOM_FIELD:
      return isSetCustom_field();
    case AWARD:
      return isSetAward();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserEmployeeStruct)
      return this.equals((UserEmployeeStruct)that);
    return false;
  }

  public boolean equals(UserEmployeeStruct that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_employeeid = true && this.isSetEmployeeid();
    boolean that_present_employeeid = true && that.isSetEmployeeid();
    if (this_present_employeeid || that_present_employeeid) {
      if (!(this_present_employeeid && that_present_employeeid))
        return false;
      if (!this.employeeid.equals(that.employeeid))
        return false;
    }

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_role_id = true && this.isSetRole_id();
    boolean that_present_role_id = true && that.isSetRole_id();
    if (this_present_role_id || that_present_role_id) {
      if (!(this_present_role_id && that_present_role_id))
        return false;
      if (this.role_id != that.role_id)
        return false;
    }

    boolean this_present_wxuser_id = true && this.isSetWxuser_id();
    boolean that_present_wxuser_id = true && that.isSetWxuser_id();
    if (this_present_wxuser_id || that_present_wxuser_id) {
      if (!(this_present_wxuser_id && that_present_wxuser_id))
        return false;
      if (this.wxuser_id != that.wxuser_id)
        return false;
    }

    boolean this_present_ename = true && this.isSetEname();
    boolean that_present_ename = true && that.isSetEname();
    if (this_present_ename || that_present_ename) {
      if (!(this_present_ename && that_present_ename))
        return false;
      if (!this.ename.equals(that.ename))
        return false;
    }

    boolean this_present_position_id = true && this.isSetPosition_id();
    boolean that_present_position_id = true && that.isSetPosition_id();
    if (this_present_position_id || that_present_position_id) {
      if (!(this_present_position_id && that_present_position_id))
        return false;
      if (this.position_id != that.position_id)
        return false;
    }

    boolean this_present_section_id = true && this.isSetSection_id();
    boolean that_present_section_id = true && that.isSetSection_id();
    if (this_present_section_id || that_present_section_id) {
      if (!(this_present_section_id && that_present_section_id))
        return false;
      if (this.section_id != that.section_id)
        return false;
    }

    boolean this_present_custom_field = true && this.isSetCustom_field();
    boolean that_present_custom_field = true && that.isSetCustom_field();
    if (this_present_custom_field || that_present_custom_field) {
      if (!(this_present_custom_field && that_present_custom_field))
        return false;
      if (!this.custom_field.equals(that.custom_field))
        return false;
    }

    boolean this_present_award = true && this.isSetAward();
    boolean that_present_award = true && that.isSetAward();
    if (this_present_award || that_present_award) {
      if (!(this_present_award && that_present_award))
        return false;
      if (this.award != that.award)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetEmployeeid()) ? 131071 : 524287);
    if (isSetEmployeeid())
      hashCode = hashCode * 8191 + employeeid.hashCode();

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetRole_id()) ? 131071 : 524287);
    if (isSetRole_id())
      hashCode = hashCode * 8191 + role_id;

    hashCode = hashCode * 8191 + ((isSetWxuser_id()) ? 131071 : 524287);
    if (isSetWxuser_id())
      hashCode = hashCode * 8191 + wxuser_id;

    hashCode = hashCode * 8191 + ((isSetEname()) ? 131071 : 524287);
    if (isSetEname())
      hashCode = hashCode * 8191 + ename.hashCode();

    hashCode = hashCode * 8191 + ((isSetPosition_id()) ? 131071 : 524287);
    if (isSetPosition_id())
      hashCode = hashCode * 8191 + position_id;

    hashCode = hashCode * 8191 + ((isSetSection_id()) ? 131071 : 524287);
    if (isSetSection_id())
      hashCode = hashCode * 8191 + section_id;

    hashCode = hashCode * 8191 + ((isSetCustom_field()) ? 131071 : 524287);
    if (isSetCustom_field())
      hashCode = hashCode * 8191 + custom_field.hashCode();

    hashCode = hashCode * 8191 + ((isSetAward()) ? 131071 : 524287);
    if (isSetAward())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(award);

    return hashCode;
  }

  @Override
  public int compareTo(UserEmployeeStruct other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeid()).compareTo(other.isSetEmployeeid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeid, other.employeeid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRole_id()).compareTo(other.isSetRole_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role_id, other.role_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWxuser_id()).compareTo(other.isSetWxuser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWxuser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wxuser_id, other.wxuser_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEname()).compareTo(other.isSetEname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ename, other.ename);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPosition_id()).compareTo(other.isSetPosition_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPosition_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position_id, other.position_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSection_id()).compareTo(other.isSetSection_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSection_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.section_id, other.section_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCustom_field()).compareTo(other.isSetCustom_field());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_field()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_field, other.custom_field);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAward()).compareTo(other.isSetAward());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAward()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.award, other.award);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserEmployeeStruct(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetEmployeeid()) {
      if (!first) sb.append(", ");
      sb.append("employeeid:");
      if (this.employeeid == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeid);
      }
      first = false;
    }
    if (isSetCompany_id()) {
      if (!first) sb.append(", ");
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetRole_id()) {
      if (!first) sb.append(", ");
      sb.append("role_id:");
      sb.append(this.role_id);
      first = false;
    }
    if (isSetWxuser_id()) {
      if (!first) sb.append(", ");
      sb.append("wxuser_id:");
      sb.append(this.wxuser_id);
      first = false;
    }
    if (isSetEname()) {
      if (!first) sb.append(", ");
      sb.append("ename:");
      if (this.ename == null) {
        sb.append("null");
      } else {
        sb.append(this.ename);
      }
      first = false;
    }
    if (isSetPosition_id()) {
      if (!first) sb.append(", ");
      sb.append("position_id:");
      sb.append(this.position_id);
      first = false;
    }
    if (isSetSection_id()) {
      if (!first) sb.append(", ");
      sb.append("section_id:");
      sb.append(this.section_id);
      first = false;
    }
    if (isSetCustom_field()) {
      if (!first) sb.append(", ");
      sb.append("custom_field:");
      if (this.custom_field == null) {
        sb.append("null");
      } else {
        sb.append(this.custom_field);
      }
      first = false;
    }
    if (isSetAward()) {
      if (!first) sb.append(", ");
      sb.append("award:");
      sb.append(this.award);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserEmployeeStructStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeStructStandardScheme getScheme() {
      return new UserEmployeeStructStandardScheme();
    }
  }

  private static class UserEmployeeStructStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserEmployeeStruct> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EMPLOYEEID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.employeeid = iprot.readString();
              struct.setEmployeeidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ROLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.role_id = iprot.readI32();
              struct.setRole_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WXUSER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wxuser_id = iprot.readI32();
              struct.setWxuser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ENAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ename = iprot.readString();
              struct.setEnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // POSITION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.position_id = iprot.readI32();
              struct.setPosition_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SECTION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.section_id = iprot.readI32();
              struct.setSection_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CUSTOM_FIELD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_field = iprot.readString();
              struct.setCustom_fieldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AWARD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.award = iprot.readI64();
              struct.setAwardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.employeeid != null) {
        if (struct.isSetEmployeeid()) {
          oprot.writeFieldBegin(EMPLOYEEID_FIELD_DESC);
          oprot.writeString(struct.employeeid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRole_id()) {
        oprot.writeFieldBegin(ROLE_ID_FIELD_DESC);
        oprot.writeI32(struct.role_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetWxuser_id()) {
        oprot.writeFieldBegin(WXUSER_ID_FIELD_DESC);
        oprot.writeI32(struct.wxuser_id);
        oprot.writeFieldEnd();
      }
      if (struct.ename != null) {
        if (struct.isSetEname()) {
          oprot.writeFieldBegin(ENAME_FIELD_DESC);
          oprot.writeString(struct.ename);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPosition_id()) {
        oprot.writeFieldBegin(POSITION_ID_FIELD_DESC);
        oprot.writeI32(struct.position_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSection_id()) {
        oprot.writeFieldBegin(SECTION_ID_FIELD_DESC);
        oprot.writeI32(struct.section_id);
        oprot.writeFieldEnd();
      }
      if (struct.custom_field != null) {
        if (struct.isSetCustom_field()) {
          oprot.writeFieldBegin(CUSTOM_FIELD_FIELD_DESC);
          oprot.writeString(struct.custom_field);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAward()) {
        oprot.writeFieldBegin(AWARD_FIELD_DESC);
        oprot.writeI64(struct.award);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserEmployeeStructTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserEmployeeStructTupleScheme getScheme() {
      return new UserEmployeeStructTupleScheme();
    }
  }

  private static class UserEmployeeStructTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserEmployeeStruct> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetEmployeeid()) {
        optionals.set(1);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(2);
      }
      if (struct.isSetRole_id()) {
        optionals.set(3);
      }
      if (struct.isSetWxuser_id()) {
        optionals.set(4);
      }
      if (struct.isSetEname()) {
        optionals.set(5);
      }
      if (struct.isSetPosition_id()) {
        optionals.set(6);
      }
      if (struct.isSetSection_id()) {
        optionals.set(7);
      }
      if (struct.isSetCustom_field()) {
        optionals.set(8);
      }
      if (struct.isSetAward()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetEmployeeid()) {
        oprot.writeString(struct.employeeid);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetRole_id()) {
        oprot.writeI32(struct.role_id);
      }
      if (struct.isSetWxuser_id()) {
        oprot.writeI32(struct.wxuser_id);
      }
      if (struct.isSetEname()) {
        oprot.writeString(struct.ename);
      }
      if (struct.isSetPosition_id()) {
        oprot.writeI32(struct.position_id);
      }
      if (struct.isSetSection_id()) {
        oprot.writeI32(struct.section_id);
      }
      if (struct.isSetCustom_field()) {
        oprot.writeString(struct.custom_field);
      }
      if (struct.isSetAward()) {
        oprot.writeI64(struct.award);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserEmployeeStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.employeeid = iprot.readString();
        struct.setEmployeeidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.role_id = iprot.readI32();
        struct.setRole_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.wxuser_id = iprot.readI32();
        struct.setWxuser_idIsSet(true);
      }
      if (incoming.get(5)) {
        struct.ename = iprot.readString();
        struct.setEnameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.position_id = iprot.readI32();
        struct.setPosition_idIsSet(true);
      }
      if (incoming.get(7)) {
        struct.section_id = iprot.readI32();
        struct.setSection_idIsSet(true);
      }
      if (incoming.get(8)) {
        struct.custom_field = iprot.readString();
        struct.setCustom_fieldIsSet(true);
      }
      if (incoming.get(9)) {
        struct.award = iprot.readI64();
        struct.setAwardIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

