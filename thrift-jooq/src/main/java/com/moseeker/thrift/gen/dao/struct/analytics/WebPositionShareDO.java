/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.analytics;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-15")
public class WebPositionShareDO implements org.apache.thrift.TBase<WebPositionShareDO, WebPositionShareDO._Fields>, java.io.Serializable, Cloneable, Comparable<WebPositionShareDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WebPositionShareDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PV_FIELD_DESC = new org.apache.thrift.protocol.TField("pv", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField UV_FIELD_DESC = new org.apache.thrift.protocol.TField("uv", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField APPLICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("application", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SHARE_PV_FIELD_DESC = new org.apache.thrift.protocol.TField("sharePv", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_SPV_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeSpv", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField SHARE_UV_FIELD_DESC = new org.apache.thrift.protocol.TField("shareUv", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_SUV_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeSuv", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField SHARE_APPLICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("shareApplication", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_SAPPLICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeSapplication", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField SHARE_APPUSER_FIELD_DESC = new org.apache.thrift.protocol.TField("shareAppuser", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField EMPLOYEE_SAPPUSER_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeSappuser", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WebPositionShareDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WebPositionShareDOTupleSchemeFactory();

  public int id; // optional
  public int companyId; // optional
  public int pv; // optional
  public int uv; // optional
  public int application; // optional
  public int sharePv; // optional
  public int employeeSpv; // optional
  public int shareUv; // optional
  public int employeeSuv; // optional
  public int shareApplication; // optional
  public int employeeSapplication; // optional
  public int shareAppuser; // optional
  public int employeeSappuser; // optional
  public java.lang.String createTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COMPANY_ID((short)2, "companyId"),
    PV((short)3, "pv"),
    UV((short)4, "uv"),
    APPLICATION((short)5, "application"),
    SHARE_PV((short)6, "sharePv"),
    EMPLOYEE_SPV((short)7, "employeeSpv"),
    SHARE_UV((short)8, "shareUv"),
    EMPLOYEE_SUV((short)9, "employeeSuv"),
    SHARE_APPLICATION((short)10, "shareApplication"),
    EMPLOYEE_SAPPLICATION((short)11, "employeeSapplication"),
    SHARE_APPUSER((short)12, "shareAppuser"),
    EMPLOYEE_SAPPUSER((short)13, "employeeSappuser"),
    CREATE_TIME((short)14, "createTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COMPANY_ID
          return COMPANY_ID;
        case 3: // PV
          return PV;
        case 4: // UV
          return UV;
        case 5: // APPLICATION
          return APPLICATION;
        case 6: // SHARE_PV
          return SHARE_PV;
        case 7: // EMPLOYEE_SPV
          return EMPLOYEE_SPV;
        case 8: // SHARE_UV
          return SHARE_UV;
        case 9: // EMPLOYEE_SUV
          return EMPLOYEE_SUV;
        case 10: // SHARE_APPLICATION
          return SHARE_APPLICATION;
        case 11: // EMPLOYEE_SAPPLICATION
          return EMPLOYEE_SAPPLICATION;
        case 12: // SHARE_APPUSER
          return SHARE_APPUSER;
        case 13: // EMPLOYEE_SAPPUSER
          return EMPLOYEE_SAPPUSER;
        case 14: // CREATE_TIME
          return CREATE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COMPANYID_ISSET_ID = 1;
  private static final int __PV_ISSET_ID = 2;
  private static final int __UV_ISSET_ID = 3;
  private static final int __APPLICATION_ISSET_ID = 4;
  private static final int __SHAREPV_ISSET_ID = 5;
  private static final int __EMPLOYEESPV_ISSET_ID = 6;
  private static final int __SHAREUV_ISSET_ID = 7;
  private static final int __EMPLOYEESUV_ISSET_ID = 8;
  private static final int __SHAREAPPLICATION_ISSET_ID = 9;
  private static final int __EMPLOYEESAPPLICATION_ISSET_ID = 10;
  private static final int __SHAREAPPUSER_ISSET_ID = 11;
  private static final int __EMPLOYEESAPPUSER_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.COMPANY_ID,_Fields.PV,_Fields.UV,_Fields.APPLICATION,_Fields.SHARE_PV,_Fields.EMPLOYEE_SPV,_Fields.SHARE_UV,_Fields.EMPLOYEE_SUV,_Fields.SHARE_APPLICATION,_Fields.EMPLOYEE_SAPPLICATION,_Fields.SHARE_APPUSER,_Fields.EMPLOYEE_SAPPUSER,_Fields.CREATE_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PV, new org.apache.thrift.meta_data.FieldMetaData("pv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UV, new org.apache.thrift.meta_data.FieldMetaData("uv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APPLICATION, new org.apache.thrift.meta_data.FieldMetaData("application", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHARE_PV, new org.apache.thrift.meta_data.FieldMetaData("sharePv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_SPV, new org.apache.thrift.meta_data.FieldMetaData("employeeSpv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHARE_UV, new org.apache.thrift.meta_data.FieldMetaData("shareUv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_SUV, new org.apache.thrift.meta_data.FieldMetaData("employeeSuv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHARE_APPLICATION, new org.apache.thrift.meta_data.FieldMetaData("shareApplication", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_SAPPLICATION, new org.apache.thrift.meta_data.FieldMetaData("employeeSapplication", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHARE_APPUSER, new org.apache.thrift.meta_data.FieldMetaData("shareAppuser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EMPLOYEE_SAPPUSER, new org.apache.thrift.meta_data.FieldMetaData("employeeSappuser", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WebPositionShareDO.class, metaDataMap);
  }

  public WebPositionShareDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WebPositionShareDO(WebPositionShareDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.companyId = other.companyId;
    this.pv = other.pv;
    this.uv = other.uv;
    this.application = other.application;
    this.sharePv = other.sharePv;
    this.employeeSpv = other.employeeSpv;
    this.shareUv = other.shareUv;
    this.employeeSuv = other.employeeSuv;
    this.shareApplication = other.shareApplication;
    this.employeeSapplication = other.employeeSapplication;
    this.shareAppuser = other.shareAppuser;
    this.employeeSappuser = other.employeeSappuser;
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
  }

  public WebPositionShareDO deepCopy() {
    return new WebPositionShareDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setPvIsSet(false);
    this.pv = 0;
    setUvIsSet(false);
    this.uv = 0;
    setApplicationIsSet(false);
    this.application = 0;
    setSharePvIsSet(false);
    this.sharePv = 0;
    setEmployeeSpvIsSet(false);
    this.employeeSpv = 0;
    setShareUvIsSet(false);
    this.shareUv = 0;
    setEmployeeSuvIsSet(false);
    this.employeeSuv = 0;
    setShareApplicationIsSet(false);
    this.shareApplication = 0;
    setEmployeeSapplicationIsSet(false);
    this.employeeSapplication = 0;
    setShareAppuserIsSet(false);
    this.shareAppuser = 0;
    setEmployeeSappuserIsSet(false);
    this.employeeSappuser = 0;
    this.createTime = null;
  }

  public int getId() {
    return this.id;
  }

  public WebPositionShareDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public WebPositionShareDO setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getPv() {
    return this.pv;
  }

  public WebPositionShareDO setPv(int pv) {
    this.pv = pv;
    setPvIsSet(true);
    return this;
  }

  public void unsetPv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PV_ISSET_ID);
  }

  /** Returns true if field pv is set (has been assigned a value) and false otherwise */
  public boolean isSetPv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PV_ISSET_ID);
  }

  public void setPvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PV_ISSET_ID, value);
  }

  public int getUv() {
    return this.uv;
  }

  public WebPositionShareDO setUv(int uv) {
    this.uv = uv;
    setUvIsSet(true);
    return this;
  }

  public void unsetUv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UV_ISSET_ID);
  }

  /** Returns true if field uv is set (has been assigned a value) and false otherwise */
  public boolean isSetUv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UV_ISSET_ID);
  }

  public void setUvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UV_ISSET_ID, value);
  }

  public int getApplication() {
    return this.application;
  }

  public WebPositionShareDO setApplication(int application) {
    this.application = application;
    setApplicationIsSet(true);
    return this;
  }

  public void unsetApplication() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATION_ISSET_ID);
  }

  /** Returns true if field application is set (has been assigned a value) and false otherwise */
  public boolean isSetApplication() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATION_ISSET_ID);
  }

  public void setApplicationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATION_ISSET_ID, value);
  }

  public int getSharePv() {
    return this.sharePv;
  }

  public WebPositionShareDO setSharePv(int sharePv) {
    this.sharePv = sharePv;
    setSharePvIsSet(true);
    return this;
  }

  public void unsetSharePv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHAREPV_ISSET_ID);
  }

  /** Returns true if field sharePv is set (has been assigned a value) and false otherwise */
  public boolean isSetSharePv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHAREPV_ISSET_ID);
  }

  public void setSharePvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHAREPV_ISSET_ID, value);
  }

  public int getEmployeeSpv() {
    return this.employeeSpv;
  }

  public WebPositionShareDO setEmployeeSpv(int employeeSpv) {
    this.employeeSpv = employeeSpv;
    setEmployeeSpvIsSet(true);
    return this;
  }

  public void unsetEmployeeSpv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEESPV_ISSET_ID);
  }

  /** Returns true if field employeeSpv is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeSpv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEESPV_ISSET_ID);
  }

  public void setEmployeeSpvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEESPV_ISSET_ID, value);
  }

  public int getShareUv() {
    return this.shareUv;
  }

  public WebPositionShareDO setShareUv(int shareUv) {
    this.shareUv = shareUv;
    setShareUvIsSet(true);
    return this;
  }

  public void unsetShareUv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHAREUV_ISSET_ID);
  }

  /** Returns true if field shareUv is set (has been assigned a value) and false otherwise */
  public boolean isSetShareUv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHAREUV_ISSET_ID);
  }

  public void setShareUvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHAREUV_ISSET_ID, value);
  }

  public int getEmployeeSuv() {
    return this.employeeSuv;
  }

  public WebPositionShareDO setEmployeeSuv(int employeeSuv) {
    this.employeeSuv = employeeSuv;
    setEmployeeSuvIsSet(true);
    return this;
  }

  public void unsetEmployeeSuv() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEESUV_ISSET_ID);
  }

  /** Returns true if field employeeSuv is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeSuv() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEESUV_ISSET_ID);
  }

  public void setEmployeeSuvIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEESUV_ISSET_ID, value);
  }

  public int getShareApplication() {
    return this.shareApplication;
  }

  public WebPositionShareDO setShareApplication(int shareApplication) {
    this.shareApplication = shareApplication;
    setShareApplicationIsSet(true);
    return this;
  }

  public void unsetShareApplication() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHAREAPPLICATION_ISSET_ID);
  }

  /** Returns true if field shareApplication is set (has been assigned a value) and false otherwise */
  public boolean isSetShareApplication() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHAREAPPLICATION_ISSET_ID);
  }

  public void setShareApplicationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHAREAPPLICATION_ISSET_ID, value);
  }

  public int getEmployeeSapplication() {
    return this.employeeSapplication;
  }

  public WebPositionShareDO setEmployeeSapplication(int employeeSapplication) {
    this.employeeSapplication = employeeSapplication;
    setEmployeeSapplicationIsSet(true);
    return this;
  }

  public void unsetEmployeeSapplication() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEESAPPLICATION_ISSET_ID);
  }

  /** Returns true if field employeeSapplication is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeSapplication() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEESAPPLICATION_ISSET_ID);
  }

  public void setEmployeeSapplicationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEESAPPLICATION_ISSET_ID, value);
  }

  public int getShareAppuser() {
    return this.shareAppuser;
  }

  public WebPositionShareDO setShareAppuser(int shareAppuser) {
    this.shareAppuser = shareAppuser;
    setShareAppuserIsSet(true);
    return this;
  }

  public void unsetShareAppuser() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHAREAPPUSER_ISSET_ID);
  }

  /** Returns true if field shareAppuser is set (has been assigned a value) and false otherwise */
  public boolean isSetShareAppuser() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHAREAPPUSER_ISSET_ID);
  }

  public void setShareAppuserIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHAREAPPUSER_ISSET_ID, value);
  }

  public int getEmployeeSappuser() {
    return this.employeeSappuser;
  }

  public WebPositionShareDO setEmployeeSappuser(int employeeSappuser) {
    this.employeeSappuser = employeeSappuser;
    setEmployeeSappuserIsSet(true);
    return this;
  }

  public void unsetEmployeeSappuser() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEESAPPUSER_ISSET_ID);
  }

  /** Returns true if field employeeSappuser is set (has been assigned a value) and false otherwise */
  public boolean isSetEmployeeSappuser() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEESAPPUSER_ISSET_ID);
  }

  public void setEmployeeSappuserIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEESAPPUSER_ISSET_ID, value);
  }

  public java.lang.String getCreateTime() {
    return this.createTime;
  }

  public WebPositionShareDO setCreateTime(java.lang.String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case PV:
      if (value == null) {
        unsetPv();
      } else {
        setPv((java.lang.Integer)value);
      }
      break;

    case UV:
      if (value == null) {
        unsetUv();
      } else {
        setUv((java.lang.Integer)value);
      }
      break;

    case APPLICATION:
      if (value == null) {
        unsetApplication();
      } else {
        setApplication((java.lang.Integer)value);
      }
      break;

    case SHARE_PV:
      if (value == null) {
        unsetSharePv();
      } else {
        setSharePv((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_SPV:
      if (value == null) {
        unsetEmployeeSpv();
      } else {
        setEmployeeSpv((java.lang.Integer)value);
      }
      break;

    case SHARE_UV:
      if (value == null) {
        unsetShareUv();
      } else {
        setShareUv((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_SUV:
      if (value == null) {
        unsetEmployeeSuv();
      } else {
        setEmployeeSuv((java.lang.Integer)value);
      }
      break;

    case SHARE_APPLICATION:
      if (value == null) {
        unsetShareApplication();
      } else {
        setShareApplication((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_SAPPLICATION:
      if (value == null) {
        unsetEmployeeSapplication();
      } else {
        setEmployeeSapplication((java.lang.Integer)value);
      }
      break;

    case SHARE_APPUSER:
      if (value == null) {
        unsetShareAppuser();
      } else {
        setShareAppuser((java.lang.Integer)value);
      }
      break;

    case EMPLOYEE_SAPPUSER:
      if (value == null) {
        unsetEmployeeSappuser();
      } else {
        setEmployeeSappuser((java.lang.Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case COMPANY_ID:
      return getCompanyId();

    case PV:
      return getPv();

    case UV:
      return getUv();

    case APPLICATION:
      return getApplication();

    case SHARE_PV:
      return getSharePv();

    case EMPLOYEE_SPV:
      return getEmployeeSpv();

    case SHARE_UV:
      return getShareUv();

    case EMPLOYEE_SUV:
      return getEmployeeSuv();

    case SHARE_APPLICATION:
      return getShareApplication();

    case EMPLOYEE_SAPPLICATION:
      return getEmployeeSapplication();

    case SHARE_APPUSER:
      return getShareAppuser();

    case EMPLOYEE_SAPPUSER:
      return getEmployeeSappuser();

    case CREATE_TIME:
      return getCreateTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COMPANY_ID:
      return isSetCompanyId();
    case PV:
      return isSetPv();
    case UV:
      return isSetUv();
    case APPLICATION:
      return isSetApplication();
    case SHARE_PV:
      return isSetSharePv();
    case EMPLOYEE_SPV:
      return isSetEmployeeSpv();
    case SHARE_UV:
      return isSetShareUv();
    case EMPLOYEE_SUV:
      return isSetEmployeeSuv();
    case SHARE_APPLICATION:
      return isSetShareApplication();
    case EMPLOYEE_SAPPLICATION:
      return isSetEmployeeSapplication();
    case SHARE_APPUSER:
      return isSetShareAppuser();
    case EMPLOYEE_SAPPUSER:
      return isSetEmployeeSappuser();
    case CREATE_TIME:
      return isSetCreateTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WebPositionShareDO)
      return this.equals((WebPositionShareDO)that);
    return false;
  }

  public boolean equals(WebPositionShareDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_pv = true && this.isSetPv();
    boolean that_present_pv = true && that.isSetPv();
    if (this_present_pv || that_present_pv) {
      if (!(this_present_pv && that_present_pv))
        return false;
      if (this.pv != that.pv)
        return false;
    }

    boolean this_present_uv = true && this.isSetUv();
    boolean that_present_uv = true && that.isSetUv();
    if (this_present_uv || that_present_uv) {
      if (!(this_present_uv && that_present_uv))
        return false;
      if (this.uv != that.uv)
        return false;
    }

    boolean this_present_application = true && this.isSetApplication();
    boolean that_present_application = true && that.isSetApplication();
    if (this_present_application || that_present_application) {
      if (!(this_present_application && that_present_application))
        return false;
      if (this.application != that.application)
        return false;
    }

    boolean this_present_sharePv = true && this.isSetSharePv();
    boolean that_present_sharePv = true && that.isSetSharePv();
    if (this_present_sharePv || that_present_sharePv) {
      if (!(this_present_sharePv && that_present_sharePv))
        return false;
      if (this.sharePv != that.sharePv)
        return false;
    }

    boolean this_present_employeeSpv = true && this.isSetEmployeeSpv();
    boolean that_present_employeeSpv = true && that.isSetEmployeeSpv();
    if (this_present_employeeSpv || that_present_employeeSpv) {
      if (!(this_present_employeeSpv && that_present_employeeSpv))
        return false;
      if (this.employeeSpv != that.employeeSpv)
        return false;
    }

    boolean this_present_shareUv = true && this.isSetShareUv();
    boolean that_present_shareUv = true && that.isSetShareUv();
    if (this_present_shareUv || that_present_shareUv) {
      if (!(this_present_shareUv && that_present_shareUv))
        return false;
      if (this.shareUv != that.shareUv)
        return false;
    }

    boolean this_present_employeeSuv = true && this.isSetEmployeeSuv();
    boolean that_present_employeeSuv = true && that.isSetEmployeeSuv();
    if (this_present_employeeSuv || that_present_employeeSuv) {
      if (!(this_present_employeeSuv && that_present_employeeSuv))
        return false;
      if (this.employeeSuv != that.employeeSuv)
        return false;
    }

    boolean this_present_shareApplication = true && this.isSetShareApplication();
    boolean that_present_shareApplication = true && that.isSetShareApplication();
    if (this_present_shareApplication || that_present_shareApplication) {
      if (!(this_present_shareApplication && that_present_shareApplication))
        return false;
      if (this.shareApplication != that.shareApplication)
        return false;
    }

    boolean this_present_employeeSapplication = true && this.isSetEmployeeSapplication();
    boolean that_present_employeeSapplication = true && that.isSetEmployeeSapplication();
    if (this_present_employeeSapplication || that_present_employeeSapplication) {
      if (!(this_present_employeeSapplication && that_present_employeeSapplication))
        return false;
      if (this.employeeSapplication != that.employeeSapplication)
        return false;
    }

    boolean this_present_shareAppuser = true && this.isSetShareAppuser();
    boolean that_present_shareAppuser = true && that.isSetShareAppuser();
    if (this_present_shareAppuser || that_present_shareAppuser) {
      if (!(this_present_shareAppuser && that_present_shareAppuser))
        return false;
      if (this.shareAppuser != that.shareAppuser)
        return false;
    }

    boolean this_present_employeeSappuser = true && this.isSetEmployeeSappuser();
    boolean that_present_employeeSappuser = true && that.isSetEmployeeSappuser();
    if (this_present_employeeSappuser || that_present_employeeSappuser) {
      if (!(this_present_employeeSappuser && that_present_employeeSappuser))
        return false;
      if (this.employeeSappuser != that.employeeSappuser)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetPv()) ? 131071 : 524287);
    if (isSetPv())
      hashCode = hashCode * 8191 + pv;

    hashCode = hashCode * 8191 + ((isSetUv()) ? 131071 : 524287);
    if (isSetUv())
      hashCode = hashCode * 8191 + uv;

    hashCode = hashCode * 8191 + ((isSetApplication()) ? 131071 : 524287);
    if (isSetApplication())
      hashCode = hashCode * 8191 + application;

    hashCode = hashCode * 8191 + ((isSetSharePv()) ? 131071 : 524287);
    if (isSetSharePv())
      hashCode = hashCode * 8191 + sharePv;

    hashCode = hashCode * 8191 + ((isSetEmployeeSpv()) ? 131071 : 524287);
    if (isSetEmployeeSpv())
      hashCode = hashCode * 8191 + employeeSpv;

    hashCode = hashCode * 8191 + ((isSetShareUv()) ? 131071 : 524287);
    if (isSetShareUv())
      hashCode = hashCode * 8191 + shareUv;

    hashCode = hashCode * 8191 + ((isSetEmployeeSuv()) ? 131071 : 524287);
    if (isSetEmployeeSuv())
      hashCode = hashCode * 8191 + employeeSuv;

    hashCode = hashCode * 8191 + ((isSetShareApplication()) ? 131071 : 524287);
    if (isSetShareApplication())
      hashCode = hashCode * 8191 + shareApplication;

    hashCode = hashCode * 8191 + ((isSetEmployeeSapplication()) ? 131071 : 524287);
    if (isSetEmployeeSapplication())
      hashCode = hashCode * 8191 + employeeSapplication;

    hashCode = hashCode * 8191 + ((isSetShareAppuser()) ? 131071 : 524287);
    if (isSetShareAppuser())
      hashCode = hashCode * 8191 + shareAppuser;

    hashCode = hashCode * 8191 + ((isSetEmployeeSappuser()) ? 131071 : 524287);
    if (isSetEmployeeSappuser())
      hashCode = hashCode * 8191 + employeeSappuser;

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WebPositionShareDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPv()).compareTo(other.isSetPv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pv, other.pv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUv()).compareTo(other.isSetUv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uv, other.uv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplication()).compareTo(other.isSetApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplication()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.application, other.application);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSharePv()).compareTo(other.isSetSharePv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSharePv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sharePv, other.sharePv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeSpv()).compareTo(other.isSetEmployeeSpv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeSpv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeSpv, other.employeeSpv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetShareUv()).compareTo(other.isSetShareUv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShareUv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shareUv, other.shareUv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeSuv()).compareTo(other.isSetEmployeeSuv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeSuv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeSuv, other.employeeSuv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetShareApplication()).compareTo(other.isSetShareApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShareApplication()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shareApplication, other.shareApplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeSapplication()).compareTo(other.isSetEmployeeSapplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeSapplication()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeSapplication, other.employeeSapplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetShareAppuser()).compareTo(other.isSetShareAppuser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShareAppuser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shareAppuser, other.shareAppuser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmployeeSappuser()).compareTo(other.isSetEmployeeSappuser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmployeeSappuser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeSappuser, other.employeeSappuser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WebPositionShareDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetPv()) {
      if (!first) sb.append(", ");
      sb.append("pv:");
      sb.append(this.pv);
      first = false;
    }
    if (isSetUv()) {
      if (!first) sb.append(", ");
      sb.append("uv:");
      sb.append(this.uv);
      first = false;
    }
    if (isSetApplication()) {
      if (!first) sb.append(", ");
      sb.append("application:");
      sb.append(this.application);
      first = false;
    }
    if (isSetSharePv()) {
      if (!first) sb.append(", ");
      sb.append("sharePv:");
      sb.append(this.sharePv);
      first = false;
    }
    if (isSetEmployeeSpv()) {
      if (!first) sb.append(", ");
      sb.append("employeeSpv:");
      sb.append(this.employeeSpv);
      first = false;
    }
    if (isSetShareUv()) {
      if (!first) sb.append(", ");
      sb.append("shareUv:");
      sb.append(this.shareUv);
      first = false;
    }
    if (isSetEmployeeSuv()) {
      if (!first) sb.append(", ");
      sb.append("employeeSuv:");
      sb.append(this.employeeSuv);
      first = false;
    }
    if (isSetShareApplication()) {
      if (!first) sb.append(", ");
      sb.append("shareApplication:");
      sb.append(this.shareApplication);
      first = false;
    }
    if (isSetEmployeeSapplication()) {
      if (!first) sb.append(", ");
      sb.append("employeeSapplication:");
      sb.append(this.employeeSapplication);
      first = false;
    }
    if (isSetShareAppuser()) {
      if (!first) sb.append(", ");
      sb.append("shareAppuser:");
      sb.append(this.shareAppuser);
      first = false;
    }
    if (isSetEmployeeSappuser()) {
      if (!first) sb.append(", ");
      sb.append("employeeSappuser:");
      sb.append(this.employeeSappuser);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WebPositionShareDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebPositionShareDOStandardScheme getScheme() {
      return new WebPositionShareDOStandardScheme();
    }
  }

  private static class WebPositionShareDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<WebPositionShareDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WebPositionShareDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pv = iprot.readI32();
              struct.setPvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // UV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.uv = iprot.readI32();
              struct.setUvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // APPLICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.application = iprot.readI32();
              struct.setApplicationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SHARE_PV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sharePv = iprot.readI32();
              struct.setSharePvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EMPLOYEE_SPV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employeeSpv = iprot.readI32();
              struct.setEmployeeSpvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SHARE_UV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.shareUv = iprot.readI32();
              struct.setShareUvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EMPLOYEE_SUV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employeeSuv = iprot.readI32();
              struct.setEmployeeSuvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SHARE_APPLICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.shareApplication = iprot.readI32();
              struct.setShareApplicationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // EMPLOYEE_SAPPLICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employeeSapplication = iprot.readI32();
              struct.setEmployeeSapplicationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SHARE_APPUSER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.shareAppuser = iprot.readI32();
              struct.setShareAppuserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // EMPLOYEE_SAPPUSER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.employeeSappuser = iprot.readI32();
              struct.setEmployeeSappuserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WebPositionShareDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPv()) {
        oprot.writeFieldBegin(PV_FIELD_DESC);
        oprot.writeI32(struct.pv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetUv()) {
        oprot.writeFieldBegin(UV_FIELD_DESC);
        oprot.writeI32(struct.uv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetApplication()) {
        oprot.writeFieldBegin(APPLICATION_FIELD_DESC);
        oprot.writeI32(struct.application);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSharePv()) {
        oprot.writeFieldBegin(SHARE_PV_FIELD_DESC);
        oprot.writeI32(struct.sharePv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployeeSpv()) {
        oprot.writeFieldBegin(EMPLOYEE_SPV_FIELD_DESC);
        oprot.writeI32(struct.employeeSpv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetShareUv()) {
        oprot.writeFieldBegin(SHARE_UV_FIELD_DESC);
        oprot.writeI32(struct.shareUv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployeeSuv()) {
        oprot.writeFieldBegin(EMPLOYEE_SUV_FIELD_DESC);
        oprot.writeI32(struct.employeeSuv);
        oprot.writeFieldEnd();
      }
      if (struct.isSetShareApplication()) {
        oprot.writeFieldBegin(SHARE_APPLICATION_FIELD_DESC);
        oprot.writeI32(struct.shareApplication);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployeeSapplication()) {
        oprot.writeFieldBegin(EMPLOYEE_SAPPLICATION_FIELD_DESC);
        oprot.writeI32(struct.employeeSapplication);
        oprot.writeFieldEnd();
      }
      if (struct.isSetShareAppuser()) {
        oprot.writeFieldBegin(SHARE_APPUSER_FIELD_DESC);
        oprot.writeI32(struct.shareAppuser);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEmployeeSappuser()) {
        oprot.writeFieldBegin(EMPLOYEE_SAPPUSER_FIELD_DESC);
        oprot.writeI32(struct.employeeSappuser);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.createTime);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WebPositionShareDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebPositionShareDOTupleScheme getScheme() {
      return new WebPositionShareDOTupleScheme();
    }
  }

  private static class WebPositionShareDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<WebPositionShareDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WebPositionShareDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(1);
      }
      if (struct.isSetPv()) {
        optionals.set(2);
      }
      if (struct.isSetUv()) {
        optionals.set(3);
      }
      if (struct.isSetApplication()) {
        optionals.set(4);
      }
      if (struct.isSetSharePv()) {
        optionals.set(5);
      }
      if (struct.isSetEmployeeSpv()) {
        optionals.set(6);
      }
      if (struct.isSetShareUv()) {
        optionals.set(7);
      }
      if (struct.isSetEmployeeSuv()) {
        optionals.set(8);
      }
      if (struct.isSetShareApplication()) {
        optionals.set(9);
      }
      if (struct.isSetEmployeeSapplication()) {
        optionals.set(10);
      }
      if (struct.isSetShareAppuser()) {
        optionals.set(11);
      }
      if (struct.isSetEmployeeSappuser()) {
        optionals.set(12);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetPv()) {
        oprot.writeI32(struct.pv);
      }
      if (struct.isSetUv()) {
        oprot.writeI32(struct.uv);
      }
      if (struct.isSetApplication()) {
        oprot.writeI32(struct.application);
      }
      if (struct.isSetSharePv()) {
        oprot.writeI32(struct.sharePv);
      }
      if (struct.isSetEmployeeSpv()) {
        oprot.writeI32(struct.employeeSpv);
      }
      if (struct.isSetShareUv()) {
        oprot.writeI32(struct.shareUv);
      }
      if (struct.isSetEmployeeSuv()) {
        oprot.writeI32(struct.employeeSuv);
      }
      if (struct.isSetShareApplication()) {
        oprot.writeI32(struct.shareApplication);
      }
      if (struct.isSetEmployeeSapplication()) {
        oprot.writeI32(struct.employeeSapplication);
      }
      if (struct.isSetShareAppuser()) {
        oprot.writeI32(struct.shareAppuser);
      }
      if (struct.isSetEmployeeSappuser()) {
        oprot.writeI32(struct.employeeSappuser);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WebPositionShareDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.pv = iprot.readI32();
        struct.setPvIsSet(true);
      }
      if (incoming.get(3)) {
        struct.uv = iprot.readI32();
        struct.setUvIsSet(true);
      }
      if (incoming.get(4)) {
        struct.application = iprot.readI32();
        struct.setApplicationIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sharePv = iprot.readI32();
        struct.setSharePvIsSet(true);
      }
      if (incoming.get(6)) {
        struct.employeeSpv = iprot.readI32();
        struct.setEmployeeSpvIsSet(true);
      }
      if (incoming.get(7)) {
        struct.shareUv = iprot.readI32();
        struct.setShareUvIsSet(true);
      }
      if (incoming.get(8)) {
        struct.employeeSuv = iprot.readI32();
        struct.setEmployeeSuvIsSet(true);
      }
      if (incoming.get(9)) {
        struct.shareApplication = iprot.readI32();
        struct.setShareApplicationIsSet(true);
      }
      if (incoming.get(10)) {
        struct.employeeSapplication = iprot.readI32();
        struct.setEmployeeSapplicationIsSet(true);
      }
      if (incoming.get(11)) {
        struct.shareAppuser = iprot.readI32();
        struct.setShareAppuserIsSet(true);
      }
      if (incoming.get(12)) {
        struct.employeeSappuser = iprot.readI32();
        struct.setEmployeeSappuserIsSet(true);
      }
      if (incoming.get(13)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

