/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.profile.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-05-05")
public class ProfileApplicationForm implements org.apache.thrift.TBase<ProfileApplicationForm, ProfileApplicationForm._Fields>, java.io.Serializable, Cloneable, Comparable<ProfileApplicationForm> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProfileApplicationForm");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("source_id", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ATS_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("ats_status", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField RECOMMENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("recommender", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField DL_URL_REQUIRED_FIELD_DESC = new org.apache.thrift.protocol.TField("dl_url_required", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("filter", org.apache.thrift.protocol.TType.MAP, (short)6);
  private static final org.apache.thrift.protocol.TField CONDITIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("conditions", org.apache.thrift.protocol.TType.MAP, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ProfileApplicationFormStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ProfileApplicationFormTupleSchemeFactory();

  public int company_id; // optional
  public int source_id; // optional
  public int ats_status; // optional
  public boolean recommender; // optional
  public boolean dl_url_required; // optional
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> filter; // optional
  public java.util.Map<java.lang.String,java.lang.String> conditions; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "company_id"),
    SOURCE_ID((short)2, "source_id"),
    ATS_STATUS((short)3, "ats_status"),
    RECOMMENDER((short)4, "recommender"),
    DL_URL_REQUIRED((short)5, "dl_url_required"),
    FILTER((short)6, "filter"),
    CONDITIONS((short)7, "conditions");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // SOURCE_ID
          return SOURCE_ID;
        case 3: // ATS_STATUS
          return ATS_STATUS;
        case 4: // RECOMMENDER
          return RECOMMENDER;
        case 5: // DL_URL_REQUIRED
          return DL_URL_REQUIRED;
        case 6: // FILTER
          return FILTER;
        case 7: // CONDITIONS
          return CONDITIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANY_ID_ISSET_ID = 0;
  private static final int __SOURCE_ID_ISSET_ID = 1;
  private static final int __ATS_STATUS_ISSET_ID = 2;
  private static final int __RECOMMENDER_ISSET_ID = 3;
  private static final int __DL_URL_REQUIRED_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.SOURCE_ID,_Fields.ATS_STATUS,_Fields.RECOMMENDER,_Fields.DL_URL_REQUIRED,_Fields.FILTER,_Fields.CONDITIONS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("source_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ATS_STATUS, new org.apache.thrift.meta_data.FieldMetaData("ats_status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOMMENDER, new org.apache.thrift.meta_data.FieldMetaData("recommender", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DL_URL_REQUIRED, new org.apache.thrift.meta_data.FieldMetaData("dl_url_required", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.FILTER, new org.apache.thrift.meta_data.FieldMetaData("filter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.CONDITIONS, new org.apache.thrift.meta_data.FieldMetaData("conditions", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProfileApplicationForm.class, metaDataMap);
  }

  public ProfileApplicationForm() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProfileApplicationForm(ProfileApplicationForm other) {
    __isset_bitfield = other.__isset_bitfield;
    this.company_id = other.company_id;
    this.source_id = other.source_id;
    this.ats_status = other.ats_status;
    this.recommender = other.recommender;
    this.dl_url_required = other.dl_url_required;
    if (other.isSetFilter()) {
      java.util.Map<java.lang.String,java.util.List<java.lang.String>> __this__filter = new java.util.HashMap<java.lang.String,java.util.List<java.lang.String>>(other.filter.size());
      for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> other_element : other.filter.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.List<java.lang.String> other_element_value = other_element.getValue();

        java.lang.String __this__filter_copy_key = other_element_key;

        java.util.List<java.lang.String> __this__filter_copy_value = new java.util.ArrayList<java.lang.String>(other_element_value);

        __this__filter.put(__this__filter_copy_key, __this__filter_copy_value);
      }
      this.filter = __this__filter;
    }
    if (other.isSetConditions()) {
      java.util.Map<java.lang.String,java.lang.String> __this__conditions = new java.util.HashMap<java.lang.String,java.lang.String>(other.conditions);
      this.conditions = __this__conditions;
    }
  }

  public ProfileApplicationForm deepCopy() {
    return new ProfileApplicationForm(this);
  }

  @Override
  public void clear() {
    setCompany_idIsSet(false);
    this.company_id = 0;
    setSource_idIsSet(false);
    this.source_id = 0;
    setAts_statusIsSet(false);
    this.ats_status = 0;
    setRecommenderIsSet(false);
    this.recommender = false;
    setDl_url_requiredIsSet(false);
    this.dl_url_required = false;
    this.filter = null;
    this.conditions = null;
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public ProfileApplicationForm setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getSource_id() {
    return this.source_id;
  }

  public ProfileApplicationForm setSource_id(int source_id) {
    this.source_id = source_id;
    setSource_idIsSet(true);
    return this;
  }

  public void unsetSource_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  /** Returns true if field source_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSource_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ID_ISSET_ID);
  }

  public void setSource_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ID_ISSET_ID, value);
  }

  public int getAts_status() {
    return this.ats_status;
  }

  public ProfileApplicationForm setAts_status(int ats_status) {
    this.ats_status = ats_status;
    setAts_statusIsSet(true);
    return this;
  }

  public void unsetAts_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATS_STATUS_ISSET_ID);
  }

  /** Returns true if field ats_status is set (has been assigned a value) and false otherwise */
  public boolean isSetAts_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATS_STATUS_ISSET_ID);
  }

  public void setAts_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATS_STATUS_ISSET_ID, value);
  }

  public boolean isRecommender() {
    return this.recommender;
  }

  public ProfileApplicationForm setRecommender(boolean recommender) {
    this.recommender = recommender;
    setRecommenderIsSet(true);
    return this;
  }

  public void unsetRecommender() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDER_ISSET_ID);
  }

  /** Returns true if field recommender is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommender() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDER_ISSET_ID);
  }

  public void setRecommenderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDER_ISSET_ID, value);
  }

  public boolean isDl_url_required() {
    return this.dl_url_required;
  }

  public ProfileApplicationForm setDl_url_required(boolean dl_url_required) {
    this.dl_url_required = dl_url_required;
    setDl_url_requiredIsSet(true);
    return this;
  }

  public void unsetDl_url_required() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID);
  }

  /** Returns true if field dl_url_required is set (has been assigned a value) and false otherwise */
  public boolean isSetDl_url_required() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID);
  }

  public void setDl_url_requiredIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DL_URL_REQUIRED_ISSET_ID, value);
  }

  public int getFilterSize() {
    return (this.filter == null) ? 0 : this.filter.size();
  }

  public void putToFilter(java.lang.String key, java.util.List<java.lang.String> val) {
    if (this.filter == null) {
      this.filter = new java.util.HashMap<java.lang.String,java.util.List<java.lang.String>>();
    }
    this.filter.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getFilter() {
    return this.filter;
  }

  public ProfileApplicationForm setFilter(java.util.Map<java.lang.String,java.util.List<java.lang.String>> filter) {
    this.filter = filter;
    return this;
  }

  public void unsetFilter() {
    this.filter = null;
  }

  /** Returns true if field filter is set (has been assigned a value) and false otherwise */
  public boolean isSetFilter() {
    return this.filter != null;
  }

  public void setFilterIsSet(boolean value) {
    if (!value) {
      this.filter = null;
    }
  }

  public int getConditionsSize() {
    return (this.conditions == null) ? 0 : this.conditions.size();
  }

  public void putToConditions(java.lang.String key, java.lang.String val) {
    if (this.conditions == null) {
      this.conditions = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.conditions.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getConditions() {
    return this.conditions;
  }

  public ProfileApplicationForm setConditions(java.util.Map<java.lang.String,java.lang.String> conditions) {
    this.conditions = conditions;
    return this;
  }

  public void unsetConditions() {
    this.conditions = null;
  }

  /** Returns true if field conditions is set (has been assigned a value) and false otherwise */
  public boolean isSetConditions() {
    return this.conditions != null;
  }

  public void setConditionsIsSet(boolean value) {
    if (!value) {
      this.conditions = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((java.lang.Integer)value);
      }
      break;

    case SOURCE_ID:
      if (value == null) {
        unsetSource_id();
      } else {
        setSource_id((java.lang.Integer)value);
      }
      break;

    case ATS_STATUS:
      if (value == null) {
        unsetAts_status();
      } else {
        setAts_status((java.lang.Integer)value);
      }
      break;

    case RECOMMENDER:
      if (value == null) {
        unsetRecommender();
      } else {
        setRecommender((java.lang.Boolean)value);
      }
      break;

    case DL_URL_REQUIRED:
      if (value == null) {
        unsetDl_url_required();
      } else {
        setDl_url_required((java.lang.Boolean)value);
      }
      break;

    case FILTER:
      if (value == null) {
        unsetFilter();
      } else {
        setFilter((java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value);
      }
      break;

    case CONDITIONS:
      if (value == null) {
        unsetConditions();
      } else {
        setConditions((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return getCompany_id();

    case SOURCE_ID:
      return getSource_id();

    case ATS_STATUS:
      return getAts_status();

    case RECOMMENDER:
      return isRecommender();

    case DL_URL_REQUIRED:
      return isDl_url_required();

    case FILTER:
      return getFilter();

    case CONDITIONS:
      return getConditions();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompany_id();
    case SOURCE_ID:
      return isSetSource_id();
    case ATS_STATUS:
      return isSetAts_status();
    case RECOMMENDER:
      return isSetRecommender();
    case DL_URL_REQUIRED:
      return isSetDl_url_required();
    case FILTER:
      return isSetFilter();
    case CONDITIONS:
      return isSetConditions();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ProfileApplicationForm)
      return this.equals((ProfileApplicationForm)that);
    return false;
  }

  public boolean equals(ProfileApplicationForm that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_company_id = true && this.isSetCompany_id();
    boolean that_present_company_id = true && that.isSetCompany_id();
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_source_id = true && this.isSetSource_id();
    boolean that_present_source_id = true && that.isSetSource_id();
    if (this_present_source_id || that_present_source_id) {
      if (!(this_present_source_id && that_present_source_id))
        return false;
      if (this.source_id != that.source_id)
        return false;
    }

    boolean this_present_ats_status = true && this.isSetAts_status();
    boolean that_present_ats_status = true && that.isSetAts_status();
    if (this_present_ats_status || that_present_ats_status) {
      if (!(this_present_ats_status && that_present_ats_status))
        return false;
      if (this.ats_status != that.ats_status)
        return false;
    }

    boolean this_present_recommender = true && this.isSetRecommender();
    boolean that_present_recommender = true && that.isSetRecommender();
    if (this_present_recommender || that_present_recommender) {
      if (!(this_present_recommender && that_present_recommender))
        return false;
      if (this.recommender != that.recommender)
        return false;
    }

    boolean this_present_dl_url_required = true && this.isSetDl_url_required();
    boolean that_present_dl_url_required = true && that.isSetDl_url_required();
    if (this_present_dl_url_required || that_present_dl_url_required) {
      if (!(this_present_dl_url_required && that_present_dl_url_required))
        return false;
      if (this.dl_url_required != that.dl_url_required)
        return false;
    }

    boolean this_present_filter = true && this.isSetFilter();
    boolean that_present_filter = true && that.isSetFilter();
    if (this_present_filter || that_present_filter) {
      if (!(this_present_filter && that_present_filter))
        return false;
      if (!this.filter.equals(that.filter))
        return false;
    }

    boolean this_present_conditions = true && this.isSetConditions();
    boolean that_present_conditions = true && that.isSetConditions();
    if (this_present_conditions || that_present_conditions) {
      if (!(this_present_conditions && that_present_conditions))
        return false;
      if (!this.conditions.equals(that.conditions))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCompany_id()) ? 131071 : 524287);
    if (isSetCompany_id())
      hashCode = hashCode * 8191 + company_id;

    hashCode = hashCode * 8191 + ((isSetSource_id()) ? 131071 : 524287);
    if (isSetSource_id())
      hashCode = hashCode * 8191 + source_id;

    hashCode = hashCode * 8191 + ((isSetAts_status()) ? 131071 : 524287);
    if (isSetAts_status())
      hashCode = hashCode * 8191 + ats_status;

    hashCode = hashCode * 8191 + ((isSetRecommender()) ? 131071 : 524287);
    if (isSetRecommender())
      hashCode = hashCode * 8191 + ((recommender) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetDl_url_required()) ? 131071 : 524287);
    if (isSetDl_url_required())
      hashCode = hashCode * 8191 + ((dl_url_required) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetFilter()) ? 131071 : 524287);
    if (isSetFilter())
      hashCode = hashCode * 8191 + filter.hashCode();

    hashCode = hashCode * 8191 + ((isSetConditions()) ? 131071 : 524287);
    if (isSetConditions())
      hashCode = hashCode * 8191 + conditions.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ProfileApplicationForm other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource_id()).compareTo(other.isSetSource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source_id, other.source_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAts_status()).compareTo(other.isSetAts_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAts_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ats_status, other.ats_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommender()).compareTo(other.isSetRecommender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommender, other.recommender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDl_url_required()).compareTo(other.isSetDl_url_required());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDl_url_required()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dl_url_required, other.dl_url_required);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFilter()).compareTo(other.isSetFilter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filter, other.filter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetConditions()).compareTo(other.isSetConditions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConditions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conditions, other.conditions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ProfileApplicationForm(");
    boolean first = true;

    if (isSetCompany_id()) {
      sb.append("company_id:");
      sb.append(this.company_id);
      first = false;
    }
    if (isSetSource_id()) {
      if (!first) sb.append(", ");
      sb.append("source_id:");
      sb.append(this.source_id);
      first = false;
    }
    if (isSetAts_status()) {
      if (!first) sb.append(", ");
      sb.append("ats_status:");
      sb.append(this.ats_status);
      first = false;
    }
    if (isSetRecommender()) {
      if (!first) sb.append(", ");
      sb.append("recommender:");
      sb.append(this.recommender);
      first = false;
    }
    if (isSetDl_url_required()) {
      if (!first) sb.append(", ");
      sb.append("dl_url_required:");
      sb.append(this.dl_url_required);
      first = false;
    }
    if (isSetFilter()) {
      if (!first) sb.append(", ");
      sb.append("filter:");
      if (this.filter == null) {
        sb.append("null");
      } else {
        sb.append(this.filter);
      }
      first = false;
    }
    if (isSetConditions()) {
      if (!first) sb.append(", ");
      sb.append("conditions:");
      if (this.conditions == null) {
        sb.append("null");
      } else {
        sb.append(this.conditions);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProfileApplicationFormStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProfileApplicationFormStandardScheme getScheme() {
      return new ProfileApplicationFormStandardScheme();
    }
  }

  private static class ProfileApplicationFormStandardScheme extends org.apache.thrift.scheme.StandardScheme<ProfileApplicationForm> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProfileApplicationForm struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source_id = iprot.readI32();
              struct.setSource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ATS_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ats_status = iprot.readI32();
              struct.setAts_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RECOMMENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.recommender = iprot.readBool();
              struct.setRecommenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DL_URL_REQUIRED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.dl_url_required = iprot.readBool();
              struct.setDl_url_requiredIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FILTER
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map30 = iprot.readMapBegin();
                struct.filter = new java.util.HashMap<java.lang.String,java.util.List<java.lang.String>>(2*_map30.size);
                java.lang.String _key31;
                java.util.List<java.lang.String> _val32;
                for (int _i33 = 0; _i33 < _map30.size; ++_i33)
                {
                  _key31 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TList _list34 = iprot.readListBegin();
                    _val32 = new java.util.ArrayList<java.lang.String>(_list34.size);
                    java.lang.String _elem35;
                    for (int _i36 = 0; _i36 < _list34.size; ++_i36)
                    {
                      _elem35 = iprot.readString();
                      _val32.add(_elem35);
                    }
                    iprot.readListEnd();
                  }
                  struct.filter.put(_key31, _val32);
                }
                iprot.readMapEnd();
              }
              struct.setFilterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONDITIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map37 = iprot.readMapBegin();
                struct.conditions = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map37.size);
                java.lang.String _key38;
                java.lang.String _val39;
                for (int _i40 = 0; _i40 < _map37.size; ++_i40)
                {
                  _key38 = iprot.readString();
                  _val39 = iprot.readString();
                  struct.conditions.put(_key38, _val39);
                }
                iprot.readMapEnd();
              }
              struct.setConditionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProfileApplicationForm struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCompany_id()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.company_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSource_id()) {
        oprot.writeFieldBegin(SOURCE_ID_FIELD_DESC);
        oprot.writeI32(struct.source_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAts_status()) {
        oprot.writeFieldBegin(ATS_STATUS_FIELD_DESC);
        oprot.writeI32(struct.ats_status);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecommender()) {
        oprot.writeFieldBegin(RECOMMENDER_FIELD_DESC);
        oprot.writeBool(struct.recommender);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDl_url_required()) {
        oprot.writeFieldBegin(DL_URL_REQUIRED_FIELD_DESC);
        oprot.writeBool(struct.dl_url_required);
        oprot.writeFieldEnd();
      }
      if (struct.filter != null) {
        if (struct.isSetFilter()) {
          oprot.writeFieldBegin(FILTER_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, struct.filter.size()));
            for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> _iter41 : struct.filter.entrySet())
            {
              oprot.writeString(_iter41.getKey());
              {
                oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter41.getValue().size()));
                for (java.lang.String _iter42 : _iter41.getValue())
                {
                  oprot.writeString(_iter42);
                }
                oprot.writeListEnd();
              }
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.conditions != null) {
        if (struct.isSetConditions()) {
          oprot.writeFieldBegin(CONDITIONS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.conditions.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter43 : struct.conditions.entrySet())
            {
              oprot.writeString(_iter43.getKey());
              oprot.writeString(_iter43.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProfileApplicationFormTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProfileApplicationFormTupleScheme getScheme() {
      return new ProfileApplicationFormTupleScheme();
    }
  }

  private static class ProfileApplicationFormTupleScheme extends org.apache.thrift.scheme.TupleScheme<ProfileApplicationForm> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProfileApplicationForm struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCompany_id()) {
        optionals.set(0);
      }
      if (struct.isSetSource_id()) {
        optionals.set(1);
      }
      if (struct.isSetAts_status()) {
        optionals.set(2);
      }
      if (struct.isSetRecommender()) {
        optionals.set(3);
      }
      if (struct.isSetDl_url_required()) {
        optionals.set(4);
      }
      if (struct.isSetFilter()) {
        optionals.set(5);
      }
      if (struct.isSetConditions()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetSource_id()) {
        oprot.writeI32(struct.source_id);
      }
      if (struct.isSetAts_status()) {
        oprot.writeI32(struct.ats_status);
      }
      if (struct.isSetRecommender()) {
        oprot.writeBool(struct.recommender);
      }
      if (struct.isSetDl_url_required()) {
        oprot.writeBool(struct.dl_url_required);
      }
      if (struct.isSetFilter()) {
        {
          oprot.writeI32(struct.filter.size());
          for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> _iter44 : struct.filter.entrySet())
          {
            oprot.writeString(_iter44.getKey());
            {
              oprot.writeI32(_iter44.getValue().size());
              for (java.lang.String _iter45 : _iter44.getValue())
              {
                oprot.writeString(_iter45);
              }
            }
          }
        }
      }
      if (struct.isSetConditions()) {
        {
          oprot.writeI32(struct.conditions.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter46 : struct.conditions.entrySet())
          {
            oprot.writeString(_iter46.getKey());
            oprot.writeString(_iter46.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProfileApplicationForm struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.source_id = iprot.readI32();
        struct.setSource_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.ats_status = iprot.readI32();
        struct.setAts_statusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.recommender = iprot.readBool();
        struct.setRecommenderIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dl_url_required = iprot.readBool();
        struct.setDl_url_requiredIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TMap _map47 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.filter = new java.util.HashMap<java.lang.String,java.util.List<java.lang.String>>(2*_map47.size);
          java.lang.String _key48;
          java.util.List<java.lang.String> _val49;
          for (int _i50 = 0; _i50 < _map47.size; ++_i50)
          {
            _key48 = iprot.readString();
            {
              org.apache.thrift.protocol.TList _list51 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val49 = new java.util.ArrayList<java.lang.String>(_list51.size);
              java.lang.String _elem52;
              for (int _i53 = 0; _i53 < _list51.size; ++_i53)
              {
                _elem52 = iprot.readString();
                _val49.add(_elem52);
              }
            }
            struct.filter.put(_key48, _val49);
          }
        }
        struct.setFilterIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TMap _map54 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.conditions = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map54.size);
          java.lang.String _key55;
          java.lang.String _val56;
          for (int _i57 = 0; _i57 < _map54.size; ++_i57)
          {
            _key55 = iprot.readString();
            _val56 = iprot.readString();
            struct.conditions.put(_key55, _val56);
          }
        }
        struct.setConditionsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

