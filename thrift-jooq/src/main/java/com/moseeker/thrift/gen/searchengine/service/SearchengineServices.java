/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.searchengine.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-30")
public class SearchengineServices {

  public interface Iface {

    public com.moseeker.thrift.gen.common.struct.Response query(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response updateposition(java.lang.String position, int id) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response companyQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response positionQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRanking(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRankingInWx(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response updateEmployeeAwards(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response deleteEmployeeDO(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void query(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void updateposition(java.lang.String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void companyQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void positionQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void queryAwardRanking(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void queryAwardRankingInWx(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void updateEmployeeAwards(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void deleteEmployeeDO(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.moseeker.thrift.gen.common.struct.Response query(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom) throws org.apache.thrift.TException
    {
      send_query(keywords, cities, industries, occupations, scale, employment_type, candidate_source, experience, degree, salary, company_name, page_from, page_size, child_company_name, department, order_by_priority, custom);
      return recv_query();
    }

    public void send_query(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom) throws org.apache.thrift.TException
    {
      query_args args = new query_args();
      args.setKeywords(keywords);
      args.setCities(cities);
      args.setIndustries(industries);
      args.setOccupations(occupations);
      args.setScale(scale);
      args.setEmployment_type(employment_type);
      args.setCandidate_source(candidate_source);
      args.setExperience(experience);
      args.setDegree(degree);
      args.setSalary(salary);
      args.setCompany_name(company_name);
      args.setPage_from(page_from);
      args.setPage_size(page_size);
      args.setChild_company_name(child_company_name);
      args.setDepartment(department);
      args.setOrder_by_priority(order_by_priority);
      args.setCustom(custom);
      sendBase("query", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_query() throws org.apache.thrift.TException
    {
      query_result result = new query_result();
      receiveBase(result, "query");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "query failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response updateposition(java.lang.String position, int id) throws org.apache.thrift.TException
    {
      send_updateposition(position, id);
      return recv_updateposition();
    }

    public void send_updateposition(java.lang.String position, int id) throws org.apache.thrift.TException
    {
      updateposition_args args = new updateposition_args();
      args.setPosition(position);
      args.setId(id);
      sendBase("updateposition", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_updateposition() throws org.apache.thrift.TException
    {
      updateposition_result result = new updateposition_result();
      receiveBase(result, "updateposition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateposition failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response companyQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize) throws org.apache.thrift.TException
    {
      send_companyQuery(keyWords, citys, industry, scale, page, pageSize);
      return recv_companyQuery();
    }

    public void send_companyQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize) throws org.apache.thrift.TException
    {
      companyQuery_args args = new companyQuery_args();
      args.setKeyWords(keyWords);
      args.setCitys(citys);
      args.setIndustry(industry);
      args.setScale(scale);
      args.setPage(page);
      args.setPageSize(pageSize);
      sendBase("companyQuery", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_companyQuery() throws org.apache.thrift.TException
    {
      companyQuery_result result = new companyQuery_result();
      receiveBase(result, "companyQuery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "companyQuery failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response positionQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order) throws org.apache.thrift.TException
    {
      send_positionQuery(keyWords, citys, industry, salaryCode, page, pageSize, startTime, endTime, companyId, teamId, motherCompanyId, order);
      return recv_positionQuery();
    }

    public void send_positionQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order) throws org.apache.thrift.TException
    {
      positionQuery_args args = new positionQuery_args();
      args.setKeyWords(keyWords);
      args.setCitys(citys);
      args.setIndustry(industry);
      args.setSalaryCode(salaryCode);
      args.setPage(page);
      args.setPageSize(pageSize);
      args.setStartTime(startTime);
      args.setEndTime(endTime);
      args.setCompanyId(companyId);
      args.setTeamId(teamId);
      args.setMotherCompanyId(motherCompanyId);
      args.setOrder(order);
      sendBase("positionQuery", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_positionQuery() throws org.apache.thrift.TException
    {
      positionQuery_result result = new positionQuery_result();
      receiveBase(result, "positionQuery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "positionQuery failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRanking(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter) throws org.apache.thrift.TException
    {
      send_queryAwardRanking(companyIds, timespan, pageSize, pageNum, keyword, filter);
      return recv_queryAwardRanking();
    }

    public void send_queryAwardRanking(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter) throws org.apache.thrift.TException
    {
      queryAwardRanking_args args = new queryAwardRanking_args();
      args.setCompanyIds(companyIds);
      args.setTimespan(timespan);
      args.setPageSize(pageSize);
      args.setPageNum(pageNum);
      args.setKeyword(keyword);
      args.setFilter(filter);
      sendBase("queryAwardRanking", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_queryAwardRanking() throws org.apache.thrift.TException
    {
      queryAwardRanking_result result = new queryAwardRanking_result();
      receiveBase(result, "queryAwardRanking");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryAwardRanking failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRankingInWx(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId) throws org.apache.thrift.TException
    {
      send_queryAwardRankingInWx(companyIds, timespan, employeeId);
      return recv_queryAwardRankingInWx();
    }

    public void send_queryAwardRankingInWx(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId) throws org.apache.thrift.TException
    {
      queryAwardRankingInWx_args args = new queryAwardRankingInWx_args();
      args.setCompanyIds(companyIds);
      args.setTimespan(timespan);
      args.setEmployeeId(employeeId);
      sendBase("queryAwardRankingInWx", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_queryAwardRankingInWx() throws org.apache.thrift.TException
    {
      queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
      receiveBase(result, "queryAwardRankingInWx");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryAwardRankingInWx failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response updateEmployeeAwards(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException
    {
      send_updateEmployeeAwards(employeeId);
      return recv_updateEmployeeAwards();
    }

    public void send_updateEmployeeAwards(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException
    {
      updateEmployeeAwards_args args = new updateEmployeeAwards_args();
      args.setEmployeeId(employeeId);
      sendBase("updateEmployeeAwards", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_updateEmployeeAwards() throws org.apache.thrift.TException
    {
      updateEmployeeAwards_result result = new updateEmployeeAwards_result();
      receiveBase(result, "updateEmployeeAwards");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateEmployeeAwards failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response deleteEmployeeDO(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException
    {
      send_deleteEmployeeDO(employeeId);
      return recv_deleteEmployeeDO();
    }

    public void send_deleteEmployeeDO(java.util.List<java.lang.Integer> employeeId) throws org.apache.thrift.TException
    {
      deleteEmployeeDO_args args = new deleteEmployeeDO_args();
      args.setEmployeeId(employeeId);
      sendBase("deleteEmployeeDO", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_deleteEmployeeDO() throws org.apache.thrift.TException
    {
      deleteEmployeeDO_result result = new deleteEmployeeDO_result();
      receiveBase(result, "deleteEmployeeDO");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deleteEmployeeDO failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void query(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      query_call method_call = new query_call(keywords, cities, industries, occupations, scale, employment_type, candidate_source, experience, degree, salary, company_name, page_from, page_size, child_company_name, department, order_by_priority, custom, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class query_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.lang.String keywords;
      private java.lang.String cities;
      private java.lang.String industries;
      private java.lang.String occupations;
      private java.lang.String scale;
      private java.lang.String employment_type;
      private java.lang.String candidate_source;
      private java.lang.String experience;
      private java.lang.String degree;
      private java.lang.String salary;
      private java.lang.String company_name;
      private int page_from;
      private int page_size;
      private java.lang.String child_company_name;
      private java.lang.String department;
      private boolean order_by_priority;
      private java.lang.String custom;
      public query_call(java.lang.String keywords, java.lang.String cities, java.lang.String industries, java.lang.String occupations, java.lang.String scale, java.lang.String employment_type, java.lang.String candidate_source, java.lang.String experience, java.lang.String degree, java.lang.String salary, java.lang.String company_name, int page_from, int page_size, java.lang.String child_company_name, java.lang.String department, boolean order_by_priority, java.lang.String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.keywords = keywords;
        this.cities = cities;
        this.industries = industries;
        this.occupations = occupations;
        this.scale = scale;
        this.employment_type = employment_type;
        this.candidate_source = candidate_source;
        this.experience = experience;
        this.degree = degree;
        this.salary = salary;
        this.company_name = company_name;
        this.page_from = page_from;
        this.page_size = page_size;
        this.child_company_name = child_company_name;
        this.department = department;
        this.order_by_priority = order_by_priority;
        this.custom = custom;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("query", org.apache.thrift.protocol.TMessageType.CALL, 0));
        query_args args = new query_args();
        args.setKeywords(keywords);
        args.setCities(cities);
        args.setIndustries(industries);
        args.setOccupations(occupations);
        args.setScale(scale);
        args.setEmployment_type(employment_type);
        args.setCandidate_source(candidate_source);
        args.setExperience(experience);
        args.setDegree(degree);
        args.setSalary(salary);
        args.setCompany_name(company_name);
        args.setPage_from(page_from);
        args.setPage_size(page_size);
        args.setChild_company_name(child_company_name);
        args.setDepartment(department);
        args.setOrder_by_priority(order_by_priority);
        args.setCustom(custom);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_query();
      }
    }

    public void updateposition(java.lang.String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateposition_call method_call = new updateposition_call(position, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateposition_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.lang.String position;
      private int id;
      public updateposition_call(java.lang.String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.position = position;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateposition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateposition_args args = new updateposition_args();
        args.setPosition(position);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateposition();
      }
    }

    public void companyQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      companyQuery_call method_call = new companyQuery_call(keyWords, citys, industry, scale, page, pageSize, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class companyQuery_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.lang.String keyWords;
      private java.lang.String citys;
      private java.lang.String industry;
      private java.lang.String scale;
      private int page;
      private int pageSize;
      public companyQuery_call(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String scale, int page, int pageSize, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.keyWords = keyWords;
        this.citys = citys;
        this.industry = industry;
        this.scale = scale;
        this.page = page;
        this.pageSize = pageSize;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("companyQuery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        companyQuery_args args = new companyQuery_args();
        args.setKeyWords(keyWords);
        args.setCitys(citys);
        args.setIndustry(industry);
        args.setScale(scale);
        args.setPage(page);
        args.setPageSize(pageSize);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_companyQuery();
      }
    }

    public void positionQuery(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      positionQuery_call method_call = new positionQuery_call(keyWords, citys, industry, salaryCode, page, pageSize, startTime, endTime, companyId, teamId, motherCompanyId, order, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class positionQuery_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.lang.String keyWords;
      private java.lang.String citys;
      private java.lang.String industry;
      private java.lang.String salaryCode;
      private int page;
      private int pageSize;
      private java.lang.String startTime;
      private java.lang.String endTime;
      private int companyId;
      private int teamId;
      private int motherCompanyId;
      private int order;
      public positionQuery_call(java.lang.String keyWords, java.lang.String citys, java.lang.String industry, java.lang.String salaryCode, int page, int pageSize, java.lang.String startTime, java.lang.String endTime, int companyId, int teamId, int motherCompanyId, int order, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.keyWords = keyWords;
        this.citys = citys;
        this.industry = industry;
        this.salaryCode = salaryCode;
        this.page = page;
        this.pageSize = pageSize;
        this.startTime = startTime;
        this.endTime = endTime;
        this.companyId = companyId;
        this.teamId = teamId;
        this.motherCompanyId = motherCompanyId;
        this.order = order;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("positionQuery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        positionQuery_args args = new positionQuery_args();
        args.setKeyWords(keyWords);
        args.setCitys(citys);
        args.setIndustry(industry);
        args.setSalaryCode(salaryCode);
        args.setPage(page);
        args.setPageSize(pageSize);
        args.setStartTime(startTime);
        args.setEndTime(endTime);
        args.setCompanyId(companyId);
        args.setTeamId(teamId);
        args.setMotherCompanyId(motherCompanyId);
        args.setOrder(order);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_positionQuery();
      }
    }

    public void queryAwardRanking(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryAwardRanking_call method_call = new queryAwardRanking_call(companyIds, timespan, pageSize, pageNum, keyword, filter, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryAwardRanking_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<java.lang.Integer> companyIds;
      private java.lang.String timespan;
      private int pageSize;
      private int pageNum;
      private java.lang.String keyword;
      private int filter;
      public queryAwardRanking_call(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int pageSize, int pageNum, java.lang.String keyword, int filter, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyIds = companyIds;
        this.timespan = timespan;
        this.pageSize = pageSize;
        this.pageNum = pageNum;
        this.keyword = keyword;
        this.filter = filter;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryAwardRanking", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryAwardRanking_args args = new queryAwardRanking_args();
        args.setCompanyIds(companyIds);
        args.setTimespan(timespan);
        args.setPageSize(pageSize);
        args.setPageNum(pageNum);
        args.setKeyword(keyword);
        args.setFilter(filter);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryAwardRanking();
      }
    }

    public void queryAwardRankingInWx(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryAwardRankingInWx_call method_call = new queryAwardRankingInWx_call(companyIds, timespan, employeeId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryAwardRankingInWx_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<java.lang.Integer> companyIds;
      private java.lang.String timespan;
      private int employeeId;
      public queryAwardRankingInWx_call(java.util.List<java.lang.Integer> companyIds, java.lang.String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyIds = companyIds;
        this.timespan = timespan;
        this.employeeId = employeeId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryAwardRankingInWx", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryAwardRankingInWx_args args = new queryAwardRankingInWx_args();
        args.setCompanyIds(companyIds);
        args.setTimespan(timespan);
        args.setEmployeeId(employeeId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryAwardRankingInWx();
      }
    }

    public void updateEmployeeAwards(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateEmployeeAwards_call method_call = new updateEmployeeAwards_call(employeeId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateEmployeeAwards_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<java.lang.Integer> employeeId;
      public updateEmployeeAwards_call(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.employeeId = employeeId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateEmployeeAwards", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateEmployeeAwards_args args = new updateEmployeeAwards_args();
        args.setEmployeeId(employeeId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateEmployeeAwards();
      }
    }

    public void deleteEmployeeDO(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteEmployeeDO_call method_call = new deleteEmployeeDO_call(employeeId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteEmployeeDO_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<java.lang.Integer> employeeId;
      public deleteEmployeeDO_call(java.util.List<java.lang.Integer> employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.employeeId = employeeId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteEmployeeDO", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteEmployeeDO_args args = new deleteEmployeeDO_args();
        args.setEmployeeId(employeeId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deleteEmployeeDO();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("query", new query());
      processMap.put("updateposition", new updateposition());
      processMap.put("companyQuery", new companyQuery());
      processMap.put("positionQuery", new positionQuery());
      processMap.put("queryAwardRanking", new queryAwardRanking());
      processMap.put("queryAwardRankingInWx", new queryAwardRankingInWx());
      processMap.put("updateEmployeeAwards", new updateEmployeeAwards());
      processMap.put("deleteEmployeeDO", new deleteEmployeeDO());
      return processMap;
    }

    public static class query<I extends Iface> extends org.apache.thrift.ProcessFunction<I, query_args> {
      public query() {
        super("query");
      }

      public query_args getEmptyArgsInstance() {
        return new query_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public query_result getResult(I iface, query_args args) throws org.apache.thrift.TException {
        query_result result = new query_result();
        result.success = iface.query(args.keywords, args.cities, args.industries, args.occupations, args.scale, args.employment_type, args.candidate_source, args.experience, args.degree, args.salary, args.company_name, args.page_from, args.page_size, args.child_company_name, args.department, args.order_by_priority, args.custom);
        return result;
      }
    }

    public static class updateposition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateposition_args> {
      public updateposition() {
        super("updateposition");
      }

      public updateposition_args getEmptyArgsInstance() {
        return new updateposition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateposition_result getResult(I iface, updateposition_args args) throws org.apache.thrift.TException {
        updateposition_result result = new updateposition_result();
        result.success = iface.updateposition(args.position, args.id);
        return result;
      }
    }

    public static class companyQuery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, companyQuery_args> {
      public companyQuery() {
        super("companyQuery");
      }

      public companyQuery_args getEmptyArgsInstance() {
        return new companyQuery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public companyQuery_result getResult(I iface, companyQuery_args args) throws org.apache.thrift.TException {
        companyQuery_result result = new companyQuery_result();
        result.success = iface.companyQuery(args.keyWords, args.citys, args.industry, args.scale, args.page, args.pageSize);
        return result;
      }
    }

    public static class positionQuery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, positionQuery_args> {
      public positionQuery() {
        super("positionQuery");
      }

      public positionQuery_args getEmptyArgsInstance() {
        return new positionQuery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public positionQuery_result getResult(I iface, positionQuery_args args) throws org.apache.thrift.TException {
        positionQuery_result result = new positionQuery_result();
        result.success = iface.positionQuery(args.keyWords, args.citys, args.industry, args.salaryCode, args.page, args.pageSize, args.startTime, args.endTime, args.companyId, args.teamId, args.motherCompanyId, args.order);
        return result;
      }
    }

    public static class queryAwardRanking<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryAwardRanking_args> {
      public queryAwardRanking() {
        super("queryAwardRanking");
      }

      public queryAwardRanking_args getEmptyArgsInstance() {
        return new queryAwardRanking_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryAwardRanking_result getResult(I iface, queryAwardRanking_args args) throws org.apache.thrift.TException {
        queryAwardRanking_result result = new queryAwardRanking_result();
        result.success = iface.queryAwardRanking(args.companyIds, args.timespan, args.pageSize, args.pageNum, args.keyword, args.filter);
        return result;
      }
    }

    public static class queryAwardRankingInWx<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryAwardRankingInWx_args> {
      public queryAwardRankingInWx() {
        super("queryAwardRankingInWx");
      }

      public queryAwardRankingInWx_args getEmptyArgsInstance() {
        return new queryAwardRankingInWx_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryAwardRankingInWx_result getResult(I iface, queryAwardRankingInWx_args args) throws org.apache.thrift.TException {
        queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
        result.success = iface.queryAwardRankingInWx(args.companyIds, args.timespan, args.employeeId);
        return result;
      }
    }

    public static class updateEmployeeAwards<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateEmployeeAwards_args> {
      public updateEmployeeAwards() {
        super("updateEmployeeAwards");
      }

      public updateEmployeeAwards_args getEmptyArgsInstance() {
        return new updateEmployeeAwards_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateEmployeeAwards_result getResult(I iface, updateEmployeeAwards_args args) throws org.apache.thrift.TException {
        updateEmployeeAwards_result result = new updateEmployeeAwards_result();
        result.success = iface.updateEmployeeAwards(args.employeeId);
        return result;
      }
    }

    public static class deleteEmployeeDO<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteEmployeeDO_args> {
      public deleteEmployeeDO() {
        super("deleteEmployeeDO");
      }

      public deleteEmployeeDO_args getEmptyArgsInstance() {
        return new deleteEmployeeDO_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteEmployeeDO_result getResult(I iface, deleteEmployeeDO_args args) throws org.apache.thrift.TException {
        deleteEmployeeDO_result result = new deleteEmployeeDO_result();
        result.success = iface.deleteEmployeeDO(args.employeeId);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("query", new query());
      processMap.put("updateposition", new updateposition());
      processMap.put("companyQuery", new companyQuery());
      processMap.put("positionQuery", new positionQuery());
      processMap.put("queryAwardRanking", new queryAwardRanking());
      processMap.put("queryAwardRankingInWx", new queryAwardRankingInWx());
      processMap.put("updateEmployeeAwards", new updateEmployeeAwards());
      processMap.put("deleteEmployeeDO", new deleteEmployeeDO());
      return processMap;
    }

    public static class query<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, query_args, com.moseeker.thrift.gen.common.struct.Response> {
      public query() {
        super("query");
      }

      public query_args getEmptyArgsInstance() {
        return new query_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            query_result result = new query_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            query_result result = new query_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, query_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.query(args.keywords, args.cities, args.industries, args.occupations, args.scale, args.employment_type, args.candidate_source, args.experience, args.degree, args.salary, args.company_name, args.page_from, args.page_size, args.child_company_name, args.department, args.order_by_priority, args.custom,resultHandler);
      }
    }

    public static class updateposition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateposition_args, com.moseeker.thrift.gen.common.struct.Response> {
      public updateposition() {
        super("updateposition");
      }

      public updateposition_args getEmptyArgsInstance() {
        return new updateposition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            updateposition_result result = new updateposition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            updateposition_result result = new updateposition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateposition_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.updateposition(args.position, args.id,resultHandler);
      }
    }

    public static class companyQuery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, companyQuery_args, com.moseeker.thrift.gen.common.struct.Response> {
      public companyQuery() {
        super("companyQuery");
      }

      public companyQuery_args getEmptyArgsInstance() {
        return new companyQuery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            companyQuery_result result = new companyQuery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            companyQuery_result result = new companyQuery_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, companyQuery_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.companyQuery(args.keyWords, args.citys, args.industry, args.scale, args.page, args.pageSize,resultHandler);
      }
    }

    public static class positionQuery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, positionQuery_args, com.moseeker.thrift.gen.common.struct.Response> {
      public positionQuery() {
        super("positionQuery");
      }

      public positionQuery_args getEmptyArgsInstance() {
        return new positionQuery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            positionQuery_result result = new positionQuery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            positionQuery_result result = new positionQuery_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, positionQuery_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.positionQuery(args.keyWords, args.citys, args.industry, args.salaryCode, args.page, args.pageSize, args.startTime, args.endTime, args.companyId, args.teamId, args.motherCompanyId, args.order,resultHandler);
      }
    }

    public static class queryAwardRanking<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryAwardRanking_args, com.moseeker.thrift.gen.common.struct.Response> {
      public queryAwardRanking() {
        super("queryAwardRanking");
      }

      public queryAwardRanking_args getEmptyArgsInstance() {
        return new queryAwardRanking_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            queryAwardRanking_result result = new queryAwardRanking_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            queryAwardRanking_result result = new queryAwardRanking_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryAwardRanking_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.queryAwardRanking(args.companyIds, args.timespan, args.pageSize, args.pageNum, args.keyword, args.filter,resultHandler);
      }
    }

    public static class queryAwardRankingInWx<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryAwardRankingInWx_args, com.moseeker.thrift.gen.common.struct.Response> {
      public queryAwardRankingInWx() {
        super("queryAwardRankingInWx");
      }

      public queryAwardRankingInWx_args getEmptyArgsInstance() {
        return new queryAwardRankingInWx_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryAwardRankingInWx_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.queryAwardRankingInWx(args.companyIds, args.timespan, args.employeeId,resultHandler);
      }
    }

    public static class updateEmployeeAwards<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateEmployeeAwards_args, com.moseeker.thrift.gen.common.struct.Response> {
      public updateEmployeeAwards() {
        super("updateEmployeeAwards");
      }

      public updateEmployeeAwards_args getEmptyArgsInstance() {
        return new updateEmployeeAwards_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            updateEmployeeAwards_result result = new updateEmployeeAwards_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            updateEmployeeAwards_result result = new updateEmployeeAwards_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateEmployeeAwards_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.updateEmployeeAwards(args.employeeId,resultHandler);
      }
    }

    public static class deleteEmployeeDO<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteEmployeeDO_args, com.moseeker.thrift.gen.common.struct.Response> {
      public deleteEmployeeDO() {
        super("deleteEmployeeDO");
      }

      public deleteEmployeeDO_args getEmptyArgsInstance() {
        return new deleteEmployeeDO_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() {
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            deleteEmployeeDO_result result = new deleteEmployeeDO_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            deleteEmployeeDO_result result = new deleteEmployeeDO_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteEmployeeDO_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.deleteEmployeeDO(args.employeeId,resultHandler);
      }
    }

  }

  public static class query_args implements org.apache.thrift.TBase<query_args, query_args._Fields>, java.io.Serializable, Cloneable, Comparable<query_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("query_args");

    private static final org.apache.thrift.protocol.TField KEYWORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keywords", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField CITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("cities", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField INDUSTRIES_FIELD_DESC = new org.apache.thrift.protocol.TField("industries", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField OCCUPATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("occupations", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField EMPLOYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("employment_type", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField CANDIDATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("candidate_source", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField SALARY_FIELD_DESC = new org.apache.thrift.protocol.TField("salary", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("company_name", org.apache.thrift.protocol.TType.STRING, (short)11);
    private static final org.apache.thrift.protocol.TField PAGE_FROM_FIELD_DESC = new org.apache.thrift.protocol.TField("page_from", org.apache.thrift.protocol.TType.I32, (short)12);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("page_size", org.apache.thrift.protocol.TType.I32, (short)13);
    private static final org.apache.thrift.protocol.TField CHILD_COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("child_company_name", org.apache.thrift.protocol.TType.STRING, (short)14);
    private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)15);
    private static final org.apache.thrift.protocol.TField ORDER_BY_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("order_by_priority", org.apache.thrift.protocol.TType.BOOL, (short)16);
    private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)17);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new query_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new query_argsTupleSchemeFactory();

    public java.lang.String keywords; // required
    public java.lang.String cities; // required
    public java.lang.String industries; // required
    public java.lang.String occupations; // required
    public java.lang.String scale; // required
    public java.lang.String employment_type; // required
    public java.lang.String candidate_source; // required
    public java.lang.String experience; // required
    public java.lang.String degree; // required
    public java.lang.String salary; // required
    public java.lang.String company_name; // required
    public int page_from; // required
    public int page_size; // required
    public java.lang.String child_company_name; // required
    public java.lang.String department; // required
    public boolean order_by_priority; // required
    public java.lang.String custom; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      KEYWORDS((short)1, "keywords"),
      CITIES((short)2, "cities"),
      INDUSTRIES((short)3, "industries"),
      OCCUPATIONS((short)4, "occupations"),
      SCALE((short)5, "scale"),
      EMPLOYMENT_TYPE((short)6, "employment_type"),
      CANDIDATE_SOURCE((short)7, "candidate_source"),
      EXPERIENCE((short)8, "experience"),
      DEGREE((short)9, "degree"),
      SALARY((short)10, "salary"),
      COMPANY_NAME((short)11, "company_name"),
      PAGE_FROM((short)12, "page_from"),
      PAGE_SIZE((short)13, "page_size"),
      CHILD_COMPANY_NAME((short)14, "child_company_name"),
      DEPARTMENT((short)15, "department"),
      ORDER_BY_PRIORITY((short)16, "order_by_priority"),
      CUSTOM((short)17, "custom");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // KEYWORDS
            return KEYWORDS;
          case 2: // CITIES
            return CITIES;
          case 3: // INDUSTRIES
            return INDUSTRIES;
          case 4: // OCCUPATIONS
            return OCCUPATIONS;
          case 5: // SCALE
            return SCALE;
          case 6: // EMPLOYMENT_TYPE
            return EMPLOYMENT_TYPE;
          case 7: // CANDIDATE_SOURCE
            return CANDIDATE_SOURCE;
          case 8: // EXPERIENCE
            return EXPERIENCE;
          case 9: // DEGREE
            return DEGREE;
          case 10: // SALARY
            return SALARY;
          case 11: // COMPANY_NAME
            return COMPANY_NAME;
          case 12: // PAGE_FROM
            return PAGE_FROM;
          case 13: // PAGE_SIZE
            return PAGE_SIZE;
          case 14: // CHILD_COMPANY_NAME
            return CHILD_COMPANY_NAME;
          case 15: // DEPARTMENT
            return DEPARTMENT;
          case 16: // ORDER_BY_PRIORITY
            return ORDER_BY_PRIORITY;
          case 17: // CUSTOM
            return CUSTOM;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGE_FROM_ISSET_ID = 0;
    private static final int __PAGE_SIZE_ISSET_ID = 1;
    private static final int __ORDER_BY_PRIORITY_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.KEYWORDS, new org.apache.thrift.meta_data.FieldMetaData("keywords", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CITIES, new org.apache.thrift.meta_data.FieldMetaData("cities", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.INDUSTRIES, new org.apache.thrift.meta_data.FieldMetaData("industries", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.OCCUPATIONS, new org.apache.thrift.meta_data.FieldMetaData("occupations", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EMPLOYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("employment_type", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CANDIDATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("candidate_source", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SALARY, new org.apache.thrift.meta_data.FieldMetaData("salary", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("company_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE_FROM, new org.apache.thrift.meta_data.FieldMetaData("page_from", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("page_size", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.CHILD_COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("child_company_name", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ORDER_BY_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("order_by_priority", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(query_args.class, metaDataMap);
    }

    public query_args() {
    }

    public query_args(
            java.lang.String keywords,
            java.lang.String cities,
            java.lang.String industries,
            java.lang.String occupations,
            java.lang.String scale,
            java.lang.String employment_type,
            java.lang.String candidate_source,
            java.lang.String experience,
            java.lang.String degree,
            java.lang.String salary,
            java.lang.String company_name,
            int page_from,
            int page_size,
            java.lang.String child_company_name,
            java.lang.String department,
            boolean order_by_priority,
            java.lang.String custom)
    {
      this();
      this.keywords = keywords;
      this.cities = cities;
      this.industries = industries;
      this.occupations = occupations;
      this.scale = scale;
      this.employment_type = employment_type;
      this.candidate_source = candidate_source;
      this.experience = experience;
      this.degree = degree;
      this.salary = salary;
      this.company_name = company_name;
      this.page_from = page_from;
      setPage_fromIsSet(true);
      this.page_size = page_size;
      setPage_sizeIsSet(true);
      this.child_company_name = child_company_name;
      this.department = department;
      this.order_by_priority = order_by_priority;
      setOrder_by_priorityIsSet(true);
      this.custom = custom;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public query_args(query_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetKeywords()) {
        this.keywords = other.keywords;
      }
      if (other.isSetCities()) {
        this.cities = other.cities;
      }
      if (other.isSetIndustries()) {
        this.industries = other.industries;
      }
      if (other.isSetOccupations()) {
        this.occupations = other.occupations;
      }
      if (other.isSetScale()) {
        this.scale = other.scale;
      }
      if (other.isSetEmployment_type()) {
        this.employment_type = other.employment_type;
      }
      if (other.isSetCandidate_source()) {
        this.candidate_source = other.candidate_source;
      }
      if (other.isSetExperience()) {
        this.experience = other.experience;
      }
      if (other.isSetDegree()) {
        this.degree = other.degree;
      }
      if (other.isSetSalary()) {
        this.salary = other.salary;
      }
      if (other.isSetCompany_name()) {
        this.company_name = other.company_name;
      }
      this.page_from = other.page_from;
      this.page_size = other.page_size;
      if (other.isSetChild_company_name()) {
        this.child_company_name = other.child_company_name;
      }
      if (other.isSetDepartment()) {
        this.department = other.department;
      }
      this.order_by_priority = other.order_by_priority;
      if (other.isSetCustom()) {
        this.custom = other.custom;
      }
    }

    public query_args deepCopy() {
      return new query_args(this);
    }

    @Override
    public void clear() {
      this.keywords = null;
      this.cities = null;
      this.industries = null;
      this.occupations = null;
      this.scale = null;
      this.employment_type = null;
      this.candidate_source = null;
      this.experience = null;
      this.degree = null;
      this.salary = null;
      this.company_name = null;
      setPage_fromIsSet(false);
      this.page_from = 0;
      setPage_sizeIsSet(false);
      this.page_size = 0;
      this.child_company_name = null;
      this.department = null;
      setOrder_by_priorityIsSet(false);
      this.order_by_priority = false;
      this.custom = null;
    }

    public java.lang.String getKeywords() {
      return this.keywords;
    }

    public query_args setKeywords(java.lang.String keywords) {
      this.keywords = keywords;
      return this;
    }

    public void unsetKeywords() {
      this.keywords = null;
    }

    /** Returns true if field keywords is set (has been assigned a value) and false otherwise */
    public boolean isSetKeywords() {
      return this.keywords != null;
    }

    public void setKeywordsIsSet(boolean value) {
      if (!value) {
        this.keywords = null;
      }
    }

    public java.lang.String getCities() {
      return this.cities;
    }

    public query_args setCities(java.lang.String cities) {
      this.cities = cities;
      return this;
    }

    public void unsetCities() {
      this.cities = null;
    }

    /** Returns true if field cities is set (has been assigned a value) and false otherwise */
    public boolean isSetCities() {
      return this.cities != null;
    }

    public void setCitiesIsSet(boolean value) {
      if (!value) {
        this.cities = null;
      }
    }

    public java.lang.String getIndustries() {
      return this.industries;
    }

    public query_args setIndustries(java.lang.String industries) {
      this.industries = industries;
      return this;
    }

    public void unsetIndustries() {
      this.industries = null;
    }

    /** Returns true if field industries is set (has been assigned a value) and false otherwise */
    public boolean isSetIndustries() {
      return this.industries != null;
    }

    public void setIndustriesIsSet(boolean value) {
      if (!value) {
        this.industries = null;
      }
    }

    public java.lang.String getOccupations() {
      return this.occupations;
    }

    public query_args setOccupations(java.lang.String occupations) {
      this.occupations = occupations;
      return this;
    }

    public void unsetOccupations() {
      this.occupations = null;
    }

    /** Returns true if field occupations is set (has been assigned a value) and false otherwise */
    public boolean isSetOccupations() {
      return this.occupations != null;
    }

    public void setOccupationsIsSet(boolean value) {
      if (!value) {
        this.occupations = null;
      }
    }

    public java.lang.String getScale() {
      return this.scale;
    }

    public query_args setScale(java.lang.String scale) {
      this.scale = scale;
      return this;
    }

    public void unsetScale() {
      this.scale = null;
    }

    /** Returns true if field scale is set (has been assigned a value) and false otherwise */
    public boolean isSetScale() {
      return this.scale != null;
    }

    public void setScaleIsSet(boolean value) {
      if (!value) {
        this.scale = null;
      }
    }

    public java.lang.String getEmployment_type() {
      return this.employment_type;
    }

    public query_args setEmployment_type(java.lang.String employment_type) {
      this.employment_type = employment_type;
      return this;
    }

    public void unsetEmployment_type() {
      this.employment_type = null;
    }

    /** Returns true if field employment_type is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployment_type() {
      return this.employment_type != null;
    }

    public void setEmployment_typeIsSet(boolean value) {
      if (!value) {
        this.employment_type = null;
      }
    }

    public java.lang.String getCandidate_source() {
      return this.candidate_source;
    }

    public query_args setCandidate_source(java.lang.String candidate_source) {
      this.candidate_source = candidate_source;
      return this;
    }

    public void unsetCandidate_source() {
      this.candidate_source = null;
    }

    /** Returns true if field candidate_source is set (has been assigned a value) and false otherwise */
    public boolean isSetCandidate_source() {
      return this.candidate_source != null;
    }

    public void setCandidate_sourceIsSet(boolean value) {
      if (!value) {
        this.candidate_source = null;
      }
    }

    public java.lang.String getExperience() {
      return this.experience;
    }

    public query_args setExperience(java.lang.String experience) {
      this.experience = experience;
      return this;
    }

    public void unsetExperience() {
      this.experience = null;
    }

    /** Returns true if field experience is set (has been assigned a value) and false otherwise */
    public boolean isSetExperience() {
      return this.experience != null;
    }

    public void setExperienceIsSet(boolean value) {
      if (!value) {
        this.experience = null;
      }
    }

    public java.lang.String getDegree() {
      return this.degree;
    }

    public query_args setDegree(java.lang.String degree) {
      this.degree = degree;
      return this;
    }

    public void unsetDegree() {
      this.degree = null;
    }

    /** Returns true if field degree is set (has been assigned a value) and false otherwise */
    public boolean isSetDegree() {
      return this.degree != null;
    }

    public void setDegreeIsSet(boolean value) {
      if (!value) {
        this.degree = null;
      }
    }

    public java.lang.String getSalary() {
      return this.salary;
    }

    public query_args setSalary(java.lang.String salary) {
      this.salary = salary;
      return this;
    }

    public void unsetSalary() {
      this.salary = null;
    }

    /** Returns true if field salary is set (has been assigned a value) and false otherwise */
    public boolean isSetSalary() {
      return this.salary != null;
    }

    public void setSalaryIsSet(boolean value) {
      if (!value) {
        this.salary = null;
      }
    }

    public java.lang.String getCompany_name() {
      return this.company_name;
    }

    public query_args setCompany_name(java.lang.String company_name) {
      this.company_name = company_name;
      return this;
    }

    public void unsetCompany_name() {
      this.company_name = null;
    }

    /** Returns true if field company_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCompany_name() {
      return this.company_name != null;
    }

    public void setCompany_nameIsSet(boolean value) {
      if (!value) {
        this.company_name = null;
      }
    }

    public int getPage_from() {
      return this.page_from;
    }

    public query_args setPage_from(int page_from) {
      this.page_from = page_from;
      setPage_fromIsSet(true);
      return this;
    }

    public void unsetPage_from() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
    }

    /** Returns true if field page_from is set (has been assigned a value) and false otherwise */
    public boolean isSetPage_from() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
    }

    public void setPage_fromIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_FROM_ISSET_ID, value);
    }

    public int getPage_size() {
      return this.page_size;
    }

    public query_args setPage_size(int page_size) {
      this.page_size = page_size;
      setPage_sizeIsSet(true);
      return this;
    }

    public void unsetPage_size() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
    }

    /** Returns true if field page_size is set (has been assigned a value) and false otherwise */
    public boolean isSetPage_size() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
    }

    public void setPage_sizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID, value);
    }

    public java.lang.String getChild_company_name() {
      return this.child_company_name;
    }

    public query_args setChild_company_name(java.lang.String child_company_name) {
      this.child_company_name = child_company_name;
      return this;
    }

    public void unsetChild_company_name() {
      this.child_company_name = null;
    }

    /** Returns true if field child_company_name is set (has been assigned a value) and false otherwise */
    public boolean isSetChild_company_name() {
      return this.child_company_name != null;
    }

    public void setChild_company_nameIsSet(boolean value) {
      if (!value) {
        this.child_company_name = null;
      }
    }

    public java.lang.String getDepartment() {
      return this.department;
    }

    public query_args setDepartment(java.lang.String department) {
      this.department = department;
      return this;
    }

    public void unsetDepartment() {
      this.department = null;
    }

    /** Returns true if field department is set (has been assigned a value) and false otherwise */
    public boolean isSetDepartment() {
      return this.department != null;
    }

    public void setDepartmentIsSet(boolean value) {
      if (!value) {
        this.department = null;
      }
    }

    public boolean isOrder_by_priority() {
      return this.order_by_priority;
    }

    public query_args setOrder_by_priority(boolean order_by_priority) {
      this.order_by_priority = order_by_priority;
      setOrder_by_priorityIsSet(true);
      return this;
    }

    public void unsetOrder_by_priority() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
    }

    /** Returns true if field order_by_priority is set (has been assigned a value) and false otherwise */
    public boolean isSetOrder_by_priority() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
    }

    public void setOrder_by_priorityIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID, value);
    }

    public java.lang.String getCustom() {
      return this.custom;
    }

    public query_args setCustom(java.lang.String custom) {
      this.custom = custom;
      return this;
    }

    public void unsetCustom() {
      this.custom = null;
    }

    /** Returns true if field custom is set (has been assigned a value) and false otherwise */
    public boolean isSetCustom() {
      return this.custom != null;
    }

    public void setCustomIsSet(boolean value) {
      if (!value) {
        this.custom = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case KEYWORDS:
          if (value == null) {
            unsetKeywords();
          } else {
            setKeywords((java.lang.String)value);
          }
          break;

        case CITIES:
          if (value == null) {
            unsetCities();
          } else {
            setCities((java.lang.String)value);
          }
          break;

        case INDUSTRIES:
          if (value == null) {
            unsetIndustries();
          } else {
            setIndustries((java.lang.String)value);
          }
          break;

        case OCCUPATIONS:
          if (value == null) {
            unsetOccupations();
          } else {
            setOccupations((java.lang.String)value);
          }
          break;

        case SCALE:
          if (value == null) {
            unsetScale();
          } else {
            setScale((java.lang.String)value);
          }
          break;

        case EMPLOYMENT_TYPE:
          if (value == null) {
            unsetEmployment_type();
          } else {
            setEmployment_type((java.lang.String)value);
          }
          break;

        case CANDIDATE_SOURCE:
          if (value == null) {
            unsetCandidate_source();
          } else {
            setCandidate_source((java.lang.String)value);
          }
          break;

        case EXPERIENCE:
          if (value == null) {
            unsetExperience();
          } else {
            setExperience((java.lang.String)value);
          }
          break;

        case DEGREE:
          if (value == null) {
            unsetDegree();
          } else {
            setDegree((java.lang.String)value);
          }
          break;

        case SALARY:
          if (value == null) {
            unsetSalary();
          } else {
            setSalary((java.lang.String)value);
          }
          break;

        case COMPANY_NAME:
          if (value == null) {
            unsetCompany_name();
          } else {
            setCompany_name((java.lang.String)value);
          }
          break;

        case PAGE_FROM:
          if (value == null) {
            unsetPage_from();
          } else {
            setPage_from((java.lang.Integer)value);
          }
          break;

        case PAGE_SIZE:
          if (value == null) {
            unsetPage_size();
          } else {
            setPage_size((java.lang.Integer)value);
          }
          break;

        case CHILD_COMPANY_NAME:
          if (value == null) {
            unsetChild_company_name();
          } else {
            setChild_company_name((java.lang.String)value);
          }
          break;

        case DEPARTMENT:
          if (value == null) {
            unsetDepartment();
          } else {
            setDepartment((java.lang.String)value);
          }
          break;

        case ORDER_BY_PRIORITY:
          if (value == null) {
            unsetOrder_by_priority();
          } else {
            setOrder_by_priority((java.lang.Boolean)value);
          }
          break;

        case CUSTOM:
          if (value == null) {
            unsetCustom();
          } else {
            setCustom((java.lang.String)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case KEYWORDS:
          return getKeywords();

        case CITIES:
          return getCities();

        case INDUSTRIES:
          return getIndustries();

        case OCCUPATIONS:
          return getOccupations();

        case SCALE:
          return getScale();

        case EMPLOYMENT_TYPE:
          return getEmployment_type();

        case CANDIDATE_SOURCE:
          return getCandidate_source();

        case EXPERIENCE:
          return getExperience();

        case DEGREE:
          return getDegree();

        case SALARY:
          return getSalary();

        case COMPANY_NAME:
          return getCompany_name();

        case PAGE_FROM:
          return getPage_from();

        case PAGE_SIZE:
          return getPage_size();

        case CHILD_COMPANY_NAME:
          return getChild_company_name();

        case DEPARTMENT:
          return getDepartment();

        case ORDER_BY_PRIORITY:
          return isOrder_by_priority();

        case CUSTOM:
          return getCustom();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case KEYWORDS:
          return isSetKeywords();
        case CITIES:
          return isSetCities();
        case INDUSTRIES:
          return isSetIndustries();
        case OCCUPATIONS:
          return isSetOccupations();
        case SCALE:
          return isSetScale();
        case EMPLOYMENT_TYPE:
          return isSetEmployment_type();
        case CANDIDATE_SOURCE:
          return isSetCandidate_source();
        case EXPERIENCE:
          return isSetExperience();
        case DEGREE:
          return isSetDegree();
        case SALARY:
          return isSetSalary();
        case COMPANY_NAME:
          return isSetCompany_name();
        case PAGE_FROM:
          return isSetPage_from();
        case PAGE_SIZE:
          return isSetPage_size();
        case CHILD_COMPANY_NAME:
          return isSetChild_company_name();
        case DEPARTMENT:
          return isSetDepartment();
        case ORDER_BY_PRIORITY:
          return isSetOrder_by_priority();
        case CUSTOM:
          return isSetCustom();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof query_args)
        return this.equals((query_args)that);
      return false;
    }

    public boolean equals(query_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_keywords = true && this.isSetKeywords();
      boolean that_present_keywords = true && that.isSetKeywords();
      if (this_present_keywords || that_present_keywords) {
        if (!(this_present_keywords && that_present_keywords))
          return false;
        if (!this.keywords.equals(that.keywords))
          return false;
      }

      boolean this_present_cities = true && this.isSetCities();
      boolean that_present_cities = true && that.isSetCities();
      if (this_present_cities || that_present_cities) {
        if (!(this_present_cities && that_present_cities))
          return false;
        if (!this.cities.equals(that.cities))
          return false;
      }

      boolean this_present_industries = true && this.isSetIndustries();
      boolean that_present_industries = true && that.isSetIndustries();
      if (this_present_industries || that_present_industries) {
        if (!(this_present_industries && that_present_industries))
          return false;
        if (!this.industries.equals(that.industries))
          return false;
      }

      boolean this_present_occupations = true && this.isSetOccupations();
      boolean that_present_occupations = true && that.isSetOccupations();
      if (this_present_occupations || that_present_occupations) {
        if (!(this_present_occupations && that_present_occupations))
          return false;
        if (!this.occupations.equals(that.occupations))
          return false;
      }

      boolean this_present_scale = true && this.isSetScale();
      boolean that_present_scale = true && that.isSetScale();
      if (this_present_scale || that_present_scale) {
        if (!(this_present_scale && that_present_scale))
          return false;
        if (!this.scale.equals(that.scale))
          return false;
      }

      boolean this_present_employment_type = true && this.isSetEmployment_type();
      boolean that_present_employment_type = true && that.isSetEmployment_type();
      if (this_present_employment_type || that_present_employment_type) {
        if (!(this_present_employment_type && that_present_employment_type))
          return false;
        if (!this.employment_type.equals(that.employment_type))
          return false;
      }

      boolean this_present_candidate_source = true && this.isSetCandidate_source();
      boolean that_present_candidate_source = true && that.isSetCandidate_source();
      if (this_present_candidate_source || that_present_candidate_source) {
        if (!(this_present_candidate_source && that_present_candidate_source))
          return false;
        if (!this.candidate_source.equals(that.candidate_source))
          return false;
      }

      boolean this_present_experience = true && this.isSetExperience();
      boolean that_present_experience = true && that.isSetExperience();
      if (this_present_experience || that_present_experience) {
        if (!(this_present_experience && that_present_experience))
          return false;
        if (!this.experience.equals(that.experience))
          return false;
      }

      boolean this_present_degree = true && this.isSetDegree();
      boolean that_present_degree = true && that.isSetDegree();
      if (this_present_degree || that_present_degree) {
        if (!(this_present_degree && that_present_degree))
          return false;
        if (!this.degree.equals(that.degree))
          return false;
      }

      boolean this_present_salary = true && this.isSetSalary();
      boolean that_present_salary = true && that.isSetSalary();
      if (this_present_salary || that_present_salary) {
        if (!(this_present_salary && that_present_salary))
          return false;
        if (!this.salary.equals(that.salary))
          return false;
      }

      boolean this_present_company_name = true && this.isSetCompany_name();
      boolean that_present_company_name = true && that.isSetCompany_name();
      if (this_present_company_name || that_present_company_name) {
        if (!(this_present_company_name && that_present_company_name))
          return false;
        if (!this.company_name.equals(that.company_name))
          return false;
      }

      boolean this_present_page_from = true;
      boolean that_present_page_from = true;
      if (this_present_page_from || that_present_page_from) {
        if (!(this_present_page_from && that_present_page_from))
          return false;
        if (this.page_from != that.page_from)
          return false;
      }

      boolean this_present_page_size = true;
      boolean that_present_page_size = true;
      if (this_present_page_size || that_present_page_size) {
        if (!(this_present_page_size && that_present_page_size))
          return false;
        if (this.page_size != that.page_size)
          return false;
      }

      boolean this_present_child_company_name = true && this.isSetChild_company_name();
      boolean that_present_child_company_name = true && that.isSetChild_company_name();
      if (this_present_child_company_name || that_present_child_company_name) {
        if (!(this_present_child_company_name && that_present_child_company_name))
          return false;
        if (!this.child_company_name.equals(that.child_company_name))
          return false;
      }

      boolean this_present_department = true && this.isSetDepartment();
      boolean that_present_department = true && that.isSetDepartment();
      if (this_present_department || that_present_department) {
        if (!(this_present_department && that_present_department))
          return false;
        if (!this.department.equals(that.department))
          return false;
      }

      boolean this_present_order_by_priority = true;
      boolean that_present_order_by_priority = true;
      if (this_present_order_by_priority || that_present_order_by_priority) {
        if (!(this_present_order_by_priority && that_present_order_by_priority))
          return false;
        if (this.order_by_priority != that.order_by_priority)
          return false;
      }

      boolean this_present_custom = true && this.isSetCustom();
      boolean that_present_custom = true && that.isSetCustom();
      if (this_present_custom || that_present_custom) {
        if (!(this_present_custom && that_present_custom))
          return false;
        if (!this.custom.equals(that.custom))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetKeywords()) ? 131071 : 524287);
      if (isSetKeywords())
        hashCode = hashCode * 8191 + keywords.hashCode();

      hashCode = hashCode * 8191 + ((isSetCities()) ? 131071 : 524287);
      if (isSetCities())
        hashCode = hashCode * 8191 + cities.hashCode();

      hashCode = hashCode * 8191 + ((isSetIndustries()) ? 131071 : 524287);
      if (isSetIndustries())
        hashCode = hashCode * 8191 + industries.hashCode();

      hashCode = hashCode * 8191 + ((isSetOccupations()) ? 131071 : 524287);
      if (isSetOccupations())
        hashCode = hashCode * 8191 + occupations.hashCode();

      hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
      if (isSetScale())
        hashCode = hashCode * 8191 + scale.hashCode();

      hashCode = hashCode * 8191 + ((isSetEmployment_type()) ? 131071 : 524287);
      if (isSetEmployment_type())
        hashCode = hashCode * 8191 + employment_type.hashCode();

      hashCode = hashCode * 8191 + ((isSetCandidate_source()) ? 131071 : 524287);
      if (isSetCandidate_source())
        hashCode = hashCode * 8191 + candidate_source.hashCode();

      hashCode = hashCode * 8191 + ((isSetExperience()) ? 131071 : 524287);
      if (isSetExperience())
        hashCode = hashCode * 8191 + experience.hashCode();

      hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
      if (isSetDegree())
        hashCode = hashCode * 8191 + degree.hashCode();

      hashCode = hashCode * 8191 + ((isSetSalary()) ? 131071 : 524287);
      if (isSetSalary())
        hashCode = hashCode * 8191 + salary.hashCode();

      hashCode = hashCode * 8191 + ((isSetCompany_name()) ? 131071 : 524287);
      if (isSetCompany_name())
        hashCode = hashCode * 8191 + company_name.hashCode();

      hashCode = hashCode * 8191 + page_from;

      hashCode = hashCode * 8191 + page_size;

      hashCode = hashCode * 8191 + ((isSetChild_company_name()) ? 131071 : 524287);
      if (isSetChild_company_name())
        hashCode = hashCode * 8191 + child_company_name.hashCode();

      hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
      if (isSetDepartment())
        hashCode = hashCode * 8191 + department.hashCode();

      hashCode = hashCode * 8191 + ((order_by_priority) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
      if (isSetCustom())
        hashCode = hashCode * 8191 + custom.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(query_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetKeywords()).compareTo(other.isSetKeywords());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetKeywords()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keywords, other.keywords);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCities()).compareTo(other.isSetCities());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCities()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cities, other.cities);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetIndustries()).compareTo(other.isSetIndustries());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIndustries()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industries, other.industries);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetOccupations()).compareTo(other.isSetOccupations());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOccupations()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupations, other.occupations);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetScale()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEmployment_type()).compareTo(other.isSetEmployment_type());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployment_type()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employment_type, other.employment_type);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCandidate_source()).compareTo(other.isSetCandidate_source());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCandidate_source()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.candidate_source, other.candidate_source);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetExperience()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDegree()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetSalary()).compareTo(other.isSetSalary());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSalary()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary, other.salary);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCompany_name()).compareTo(other.isSetCompany_name());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompany_name()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_name, other.company_name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPage_from()).compareTo(other.isSetPage_from());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage_from()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_from, other.page_from);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPage_size()).compareTo(other.isSetPage_size());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage_size()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_size, other.page_size);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetChild_company_name()).compareTo(other.isSetChild_company_name());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetChild_company_name()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.child_company_name, other.child_company_name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDepartment()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetOrder_by_priority()).compareTo(other.isSetOrder_by_priority());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOrder_by_priority()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_by_priority, other.order_by_priority);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCustom()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("query_args(");
      boolean first = true;

      sb.append("keywords:");
      if (this.keywords == null) {
        sb.append("null");
      } else {
        sb.append(this.keywords);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("cities:");
      if (this.cities == null) {
        sb.append("null");
      } else {
        sb.append(this.cities);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("industries:");
      if (this.industries == null) {
        sb.append("null");
      } else {
        sb.append(this.industries);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("occupations:");
      if (this.occupations == null) {
        sb.append("null");
      } else {
        sb.append(this.occupations);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("employment_type:");
      if (this.employment_type == null) {
        sb.append("null");
      } else {
        sb.append(this.employment_type);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("candidate_source:");
      if (this.candidate_source == null) {
        sb.append("null");
      } else {
        sb.append(this.candidate_source);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("experience:");
      if (this.experience == null) {
        sb.append("null");
      } else {
        sb.append(this.experience);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("degree:");
      if (this.degree == null) {
        sb.append("null");
      } else {
        sb.append(this.degree);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("salary:");
      if (this.salary == null) {
        sb.append("null");
      } else {
        sb.append(this.salary);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("company_name:");
      if (this.company_name == null) {
        sb.append("null");
      } else {
        sb.append(this.company_name);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("page_from:");
      sb.append(this.page_from);
      first = false;
      if (!first) sb.append(", ");
      sb.append("page_size:");
      sb.append(this.page_size);
      first = false;
      if (!first) sb.append(", ");
      sb.append("child_company_name:");
      if (this.child_company_name == null) {
        sb.append("null");
      } else {
        sb.append(this.child_company_name);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("order_by_priority:");
      sb.append(this.order_by_priority);
      first = false;
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class query_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_argsStandardScheme getScheme() {
        return new query_argsStandardScheme();
      }
    }

    private static class query_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<query_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // KEYWORDS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.keywords = iprot.readString();
                struct.setKeywordsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CITIES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.cities = iprot.readString();
                struct.setCitiesIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // INDUSTRIES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.industries = iprot.readString();
                struct.setIndustriesIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // OCCUPATIONS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.occupations = iprot.readString();
                struct.setOccupationsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // SCALE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.scale = iprot.readString();
                struct.setScaleIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // EMPLOYMENT_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.employment_type = iprot.readString();
                struct.setEmployment_typeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // CANDIDATE_SOURCE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.candidate_source = iprot.readString();
                struct.setCandidate_sourceIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // EXPERIENCE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.experience = iprot.readString();
                struct.setExperienceIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 9: // DEGREE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.degree = iprot.readString();
                struct.setDegreeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 10: // SALARY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.salary = iprot.readString();
                struct.setSalaryIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 11: // COMPANY_NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.company_name = iprot.readString();
                struct.setCompany_nameIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 12: // PAGE_FROM
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page_from = iprot.readI32();
                struct.setPage_fromIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 13: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page_size = iprot.readI32();
                struct.setPage_sizeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 14: // CHILD_COMPANY_NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.child_company_name = iprot.readString();
                struct.setChild_company_nameIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 15: // DEPARTMENT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.department = iprot.readString();
                struct.setDepartmentIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 16: // ORDER_BY_PRIORITY
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.order_by_priority = iprot.readBool();
                struct.setOrder_by_priorityIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 17: // CUSTOM
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.custom = iprot.readString();
                struct.setCustomIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, query_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.keywords != null) {
          oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
          oprot.writeString(struct.keywords);
          oprot.writeFieldEnd();
        }
        if (struct.cities != null) {
          oprot.writeFieldBegin(CITIES_FIELD_DESC);
          oprot.writeString(struct.cities);
          oprot.writeFieldEnd();
        }
        if (struct.industries != null) {
          oprot.writeFieldBegin(INDUSTRIES_FIELD_DESC);
          oprot.writeString(struct.industries);
          oprot.writeFieldEnd();
        }
        if (struct.occupations != null) {
          oprot.writeFieldBegin(OCCUPATIONS_FIELD_DESC);
          oprot.writeString(struct.occupations);
          oprot.writeFieldEnd();
        }
        if (struct.scale != null) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
        if (struct.employment_type != null) {
          oprot.writeFieldBegin(EMPLOYMENT_TYPE_FIELD_DESC);
          oprot.writeString(struct.employment_type);
          oprot.writeFieldEnd();
        }
        if (struct.candidate_source != null) {
          oprot.writeFieldBegin(CANDIDATE_SOURCE_FIELD_DESC);
          oprot.writeString(struct.candidate_source);
          oprot.writeFieldEnd();
        }
        if (struct.experience != null) {
          oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
          oprot.writeString(struct.experience);
          oprot.writeFieldEnd();
        }
        if (struct.degree != null) {
          oprot.writeFieldBegin(DEGREE_FIELD_DESC);
          oprot.writeString(struct.degree);
          oprot.writeFieldEnd();
        }
        if (struct.salary != null) {
          oprot.writeFieldBegin(SALARY_FIELD_DESC);
          oprot.writeString(struct.salary);
          oprot.writeFieldEnd();
        }
        if (struct.company_name != null) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.company_name);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_FROM_FIELD_DESC);
        oprot.writeI32(struct.page_from);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.page_size);
        oprot.writeFieldEnd();
        if (struct.child_company_name != null) {
          oprot.writeFieldBegin(CHILD_COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.child_company_name);
          oprot.writeFieldEnd();
        }
        if (struct.department != null) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          oprot.writeString(struct.department);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ORDER_BY_PRIORITY_FIELD_DESC);
        oprot.writeBool(struct.order_by_priority);
        oprot.writeFieldEnd();
        if (struct.custom != null) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class query_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_argsTupleScheme getScheme() {
        return new query_argsTupleScheme();
      }
    }

    private static class query_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<query_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetKeywords()) {
          optionals.set(0);
        }
        if (struct.isSetCities()) {
          optionals.set(1);
        }
        if (struct.isSetIndustries()) {
          optionals.set(2);
        }
        if (struct.isSetOccupations()) {
          optionals.set(3);
        }
        if (struct.isSetScale()) {
          optionals.set(4);
        }
        if (struct.isSetEmployment_type()) {
          optionals.set(5);
        }
        if (struct.isSetCandidate_source()) {
          optionals.set(6);
        }
        if (struct.isSetExperience()) {
          optionals.set(7);
        }
        if (struct.isSetDegree()) {
          optionals.set(8);
        }
        if (struct.isSetSalary()) {
          optionals.set(9);
        }
        if (struct.isSetCompany_name()) {
          optionals.set(10);
        }
        if (struct.isSetPage_from()) {
          optionals.set(11);
        }
        if (struct.isSetPage_size()) {
          optionals.set(12);
        }
        if (struct.isSetChild_company_name()) {
          optionals.set(13);
        }
        if (struct.isSetDepartment()) {
          optionals.set(14);
        }
        if (struct.isSetOrder_by_priority()) {
          optionals.set(15);
        }
        if (struct.isSetCustom()) {
          optionals.set(16);
        }
        oprot.writeBitSet(optionals, 17);
        if (struct.isSetKeywords()) {
          oprot.writeString(struct.keywords);
        }
        if (struct.isSetCities()) {
          oprot.writeString(struct.cities);
        }
        if (struct.isSetIndustries()) {
          oprot.writeString(struct.industries);
        }
        if (struct.isSetOccupations()) {
          oprot.writeString(struct.occupations);
        }
        if (struct.isSetScale()) {
          oprot.writeString(struct.scale);
        }
        if (struct.isSetEmployment_type()) {
          oprot.writeString(struct.employment_type);
        }
        if (struct.isSetCandidate_source()) {
          oprot.writeString(struct.candidate_source);
        }
        if (struct.isSetExperience()) {
          oprot.writeString(struct.experience);
        }
        if (struct.isSetDegree()) {
          oprot.writeString(struct.degree);
        }
        if (struct.isSetSalary()) {
          oprot.writeString(struct.salary);
        }
        if (struct.isSetCompany_name()) {
          oprot.writeString(struct.company_name);
        }
        if (struct.isSetPage_from()) {
          oprot.writeI32(struct.page_from);
        }
        if (struct.isSetPage_size()) {
          oprot.writeI32(struct.page_size);
        }
        if (struct.isSetChild_company_name()) {
          oprot.writeString(struct.child_company_name);
        }
        if (struct.isSetDepartment()) {
          oprot.writeString(struct.department);
        }
        if (struct.isSetOrder_by_priority()) {
          oprot.writeBool(struct.order_by_priority);
        }
        if (struct.isSetCustom()) {
          oprot.writeString(struct.custom);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(17);
        if (incoming.get(0)) {
          struct.keywords = iprot.readString();
          struct.setKeywordsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.cities = iprot.readString();
          struct.setCitiesIsSet(true);
        }
        if (incoming.get(2)) {
          struct.industries = iprot.readString();
          struct.setIndustriesIsSet(true);
        }
        if (incoming.get(3)) {
          struct.occupations = iprot.readString();
          struct.setOccupationsIsSet(true);
        }
        if (incoming.get(4)) {
          struct.scale = iprot.readString();
          struct.setScaleIsSet(true);
        }
        if (incoming.get(5)) {
          struct.employment_type = iprot.readString();
          struct.setEmployment_typeIsSet(true);
        }
        if (incoming.get(6)) {
          struct.candidate_source = iprot.readString();
          struct.setCandidate_sourceIsSet(true);
        }
        if (incoming.get(7)) {
          struct.experience = iprot.readString();
          struct.setExperienceIsSet(true);
        }
        if (incoming.get(8)) {
          struct.degree = iprot.readString();
          struct.setDegreeIsSet(true);
        }
        if (incoming.get(9)) {
          struct.salary = iprot.readString();
          struct.setSalaryIsSet(true);
        }
        if (incoming.get(10)) {
          struct.company_name = iprot.readString();
          struct.setCompany_nameIsSet(true);
        }
        if (incoming.get(11)) {
          struct.page_from = iprot.readI32();
          struct.setPage_fromIsSet(true);
        }
        if (incoming.get(12)) {
          struct.page_size = iprot.readI32();
          struct.setPage_sizeIsSet(true);
        }
        if (incoming.get(13)) {
          struct.child_company_name = iprot.readString();
          struct.setChild_company_nameIsSet(true);
        }
        if (incoming.get(14)) {
          struct.department = iprot.readString();
          struct.setDepartmentIsSet(true);
        }
        if (incoming.get(15)) {
          struct.order_by_priority = iprot.readBool();
          struct.setOrder_by_priorityIsSet(true);
        }
        if (incoming.get(16)) {
          struct.custom = iprot.readString();
          struct.setCustomIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class query_result implements org.apache.thrift.TBase<query_result, query_result._Fields>, java.io.Serializable, Cloneable, Comparable<query_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("query_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new query_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new query_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(query_result.class, metaDataMap);
    }

    public query_result() {
    }

    public query_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public query_result(query_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public query_result deepCopy() {
      return new query_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public query_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof query_result)
        return this.equals((query_result)that);
      return false;
    }

    public boolean equals(query_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(query_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("query_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class query_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_resultStandardScheme getScheme() {
        return new query_resultStandardScheme();
      }
    }

    private static class query_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<query_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, query_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class query_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_resultTupleScheme getScheme() {
        return new query_resultTupleScheme();
      }
    }

    private static class query_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<query_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateposition_args implements org.apache.thrift.TBase<updateposition_args, updateposition_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateposition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateposition_args");

    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateposition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateposition_argsTupleSchemeFactory();

    public java.lang.String position; // required
    public int id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      POSITION((short)1, "position"),
      ID((short)2, "id");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // POSITION
            return POSITION;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateposition_args.class, metaDataMap);
    }

    public updateposition_args() {
    }

    public updateposition_args(
            java.lang.String position,
            int id)
    {
      this();
      this.position = position;
      this.id = id;
      setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateposition_args(updateposition_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPosition()) {
        this.position = other.position;
      }
      this.id = other.id;
    }

    public updateposition_args deepCopy() {
      return new updateposition_args(this);
    }

    @Override
    public void clear() {
      this.position = null;
      setIdIsSet(false);
      this.id = 0;
    }

    public java.lang.String getPosition() {
      return this.position;
    }

    public updateposition_args setPosition(java.lang.String position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public int getId() {
      return this.id;
    }

    public updateposition_args setId(int id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case POSITION:
          if (value == null) {
            unsetPosition();
          } else {
            setPosition((java.lang.String)value);
          }
          break;

        case ID:
          if (value == null) {
            unsetId();
          } else {
            setId((java.lang.Integer)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case POSITION:
          return getPosition();

        case ID:
          return getId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case POSITION:
          return isSetPosition();
        case ID:
          return isSetId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateposition_args)
        return this.equals((updateposition_args)that);
      return false;
    }

    public boolean equals(updateposition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      hashCode = hashCode * 8191 + id;

      return hashCode;
    }

    @Override
    public int compareTo(updateposition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateposition_args(");
      boolean first = true;

      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateposition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_argsStandardScheme getScheme() {
        return new updateposition_argsStandardScheme();
      }
    }

    private static class updateposition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateposition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.position = iprot.readString();
                struct.setPositionIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateposition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateposition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_argsTupleScheme getScheme() {
        return new updateposition_argsTupleScheme();
      }
    }

    private static class updateposition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateposition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPosition()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPosition()) {
          oprot.writeString(struct.position);
        }
        if (struct.isSetId()) {
          oprot.writeI32(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.position = iprot.readString();
          struct.setPositionIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI32();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateposition_result implements org.apache.thrift.TBase<updateposition_result, updateposition_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateposition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateposition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateposition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateposition_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateposition_result.class, metaDataMap);
    }

    public updateposition_result() {
    }

    public updateposition_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateposition_result(updateposition_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public updateposition_result deepCopy() {
      return new updateposition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public updateposition_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateposition_result)
        return this.equals((updateposition_result)that);
      return false;
    }

    public boolean equals(updateposition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateposition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateposition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateposition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_resultStandardScheme getScheme() {
        return new updateposition_resultStandardScheme();
      }
    }

    private static class updateposition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateposition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateposition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateposition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_resultTupleScheme getScheme() {
        return new updateposition_resultTupleScheme();
      }
    }

    private static class updateposition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateposition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class companyQuery_args implements org.apache.thrift.TBase<companyQuery_args, companyQuery_args._Fields>, java.io.Serializable, Cloneable, Comparable<companyQuery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("companyQuery_args");

    private static final org.apache.thrift.protocol.TField KEY_WORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keyWords", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField CITYS_FIELD_DESC = new org.apache.thrift.protocol.TField("citys", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField INDUSTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("industry", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)6);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new companyQuery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new companyQuery_argsTupleSchemeFactory();

    public java.lang.String keyWords; // required
    public java.lang.String citys; // required
    public java.lang.String industry; // required
    public java.lang.String scale; // required
    public int page; // required
    public int pageSize; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      KEY_WORDS((short)1, "keyWords"),
      CITYS((short)2, "citys"),
      INDUSTRY((short)3, "industry"),
      SCALE((short)4, "scale"),
      PAGE((short)5, "page"),
      PAGE_SIZE((short)6, "pageSize");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // KEY_WORDS
            return KEY_WORDS;
          case 2: // CITYS
            return CITYS;
          case 3: // INDUSTRY
            return INDUSTRY;
          case 4: // SCALE
            return SCALE;
          case 5: // PAGE
            return PAGE;
          case 6: // PAGE_SIZE
            return PAGE_SIZE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGE_ISSET_ID = 0;
    private static final int __PAGESIZE_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.KEY_WORDS, new org.apache.thrift.meta_data.FieldMetaData("keyWords", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CITYS, new org.apache.thrift.meta_data.FieldMetaData("citys", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.INDUSTRY, new org.apache.thrift.meta_data.FieldMetaData("industry", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(companyQuery_args.class, metaDataMap);
    }

    public companyQuery_args() {
    }

    public companyQuery_args(
            java.lang.String keyWords,
            java.lang.String citys,
            java.lang.String industry,
            java.lang.String scale,
            int page,
            int pageSize)
    {
      this();
      this.keyWords = keyWords;
      this.citys = citys;
      this.industry = industry;
      this.scale = scale;
      this.page = page;
      setPageIsSet(true);
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public companyQuery_args(companyQuery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetKeyWords()) {
        this.keyWords = other.keyWords;
      }
      if (other.isSetCitys()) {
        this.citys = other.citys;
      }
      if (other.isSetIndustry()) {
        this.industry = other.industry;
      }
      if (other.isSetScale()) {
        this.scale = other.scale;
      }
      this.page = other.page;
      this.pageSize = other.pageSize;
    }

    public companyQuery_args deepCopy() {
      return new companyQuery_args(this);
    }

    @Override
    public void clear() {
      this.keyWords = null;
      this.citys = null;
      this.industry = null;
      this.scale = null;
      setPageIsSet(false);
      this.page = 0;
      setPageSizeIsSet(false);
      this.pageSize = 0;
    }

    public java.lang.String getKeyWords() {
      return this.keyWords;
    }

    public companyQuery_args setKeyWords(java.lang.String keyWords) {
      this.keyWords = keyWords;
      return this;
    }

    public void unsetKeyWords() {
      this.keyWords = null;
    }

    /** Returns true if field keyWords is set (has been assigned a value) and false otherwise */
    public boolean isSetKeyWords() {
      return this.keyWords != null;
    }

    public void setKeyWordsIsSet(boolean value) {
      if (!value) {
        this.keyWords = null;
      }
    }

    public java.lang.String getCitys() {
      return this.citys;
    }

    public companyQuery_args setCitys(java.lang.String citys) {
      this.citys = citys;
      return this;
    }

    public void unsetCitys() {
      this.citys = null;
    }

    /** Returns true if field citys is set (has been assigned a value) and false otherwise */
    public boolean isSetCitys() {
      return this.citys != null;
    }

    public void setCitysIsSet(boolean value) {
      if (!value) {
        this.citys = null;
      }
    }

    public java.lang.String getIndustry() {
      return this.industry;
    }

    public companyQuery_args setIndustry(java.lang.String industry) {
      this.industry = industry;
      return this;
    }

    public void unsetIndustry() {
      this.industry = null;
    }

    /** Returns true if field industry is set (has been assigned a value) and false otherwise */
    public boolean isSetIndustry() {
      return this.industry != null;
    }

    public void setIndustryIsSet(boolean value) {
      if (!value) {
        this.industry = null;
      }
    }

    public java.lang.String getScale() {
      return this.scale;
    }

    public companyQuery_args setScale(java.lang.String scale) {
      this.scale = scale;
      return this;
    }

    public void unsetScale() {
      this.scale = null;
    }

    /** Returns true if field scale is set (has been assigned a value) and false otherwise */
    public boolean isSetScale() {
      return this.scale != null;
    }

    public void setScaleIsSet(boolean value) {
      if (!value) {
        this.scale = null;
      }
    }

    public int getPage() {
      return this.page;
    }

    public companyQuery_args setPage(int page) {
      this.page = page;
      setPageIsSet(true);
      return this;
    }

    public void unsetPage() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
    }

    public void setPageIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
    }

    public int getPageSize() {
      return this.pageSize;
    }

    public companyQuery_args setPageSize(int pageSize) {
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      return this;
    }

    public void unsetPageSize() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
    public boolean isSetPageSize() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    public void setPageSizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case KEY_WORDS:
          if (value == null) {
            unsetKeyWords();
          } else {
            setKeyWords((java.lang.String)value);
          }
          break;

        case CITYS:
          if (value == null) {
            unsetCitys();
          } else {
            setCitys((java.lang.String)value);
          }
          break;

        case INDUSTRY:
          if (value == null) {
            unsetIndustry();
          } else {
            setIndustry((java.lang.String)value);
          }
          break;

        case SCALE:
          if (value == null) {
            unsetScale();
          } else {
            setScale((java.lang.String)value);
          }
          break;

        case PAGE:
          if (value == null) {
            unsetPage();
          } else {
            setPage((java.lang.Integer)value);
          }
          break;

        case PAGE_SIZE:
          if (value == null) {
            unsetPageSize();
          } else {
            setPageSize((java.lang.Integer)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case KEY_WORDS:
          return getKeyWords();

        case CITYS:
          return getCitys();

        case INDUSTRY:
          return getIndustry();

        case SCALE:
          return getScale();

        case PAGE:
          return getPage();

        case PAGE_SIZE:
          return getPageSize();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case KEY_WORDS:
          return isSetKeyWords();
        case CITYS:
          return isSetCitys();
        case INDUSTRY:
          return isSetIndustry();
        case SCALE:
          return isSetScale();
        case PAGE:
          return isSetPage();
        case PAGE_SIZE:
          return isSetPageSize();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof companyQuery_args)
        return this.equals((companyQuery_args)that);
      return false;
    }

    public boolean equals(companyQuery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_keyWords = true && this.isSetKeyWords();
      boolean that_present_keyWords = true && that.isSetKeyWords();
      if (this_present_keyWords || that_present_keyWords) {
        if (!(this_present_keyWords && that_present_keyWords))
          return false;
        if (!this.keyWords.equals(that.keyWords))
          return false;
      }

      boolean this_present_citys = true && this.isSetCitys();
      boolean that_present_citys = true && that.isSetCitys();
      if (this_present_citys || that_present_citys) {
        if (!(this_present_citys && that_present_citys))
          return false;
        if (!this.citys.equals(that.citys))
          return false;
      }

      boolean this_present_industry = true && this.isSetIndustry();
      boolean that_present_industry = true && that.isSetIndustry();
      if (this_present_industry || that_present_industry) {
        if (!(this_present_industry && that_present_industry))
          return false;
        if (!this.industry.equals(that.industry))
          return false;
      }

      boolean this_present_scale = true && this.isSetScale();
      boolean that_present_scale = true && that.isSetScale();
      if (this_present_scale || that_present_scale) {
        if (!(this_present_scale && that_present_scale))
          return false;
        if (!this.scale.equals(that.scale))
          return false;
      }

      boolean this_present_page = true;
      boolean that_present_page = true;
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (this.page != that.page)
          return false;
      }

      boolean this_present_pageSize = true;
      boolean that_present_pageSize = true;
      if (this_present_pageSize || that_present_pageSize) {
        if (!(this_present_pageSize && that_present_pageSize))
          return false;
        if (this.pageSize != that.pageSize)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetKeyWords()) ? 131071 : 524287);
      if (isSetKeyWords())
        hashCode = hashCode * 8191 + keyWords.hashCode();

      hashCode = hashCode * 8191 + ((isSetCitys()) ? 131071 : 524287);
      if (isSetCitys())
        hashCode = hashCode * 8191 + citys.hashCode();

      hashCode = hashCode * 8191 + ((isSetIndustry()) ? 131071 : 524287);
      if (isSetIndustry())
        hashCode = hashCode * 8191 + industry.hashCode();

      hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
      if (isSetScale())
        hashCode = hashCode * 8191 + scale.hashCode();

      hashCode = hashCode * 8191 + page;

      hashCode = hashCode * 8191 + pageSize;

      return hashCode;
    }

    @Override
    public int compareTo(companyQuery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetKeyWords()).compareTo(other.isSetKeyWords());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetKeyWords()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyWords, other.keyWords);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCitys()).compareTo(other.isSetCitys());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCitys()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.citys, other.citys);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetIndustry()).compareTo(other.isSetIndustry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIndustry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industry, other.industry);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetScale()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageSize()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("companyQuery_args(");
      boolean first = true;

      sb.append("keyWords:");
      if (this.keyWords == null) {
        sb.append("null");
      } else {
        sb.append(this.keyWords);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("citys:");
      if (this.citys == null) {
        sb.append("null");
      } else {
        sb.append(this.citys);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("industry:");
      if (this.industry == null) {
        sb.append("null");
      } else {
        sb.append(this.industry);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("page:");
      sb.append(this.page);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class companyQuery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public companyQuery_argsStandardScheme getScheme() {
        return new companyQuery_argsStandardScheme();
      }
    }

    private static class companyQuery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<companyQuery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, companyQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // KEY_WORDS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.keyWords = iprot.readString();
                struct.setKeyWordsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CITYS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.citys = iprot.readString();
                struct.setCitysIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // INDUSTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.industry = iprot.readString();
                struct.setIndustryIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // SCALE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.scale = iprot.readString();
                struct.setScaleIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page = iprot.readI32();
                struct.setPageIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageSize = iprot.readI32();
                struct.setPageSizeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, companyQuery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.keyWords != null) {
          oprot.writeFieldBegin(KEY_WORDS_FIELD_DESC);
          oprot.writeString(struct.keyWords);
          oprot.writeFieldEnd();
        }
        if (struct.citys != null) {
          oprot.writeFieldBegin(CITYS_FIELD_DESC);
          oprot.writeString(struct.citys);
          oprot.writeFieldEnd();
        }
        if (struct.industry != null) {
          oprot.writeFieldBegin(INDUSTRY_FIELD_DESC);
          oprot.writeString(struct.industry);
          oprot.writeFieldEnd();
        }
        if (struct.scale != null) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_FIELD_DESC);
        oprot.writeI32(struct.page);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class companyQuery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public companyQuery_argsTupleScheme getScheme() {
        return new companyQuery_argsTupleScheme();
      }
    }

    private static class companyQuery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<companyQuery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, companyQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetKeyWords()) {
          optionals.set(0);
        }
        if (struct.isSetCitys()) {
          optionals.set(1);
        }
        if (struct.isSetIndustry()) {
          optionals.set(2);
        }
        if (struct.isSetScale()) {
          optionals.set(3);
        }
        if (struct.isSetPage()) {
          optionals.set(4);
        }
        if (struct.isSetPageSize()) {
          optionals.set(5);
        }
        oprot.writeBitSet(optionals, 6);
        if (struct.isSetKeyWords()) {
          oprot.writeString(struct.keyWords);
        }
        if (struct.isSetCitys()) {
          oprot.writeString(struct.citys);
        }
        if (struct.isSetIndustry()) {
          oprot.writeString(struct.industry);
        }
        if (struct.isSetScale()) {
          oprot.writeString(struct.scale);
        }
        if (struct.isSetPage()) {
          oprot.writeI32(struct.page);
        }
        if (struct.isSetPageSize()) {
          oprot.writeI32(struct.pageSize);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, companyQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(6);
        if (incoming.get(0)) {
          struct.keyWords = iprot.readString();
          struct.setKeyWordsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.citys = iprot.readString();
          struct.setCitysIsSet(true);
        }
        if (incoming.get(2)) {
          struct.industry = iprot.readString();
          struct.setIndustryIsSet(true);
        }
        if (incoming.get(3)) {
          struct.scale = iprot.readString();
          struct.setScaleIsSet(true);
        }
        if (incoming.get(4)) {
          struct.page = iprot.readI32();
          struct.setPageIsSet(true);
        }
        if (incoming.get(5)) {
          struct.pageSize = iprot.readI32();
          struct.setPageSizeIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class companyQuery_result implements org.apache.thrift.TBase<companyQuery_result, companyQuery_result._Fields>, java.io.Serializable, Cloneable, Comparable<companyQuery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("companyQuery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new companyQuery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new companyQuery_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(companyQuery_result.class, metaDataMap);
    }

    public companyQuery_result() {
    }

    public companyQuery_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public companyQuery_result(companyQuery_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public companyQuery_result deepCopy() {
      return new companyQuery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public companyQuery_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof companyQuery_result)
        return this.equals((companyQuery_result)that);
      return false;
    }

    public boolean equals(companyQuery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(companyQuery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("companyQuery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class companyQuery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public companyQuery_resultStandardScheme getScheme() {
        return new companyQuery_resultStandardScheme();
      }
    }

    private static class companyQuery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<companyQuery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, companyQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, companyQuery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class companyQuery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public companyQuery_resultTupleScheme getScheme() {
        return new companyQuery_resultTupleScheme();
      }
    }

    private static class companyQuery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<companyQuery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, companyQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, companyQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class positionQuery_args implements org.apache.thrift.TBase<positionQuery_args, positionQuery_args._Fields>, java.io.Serializable, Cloneable, Comparable<positionQuery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("positionQuery_args");

    private static final org.apache.thrift.protocol.TField KEY_WORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keyWords", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField CITYS_FIELD_DESC = new org.apache.thrift.protocol.TField("citys", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField INDUSTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("industry", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField SALARY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("salaryCode", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("page", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)6);
    private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)9);
    private static final org.apache.thrift.protocol.TField TEAM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("teamId", org.apache.thrift.protocol.TType.I32, (short)10);
    private static final org.apache.thrift.protocol.TField MOTHER_COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("motherCompanyId", org.apache.thrift.protocol.TType.I32, (short)11);
    private static final org.apache.thrift.protocol.TField ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("order", org.apache.thrift.protocol.TType.I32, (short)12);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new positionQuery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new positionQuery_argsTupleSchemeFactory();

    public java.lang.String keyWords; // required
    public java.lang.String citys; // required
    public java.lang.String industry; // required
    public java.lang.String salaryCode; // required
    public int page; // required
    public int pageSize; // required
    public java.lang.String startTime; // required
    public java.lang.String endTime; // required
    public int companyId; // required
    public int teamId; // required
    public int motherCompanyId; // required
    public int order; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      KEY_WORDS((short)1, "keyWords"),
      CITYS((short)2, "citys"),
      INDUSTRY((short)3, "industry"),
      SALARY_CODE((short)4, "salaryCode"),
      PAGE((short)5, "page"),
      PAGE_SIZE((short)6, "pageSize"),
      START_TIME((short)7, "startTime"),
      END_TIME((short)8, "endTime"),
      COMPANY_ID((short)9, "companyId"),
      TEAM_ID((short)10, "teamId"),
      MOTHER_COMPANY_ID((short)11, "motherCompanyId"),
      ORDER((short)12, "order");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // KEY_WORDS
            return KEY_WORDS;
          case 2: // CITYS
            return CITYS;
          case 3: // INDUSTRY
            return INDUSTRY;
          case 4: // SALARY_CODE
            return SALARY_CODE;
          case 5: // PAGE
            return PAGE;
          case 6: // PAGE_SIZE
            return PAGE_SIZE;
          case 7: // START_TIME
            return START_TIME;
          case 8: // END_TIME
            return END_TIME;
          case 9: // COMPANY_ID
            return COMPANY_ID;
          case 10: // TEAM_ID
            return TEAM_ID;
          case 11: // MOTHER_COMPANY_ID
            return MOTHER_COMPANY_ID;
          case 12: // ORDER
            return ORDER;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGE_ISSET_ID = 0;
    private static final int __PAGESIZE_ISSET_ID = 1;
    private static final int __COMPANYID_ISSET_ID = 2;
    private static final int __TEAMID_ISSET_ID = 3;
    private static final int __MOTHERCOMPANYID_ISSET_ID = 4;
    private static final int __ORDER_ISSET_ID = 5;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.KEY_WORDS, new org.apache.thrift.meta_data.FieldMetaData("keyWords", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CITYS, new org.apache.thrift.meta_data.FieldMetaData("citys", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.INDUSTRY, new org.apache.thrift.meta_data.FieldMetaData("industry", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SALARY_CODE, new org.apache.thrift.meta_data.FieldMetaData("salaryCode", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE, new org.apache.thrift.meta_data.FieldMetaData("page", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.TEAM_ID, new org.apache.thrift.meta_data.FieldMetaData("teamId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.MOTHER_COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("motherCompanyId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.ORDER, new org.apache.thrift.meta_data.FieldMetaData("order", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(positionQuery_args.class, metaDataMap);
    }

    public positionQuery_args() {
    }

    public positionQuery_args(
            java.lang.String keyWords,
            java.lang.String citys,
            java.lang.String industry,
            java.lang.String salaryCode,
            int page,
            int pageSize,
            java.lang.String startTime,
            java.lang.String endTime,
            int companyId,
            int teamId,
            int motherCompanyId,
            int order)
    {
      this();
      this.keyWords = keyWords;
      this.citys = citys;
      this.industry = industry;
      this.salaryCode = salaryCode;
      this.page = page;
      setPageIsSet(true);
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      this.startTime = startTime;
      this.endTime = endTime;
      this.companyId = companyId;
      setCompanyIdIsSet(true);
      this.teamId = teamId;
      setTeamIdIsSet(true);
      this.motherCompanyId = motherCompanyId;
      setMotherCompanyIdIsSet(true);
      this.order = order;
      setOrderIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public positionQuery_args(positionQuery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetKeyWords()) {
        this.keyWords = other.keyWords;
      }
      if (other.isSetCitys()) {
        this.citys = other.citys;
      }
      if (other.isSetIndustry()) {
        this.industry = other.industry;
      }
      if (other.isSetSalaryCode()) {
        this.salaryCode = other.salaryCode;
      }
      this.page = other.page;
      this.pageSize = other.pageSize;
      if (other.isSetStartTime()) {
        this.startTime = other.startTime;
      }
      if (other.isSetEndTime()) {
        this.endTime = other.endTime;
      }
      this.companyId = other.companyId;
      this.teamId = other.teamId;
      this.motherCompanyId = other.motherCompanyId;
      this.order = other.order;
    }

    public positionQuery_args deepCopy() {
      return new positionQuery_args(this);
    }

    @Override
    public void clear() {
      this.keyWords = null;
      this.citys = null;
      this.industry = null;
      this.salaryCode = null;
      setPageIsSet(false);
      this.page = 0;
      setPageSizeIsSet(false);
      this.pageSize = 0;
      this.startTime = null;
      this.endTime = null;
      setCompanyIdIsSet(false);
      this.companyId = 0;
      setTeamIdIsSet(false);
      this.teamId = 0;
      setMotherCompanyIdIsSet(false);
      this.motherCompanyId = 0;
      setOrderIsSet(false);
      this.order = 0;
    }

    public java.lang.String getKeyWords() {
      return this.keyWords;
    }

    public positionQuery_args setKeyWords(java.lang.String keyWords) {
      this.keyWords = keyWords;
      return this;
    }

    public void unsetKeyWords() {
      this.keyWords = null;
    }

    /** Returns true if field keyWords is set (has been assigned a value) and false otherwise */
    public boolean isSetKeyWords() {
      return this.keyWords != null;
    }

    public void setKeyWordsIsSet(boolean value) {
      if (!value) {
        this.keyWords = null;
      }
    }

    public java.lang.String getCitys() {
      return this.citys;
    }

    public positionQuery_args setCitys(java.lang.String citys) {
      this.citys = citys;
      return this;
    }

    public void unsetCitys() {
      this.citys = null;
    }

    /** Returns true if field citys is set (has been assigned a value) and false otherwise */
    public boolean isSetCitys() {
      return this.citys != null;
    }

    public void setCitysIsSet(boolean value) {
      if (!value) {
        this.citys = null;
      }
    }

    public java.lang.String getIndustry() {
      return this.industry;
    }

    public positionQuery_args setIndustry(java.lang.String industry) {
      this.industry = industry;
      return this;
    }

    public void unsetIndustry() {
      this.industry = null;
    }

    /** Returns true if field industry is set (has been assigned a value) and false otherwise */
    public boolean isSetIndustry() {
      return this.industry != null;
    }

    public void setIndustryIsSet(boolean value) {
      if (!value) {
        this.industry = null;
      }
    }

    public java.lang.String getSalaryCode() {
      return this.salaryCode;
    }

    public positionQuery_args setSalaryCode(java.lang.String salaryCode) {
      this.salaryCode = salaryCode;
      return this;
    }

    public void unsetSalaryCode() {
      this.salaryCode = null;
    }

    /** Returns true if field salaryCode is set (has been assigned a value) and false otherwise */
    public boolean isSetSalaryCode() {
      return this.salaryCode != null;
    }

    public void setSalaryCodeIsSet(boolean value) {
      if (!value) {
        this.salaryCode = null;
      }
    }

    public int getPage() {
      return this.page;
    }

    public positionQuery_args setPage(int page) {
      this.page = page;
      setPageIsSet(true);
      return this;
    }

    public void unsetPage() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_ISSET_ID);
    }

    /** Returns true if field page is set (has been assigned a value) and false otherwise */
    public boolean isSetPage() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_ISSET_ID);
    }

    public void setPageIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_ISSET_ID, value);
    }

    public int getPageSize() {
      return this.pageSize;
    }

    public positionQuery_args setPageSize(int pageSize) {
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      return this;
    }

    public void unsetPageSize() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
    public boolean isSetPageSize() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    public void setPageSizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
    }

    public java.lang.String getStartTime() {
      return this.startTime;
    }

    public positionQuery_args setStartTime(java.lang.String startTime) {
      this.startTime = startTime;
      return this;
    }

    public void unsetStartTime() {
      this.startTime = null;
    }

    /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
    public boolean isSetStartTime() {
      return this.startTime != null;
    }

    public void setStartTimeIsSet(boolean value) {
      if (!value) {
        this.startTime = null;
      }
    }

    public java.lang.String getEndTime() {
      return this.endTime;
    }

    public positionQuery_args setEndTime(java.lang.String endTime) {
      this.endTime = endTime;
      return this;
    }

    public void unsetEndTime() {
      this.endTime = null;
    }

    /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
    public boolean isSetEndTime() {
      return this.endTime != null;
    }

    public void setEndTimeIsSet(boolean value) {
      if (!value) {
        this.endTime = null;
      }
    }

    public int getCompanyId() {
      return this.companyId;
    }

    public positionQuery_args setCompanyId(int companyId) {
      this.companyId = companyId;
      setCompanyIdIsSet(true);
      return this;
    }

    public void unsetCompanyId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
    }

    public void setCompanyIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
    }

    public int getTeamId() {
      return this.teamId;
    }

    public positionQuery_args setTeamId(int teamId) {
      this.teamId = teamId;
      setTeamIdIsSet(true);
      return this;
    }

    public void unsetTeamId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TEAMID_ISSET_ID);
    }

    /** Returns true if field teamId is set (has been assigned a value) and false otherwise */
    public boolean isSetTeamId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TEAMID_ISSET_ID);
    }

    public void setTeamIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TEAMID_ISSET_ID, value);
    }

    public int getMotherCompanyId() {
      return this.motherCompanyId;
    }

    public positionQuery_args setMotherCompanyId(int motherCompanyId) {
      this.motherCompanyId = motherCompanyId;
      setMotherCompanyIdIsSet(true);
      return this;
    }

    public void unsetMotherCompanyId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MOTHERCOMPANYID_ISSET_ID);
    }

    /** Returns true if field motherCompanyId is set (has been assigned a value) and false otherwise */
    public boolean isSetMotherCompanyId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MOTHERCOMPANYID_ISSET_ID);
    }

    public void setMotherCompanyIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MOTHERCOMPANYID_ISSET_ID, value);
    }

    public int getOrder() {
      return this.order;
    }

    public positionQuery_args setOrder(int order) {
      this.order = order;
      setOrderIsSet(true);
      return this;
    }

    public void unsetOrder() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDER_ISSET_ID);
    }

    /** Returns true if field order is set (has been assigned a value) and false otherwise */
    public boolean isSetOrder() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDER_ISSET_ID);
    }

    public void setOrderIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDER_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case KEY_WORDS:
          if (value == null) {
            unsetKeyWords();
          } else {
            setKeyWords((java.lang.String)value);
          }
          break;

        case CITYS:
          if (value == null) {
            unsetCitys();
          } else {
            setCitys((java.lang.String)value);
          }
          break;

        case INDUSTRY:
          if (value == null) {
            unsetIndustry();
          } else {
            setIndustry((java.lang.String)value);
          }
          break;

        case SALARY_CODE:
          if (value == null) {
            unsetSalaryCode();
          } else {
            setSalaryCode((java.lang.String)value);
          }
          break;

        case PAGE:
          if (value == null) {
            unsetPage();
          } else {
            setPage((java.lang.Integer)value);
          }
          break;

        case PAGE_SIZE:
          if (value == null) {
            unsetPageSize();
          } else {
            setPageSize((java.lang.Integer)value);
          }
          break;

        case START_TIME:
          if (value == null) {
            unsetStartTime();
          } else {
            setStartTime((java.lang.String)value);
          }
          break;

        case END_TIME:
          if (value == null) {
            unsetEndTime();
          } else {
            setEndTime((java.lang.String)value);
          }
          break;

        case COMPANY_ID:
          if (value == null) {
            unsetCompanyId();
          } else {
            setCompanyId((java.lang.Integer)value);
          }
          break;

        case TEAM_ID:
          if (value == null) {
            unsetTeamId();
          } else {
            setTeamId((java.lang.Integer)value);
          }
          break;

        case MOTHER_COMPANY_ID:
          if (value == null) {
            unsetMotherCompanyId();
          } else {
            setMotherCompanyId((java.lang.Integer)value);
          }
          break;

        case ORDER:
          if (value == null) {
            unsetOrder();
          } else {
            setOrder((java.lang.Integer)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case KEY_WORDS:
          return getKeyWords();

        case CITYS:
          return getCitys();

        case INDUSTRY:
          return getIndustry();

        case SALARY_CODE:
          return getSalaryCode();

        case PAGE:
          return getPage();

        case PAGE_SIZE:
          return getPageSize();

        case START_TIME:
          return getStartTime();

        case END_TIME:
          return getEndTime();

        case COMPANY_ID:
          return getCompanyId();

        case TEAM_ID:
          return getTeamId();

        case MOTHER_COMPANY_ID:
          return getMotherCompanyId();

        case ORDER:
          return getOrder();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case KEY_WORDS:
          return isSetKeyWords();
        case CITYS:
          return isSetCitys();
        case INDUSTRY:
          return isSetIndustry();
        case SALARY_CODE:
          return isSetSalaryCode();
        case PAGE:
          return isSetPage();
        case PAGE_SIZE:
          return isSetPageSize();
        case START_TIME:
          return isSetStartTime();
        case END_TIME:
          return isSetEndTime();
        case COMPANY_ID:
          return isSetCompanyId();
        case TEAM_ID:
          return isSetTeamId();
        case MOTHER_COMPANY_ID:
          return isSetMotherCompanyId();
        case ORDER:
          return isSetOrder();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof positionQuery_args)
        return this.equals((positionQuery_args)that);
      return false;
    }

    public boolean equals(positionQuery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_keyWords = true && this.isSetKeyWords();
      boolean that_present_keyWords = true && that.isSetKeyWords();
      if (this_present_keyWords || that_present_keyWords) {
        if (!(this_present_keyWords && that_present_keyWords))
          return false;
        if (!this.keyWords.equals(that.keyWords))
          return false;
      }

      boolean this_present_citys = true && this.isSetCitys();
      boolean that_present_citys = true && that.isSetCitys();
      if (this_present_citys || that_present_citys) {
        if (!(this_present_citys && that_present_citys))
          return false;
        if (!this.citys.equals(that.citys))
          return false;
      }

      boolean this_present_industry = true && this.isSetIndustry();
      boolean that_present_industry = true && that.isSetIndustry();
      if (this_present_industry || that_present_industry) {
        if (!(this_present_industry && that_present_industry))
          return false;
        if (!this.industry.equals(that.industry))
          return false;
      }

      boolean this_present_salaryCode = true && this.isSetSalaryCode();
      boolean that_present_salaryCode = true && that.isSetSalaryCode();
      if (this_present_salaryCode || that_present_salaryCode) {
        if (!(this_present_salaryCode && that_present_salaryCode))
          return false;
        if (!this.salaryCode.equals(that.salaryCode))
          return false;
      }

      boolean this_present_page = true;
      boolean that_present_page = true;
      if (this_present_page || that_present_page) {
        if (!(this_present_page && that_present_page))
          return false;
        if (this.page != that.page)
          return false;
      }

      boolean this_present_pageSize = true;
      boolean that_present_pageSize = true;
      if (this_present_pageSize || that_present_pageSize) {
        if (!(this_present_pageSize && that_present_pageSize))
          return false;
        if (this.pageSize != that.pageSize)
          return false;
      }

      boolean this_present_startTime = true && this.isSetStartTime();
      boolean that_present_startTime = true && that.isSetStartTime();
      if (this_present_startTime || that_present_startTime) {
        if (!(this_present_startTime && that_present_startTime))
          return false;
        if (!this.startTime.equals(that.startTime))
          return false;
      }

      boolean this_present_endTime = true && this.isSetEndTime();
      boolean that_present_endTime = true && that.isSetEndTime();
      if (this_present_endTime || that_present_endTime) {
        if (!(this_present_endTime && that_present_endTime))
          return false;
        if (!this.endTime.equals(that.endTime))
          return false;
      }

      boolean this_present_companyId = true;
      boolean that_present_companyId = true;
      if (this_present_companyId || that_present_companyId) {
        if (!(this_present_companyId && that_present_companyId))
          return false;
        if (this.companyId != that.companyId)
          return false;
      }

      boolean this_present_teamId = true;
      boolean that_present_teamId = true;
      if (this_present_teamId || that_present_teamId) {
        if (!(this_present_teamId && that_present_teamId))
          return false;
        if (this.teamId != that.teamId)
          return false;
      }

      boolean this_present_motherCompanyId = true;
      boolean that_present_motherCompanyId = true;
      if (this_present_motherCompanyId || that_present_motherCompanyId) {
        if (!(this_present_motherCompanyId && that_present_motherCompanyId))
          return false;
        if (this.motherCompanyId != that.motherCompanyId)
          return false;
      }

      boolean this_present_order = true;
      boolean that_present_order = true;
      if (this_present_order || that_present_order) {
        if (!(this_present_order && that_present_order))
          return false;
        if (this.order != that.order)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetKeyWords()) ? 131071 : 524287);
      if (isSetKeyWords())
        hashCode = hashCode * 8191 + keyWords.hashCode();

      hashCode = hashCode * 8191 + ((isSetCitys()) ? 131071 : 524287);
      if (isSetCitys())
        hashCode = hashCode * 8191 + citys.hashCode();

      hashCode = hashCode * 8191 + ((isSetIndustry()) ? 131071 : 524287);
      if (isSetIndustry())
        hashCode = hashCode * 8191 + industry.hashCode();

      hashCode = hashCode * 8191 + ((isSetSalaryCode()) ? 131071 : 524287);
      if (isSetSalaryCode())
        hashCode = hashCode * 8191 + salaryCode.hashCode();

      hashCode = hashCode * 8191 + page;

      hashCode = hashCode * 8191 + pageSize;

      hashCode = hashCode * 8191 + ((isSetStartTime()) ? 131071 : 524287);
      if (isSetStartTime())
        hashCode = hashCode * 8191 + startTime.hashCode();

      hashCode = hashCode * 8191 + ((isSetEndTime()) ? 131071 : 524287);
      if (isSetEndTime())
        hashCode = hashCode * 8191 + endTime.hashCode();

      hashCode = hashCode * 8191 + companyId;

      hashCode = hashCode * 8191 + teamId;

      hashCode = hashCode * 8191 + motherCompanyId;

      hashCode = hashCode * 8191 + order;

      return hashCode;
    }

    @Override
    public int compareTo(positionQuery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetKeyWords()).compareTo(other.isSetKeyWords());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetKeyWords()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyWords, other.keyWords);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCitys()).compareTo(other.isSetCitys());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCitys()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.citys, other.citys);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetIndustry()).compareTo(other.isSetIndustry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIndustry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industry, other.industry);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetSalaryCode()).compareTo(other.isSetSalaryCode());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSalaryCode()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salaryCode, other.salaryCode);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPage()).compareTo(other.isSetPage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page, other.page);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageSize()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStartTime()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEndTime()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTeamId()).compareTo(other.isSetTeamId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTeamId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teamId, other.teamId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetMotherCompanyId()).compareTo(other.isSetMotherCompanyId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMotherCompanyId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.motherCompanyId, other.motherCompanyId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetOrder()).compareTo(other.isSetOrder());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOrder()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order, other.order);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("positionQuery_args(");
      boolean first = true;

      sb.append("keyWords:");
      if (this.keyWords == null) {
        sb.append("null");
      } else {
        sb.append(this.keyWords);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("citys:");
      if (this.citys == null) {
        sb.append("null");
      } else {
        sb.append(this.citys);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("industry:");
      if (this.industry == null) {
        sb.append("null");
      } else {
        sb.append(this.industry);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("salaryCode:");
      if (this.salaryCode == null) {
        sb.append("null");
      } else {
        sb.append(this.salaryCode);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("page:");
      sb.append(this.page);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
      if (!first) sb.append(", ");
      sb.append("startTime:");
      if (this.startTime == null) {
        sb.append("null");
      } else {
        sb.append(this.startTime);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("endTime:");
      if (this.endTime == null) {
        sb.append("null");
      } else {
        sb.append(this.endTime);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("teamId:");
      sb.append(this.teamId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("motherCompanyId:");
      sb.append(this.motherCompanyId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("order:");
      sb.append(this.order);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class positionQuery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public positionQuery_argsStandardScheme getScheme() {
        return new positionQuery_argsStandardScheme();
      }
    }

    private static class positionQuery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<positionQuery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, positionQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // KEY_WORDS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.keyWords = iprot.readString();
                struct.setKeyWordsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CITYS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.citys = iprot.readString();
                struct.setCitysIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // INDUSTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.industry = iprot.readString();
                struct.setIndustryIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // SALARY_CODE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.salaryCode = iprot.readString();
                struct.setSalaryCodeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // PAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page = iprot.readI32();
                struct.setPageIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageSize = iprot.readI32();
                struct.setPageSizeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // START_TIME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.startTime = iprot.readString();
                struct.setStartTimeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // END_TIME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.endTime = iprot.readString();
                struct.setEndTimeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 9: // COMPANY_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.companyId = iprot.readI32();
                struct.setCompanyIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 10: // TEAM_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.teamId = iprot.readI32();
                struct.setTeamIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 11: // MOTHER_COMPANY_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.motherCompanyId = iprot.readI32();
                struct.setMotherCompanyIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 12: // ORDER
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.order = iprot.readI32();
                struct.setOrderIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, positionQuery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.keyWords != null) {
          oprot.writeFieldBegin(KEY_WORDS_FIELD_DESC);
          oprot.writeString(struct.keyWords);
          oprot.writeFieldEnd();
        }
        if (struct.citys != null) {
          oprot.writeFieldBegin(CITYS_FIELD_DESC);
          oprot.writeString(struct.citys);
          oprot.writeFieldEnd();
        }
        if (struct.industry != null) {
          oprot.writeFieldBegin(INDUSTRY_FIELD_DESC);
          oprot.writeString(struct.industry);
          oprot.writeFieldEnd();
        }
        if (struct.salaryCode != null) {
          oprot.writeFieldBegin(SALARY_CODE_FIELD_DESC);
          oprot.writeString(struct.salaryCode);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_FIELD_DESC);
        oprot.writeI32(struct.page);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
        if (struct.startTime != null) {
          oprot.writeFieldBegin(START_TIME_FIELD_DESC);
          oprot.writeString(struct.startTime);
          oprot.writeFieldEnd();
        }
        if (struct.endTime != null) {
          oprot.writeFieldBegin(END_TIME_FIELD_DESC);
          oprot.writeString(struct.endTime);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(TEAM_ID_FIELD_DESC);
        oprot.writeI32(struct.teamId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(MOTHER_COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.motherCompanyId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(ORDER_FIELD_DESC);
        oprot.writeI32(struct.order);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class positionQuery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public positionQuery_argsTupleScheme getScheme() {
        return new positionQuery_argsTupleScheme();
      }
    }

    private static class positionQuery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<positionQuery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, positionQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetKeyWords()) {
          optionals.set(0);
        }
        if (struct.isSetCitys()) {
          optionals.set(1);
        }
        if (struct.isSetIndustry()) {
          optionals.set(2);
        }
        if (struct.isSetSalaryCode()) {
          optionals.set(3);
        }
        if (struct.isSetPage()) {
          optionals.set(4);
        }
        if (struct.isSetPageSize()) {
          optionals.set(5);
        }
        if (struct.isSetStartTime()) {
          optionals.set(6);
        }
        if (struct.isSetEndTime()) {
          optionals.set(7);
        }
        if (struct.isSetCompanyId()) {
          optionals.set(8);
        }
        if (struct.isSetTeamId()) {
          optionals.set(9);
        }
        if (struct.isSetMotherCompanyId()) {
          optionals.set(10);
        }
        if (struct.isSetOrder()) {
          optionals.set(11);
        }
        oprot.writeBitSet(optionals, 12);
        if (struct.isSetKeyWords()) {
          oprot.writeString(struct.keyWords);
        }
        if (struct.isSetCitys()) {
          oprot.writeString(struct.citys);
        }
        if (struct.isSetIndustry()) {
          oprot.writeString(struct.industry);
        }
        if (struct.isSetSalaryCode()) {
          oprot.writeString(struct.salaryCode);
        }
        if (struct.isSetPage()) {
          oprot.writeI32(struct.page);
        }
        if (struct.isSetPageSize()) {
          oprot.writeI32(struct.pageSize);
        }
        if (struct.isSetStartTime()) {
          oprot.writeString(struct.startTime);
        }
        if (struct.isSetEndTime()) {
          oprot.writeString(struct.endTime);
        }
        if (struct.isSetCompanyId()) {
          oprot.writeI32(struct.companyId);
        }
        if (struct.isSetTeamId()) {
          oprot.writeI32(struct.teamId);
        }
        if (struct.isSetMotherCompanyId()) {
          oprot.writeI32(struct.motherCompanyId);
        }
        if (struct.isSetOrder()) {
          oprot.writeI32(struct.order);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, positionQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(12);
        if (incoming.get(0)) {
          struct.keyWords = iprot.readString();
          struct.setKeyWordsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.citys = iprot.readString();
          struct.setCitysIsSet(true);
        }
        if (incoming.get(2)) {
          struct.industry = iprot.readString();
          struct.setIndustryIsSet(true);
        }
        if (incoming.get(3)) {
          struct.salaryCode = iprot.readString();
          struct.setSalaryCodeIsSet(true);
        }
        if (incoming.get(4)) {
          struct.page = iprot.readI32();
          struct.setPageIsSet(true);
        }
        if (incoming.get(5)) {
          struct.pageSize = iprot.readI32();
          struct.setPageSizeIsSet(true);
        }
        if (incoming.get(6)) {
          struct.startTime = iprot.readString();
          struct.setStartTimeIsSet(true);
        }
        if (incoming.get(7)) {
          struct.endTime = iprot.readString();
          struct.setEndTimeIsSet(true);
        }
        if (incoming.get(8)) {
          struct.companyId = iprot.readI32();
          struct.setCompanyIdIsSet(true);
        }
        if (incoming.get(9)) {
          struct.teamId = iprot.readI32();
          struct.setTeamIdIsSet(true);
        }
        if (incoming.get(10)) {
          struct.motherCompanyId = iprot.readI32();
          struct.setMotherCompanyIdIsSet(true);
        }
        if (incoming.get(11)) {
          struct.order = iprot.readI32();
          struct.setOrderIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class positionQuery_result implements org.apache.thrift.TBase<positionQuery_result, positionQuery_result._Fields>, java.io.Serializable, Cloneable, Comparable<positionQuery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("positionQuery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new positionQuery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new positionQuery_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(positionQuery_result.class, metaDataMap);
    }

    public positionQuery_result() {
    }

    public positionQuery_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public positionQuery_result(positionQuery_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public positionQuery_result deepCopy() {
      return new positionQuery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public positionQuery_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof positionQuery_result)
        return this.equals((positionQuery_result)that);
      return false;
    }

    public boolean equals(positionQuery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(positionQuery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("positionQuery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class positionQuery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public positionQuery_resultStandardScheme getScheme() {
        return new positionQuery_resultStandardScheme();
      }
    }

    private static class positionQuery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<positionQuery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, positionQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, positionQuery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class positionQuery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public positionQuery_resultTupleScheme getScheme() {
        return new positionQuery_resultTupleScheme();
      }
    }

    private static class positionQuery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<positionQuery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, positionQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, positionQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRanking_args implements org.apache.thrift.TBase<queryAwardRanking_args, queryAwardRanking_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRanking_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRanking_args");

    private static final org.apache.thrift.protocol.TField COMPANY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("companyIds", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TIMESPAN_FIELD_DESC = new org.apache.thrift.protocol.TField("timespan", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField PAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("pageNum", org.apache.thrift.protocol.TType.I32, (short)4);
    private static final org.apache.thrift.protocol.TField KEYWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("keyword", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField FILTER_FIELD_DESC = new org.apache.thrift.protocol.TField("filter", org.apache.thrift.protocol.TType.I32, (short)6);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRanking_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRanking_argsTupleSchemeFactory();

    public java.util.List<java.lang.Integer> companyIds; // required
    public java.lang.String timespan; // required
    public int pageSize; // required
    public int pageNum; // required
    public java.lang.String keyword; // required
    public int filter; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_IDS((short)1, "companyIds"),
      TIMESPAN((short)2, "timespan"),
      PAGE_SIZE((short)3, "pageSize"),
      PAGE_NUM((short)4, "pageNum"),
      KEYWORD((short)5, "keyword"),
      FILTER((short)6, "filter");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_IDS
            return COMPANY_IDS;
          case 2: // TIMESPAN
            return TIMESPAN;
          case 3: // PAGE_SIZE
            return PAGE_SIZE;
          case 4: // PAGE_NUM
            return PAGE_NUM;
          case 5: // KEYWORD
            return KEYWORD;
          case 6: // FILTER
            return FILTER;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGESIZE_ISSET_ID = 0;
    private static final int __PAGENUM_ISSET_ID = 1;
    private static final int __FILTER_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_IDS, new org.apache.thrift.meta_data.FieldMetaData("companyIds", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                      new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      tmpMap.put(_Fields.TIMESPAN, new org.apache.thrift.meta_data.FieldMetaData("timespan", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("pageNum", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.KEYWORD, new org.apache.thrift.meta_data.FieldMetaData("keyword", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FILTER, new org.apache.thrift.meta_data.FieldMetaData("filter", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRanking_args.class, metaDataMap);
    }

    public queryAwardRanking_args() {
    }

    public queryAwardRanking_args(
            java.util.List<java.lang.Integer> companyIds,
            java.lang.String timespan,
            int pageSize,
            int pageNum,
            java.lang.String keyword,
            int filter)
    {
      this();
      this.companyIds = companyIds;
      this.timespan = timespan;
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      this.pageNum = pageNum;
      setPageNumIsSet(true);
      this.keyword = keyword;
      this.filter = filter;
      setFilterIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRanking_args(queryAwardRanking_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyIds()) {
        java.util.List<java.lang.Integer> __this__companyIds = new java.util.ArrayList<java.lang.Integer>(other.companyIds);
        this.companyIds = __this__companyIds;
      }
      if (other.isSetTimespan()) {
        this.timespan = other.timespan;
      }
      this.pageSize = other.pageSize;
      this.pageNum = other.pageNum;
      if (other.isSetKeyword()) {
        this.keyword = other.keyword;
      }
      this.filter = other.filter;
    }

    public queryAwardRanking_args deepCopy() {
      return new queryAwardRanking_args(this);
    }

    @Override
    public void clear() {
      this.companyIds = null;
      this.timespan = null;
      setPageSizeIsSet(false);
      this.pageSize = 0;
      setPageNumIsSet(false);
      this.pageNum = 0;
      this.keyword = null;
      setFilterIsSet(false);
      this.filter = 0;
    }

    public int getCompanyIdsSize() {
      return (this.companyIds == null) ? 0 : this.companyIds.size();
    }

    public java.util.Iterator<java.lang.Integer> getCompanyIdsIterator() {
      return (this.companyIds == null) ? null : this.companyIds.iterator();
    }

    public void addToCompanyIds(int elem) {
      if (this.companyIds == null) {
        this.companyIds = new java.util.ArrayList<java.lang.Integer>();
      }
      this.companyIds.add(elem);
    }

    public java.util.List<java.lang.Integer> getCompanyIds() {
      return this.companyIds;
    }

    public queryAwardRanking_args setCompanyIds(java.util.List<java.lang.Integer> companyIds) {
      this.companyIds = companyIds;
      return this;
    }

    public void unsetCompanyIds() {
      this.companyIds = null;
    }

    /** Returns true if field companyIds is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyIds() {
      return this.companyIds != null;
    }

    public void setCompanyIdsIsSet(boolean value) {
      if (!value) {
        this.companyIds = null;
      }
    }

    public java.lang.String getTimespan() {
      return this.timespan;
    }

    public queryAwardRanking_args setTimespan(java.lang.String timespan) {
      this.timespan = timespan;
      return this;
    }

    public void unsetTimespan() {
      this.timespan = null;
    }

    /** Returns true if field timespan is set (has been assigned a value) and false otherwise */
    public boolean isSetTimespan() {
      return this.timespan != null;
    }

    public void setTimespanIsSet(boolean value) {
      if (!value) {
        this.timespan = null;
      }
    }

    public int getPageSize() {
      return this.pageSize;
    }

    public queryAwardRanking_args setPageSize(int pageSize) {
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      return this;
    }

    public void unsetPageSize() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
    public boolean isSetPageSize() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    public void setPageSizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
    }

    public int getPageNum() {
      return this.pageNum;
    }

    public queryAwardRanking_args setPageNum(int pageNum) {
      this.pageNum = pageNum;
      setPageNumIsSet(true);
      return this;
    }

    public void unsetPageNum() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    /** Returns true if field pageNum is set (has been assigned a value) and false otherwise */
    public boolean isSetPageNum() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    public void setPageNumIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGENUM_ISSET_ID, value);
    }

    public java.lang.String getKeyword() {
      return this.keyword;
    }

    public queryAwardRanking_args setKeyword(java.lang.String keyword) {
      this.keyword = keyword;
      return this;
    }

    public void unsetKeyword() {
      this.keyword = null;
    }

    /** Returns true if field keyword is set (has been assigned a value) and false otherwise */
    public boolean isSetKeyword() {
      return this.keyword != null;
    }

    public void setKeywordIsSet(boolean value) {
      if (!value) {
        this.keyword = null;
      }
    }

    public int getFilter() {
      return this.filter;
    }

    public queryAwardRanking_args setFilter(int filter) {
      this.filter = filter;
      setFilterIsSet(true);
      return this;
    }

    public void unsetFilter() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FILTER_ISSET_ID);
    }

    /** Returns true if field filter is set (has been assigned a value) and false otherwise */
    public boolean isSetFilter() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FILTER_ISSET_ID);
    }

    public void setFilterIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FILTER_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case COMPANY_IDS:
          if (value == null) {
            unsetCompanyIds();
          } else {
            setCompanyIds((java.util.List<java.lang.Integer>)value);
          }
          break;

        case TIMESPAN:
          if (value == null) {
            unsetTimespan();
          } else {
            setTimespan((java.lang.String)value);
          }
          break;

        case PAGE_SIZE:
          if (value == null) {
            unsetPageSize();
          } else {
            setPageSize((java.lang.Integer)value);
          }
          break;

        case PAGE_NUM:
          if (value == null) {
            unsetPageNum();
          } else {
            setPageNum((java.lang.Integer)value);
          }
          break;

        case KEYWORD:
          if (value == null) {
            unsetKeyword();
          } else {
            setKeyword((java.lang.String)value);
          }
          break;

        case FILTER:
          if (value == null) {
            unsetFilter();
          } else {
            setFilter((java.lang.Integer)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case COMPANY_IDS:
          return getCompanyIds();

        case TIMESPAN:
          return getTimespan();

        case PAGE_SIZE:
          return getPageSize();

        case PAGE_NUM:
          return getPageNum();

        case KEYWORD:
          return getKeyword();

        case FILTER:
          return getFilter();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case COMPANY_IDS:
          return isSetCompanyIds();
        case TIMESPAN:
          return isSetTimespan();
        case PAGE_SIZE:
          return isSetPageSize();
        case PAGE_NUM:
          return isSetPageNum();
        case KEYWORD:
          return isSetKeyword();
        case FILTER:
          return isSetFilter();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRanking_args)
        return this.equals((queryAwardRanking_args)that);
      return false;
    }

    public boolean equals(queryAwardRanking_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyIds = true && this.isSetCompanyIds();
      boolean that_present_companyIds = true && that.isSetCompanyIds();
      if (this_present_companyIds || that_present_companyIds) {
        if (!(this_present_companyIds && that_present_companyIds))
          return false;
        if (!this.companyIds.equals(that.companyIds))
          return false;
      }

      boolean this_present_timespan = true && this.isSetTimespan();
      boolean that_present_timespan = true && that.isSetTimespan();
      if (this_present_timespan || that_present_timespan) {
        if (!(this_present_timespan && that_present_timespan))
          return false;
        if (!this.timespan.equals(that.timespan))
          return false;
      }

      boolean this_present_pageSize = true;
      boolean that_present_pageSize = true;
      if (this_present_pageSize || that_present_pageSize) {
        if (!(this_present_pageSize && that_present_pageSize))
          return false;
        if (this.pageSize != that.pageSize)
          return false;
      }

      boolean this_present_pageNum = true;
      boolean that_present_pageNum = true;
      if (this_present_pageNum || that_present_pageNum) {
        if (!(this_present_pageNum && that_present_pageNum))
          return false;
        if (this.pageNum != that.pageNum)
          return false;
      }

      boolean this_present_keyword = true && this.isSetKeyword();
      boolean that_present_keyword = true && that.isSetKeyword();
      if (this_present_keyword || that_present_keyword) {
        if (!(this_present_keyword && that_present_keyword))
          return false;
        if (!this.keyword.equals(that.keyword))
          return false;
      }

      boolean this_present_filter = true;
      boolean that_present_filter = true;
      if (this_present_filter || that_present_filter) {
        if (!(this_present_filter && that_present_filter))
          return false;
        if (this.filter != that.filter)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyIds()) ? 131071 : 524287);
      if (isSetCompanyIds())
        hashCode = hashCode * 8191 + companyIds.hashCode();

      hashCode = hashCode * 8191 + ((isSetTimespan()) ? 131071 : 524287);
      if (isSetTimespan())
        hashCode = hashCode * 8191 + timespan.hashCode();

      hashCode = hashCode * 8191 + pageSize;

      hashCode = hashCode * 8191 + pageNum;

      hashCode = hashCode * 8191 + ((isSetKeyword()) ? 131071 : 524287);
      if (isSetKeyword())
        hashCode = hashCode * 8191 + keyword.hashCode();

      hashCode = hashCode * 8191 + filter;

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRanking_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyIds()).compareTo(other.isSetCompanyIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyIds, other.companyIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTimespan()).compareTo(other.isSetTimespan());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimespan()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timespan, other.timespan);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageSize()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPageNum()).compareTo(other.isSetPageNum());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageNum()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageNum, other.pageNum);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetKeyword()).compareTo(other.isSetKeyword());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetKeyword()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keyword, other.keyword);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetFilter()).compareTo(other.isSetFilter());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFilter()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filter, other.filter);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("queryAwardRanking_args(");
      boolean first = true;

      sb.append("companyIds:");
      if (this.companyIds == null) {
        sb.append("null");
      } else {
        sb.append(this.companyIds);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("timespan:");
      if (this.timespan == null) {
        sb.append("null");
      } else {
        sb.append(this.timespan);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageNum:");
      sb.append(this.pageNum);
      first = false;
      if (!first) sb.append(", ");
      sb.append("keyword:");
      if (this.keyword == null) {
        sb.append("null");
      } else {
        sb.append(this.keyword);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("filter:");
      sb.append(this.filter);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRanking_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_argsStandardScheme getScheme() {
        return new queryAwardRanking_argsStandardScheme();
      }
    }

    private static class queryAwardRanking_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRanking_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.companyIds = new java.util.ArrayList<java.lang.Integer>(_list0.size);
                  int _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = iprot.readI32();
                    struct.companyIds.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setCompanyIdsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TIMESPAN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.timespan = iprot.readString();
                struct.setTimespanIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageSize = iprot.readI32();
                struct.setPageSizeIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // PAGE_NUM
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageNum = iprot.readI32();
                struct.setPageNumIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // KEYWORD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.keyword = iprot.readString();
                struct.setKeywordIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // FILTER
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.filter = iprot.readI32();
                struct.setFilterIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyIds != null) {
          oprot.writeFieldBegin(COMPANY_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.companyIds.size()));
            for (int _iter3 : struct.companyIds)
            {
              oprot.writeI32(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.timespan != null) {
          oprot.writeFieldBegin(TIMESPAN_FIELD_DESC);
          oprot.writeString(struct.timespan);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_NUM_FIELD_DESC);
        oprot.writeI32(struct.pageNum);
        oprot.writeFieldEnd();
        if (struct.keyword != null) {
          oprot.writeFieldBegin(KEYWORD_FIELD_DESC);
          oprot.writeString(struct.keyword);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(FILTER_FIELD_DESC);
        oprot.writeI32(struct.filter);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRanking_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_argsTupleScheme getScheme() {
        return new queryAwardRanking_argsTupleScheme();
      }
    }

    private static class queryAwardRanking_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRanking_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyIds()) {
          optionals.set(0);
        }
        if (struct.isSetTimespan()) {
          optionals.set(1);
        }
        if (struct.isSetPageSize()) {
          optionals.set(2);
        }
        if (struct.isSetPageNum()) {
          optionals.set(3);
        }
        if (struct.isSetKeyword()) {
          optionals.set(4);
        }
        if (struct.isSetFilter()) {
          optionals.set(5);
        }
        oprot.writeBitSet(optionals, 6);
        if (struct.isSetCompanyIds()) {
          {
            oprot.writeI32(struct.companyIds.size());
            for (int _iter4 : struct.companyIds)
            {
              oprot.writeI32(_iter4);
            }
          }
        }
        if (struct.isSetTimespan()) {
          oprot.writeString(struct.timespan);
        }
        if (struct.isSetPageSize()) {
          oprot.writeI32(struct.pageSize);
        }
        if (struct.isSetPageNum()) {
          oprot.writeI32(struct.pageNum);
        }
        if (struct.isSetKeyword()) {
          oprot.writeString(struct.keyword);
        }
        if (struct.isSetFilter()) {
          oprot.writeI32(struct.filter);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(6);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.companyIds = new java.util.ArrayList<java.lang.Integer>(_list5.size);
            int _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = iprot.readI32();
              struct.companyIds.add(_elem6);
            }
          }
          struct.setCompanyIdsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.timespan = iprot.readString();
          struct.setTimespanIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageSize = iprot.readI32();
          struct.setPageSizeIsSet(true);
        }
        if (incoming.get(3)) {
          struct.pageNum = iprot.readI32();
          struct.setPageNumIsSet(true);
        }
        if (incoming.get(4)) {
          struct.keyword = iprot.readString();
          struct.setKeywordIsSet(true);
        }
        if (incoming.get(5)) {
          struct.filter = iprot.readI32();
          struct.setFilterIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRanking_result implements org.apache.thrift.TBase<queryAwardRanking_result, queryAwardRanking_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRanking_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRanking_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRanking_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRanking_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRanking_result.class, metaDataMap);
    }

    public queryAwardRanking_result() {
    }

    public queryAwardRanking_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRanking_result(queryAwardRanking_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public queryAwardRanking_result deepCopy() {
      return new queryAwardRanking_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public queryAwardRanking_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRanking_result)
        return this.equals((queryAwardRanking_result)that);
      return false;
    }

    public boolean equals(queryAwardRanking_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRanking_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("queryAwardRanking_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRanking_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_resultStandardScheme getScheme() {
        return new queryAwardRanking_resultStandardScheme();
      }
    }

    private static class queryAwardRanking_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRanking_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRanking_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_resultTupleScheme getScheme() {
        return new queryAwardRanking_resultTupleScheme();
      }
    }

    private static class queryAwardRanking_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRanking_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRankingInWx_args implements org.apache.thrift.TBase<queryAwardRankingInWx_args, queryAwardRankingInWx_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRankingInWx_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRankingInWx_args");

    private static final org.apache.thrift.protocol.TField COMPANY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("companyIds", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TIMESPAN_FIELD_DESC = new org.apache.thrift.protocol.TField("timespan", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField EMPLOYEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeId", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRankingInWx_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRankingInWx_argsTupleSchemeFactory();

    public java.util.List<java.lang.Integer> companyIds; // required
    public java.lang.String timespan; // required
    public int employeeId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_IDS((short)1, "companyIds"),
      TIMESPAN((short)2, "timespan"),
      EMPLOYEE_ID((short)3, "employeeId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_IDS
            return COMPANY_IDS;
          case 2: // TIMESPAN
            return TIMESPAN;
          case 3: // EMPLOYEE_ID
            return EMPLOYEE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __EMPLOYEEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_IDS, new org.apache.thrift.meta_data.FieldMetaData("companyIds", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                      new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      tmpMap.put(_Fields.TIMESPAN, new org.apache.thrift.meta_data.FieldMetaData("timespan", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EMPLOYEE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeeId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRankingInWx_args.class, metaDataMap);
    }

    public queryAwardRankingInWx_args() {
    }

    public queryAwardRankingInWx_args(
            java.util.List<java.lang.Integer> companyIds,
            java.lang.String timespan,
            int employeeId)
    {
      this();
      this.companyIds = companyIds;
      this.timespan = timespan;
      this.employeeId = employeeId;
      setEmployeeIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRankingInWx_args(queryAwardRankingInWx_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyIds()) {
        java.util.List<java.lang.Integer> __this__companyIds = new java.util.ArrayList<java.lang.Integer>(other.companyIds);
        this.companyIds = __this__companyIds;
      }
      if (other.isSetTimespan()) {
        this.timespan = other.timespan;
      }
      this.employeeId = other.employeeId;
    }

    public queryAwardRankingInWx_args deepCopy() {
      return new queryAwardRankingInWx_args(this);
    }

    @Override
    public void clear() {
      this.companyIds = null;
      this.timespan = null;
      setEmployeeIdIsSet(false);
      this.employeeId = 0;
    }

    public int getCompanyIdsSize() {
      return (this.companyIds == null) ? 0 : this.companyIds.size();
    }

    public java.util.Iterator<java.lang.Integer> getCompanyIdsIterator() {
      return (this.companyIds == null) ? null : this.companyIds.iterator();
    }

    public void addToCompanyIds(int elem) {
      if (this.companyIds == null) {
        this.companyIds = new java.util.ArrayList<java.lang.Integer>();
      }
      this.companyIds.add(elem);
    }

    public java.util.List<java.lang.Integer> getCompanyIds() {
      return this.companyIds;
    }

    public queryAwardRankingInWx_args setCompanyIds(java.util.List<java.lang.Integer> companyIds) {
      this.companyIds = companyIds;
      return this;
    }

    public void unsetCompanyIds() {
      this.companyIds = null;
    }

    /** Returns true if field companyIds is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyIds() {
      return this.companyIds != null;
    }

    public void setCompanyIdsIsSet(boolean value) {
      if (!value) {
        this.companyIds = null;
      }
    }

    public java.lang.String getTimespan() {
      return this.timespan;
    }

    public queryAwardRankingInWx_args setTimespan(java.lang.String timespan) {
      this.timespan = timespan;
      return this;
    }

    public void unsetTimespan() {
      this.timespan = null;
    }

    /** Returns true if field timespan is set (has been assigned a value) and false otherwise */
    public boolean isSetTimespan() {
      return this.timespan != null;
    }

    public void setTimespanIsSet(boolean value) {
      if (!value) {
        this.timespan = null;
      }
    }

    public int getEmployeeId() {
      return this.employeeId;
    }

    public queryAwardRankingInWx_args setEmployeeId(int employeeId) {
      this.employeeId = employeeId;
      setEmployeeIdIsSet(true);
      return this;
    }

    public void unsetEmployeeId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
    }

    /** Returns true if field employeeId is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
    }

    public void setEmployeeIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case COMPANY_IDS:
          if (value == null) {
            unsetCompanyIds();
          } else {
            setCompanyIds((java.util.List<java.lang.Integer>)value);
          }
          break;

        case TIMESPAN:
          if (value == null) {
            unsetTimespan();
          } else {
            setTimespan((java.lang.String)value);
          }
          break;

        case EMPLOYEE_ID:
          if (value == null) {
            unsetEmployeeId();
          } else {
            setEmployeeId((java.lang.Integer)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case COMPANY_IDS:
          return getCompanyIds();

        case TIMESPAN:
          return getTimespan();

        case EMPLOYEE_ID:
          return getEmployeeId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case COMPANY_IDS:
          return isSetCompanyIds();
        case TIMESPAN:
          return isSetTimespan();
        case EMPLOYEE_ID:
          return isSetEmployeeId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRankingInWx_args)
        return this.equals((queryAwardRankingInWx_args)that);
      return false;
    }

    public boolean equals(queryAwardRankingInWx_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyIds = true && this.isSetCompanyIds();
      boolean that_present_companyIds = true && that.isSetCompanyIds();
      if (this_present_companyIds || that_present_companyIds) {
        if (!(this_present_companyIds && that_present_companyIds))
          return false;
        if (!this.companyIds.equals(that.companyIds))
          return false;
      }

      boolean this_present_timespan = true && this.isSetTimespan();
      boolean that_present_timespan = true && that.isSetTimespan();
      if (this_present_timespan || that_present_timespan) {
        if (!(this_present_timespan && that_present_timespan))
          return false;
        if (!this.timespan.equals(that.timespan))
          return false;
      }

      boolean this_present_employeeId = true;
      boolean that_present_employeeId = true;
      if (this_present_employeeId || that_present_employeeId) {
        if (!(this_present_employeeId && that_present_employeeId))
          return false;
        if (this.employeeId != that.employeeId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyIds()) ? 131071 : 524287);
      if (isSetCompanyIds())
        hashCode = hashCode * 8191 + companyIds.hashCode();

      hashCode = hashCode * 8191 + ((isSetTimespan()) ? 131071 : 524287);
      if (isSetTimespan())
        hashCode = hashCode * 8191 + timespan.hashCode();

      hashCode = hashCode * 8191 + employeeId;

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRankingInWx_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCompanyIds()).compareTo(other.isSetCompanyIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyIds, other.companyIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTimespan()).compareTo(other.isSetTimespan());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimespan()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timespan, other.timespan);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEmployeeId()).compareTo(other.isSetEmployeeId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployeeId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeId, other.employeeId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("queryAwardRankingInWx_args(");
      boolean first = true;

      sb.append("companyIds:");
      if (this.companyIds == null) {
        sb.append("null");
      } else {
        sb.append(this.companyIds);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("timespan:");
      if (this.timespan == null) {
        sb.append("null");
      } else {
        sb.append(this.timespan);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("employeeId:");
      sb.append(this.employeeId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRankingInWx_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_argsStandardScheme getScheme() {
        return new queryAwardRankingInWx_argsStandardScheme();
      }
    }

    private static class queryAwardRankingInWx_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRankingInWx_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.companyIds = new java.util.ArrayList<java.lang.Integer>(_list8.size);
                  int _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = iprot.readI32();
                    struct.companyIds.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setCompanyIdsIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TIMESPAN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.timespan = iprot.readString();
                struct.setTimespanIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // EMPLOYEE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.employeeId = iprot.readI32();
                struct.setEmployeeIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyIds != null) {
          oprot.writeFieldBegin(COMPANY_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.companyIds.size()));
            for (int _iter11 : struct.companyIds)
            {
              oprot.writeI32(_iter11);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.timespan != null) {
          oprot.writeFieldBegin(TIMESPAN_FIELD_DESC);
          oprot.writeString(struct.timespan);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(EMPLOYEE_ID_FIELD_DESC);
        oprot.writeI32(struct.employeeId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRankingInWx_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_argsTupleScheme getScheme() {
        return new queryAwardRankingInWx_argsTupleScheme();
      }
    }

    private static class queryAwardRankingInWx_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRankingInWx_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyIds()) {
          optionals.set(0);
        }
        if (struct.isSetTimespan()) {
          optionals.set(1);
        }
        if (struct.isSetEmployeeId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetCompanyIds()) {
          {
            oprot.writeI32(struct.companyIds.size());
            for (int _iter12 : struct.companyIds)
            {
              oprot.writeI32(_iter12);
            }
          }
        }
        if (struct.isSetTimespan()) {
          oprot.writeString(struct.timespan);
        }
        if (struct.isSetEmployeeId()) {
          oprot.writeI32(struct.employeeId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.companyIds = new java.util.ArrayList<java.lang.Integer>(_list13.size);
            int _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = iprot.readI32();
              struct.companyIds.add(_elem14);
            }
          }
          struct.setCompanyIdsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.timespan = iprot.readString();
          struct.setTimespanIsSet(true);
        }
        if (incoming.get(2)) {
          struct.employeeId = iprot.readI32();
          struct.setEmployeeIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRankingInWx_result implements org.apache.thrift.TBase<queryAwardRankingInWx_result, queryAwardRankingInWx_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRankingInWx_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRankingInWx_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRankingInWx_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRankingInWx_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRankingInWx_result.class, metaDataMap);
    }

    public queryAwardRankingInWx_result() {
    }

    public queryAwardRankingInWx_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRankingInWx_result(queryAwardRankingInWx_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public queryAwardRankingInWx_result deepCopy() {
      return new queryAwardRankingInWx_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public queryAwardRankingInWx_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRankingInWx_result)
        return this.equals((queryAwardRankingInWx_result)that);
      return false;
    }

    public boolean equals(queryAwardRankingInWx_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRankingInWx_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("queryAwardRankingInWx_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRankingInWx_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_resultStandardScheme getScheme() {
        return new queryAwardRankingInWx_resultStandardScheme();
      }
    }

    private static class queryAwardRankingInWx_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRankingInWx_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRankingInWx_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_resultTupleScheme getScheme() {
        return new queryAwardRankingInWx_resultTupleScheme();
      }
    }

    private static class queryAwardRankingInWx_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRankingInWx_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateEmployeeAwards_args implements org.apache.thrift.TBase<updateEmployeeAwards_args, updateEmployeeAwards_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateEmployeeAwards_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateEmployeeAwards_args");

    private static final org.apache.thrift.protocol.TField EMPLOYEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeId", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateEmployeeAwards_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateEmployeeAwards_argsTupleSchemeFactory();

    public java.util.List<java.lang.Integer> employeeId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EMPLOYEE_ID((short)1, "employeeId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EMPLOYEE_ID
            return EMPLOYEE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EMPLOYEE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeeId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                      new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateEmployeeAwards_args.class, metaDataMap);
    }

    public updateEmployeeAwards_args() {
    }

    public updateEmployeeAwards_args(
            java.util.List<java.lang.Integer> employeeId)
    {
      this();
      this.employeeId = employeeId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateEmployeeAwards_args(updateEmployeeAwards_args other) {
      if (other.isSetEmployeeId()) {
        java.util.List<java.lang.Integer> __this__employeeId = new java.util.ArrayList<java.lang.Integer>(other.employeeId);
        this.employeeId = __this__employeeId;
      }
    }

    public updateEmployeeAwards_args deepCopy() {
      return new updateEmployeeAwards_args(this);
    }

    @Override
    public void clear() {
      this.employeeId = null;
    }

    public int getEmployeeIdSize() {
      return (this.employeeId == null) ? 0 : this.employeeId.size();
    }

    public java.util.Iterator<java.lang.Integer> getEmployeeIdIterator() {
      return (this.employeeId == null) ? null : this.employeeId.iterator();
    }

    public void addToEmployeeId(int elem) {
      if (this.employeeId == null) {
        this.employeeId = new java.util.ArrayList<java.lang.Integer>();
      }
      this.employeeId.add(elem);
    }

    public java.util.List<java.lang.Integer> getEmployeeId() {
      return this.employeeId;
    }

    public updateEmployeeAwards_args setEmployeeId(java.util.List<java.lang.Integer> employeeId) {
      this.employeeId = employeeId;
      return this;
    }

    public void unsetEmployeeId() {
      this.employeeId = null;
    }

    /** Returns true if field employeeId is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeId() {
      return this.employeeId != null;
    }

    public void setEmployeeIdIsSet(boolean value) {
      if (!value) {
        this.employeeId = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case EMPLOYEE_ID:
          if (value == null) {
            unsetEmployeeId();
          } else {
            setEmployeeId((java.util.List<java.lang.Integer>)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case EMPLOYEE_ID:
          return getEmployeeId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case EMPLOYEE_ID:
          return isSetEmployeeId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateEmployeeAwards_args)
        return this.equals((updateEmployeeAwards_args)that);
      return false;
    }

    public boolean equals(updateEmployeeAwards_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_employeeId = true && this.isSetEmployeeId();
      boolean that_present_employeeId = true && that.isSetEmployeeId();
      if (this_present_employeeId || that_present_employeeId) {
        if (!(this_present_employeeId && that_present_employeeId))
          return false;
        if (!this.employeeId.equals(that.employeeId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetEmployeeId()) ? 131071 : 524287);
      if (isSetEmployeeId())
        hashCode = hashCode * 8191 + employeeId.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateEmployeeAwards_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetEmployeeId()).compareTo(other.isSetEmployeeId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployeeId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeId, other.employeeId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateEmployeeAwards_args(");
      boolean first = true;

      sb.append("employeeId:");
      if (this.employeeId == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateEmployeeAwards_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateEmployeeAwards_argsStandardScheme getScheme() {
        return new updateEmployeeAwards_argsStandardScheme();
      }
    }

    private static class updateEmployeeAwards_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateEmployeeAwards_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateEmployeeAwards_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // EMPLOYEE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                  struct.employeeId = new java.util.ArrayList<java.lang.Integer>(_list16.size);
                  int _elem17;
                  for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                  {
                    _elem17 = iprot.readI32();
                    struct.employeeId.add(_elem17);
                  }
                  iprot.readListEnd();
                }
                struct.setEmployeeIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateEmployeeAwards_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.employeeId != null) {
          oprot.writeFieldBegin(EMPLOYEE_ID_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.employeeId.size()));
            for (int _iter19 : struct.employeeId)
            {
              oprot.writeI32(_iter19);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateEmployeeAwards_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateEmployeeAwards_argsTupleScheme getScheme() {
        return new updateEmployeeAwards_argsTupleScheme();
      }
    }

    private static class updateEmployeeAwards_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateEmployeeAwards_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateEmployeeAwards_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetEmployeeId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEmployeeId()) {
          {
            oprot.writeI32(struct.employeeId.size());
            for (int _iter20 : struct.employeeId)
            {
              oprot.writeI32(_iter20);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateEmployeeAwards_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.employeeId = new java.util.ArrayList<java.lang.Integer>(_list21.size);
            int _elem22;
            for (int _i23 = 0; _i23 < _list21.size; ++_i23)
            {
              _elem22 = iprot.readI32();
              struct.employeeId.add(_elem22);
            }
          }
          struct.setEmployeeIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateEmployeeAwards_result implements org.apache.thrift.TBase<updateEmployeeAwards_result, updateEmployeeAwards_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateEmployeeAwards_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateEmployeeAwards_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateEmployeeAwards_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateEmployeeAwards_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateEmployeeAwards_result.class, metaDataMap);
    }

    public updateEmployeeAwards_result() {
    }

    public updateEmployeeAwards_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateEmployeeAwards_result(updateEmployeeAwards_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public updateEmployeeAwards_result deepCopy() {
      return new updateEmployeeAwards_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public updateEmployeeAwards_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateEmployeeAwards_result)
        return this.equals((updateEmployeeAwards_result)that);
      return false;
    }

    public boolean equals(updateEmployeeAwards_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateEmployeeAwards_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateEmployeeAwards_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateEmployeeAwards_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateEmployeeAwards_resultStandardScheme getScheme() {
        return new updateEmployeeAwards_resultStandardScheme();
      }
    }

    private static class updateEmployeeAwards_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateEmployeeAwards_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateEmployeeAwards_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateEmployeeAwards_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateEmployeeAwards_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateEmployeeAwards_resultTupleScheme getScheme() {
        return new updateEmployeeAwards_resultTupleScheme();
      }
    }

    private static class updateEmployeeAwards_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateEmployeeAwards_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateEmployeeAwards_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateEmployeeAwards_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deleteEmployeeDO_args implements org.apache.thrift.TBase<deleteEmployeeDO_args, deleteEmployeeDO_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteEmployeeDO_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteEmployeeDO_args");

    private static final org.apache.thrift.protocol.TField EMPLOYEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeId", org.apache.thrift.protocol.TType.LIST, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteEmployeeDO_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteEmployeeDO_argsTupleSchemeFactory();

    public java.util.List<java.lang.Integer> employeeId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      EMPLOYEE_ID((short)1, "employeeId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // EMPLOYEE_ID
            return EMPLOYEE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.EMPLOYEE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeeId", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
                      new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteEmployeeDO_args.class, metaDataMap);
    }

    public deleteEmployeeDO_args() {
    }

    public deleteEmployeeDO_args(
            java.util.List<java.lang.Integer> employeeId)
    {
      this();
      this.employeeId = employeeId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteEmployeeDO_args(deleteEmployeeDO_args other) {
      if (other.isSetEmployeeId()) {
        java.util.List<java.lang.Integer> __this__employeeId = new java.util.ArrayList<java.lang.Integer>(other.employeeId);
        this.employeeId = __this__employeeId;
      }
    }

    public deleteEmployeeDO_args deepCopy() {
      return new deleteEmployeeDO_args(this);
    }

    @Override
    public void clear() {
      this.employeeId = null;
    }

    public int getEmployeeIdSize() {
      return (this.employeeId == null) ? 0 : this.employeeId.size();
    }

    public java.util.Iterator<java.lang.Integer> getEmployeeIdIterator() {
      return (this.employeeId == null) ? null : this.employeeId.iterator();
    }

    public void addToEmployeeId(int elem) {
      if (this.employeeId == null) {
        this.employeeId = new java.util.ArrayList<java.lang.Integer>();
      }
      this.employeeId.add(elem);
    }

    public java.util.List<java.lang.Integer> getEmployeeId() {
      return this.employeeId;
    }

    public deleteEmployeeDO_args setEmployeeId(java.util.List<java.lang.Integer> employeeId) {
      this.employeeId = employeeId;
      return this;
    }

    public void unsetEmployeeId() {
      this.employeeId = null;
    }

    /** Returns true if field employeeId is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeId() {
      return this.employeeId != null;
    }

    public void setEmployeeIdIsSet(boolean value) {
      if (!value) {
        this.employeeId = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case EMPLOYEE_ID:
          if (value == null) {
            unsetEmployeeId();
          } else {
            setEmployeeId((java.util.List<java.lang.Integer>)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case EMPLOYEE_ID:
          return getEmployeeId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case EMPLOYEE_ID:
          return isSetEmployeeId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteEmployeeDO_args)
        return this.equals((deleteEmployeeDO_args)that);
      return false;
    }

    public boolean equals(deleteEmployeeDO_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_employeeId = true && this.isSetEmployeeId();
      boolean that_present_employeeId = true && that.isSetEmployeeId();
      if (this_present_employeeId || that_present_employeeId) {
        if (!(this_present_employeeId && that_present_employeeId))
          return false;
        if (!this.employeeId.equals(that.employeeId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetEmployeeId()) ? 131071 : 524287);
      if (isSetEmployeeId())
        hashCode = hashCode * 8191 + employeeId.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(deleteEmployeeDO_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetEmployeeId()).compareTo(other.isSetEmployeeId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployeeId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeId, other.employeeId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteEmployeeDO_args(");
      boolean first = true;

      sb.append("employeeId:");
      if (this.employeeId == null) {
        sb.append("null");
      } else {
        sb.append(this.employeeId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteEmployeeDO_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deleteEmployeeDO_argsStandardScheme getScheme() {
        return new deleteEmployeeDO_argsStandardScheme();
      }
    }

    private static class deleteEmployeeDO_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteEmployeeDO_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteEmployeeDO_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 1: // EMPLOYEE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                  struct.employeeId = new java.util.ArrayList<java.lang.Integer>(_list24.size);
                  int _elem25;
                  for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                  {
                    _elem25 = iprot.readI32();
                    struct.employeeId.add(_elem25);
                  }
                  iprot.readListEnd();
                }
                struct.setEmployeeIdIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteEmployeeDO_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.employeeId != null) {
          oprot.writeFieldBegin(EMPLOYEE_ID_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.employeeId.size()));
            for (int _iter27 : struct.employeeId)
            {
              oprot.writeI32(_iter27);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteEmployeeDO_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deleteEmployeeDO_argsTupleScheme getScheme() {
        return new deleteEmployeeDO_argsTupleScheme();
      }
    }

    private static class deleteEmployeeDO_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteEmployeeDO_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteEmployeeDO_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetEmployeeId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetEmployeeId()) {
          {
            oprot.writeI32(struct.employeeId.size());
            for (int _iter28 : struct.employeeId)
            {
              oprot.writeI32(_iter28);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteEmployeeDO_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.employeeId = new java.util.ArrayList<java.lang.Integer>(_list29.size);
            int _elem30;
            for (int _i31 = 0; _i31 < _list29.size; ++_i31)
            {
              _elem30 = iprot.readI32();
              struct.employeeId.add(_elem30);
            }
          }
          struct.setEmployeeIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deleteEmployeeDO_result implements org.apache.thrift.TBase<deleteEmployeeDO_result, deleteEmployeeDO_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteEmployeeDO_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteEmployeeDO_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deleteEmployeeDO_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deleteEmployeeDO_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT,
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteEmployeeDO_result.class, metaDataMap);
    }

    public deleteEmployeeDO_result() {
    }

    public deleteEmployeeDO_result(
            com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteEmployeeDO_result(deleteEmployeeDO_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public deleteEmployeeDO_result deepCopy() {
      return new deleteEmployeeDO_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public deleteEmployeeDO_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
        case SUCCESS:
          if (value == null) {
            unsetSuccess();
          } else {
            setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
          }
          break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
        case SUCCESS:
          return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
        case SUCCESS:
          return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteEmployeeDO_result)
        return this.equals((deleteEmployeeDO_result)that);
      return false;
    }

    public boolean equals(deleteEmployeeDO_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(deleteEmployeeDO_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deleteEmployeeDO_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteEmployeeDO_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deleteEmployeeDO_resultStandardScheme getScheme() {
        return new deleteEmployeeDO_resultStandardScheme();
      }
    }

    private static class deleteEmployeeDO_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<deleteEmployeeDO_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteEmployeeDO_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else {
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteEmployeeDO_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteEmployeeDO_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deleteEmployeeDO_resultTupleScheme getScheme() {
        return new deleteEmployeeDO_resultTupleScheme();
      }
    }

    private static class deleteEmployeeDO_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<deleteEmployeeDO_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteEmployeeDO_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteEmployeeDO_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
