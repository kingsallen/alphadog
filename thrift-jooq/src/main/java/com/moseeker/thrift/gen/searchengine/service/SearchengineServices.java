/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.searchengine.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-02")
public class SearchengineServices {

  public interface Iface {

    public com.moseeker.thrift.gen.common.struct.Response query(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response updateposition(String position, int id) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRanking(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum) throws org.apache.thrift.TException;

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRankingInWx(java.util.List<Integer> companyIds, String timespan, int employeeId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void query(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void updateposition(String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void queryAwardRanking(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

    public void queryAwardRankingInWx(java.util.List<Integer> companyIds, String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public com.moseeker.thrift.gen.common.struct.Response query(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom) throws org.apache.thrift.TException
    {
      send_query(keywords, cities, industries, occupations, scale, employment_type, candidate_source, experience, degree, salary, company_name, page_from, page_size, child_company_name, department, order_by_priority, custom);
      return recv_query();
    }

    public void send_query(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom) throws org.apache.thrift.TException
    {
      query_args args = new query_args();
      args.setKeywords(keywords);
      args.setCities(cities);
      args.setIndustries(industries);
      args.setOccupations(occupations);
      args.setScale(scale);
      args.setEmployment_type(employment_type);
      args.setCandidate_source(candidate_source);
      args.setExperience(experience);
      args.setDegree(degree);
      args.setSalary(salary);
      args.setCompany_name(company_name);
      args.setPage_from(page_from);
      args.setPage_size(page_size);
      args.setChild_company_name(child_company_name);
      args.setDepartment(department);
      args.setOrder_by_priority(order_by_priority);
      args.setCustom(custom);
      sendBase("query", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_query() throws org.apache.thrift.TException
    {
      query_result result = new query_result();
      receiveBase(result, "query");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "query failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response updateposition(String position, int id) throws org.apache.thrift.TException
    {
      send_updateposition(position, id);
      return recv_updateposition();
    }

    public void send_updateposition(String position, int id) throws org.apache.thrift.TException
    {
      updateposition_args args = new updateposition_args();
      args.setPosition(position);
      args.setId(id);
      sendBase("updateposition", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_updateposition() throws org.apache.thrift.TException
    {
      updateposition_result result = new updateposition_result();
      receiveBase(result, "updateposition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateposition failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRanking(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum) throws org.apache.thrift.TException
    {
      send_queryAwardRanking(companyIds, timespan, pageSize, pageNum);
      return recv_queryAwardRanking();
    }

    public void send_queryAwardRanking(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum) throws org.apache.thrift.TException
    {
      queryAwardRanking_args args = new queryAwardRanking_args();
      args.setCompanyIds(companyIds);
      args.setTimespan(timespan);
      args.setPageSize(pageSize);
      args.setPageNum(pageNum);
      sendBase("queryAwardRanking", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_queryAwardRanking() throws org.apache.thrift.TException
    {
      queryAwardRanking_result result = new queryAwardRanking_result();
      receiveBase(result, "queryAwardRanking");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryAwardRanking failed: unknown result");
    }

    public com.moseeker.thrift.gen.common.struct.Response queryAwardRankingInWx(java.util.List<Integer> companyIds, String timespan, int employeeId) throws org.apache.thrift.TException
    {
      send_queryAwardRankingInWx(companyIds, timespan, employeeId);
      return recv_queryAwardRankingInWx();
    }

    public void send_queryAwardRankingInWx(java.util.List<Integer> companyIds, String timespan, int employeeId) throws org.apache.thrift.TException
    {
      queryAwardRankingInWx_args args = new queryAwardRankingInWx_args();
      args.setCompanyIds(companyIds);
      args.setTimespan(timespan);
      args.setEmployeeId(employeeId);
      sendBase("queryAwardRankingInWx", args);
    }

    public com.moseeker.thrift.gen.common.struct.Response recv_queryAwardRankingInWx() throws org.apache.thrift.TException
    {
      queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
      receiveBase(result, "queryAwardRankingInWx");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryAwardRankingInWx failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void query(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      query_call method_call = new query_call(keywords, cities, industries, occupations, scale, employment_type, candidate_source, experience, degree, salary, company_name, page_from, page_size, child_company_name, department, order_by_priority, custom, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class query_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private String keywords;
      private String cities;
      private String industries;
      private String occupations;
      private String scale;
      private String employment_type;
      private String candidate_source;
      private String experience;
      private String degree;
      private String salary;
      private String company_name;
      private int page_from;
      private int page_size;
      private String child_company_name;
      private String department;
      private boolean order_by_priority;
      private String custom;
      public query_call(String keywords, String cities, String industries, String occupations, String scale, String employment_type, String candidate_source, String experience, String degree, String salary, String company_name, int page_from, int page_size, String child_company_name, String department, boolean order_by_priority, String custom, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.keywords = keywords;
        this.cities = cities;
        this.industries = industries;
        this.occupations = occupations;
        this.scale = scale;
        this.employment_type = employment_type;
        this.candidate_source = candidate_source;
        this.experience = experience;
        this.degree = degree;
        this.salary = salary;
        this.company_name = company_name;
        this.page_from = page_from;
        this.page_size = page_size;
        this.child_company_name = child_company_name;
        this.department = department;
        this.order_by_priority = order_by_priority;
        this.custom = custom;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("query", org.apache.thrift.protocol.TMessageType.CALL, 0));
        query_args args = new query_args();
        args.setKeywords(keywords);
        args.setCities(cities);
        args.setIndustries(industries);
        args.setOccupations(occupations);
        args.setScale(scale);
        args.setEmployment_type(employment_type);
        args.setCandidate_source(candidate_source);
        args.setExperience(experience);
        args.setDegree(degree);
        args.setSalary(salary);
        args.setCompany_name(company_name);
        args.setPage_from(page_from);
        args.setPage_size(page_size);
        args.setChild_company_name(child_company_name);
        args.setDepartment(department);
        args.setOrder_by_priority(order_by_priority);
        args.setCustom(custom);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_query();
      }
    }

    public void updateposition(String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateposition_call method_call = new updateposition_call(position, id, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateposition_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private String position;
      private int id;
      public updateposition_call(String position, int id, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.position = position;
        this.id = id;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateposition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateposition_args args = new updateposition_args();
        args.setPosition(position);
        args.setId(id);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateposition();
      }
    }

    public void queryAwardRanking(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryAwardRanking_call method_call = new queryAwardRanking_call(companyIds, timespan, pageSize, pageNum, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryAwardRanking_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<Integer> companyIds;
      private String timespan;
      private int pageSize;
      private int pageNum;
      public queryAwardRanking_call(java.util.List<Integer> companyIds, String timespan, int pageSize, int pageNum, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyIds = companyIds;
        this.timespan = timespan;
        this.pageSize = pageSize;
        this.pageNum = pageNum;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryAwardRanking", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryAwardRanking_args args = new queryAwardRanking_args();
        args.setCompanyIds(companyIds);
        args.setTimespan(timespan);
        args.setPageSize(pageSize);
        args.setPageNum(pageNum);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryAwardRanking();
      }
    }

    public void queryAwardRankingInWx(java.util.List<Integer> companyIds, String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryAwardRankingInWx_call method_call = new queryAwardRankingInWx_call(companyIds, timespan, employeeId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryAwardRankingInWx_call extends org.apache.thrift.async.TAsyncMethodCall<com.moseeker.thrift.gen.common.struct.Response> {
      private java.util.List<Integer> companyIds;
      private String timespan;
      private int employeeId;
      public queryAwardRankingInWx_call(java.util.List<Integer> companyIds, String timespan, int employeeId, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.companyIds = companyIds;
        this.timespan = timespan;
        this.employeeId = employeeId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryAwardRankingInWx", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryAwardRankingInWx_args args = new queryAwardRankingInWx_args();
        args.setCompanyIds(companyIds);
        args.setTimespan(timespan);
        args.setEmployeeId(employeeId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.moseeker.thrift.gen.common.struct.Response getResult() throws org.apache.thrift.TException {
        if (getState() != State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryAwardRankingInWx();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("query", new query());
      processMap.put("updateposition", new updateposition());
      processMap.put("queryAwardRanking", new queryAwardRanking());
      processMap.put("queryAwardRankingInWx", new queryAwardRankingInWx());
      return processMap;
    }

    public static class query<I extends Iface> extends org.apache.thrift.ProcessFunction<I, query_args> {
      public query() {
        super("query");
      }

      public query_args getEmptyArgsInstance() {
        return new query_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public query_result getResult(I iface, query_args args) throws org.apache.thrift.TException {
        query_result result = new query_result();
        result.success = iface.query(args.keywords, args.cities, args.industries, args.occupations, args.scale, args.employment_type, args.candidate_source, args.experience, args.degree, args.salary, args.company_name, args.page_from, args.page_size, args.child_company_name, args.department, args.order_by_priority, args.custom);
        return result;
      }
    }

    public static class updateposition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateposition_args> {
      public updateposition() {
        super("updateposition");
      }

      public updateposition_args getEmptyArgsInstance() {
        return new updateposition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public updateposition_result getResult(I iface, updateposition_args args) throws org.apache.thrift.TException {
        updateposition_result result = new updateposition_result();
        result.success = iface.updateposition(args.position, args.id);
        return result;
      }
    }

    public static class queryAwardRanking<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryAwardRanking_args> {
      public queryAwardRanking() {
        super("queryAwardRanking");
      }

      public queryAwardRanking_args getEmptyArgsInstance() {
        return new queryAwardRanking_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryAwardRanking_result getResult(I iface, queryAwardRanking_args args) throws org.apache.thrift.TException {
        queryAwardRanking_result result = new queryAwardRanking_result();
        result.success = iface.queryAwardRanking(args.companyIds, args.timespan, args.pageSize, args.pageNum);
        return result;
      }
    }

    public static class queryAwardRankingInWx<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryAwardRankingInWx_args> {
      public queryAwardRankingInWx() {
        super("queryAwardRankingInWx");
      }

      public queryAwardRankingInWx_args getEmptyArgsInstance() {
        return new queryAwardRankingInWx_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryAwardRankingInWx_result getResult(I iface, queryAwardRankingInWx_args args) throws org.apache.thrift.TException {
        queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
        result.success = iface.queryAwardRankingInWx(args.companyIds, args.timespan, args.employeeId);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("query", new query());
      processMap.put("updateposition", new updateposition());
      processMap.put("queryAwardRanking", new queryAwardRanking());
      processMap.put("queryAwardRankingInWx", new queryAwardRankingInWx());
      return processMap;
    }

    public static class query<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, query_args, com.moseeker.thrift.gen.common.struct.Response> {
      public query() {
        super("query");
      }

      public query_args getEmptyArgsInstance() {
        return new query_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            query_result result = new query_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            query_result result = new query_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, query_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.query(args.keywords, args.cities, args.industries, args.occupations, args.scale, args.employment_type, args.candidate_source, args.experience, args.degree, args.salary, args.company_name, args.page_from, args.page_size, args.child_company_name, args.department, args.order_by_priority, args.custom,resultHandler);
      }
    }

    public static class updateposition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateposition_args, com.moseeker.thrift.gen.common.struct.Response> {
      public updateposition() {
        super("updateposition");
      }

      public updateposition_args getEmptyArgsInstance() {
        return new updateposition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            updateposition_result result = new updateposition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            updateposition_result result = new updateposition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateposition_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.updateposition(args.position, args.id,resultHandler);
      }
    }

    public static class queryAwardRanking<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryAwardRanking_args, com.moseeker.thrift.gen.common.struct.Response> {
      public queryAwardRanking() {
        super("queryAwardRanking");
      }

      public queryAwardRanking_args getEmptyArgsInstance() {
        return new queryAwardRanking_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            queryAwardRanking_result result = new queryAwardRanking_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            queryAwardRanking_result result = new queryAwardRanking_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryAwardRanking_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.queryAwardRanking(args.companyIds, args.timespan, args.pageSize, args.pageNum,resultHandler);
      }
    }

    public static class queryAwardRankingInWx<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryAwardRankingInWx_args, com.moseeker.thrift.gen.common.struct.Response> {
      public queryAwardRankingInWx() {
        super("queryAwardRankingInWx");
      }

      public queryAwardRankingInWx_args getEmptyArgsInstance() {
        return new queryAwardRankingInWx_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response>() { 
          public void onComplete(com.moseeker.thrift.gen.common.struct.Response o) {
            queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            queryAwardRankingInWx_result result = new queryAwardRankingInWx_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryAwardRankingInWx_args args, org.apache.thrift.async.AsyncMethodCallback<com.moseeker.thrift.gen.common.struct.Response> resultHandler) throws org.apache.thrift.TException {
        iface.queryAwardRankingInWx(args.companyIds, args.timespan, args.employeeId,resultHandler);
      }
    }

  }

  public static class query_args implements org.apache.thrift.TBase<query_args, query_args._Fields>, java.io.Serializable, Cloneable, Comparable<query_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("query_args");

    private static final org.apache.thrift.protocol.TField KEYWORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("keywords", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField CITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("cities", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField INDUSTRIES_FIELD_DESC = new org.apache.thrift.protocol.TField("industries", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField OCCUPATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("occupations", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField EMPLOYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("employment_type", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField CANDIDATE_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("candidate_source", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField EXPERIENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("experience", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField DEGREE_FIELD_DESC = new org.apache.thrift.protocol.TField("degree", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField SALARY_FIELD_DESC = new org.apache.thrift.protocol.TField("salary", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("company_name", org.apache.thrift.protocol.TType.STRING, (short)11);
    private static final org.apache.thrift.protocol.TField PAGE_FROM_FIELD_DESC = new org.apache.thrift.protocol.TField("page_from", org.apache.thrift.protocol.TType.I32, (short)12);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("page_size", org.apache.thrift.protocol.TType.I32, (short)13);
    private static final org.apache.thrift.protocol.TField CHILD_COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("child_company_name", org.apache.thrift.protocol.TType.STRING, (short)14);
    private static final org.apache.thrift.protocol.TField DEPARTMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("department", org.apache.thrift.protocol.TType.STRING, (short)15);
    private static final org.apache.thrift.protocol.TField ORDER_BY_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("order_by_priority", org.apache.thrift.protocol.TType.BOOL, (short)16);
    private static final org.apache.thrift.protocol.TField CUSTOM_FIELD_DESC = new org.apache.thrift.protocol.TField("custom", org.apache.thrift.protocol.TType.STRING, (short)17);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new query_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new query_argsTupleSchemeFactory();

    public String keywords; // required
    public String cities; // required
    public String industries; // required
    public String occupations; // required
    public String scale; // required
    public String employment_type; // required
    public String candidate_source; // required
    public String experience; // required
    public String degree; // required
    public String salary; // required
    public String company_name; // required
    public int page_from; // required
    public int page_size; // required
    public String child_company_name; // required
    public String department; // required
    public boolean order_by_priority; // required
    public String custom; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      KEYWORDS((short)1, "keywords"),
      CITIES((short)2, "cities"),
      INDUSTRIES((short)3, "industries"),
      OCCUPATIONS((short)4, "occupations"),
      SCALE((short)5, "scale"),
      EMPLOYMENT_TYPE((short)6, "employment_type"),
      CANDIDATE_SOURCE((short)7, "candidate_source"),
      EXPERIENCE((short)8, "experience"),
      DEGREE((short)9, "degree"),
      SALARY((short)10, "salary"),
      COMPANY_NAME((short)11, "company_name"),
      PAGE_FROM((short)12, "page_from"),
      PAGE_SIZE((short)13, "page_size"),
      CHILD_COMPANY_NAME((short)14, "child_company_name"),
      DEPARTMENT((short)15, "department"),
      ORDER_BY_PRIORITY((short)16, "order_by_priority"),
      CUSTOM((short)17, "custom");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // KEYWORDS
            return KEYWORDS;
          case 2: // CITIES
            return CITIES;
          case 3: // INDUSTRIES
            return INDUSTRIES;
          case 4: // OCCUPATIONS
            return OCCUPATIONS;
          case 5: // SCALE
            return SCALE;
          case 6: // EMPLOYMENT_TYPE
            return EMPLOYMENT_TYPE;
          case 7: // CANDIDATE_SOURCE
            return CANDIDATE_SOURCE;
          case 8: // EXPERIENCE
            return EXPERIENCE;
          case 9: // DEGREE
            return DEGREE;
          case 10: // SALARY
            return SALARY;
          case 11: // COMPANY_NAME
            return COMPANY_NAME;
          case 12: // PAGE_FROM
            return PAGE_FROM;
          case 13: // PAGE_SIZE
            return PAGE_SIZE;
          case 14: // CHILD_COMPANY_NAME
            return CHILD_COMPANY_NAME;
          case 15: // DEPARTMENT
            return DEPARTMENT;
          case 16: // ORDER_BY_PRIORITY
            return ORDER_BY_PRIORITY;
          case 17: // CUSTOM
            return CUSTOM;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGE_FROM_ISSET_ID = 0;
    private static final int __PAGE_SIZE_ISSET_ID = 1;
    private static final int __ORDER_BY_PRIORITY_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.KEYWORDS, new org.apache.thrift.meta_data.FieldMetaData("keywords", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CITIES, new org.apache.thrift.meta_data.FieldMetaData("cities", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.INDUSTRIES, new org.apache.thrift.meta_data.FieldMetaData("industries", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.OCCUPATIONS, new org.apache.thrift.meta_data.FieldMetaData("occupations", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EMPLOYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("employment_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CANDIDATE_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("candidate_source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EXPERIENCE, new org.apache.thrift.meta_data.FieldMetaData("experience", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DEGREE, new org.apache.thrift.meta_data.FieldMetaData("degree", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.SALARY, new org.apache.thrift.meta_data.FieldMetaData("salary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("company_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE_FROM, new org.apache.thrift.meta_data.FieldMetaData("page_from", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("page_size", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.CHILD_COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("child_company_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DEPARTMENT, new org.apache.thrift.meta_data.FieldMetaData("department", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ORDER_BY_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("order_by_priority", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      tmpMap.put(_Fields.CUSTOM, new org.apache.thrift.meta_data.FieldMetaData("custom", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(query_args.class, metaDataMap);
    }

    public query_args() {
    }

    public query_args(
      String keywords,
      String cities,
      String industries,
      String occupations,
      String scale,
      String employment_type,
      String candidate_source,
      String experience,
      String degree,
      String salary,
      String company_name,
      int page_from,
      int page_size,
      String child_company_name,
      String department,
      boolean order_by_priority,
      String custom)
    {
      this();
      this.keywords = keywords;
      this.cities = cities;
      this.industries = industries;
      this.occupations = occupations;
      this.scale = scale;
      this.employment_type = employment_type;
      this.candidate_source = candidate_source;
      this.experience = experience;
      this.degree = degree;
      this.salary = salary;
      this.company_name = company_name;
      this.page_from = page_from;
      setPage_fromIsSet(true);
      this.page_size = page_size;
      setPage_sizeIsSet(true);
      this.child_company_name = child_company_name;
      this.department = department;
      this.order_by_priority = order_by_priority;
      setOrder_by_priorityIsSet(true);
      this.custom = custom;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public query_args(query_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetKeywords()) {
        this.keywords = other.keywords;
      }
      if (other.isSetCities()) {
        this.cities = other.cities;
      }
      if (other.isSetIndustries()) {
        this.industries = other.industries;
      }
      if (other.isSetOccupations()) {
        this.occupations = other.occupations;
      }
      if (other.isSetScale()) {
        this.scale = other.scale;
      }
      if (other.isSetEmployment_type()) {
        this.employment_type = other.employment_type;
      }
      if (other.isSetCandidate_source()) {
        this.candidate_source = other.candidate_source;
      }
      if (other.isSetExperience()) {
        this.experience = other.experience;
      }
      if (other.isSetDegree()) {
        this.degree = other.degree;
      }
      if (other.isSetSalary()) {
        this.salary = other.salary;
      }
      if (other.isSetCompany_name()) {
        this.company_name = other.company_name;
      }
      this.page_from = other.page_from;
      this.page_size = other.page_size;
      if (other.isSetChild_company_name()) {
        this.child_company_name = other.child_company_name;
      }
      if (other.isSetDepartment()) {
        this.department = other.department;
      }
      this.order_by_priority = other.order_by_priority;
      if (other.isSetCustom()) {
        this.custom = other.custom;
      }
    }

    public query_args deepCopy() {
      return new query_args(this);
    }

    @Override
    public void clear() {
      this.keywords = null;
      this.cities = null;
      this.industries = null;
      this.occupations = null;
      this.scale = null;
      this.employment_type = null;
      this.candidate_source = null;
      this.experience = null;
      this.degree = null;
      this.salary = null;
      this.company_name = null;
      setPage_fromIsSet(false);
      this.page_from = 0;
      setPage_sizeIsSet(false);
      this.page_size = 0;
      this.child_company_name = null;
      this.department = null;
      setOrder_by_priorityIsSet(false);
      this.order_by_priority = false;
      this.custom = null;
    }

    public String getKeywords() {
      return this.keywords;
    }

    public query_args setKeywords(String keywords) {
      this.keywords = keywords;
      return this;
    }

    public void unsetKeywords() {
      this.keywords = null;
    }

    /** Returns true if field keywords is set (has been assigned a value) and false otherwise */
    public boolean isSetKeywords() {
      return this.keywords != null;
    }

    public void setKeywordsIsSet(boolean value) {
      if (!value) {
        this.keywords = null;
      }
    }

    public String getCities() {
      return this.cities;
    }

    public query_args setCities(String cities) {
      this.cities = cities;
      return this;
    }

    public void unsetCities() {
      this.cities = null;
    }

    /** Returns true if field cities is set (has been assigned a value) and false otherwise */
    public boolean isSetCities() {
      return this.cities != null;
    }

    public void setCitiesIsSet(boolean value) {
      if (!value) {
        this.cities = null;
      }
    }

    public String getIndustries() {
      return this.industries;
    }

    public query_args setIndustries(String industries) {
      this.industries = industries;
      return this;
    }

    public void unsetIndustries() {
      this.industries = null;
    }

    /** Returns true if field industries is set (has been assigned a value) and false otherwise */
    public boolean isSetIndustries() {
      return this.industries != null;
    }

    public void setIndustriesIsSet(boolean value) {
      if (!value) {
        this.industries = null;
      }
    }

    public String getOccupations() {
      return this.occupations;
    }

    public query_args setOccupations(String occupations) {
      this.occupations = occupations;
      return this;
    }

    public void unsetOccupations() {
      this.occupations = null;
    }

    /** Returns true if field occupations is set (has been assigned a value) and false otherwise */
    public boolean isSetOccupations() {
      return this.occupations != null;
    }

    public void setOccupationsIsSet(boolean value) {
      if (!value) {
        this.occupations = null;
      }
    }

    public String getScale() {
      return this.scale;
    }

    public query_args setScale(String scale) {
      this.scale = scale;
      return this;
    }

    public void unsetScale() {
      this.scale = null;
    }

    /** Returns true if field scale is set (has been assigned a value) and false otherwise */
    public boolean isSetScale() {
      return this.scale != null;
    }

    public void setScaleIsSet(boolean value) {
      if (!value) {
        this.scale = null;
      }
    }

    public String getEmployment_type() {
      return this.employment_type;
    }

    public query_args setEmployment_type(String employment_type) {
      this.employment_type = employment_type;
      return this;
    }

    public void unsetEmployment_type() {
      this.employment_type = null;
    }

    /** Returns true if field employment_type is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployment_type() {
      return this.employment_type != null;
    }

    public void setEmployment_typeIsSet(boolean value) {
      if (!value) {
        this.employment_type = null;
      }
    }

    public String getCandidate_source() {
      return this.candidate_source;
    }

    public query_args setCandidate_source(String candidate_source) {
      this.candidate_source = candidate_source;
      return this;
    }

    public void unsetCandidate_source() {
      this.candidate_source = null;
    }

    /** Returns true if field candidate_source is set (has been assigned a value) and false otherwise */
    public boolean isSetCandidate_source() {
      return this.candidate_source != null;
    }

    public void setCandidate_sourceIsSet(boolean value) {
      if (!value) {
        this.candidate_source = null;
      }
    }

    public String getExperience() {
      return this.experience;
    }

    public query_args setExperience(String experience) {
      this.experience = experience;
      return this;
    }

    public void unsetExperience() {
      this.experience = null;
    }

    /** Returns true if field experience is set (has been assigned a value) and false otherwise */
    public boolean isSetExperience() {
      return this.experience != null;
    }

    public void setExperienceIsSet(boolean value) {
      if (!value) {
        this.experience = null;
      }
    }

    public String getDegree() {
      return this.degree;
    }

    public query_args setDegree(String degree) {
      this.degree = degree;
      return this;
    }

    public void unsetDegree() {
      this.degree = null;
    }

    /** Returns true if field degree is set (has been assigned a value) and false otherwise */
    public boolean isSetDegree() {
      return this.degree != null;
    }

    public void setDegreeIsSet(boolean value) {
      if (!value) {
        this.degree = null;
      }
    }

    public String getSalary() {
      return this.salary;
    }

    public query_args setSalary(String salary) {
      this.salary = salary;
      return this;
    }

    public void unsetSalary() {
      this.salary = null;
    }

    /** Returns true if field salary is set (has been assigned a value) and false otherwise */
    public boolean isSetSalary() {
      return this.salary != null;
    }

    public void setSalaryIsSet(boolean value) {
      if (!value) {
        this.salary = null;
      }
    }

    public String getCompany_name() {
      return this.company_name;
    }

    public query_args setCompany_name(String company_name) {
      this.company_name = company_name;
      return this;
    }

    public void unsetCompany_name() {
      this.company_name = null;
    }

    /** Returns true if field company_name is set (has been assigned a value) and false otherwise */
    public boolean isSetCompany_name() {
      return this.company_name != null;
    }

    public void setCompany_nameIsSet(boolean value) {
      if (!value) {
        this.company_name = null;
      }
    }

    public int getPage_from() {
      return this.page_from;
    }

    public query_args setPage_from(int page_from) {
      this.page_from = page_from;
      setPage_fromIsSet(true);
      return this;
    }

    public void unsetPage_from() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
    }

    /** Returns true if field page_from is set (has been assigned a value) and false otherwise */
    public boolean isSetPage_from() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_FROM_ISSET_ID);
    }

    public void setPage_fromIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_FROM_ISSET_ID, value);
    }

    public int getPage_size() {
      return this.page_size;
    }

    public query_args setPage_size(int page_size) {
      this.page_size = page_size;
      setPage_sizeIsSet(true);
      return this;
    }

    public void unsetPage_size() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
    }

    /** Returns true if field page_size is set (has been assigned a value) and false otherwise */
    public boolean isSetPage_size() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID);
    }

    public void setPage_sizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGE_SIZE_ISSET_ID, value);
    }

    public String getChild_company_name() {
      return this.child_company_name;
    }

    public query_args setChild_company_name(String child_company_name) {
      this.child_company_name = child_company_name;
      return this;
    }

    public void unsetChild_company_name() {
      this.child_company_name = null;
    }

    /** Returns true if field child_company_name is set (has been assigned a value) and false otherwise */
    public boolean isSetChild_company_name() {
      return this.child_company_name != null;
    }

    public void setChild_company_nameIsSet(boolean value) {
      if (!value) {
        this.child_company_name = null;
      }
    }

    public String getDepartment() {
      return this.department;
    }

    public query_args setDepartment(String department) {
      this.department = department;
      return this;
    }

    public void unsetDepartment() {
      this.department = null;
    }

    /** Returns true if field department is set (has been assigned a value) and false otherwise */
    public boolean isSetDepartment() {
      return this.department != null;
    }

    public void setDepartmentIsSet(boolean value) {
      if (!value) {
        this.department = null;
      }
    }

    public boolean isOrder_by_priority() {
      return this.order_by_priority;
    }

    public query_args setOrder_by_priority(boolean order_by_priority) {
      this.order_by_priority = order_by_priority;
      setOrder_by_priorityIsSet(true);
      return this;
    }

    public void unsetOrder_by_priority() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
    }

    /** Returns true if field order_by_priority is set (has been assigned a value) and false otherwise */
    public boolean isSetOrder_by_priority() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID);
    }

    public void setOrder_by_priorityIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ORDER_BY_PRIORITY_ISSET_ID, value);
    }

    public String getCustom() {
      return this.custom;
    }

    public query_args setCustom(String custom) {
      this.custom = custom;
      return this;
    }

    public void unsetCustom() {
      this.custom = null;
    }

    /** Returns true if field custom is set (has been assigned a value) and false otherwise */
    public boolean isSetCustom() {
      return this.custom != null;
    }

    public void setCustomIsSet(boolean value) {
      if (!value) {
        this.custom = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case KEYWORDS:
        if (value == null) {
          unsetKeywords();
        } else {
          setKeywords((String)value);
        }
        break;

      case CITIES:
        if (value == null) {
          unsetCities();
        } else {
          setCities((String)value);
        }
        break;

      case INDUSTRIES:
        if (value == null) {
          unsetIndustries();
        } else {
          setIndustries((String)value);
        }
        break;

      case OCCUPATIONS:
        if (value == null) {
          unsetOccupations();
        } else {
          setOccupations((String)value);
        }
        break;

      case SCALE:
        if (value == null) {
          unsetScale();
        } else {
          setScale((String)value);
        }
        break;

      case EMPLOYMENT_TYPE:
        if (value == null) {
          unsetEmployment_type();
        } else {
          setEmployment_type((String)value);
        }
        break;

      case CANDIDATE_SOURCE:
        if (value == null) {
          unsetCandidate_source();
        } else {
          setCandidate_source((String)value);
        }
        break;

      case EXPERIENCE:
        if (value == null) {
          unsetExperience();
        } else {
          setExperience((String)value);
        }
        break;

      case DEGREE:
        if (value == null) {
          unsetDegree();
        } else {
          setDegree((String)value);
        }
        break;

      case SALARY:
        if (value == null) {
          unsetSalary();
        } else {
          setSalary((String)value);
        }
        break;

      case COMPANY_NAME:
        if (value == null) {
          unsetCompany_name();
        } else {
          setCompany_name((String)value);
        }
        break;

      case PAGE_FROM:
        if (value == null) {
          unsetPage_from();
        } else {
          setPage_from((Integer)value);
        }
        break;

      case PAGE_SIZE:
        if (value == null) {
          unsetPage_size();
        } else {
          setPage_size((Integer)value);
        }
        break;

      case CHILD_COMPANY_NAME:
        if (value == null) {
          unsetChild_company_name();
        } else {
          setChild_company_name((String)value);
        }
        break;

      case DEPARTMENT:
        if (value == null) {
          unsetDepartment();
        } else {
          setDepartment((String)value);
        }
        break;

      case ORDER_BY_PRIORITY:
        if (value == null) {
          unsetOrder_by_priority();
        } else {
          setOrder_by_priority((Boolean)value);
        }
        break;

      case CUSTOM:
        if (value == null) {
          unsetCustom();
        } else {
          setCustom((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case KEYWORDS:
        return getKeywords();

      case CITIES:
        return getCities();

      case INDUSTRIES:
        return getIndustries();

      case OCCUPATIONS:
        return getOccupations();

      case SCALE:
        return getScale();

      case EMPLOYMENT_TYPE:
        return getEmployment_type();

      case CANDIDATE_SOURCE:
        return getCandidate_source();

      case EXPERIENCE:
        return getExperience();

      case DEGREE:
        return getDegree();

      case SALARY:
        return getSalary();

      case COMPANY_NAME:
        return getCompany_name();

      case PAGE_FROM:
        return getPage_from();

      case PAGE_SIZE:
        return getPage_size();

      case CHILD_COMPANY_NAME:
        return getChild_company_name();

      case DEPARTMENT:
        return getDepartment();

      case ORDER_BY_PRIORITY:
        return isOrder_by_priority();

      case CUSTOM:
        return getCustom();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case KEYWORDS:
        return isSetKeywords();
      case CITIES:
        return isSetCities();
      case INDUSTRIES:
        return isSetIndustries();
      case OCCUPATIONS:
        return isSetOccupations();
      case SCALE:
        return isSetScale();
      case EMPLOYMENT_TYPE:
        return isSetEmployment_type();
      case CANDIDATE_SOURCE:
        return isSetCandidate_source();
      case EXPERIENCE:
        return isSetExperience();
      case DEGREE:
        return isSetDegree();
      case SALARY:
        return isSetSalary();
      case COMPANY_NAME:
        return isSetCompany_name();
      case PAGE_FROM:
        return isSetPage_from();
      case PAGE_SIZE:
        return isSetPage_size();
      case CHILD_COMPANY_NAME:
        return isSetChild_company_name();
      case DEPARTMENT:
        return isSetDepartment();
      case ORDER_BY_PRIORITY:
        return isSetOrder_by_priority();
      case CUSTOM:
        return isSetCustom();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof query_args)
        return this.equals((query_args)that);
      return false;
    }

    public boolean equals(query_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_keywords = true && this.isSetKeywords();
      boolean that_present_keywords = true && that.isSetKeywords();
      if (this_present_keywords || that_present_keywords) {
        if (!(this_present_keywords && that_present_keywords))
          return false;
        if (!this.keywords.equals(that.keywords))
          return false;
      }

      boolean this_present_cities = true && this.isSetCities();
      boolean that_present_cities = true && that.isSetCities();
      if (this_present_cities || that_present_cities) {
        if (!(this_present_cities && that_present_cities))
          return false;
        if (!this.cities.equals(that.cities))
          return false;
      }

      boolean this_present_industries = true && this.isSetIndustries();
      boolean that_present_industries = true && that.isSetIndustries();
      if (this_present_industries || that_present_industries) {
        if (!(this_present_industries && that_present_industries))
          return false;
        if (!this.industries.equals(that.industries))
          return false;
      }

      boolean this_present_occupations = true && this.isSetOccupations();
      boolean that_present_occupations = true && that.isSetOccupations();
      if (this_present_occupations || that_present_occupations) {
        if (!(this_present_occupations && that_present_occupations))
          return false;
        if (!this.occupations.equals(that.occupations))
          return false;
      }

      boolean this_present_scale = true && this.isSetScale();
      boolean that_present_scale = true && that.isSetScale();
      if (this_present_scale || that_present_scale) {
        if (!(this_present_scale && that_present_scale))
          return false;
        if (!this.scale.equals(that.scale))
          return false;
      }

      boolean this_present_employment_type = true && this.isSetEmployment_type();
      boolean that_present_employment_type = true && that.isSetEmployment_type();
      if (this_present_employment_type || that_present_employment_type) {
        if (!(this_present_employment_type && that_present_employment_type))
          return false;
        if (!this.employment_type.equals(that.employment_type))
          return false;
      }

      boolean this_present_candidate_source = true && this.isSetCandidate_source();
      boolean that_present_candidate_source = true && that.isSetCandidate_source();
      if (this_present_candidate_source || that_present_candidate_source) {
        if (!(this_present_candidate_source && that_present_candidate_source))
          return false;
        if (!this.candidate_source.equals(that.candidate_source))
          return false;
      }

      boolean this_present_experience = true && this.isSetExperience();
      boolean that_present_experience = true && that.isSetExperience();
      if (this_present_experience || that_present_experience) {
        if (!(this_present_experience && that_present_experience))
          return false;
        if (!this.experience.equals(that.experience))
          return false;
      }

      boolean this_present_degree = true && this.isSetDegree();
      boolean that_present_degree = true && that.isSetDegree();
      if (this_present_degree || that_present_degree) {
        if (!(this_present_degree && that_present_degree))
          return false;
        if (!this.degree.equals(that.degree))
          return false;
      }

      boolean this_present_salary = true && this.isSetSalary();
      boolean that_present_salary = true && that.isSetSalary();
      if (this_present_salary || that_present_salary) {
        if (!(this_present_salary && that_present_salary))
          return false;
        if (!this.salary.equals(that.salary))
          return false;
      }

      boolean this_present_company_name = true && this.isSetCompany_name();
      boolean that_present_company_name = true && that.isSetCompany_name();
      if (this_present_company_name || that_present_company_name) {
        if (!(this_present_company_name && that_present_company_name))
          return false;
        if (!this.company_name.equals(that.company_name))
          return false;
      }

      boolean this_present_page_from = true;
      boolean that_present_page_from = true;
      if (this_present_page_from || that_present_page_from) {
        if (!(this_present_page_from && that_present_page_from))
          return false;
        if (this.page_from != that.page_from)
          return false;
      }

      boolean this_present_page_size = true;
      boolean that_present_page_size = true;
      if (this_present_page_size || that_present_page_size) {
        if (!(this_present_page_size && that_present_page_size))
          return false;
        if (this.page_size != that.page_size)
          return false;
      }

      boolean this_present_child_company_name = true && this.isSetChild_company_name();
      boolean that_present_child_company_name = true && that.isSetChild_company_name();
      if (this_present_child_company_name || that_present_child_company_name) {
        if (!(this_present_child_company_name && that_present_child_company_name))
          return false;
        if (!this.child_company_name.equals(that.child_company_name))
          return false;
      }

      boolean this_present_department = true && this.isSetDepartment();
      boolean that_present_department = true && that.isSetDepartment();
      if (this_present_department || that_present_department) {
        if (!(this_present_department && that_present_department))
          return false;
        if (!this.department.equals(that.department))
          return false;
      }

      boolean this_present_order_by_priority = true;
      boolean that_present_order_by_priority = true;
      if (this_present_order_by_priority || that_present_order_by_priority) {
        if (!(this_present_order_by_priority && that_present_order_by_priority))
          return false;
        if (this.order_by_priority != that.order_by_priority)
          return false;
      }

      boolean this_present_custom = true && this.isSetCustom();
      boolean that_present_custom = true && that.isSetCustom();
      if (this_present_custom || that_present_custom) {
        if (!(this_present_custom && that_present_custom))
          return false;
        if (!this.custom.equals(that.custom))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetKeywords()) ? 131071 : 524287);
      if (isSetKeywords())
        hashCode = hashCode * 8191 + keywords.hashCode();

      hashCode = hashCode * 8191 + ((isSetCities()) ? 131071 : 524287);
      if (isSetCities())
        hashCode = hashCode * 8191 + cities.hashCode();

      hashCode = hashCode * 8191 + ((isSetIndustries()) ? 131071 : 524287);
      if (isSetIndustries())
        hashCode = hashCode * 8191 + industries.hashCode();

      hashCode = hashCode * 8191 + ((isSetOccupations()) ? 131071 : 524287);
      if (isSetOccupations())
        hashCode = hashCode * 8191 + occupations.hashCode();

      hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
      if (isSetScale())
        hashCode = hashCode * 8191 + scale.hashCode();

      hashCode = hashCode * 8191 + ((isSetEmployment_type()) ? 131071 : 524287);
      if (isSetEmployment_type())
        hashCode = hashCode * 8191 + employment_type.hashCode();

      hashCode = hashCode * 8191 + ((isSetCandidate_source()) ? 131071 : 524287);
      if (isSetCandidate_source())
        hashCode = hashCode * 8191 + candidate_source.hashCode();

      hashCode = hashCode * 8191 + ((isSetExperience()) ? 131071 : 524287);
      if (isSetExperience())
        hashCode = hashCode * 8191 + experience.hashCode();

      hashCode = hashCode * 8191 + ((isSetDegree()) ? 131071 : 524287);
      if (isSetDegree())
        hashCode = hashCode * 8191 + degree.hashCode();

      hashCode = hashCode * 8191 + ((isSetSalary()) ? 131071 : 524287);
      if (isSetSalary())
        hashCode = hashCode * 8191 + salary.hashCode();

      hashCode = hashCode * 8191 + ((isSetCompany_name()) ? 131071 : 524287);
      if (isSetCompany_name())
        hashCode = hashCode * 8191 + company_name.hashCode();

      hashCode = hashCode * 8191 + page_from;

      hashCode = hashCode * 8191 + page_size;

      hashCode = hashCode * 8191 + ((isSetChild_company_name()) ? 131071 : 524287);
      if (isSetChild_company_name())
        hashCode = hashCode * 8191 + child_company_name.hashCode();

      hashCode = hashCode * 8191 + ((isSetDepartment()) ? 131071 : 524287);
      if (isSetDepartment())
        hashCode = hashCode * 8191 + department.hashCode();

      hashCode = hashCode * 8191 + ((order_by_priority) ? 131071 : 524287);

      hashCode = hashCode * 8191 + ((isSetCustom()) ? 131071 : 524287);
      if (isSetCustom())
        hashCode = hashCode * 8191 + custom.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(query_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetKeywords()).compareTo(other.isSetKeywords());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetKeywords()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.keywords, other.keywords);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCities()).compareTo(other.isSetCities());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCities()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cities, other.cities);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetIndustries()).compareTo(other.isSetIndustries());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIndustries()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industries, other.industries);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetOccupations()).compareTo(other.isSetOccupations());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOccupations()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.occupations, other.occupations);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetScale()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetEmployment_type()).compareTo(other.isSetEmployment_type());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployment_type()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employment_type, other.employment_type);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCandidate_source()).compareTo(other.isSetCandidate_source());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCandidate_source()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.candidate_source, other.candidate_source);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetExperience()).compareTo(other.isSetExperience());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetExperience()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.experience, other.experience);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDegree()).compareTo(other.isSetDegree());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDegree()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.degree, other.degree);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetSalary()).compareTo(other.isSetSalary());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSalary()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salary, other.salary);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCompany_name()).compareTo(other.isSetCompany_name());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompany_name()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_name, other.company_name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPage_from()).compareTo(other.isSetPage_from());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage_from()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_from, other.page_from);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPage_size()).compareTo(other.isSetPage_size());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPage_size()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.page_size, other.page_size);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetChild_company_name()).compareTo(other.isSetChild_company_name());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetChild_company_name()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.child_company_name, other.child_company_name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetDepartment()).compareTo(other.isSetDepartment());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDepartment()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.department, other.department);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetOrder_by_priority()).compareTo(other.isSetOrder_by_priority());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetOrder_by_priority()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_by_priority, other.order_by_priority);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCustom()).compareTo(other.isSetCustom());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCustom()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom, other.custom);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("query_args(");
      boolean first = true;

      sb.append("keywords:");
      if (this.keywords == null) {
        sb.append("null");
      } else {
        sb.append(this.keywords);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("cities:");
      if (this.cities == null) {
        sb.append("null");
      } else {
        sb.append(this.cities);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("industries:");
      if (this.industries == null) {
        sb.append("null");
      } else {
        sb.append(this.industries);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("occupations:");
      if (this.occupations == null) {
        sb.append("null");
      } else {
        sb.append(this.occupations);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("employment_type:");
      if (this.employment_type == null) {
        sb.append("null");
      } else {
        sb.append(this.employment_type);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("candidate_source:");
      if (this.candidate_source == null) {
        sb.append("null");
      } else {
        sb.append(this.candidate_source);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("experience:");
      if (this.experience == null) {
        sb.append("null");
      } else {
        sb.append(this.experience);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("degree:");
      if (this.degree == null) {
        sb.append("null");
      } else {
        sb.append(this.degree);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("salary:");
      if (this.salary == null) {
        sb.append("null");
      } else {
        sb.append(this.salary);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("company_name:");
      if (this.company_name == null) {
        sb.append("null");
      } else {
        sb.append(this.company_name);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("page_from:");
      sb.append(this.page_from);
      first = false;
      if (!first) sb.append(", ");
      sb.append("page_size:");
      sb.append(this.page_size);
      first = false;
      if (!first) sb.append(", ");
      sb.append("child_company_name:");
      if (this.child_company_name == null) {
        sb.append("null");
      } else {
        sb.append(this.child_company_name);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("department:");
      if (this.department == null) {
        sb.append("null");
      } else {
        sb.append(this.department);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("order_by_priority:");
      sb.append(this.order_by_priority);
      first = false;
      if (!first) sb.append(", ");
      sb.append("custom:");
      if (this.custom == null) {
        sb.append("null");
      } else {
        sb.append(this.custom);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class query_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_argsStandardScheme getScheme() {
        return new query_argsStandardScheme();
      }
    }

    private static class query_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<query_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // KEYWORDS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.keywords = iprot.readString();
                struct.setKeywordsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // CITIES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.cities = iprot.readString();
                struct.setCitiesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // INDUSTRIES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.industries = iprot.readString();
                struct.setIndustriesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // OCCUPATIONS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.occupations = iprot.readString();
                struct.setOccupationsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // SCALE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.scale = iprot.readString();
                struct.setScaleIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // EMPLOYMENT_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.employment_type = iprot.readString();
                struct.setEmployment_typeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // CANDIDATE_SOURCE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.candidate_source = iprot.readString();
                struct.setCandidate_sourceIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // EXPERIENCE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.experience = iprot.readString();
                struct.setExperienceIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 9: // DEGREE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.degree = iprot.readString();
                struct.setDegreeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 10: // SALARY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.salary = iprot.readString();
                struct.setSalaryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 11: // COMPANY_NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.company_name = iprot.readString();
                struct.setCompany_nameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 12: // PAGE_FROM
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page_from = iprot.readI32();
                struct.setPage_fromIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 13: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.page_size = iprot.readI32();
                struct.setPage_sizeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 14: // CHILD_COMPANY_NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.child_company_name = iprot.readString();
                struct.setChild_company_nameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 15: // DEPARTMENT
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.department = iprot.readString();
                struct.setDepartmentIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 16: // ORDER_BY_PRIORITY
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.order_by_priority = iprot.readBool();
                struct.setOrder_by_priorityIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 17: // CUSTOM
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.custom = iprot.readString();
                struct.setCustomIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, query_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.keywords != null) {
          oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
          oprot.writeString(struct.keywords);
          oprot.writeFieldEnd();
        }
        if (struct.cities != null) {
          oprot.writeFieldBegin(CITIES_FIELD_DESC);
          oprot.writeString(struct.cities);
          oprot.writeFieldEnd();
        }
        if (struct.industries != null) {
          oprot.writeFieldBegin(INDUSTRIES_FIELD_DESC);
          oprot.writeString(struct.industries);
          oprot.writeFieldEnd();
        }
        if (struct.occupations != null) {
          oprot.writeFieldBegin(OCCUPATIONS_FIELD_DESC);
          oprot.writeString(struct.occupations);
          oprot.writeFieldEnd();
        }
        if (struct.scale != null) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
        if (struct.employment_type != null) {
          oprot.writeFieldBegin(EMPLOYMENT_TYPE_FIELD_DESC);
          oprot.writeString(struct.employment_type);
          oprot.writeFieldEnd();
        }
        if (struct.candidate_source != null) {
          oprot.writeFieldBegin(CANDIDATE_SOURCE_FIELD_DESC);
          oprot.writeString(struct.candidate_source);
          oprot.writeFieldEnd();
        }
        if (struct.experience != null) {
          oprot.writeFieldBegin(EXPERIENCE_FIELD_DESC);
          oprot.writeString(struct.experience);
          oprot.writeFieldEnd();
        }
        if (struct.degree != null) {
          oprot.writeFieldBegin(DEGREE_FIELD_DESC);
          oprot.writeString(struct.degree);
          oprot.writeFieldEnd();
        }
        if (struct.salary != null) {
          oprot.writeFieldBegin(SALARY_FIELD_DESC);
          oprot.writeString(struct.salary);
          oprot.writeFieldEnd();
        }
        if (struct.company_name != null) {
          oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.company_name);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_FROM_FIELD_DESC);
        oprot.writeI32(struct.page_from);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.page_size);
        oprot.writeFieldEnd();
        if (struct.child_company_name != null) {
          oprot.writeFieldBegin(CHILD_COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.child_company_name);
          oprot.writeFieldEnd();
        }
        if (struct.department != null) {
          oprot.writeFieldBegin(DEPARTMENT_FIELD_DESC);
          oprot.writeString(struct.department);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ORDER_BY_PRIORITY_FIELD_DESC);
        oprot.writeBool(struct.order_by_priority);
        oprot.writeFieldEnd();
        if (struct.custom != null) {
          oprot.writeFieldBegin(CUSTOM_FIELD_DESC);
          oprot.writeString(struct.custom);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class query_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_argsTupleScheme getScheme() {
        return new query_argsTupleScheme();
      }
    }

    private static class query_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<query_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetKeywords()) {
          optionals.set(0);
        }
        if (struct.isSetCities()) {
          optionals.set(1);
        }
        if (struct.isSetIndustries()) {
          optionals.set(2);
        }
        if (struct.isSetOccupations()) {
          optionals.set(3);
        }
        if (struct.isSetScale()) {
          optionals.set(4);
        }
        if (struct.isSetEmployment_type()) {
          optionals.set(5);
        }
        if (struct.isSetCandidate_source()) {
          optionals.set(6);
        }
        if (struct.isSetExperience()) {
          optionals.set(7);
        }
        if (struct.isSetDegree()) {
          optionals.set(8);
        }
        if (struct.isSetSalary()) {
          optionals.set(9);
        }
        if (struct.isSetCompany_name()) {
          optionals.set(10);
        }
        if (struct.isSetPage_from()) {
          optionals.set(11);
        }
        if (struct.isSetPage_size()) {
          optionals.set(12);
        }
        if (struct.isSetChild_company_name()) {
          optionals.set(13);
        }
        if (struct.isSetDepartment()) {
          optionals.set(14);
        }
        if (struct.isSetOrder_by_priority()) {
          optionals.set(15);
        }
        if (struct.isSetCustom()) {
          optionals.set(16);
        }
        oprot.writeBitSet(optionals, 17);
        if (struct.isSetKeywords()) {
          oprot.writeString(struct.keywords);
        }
        if (struct.isSetCities()) {
          oprot.writeString(struct.cities);
        }
        if (struct.isSetIndustries()) {
          oprot.writeString(struct.industries);
        }
        if (struct.isSetOccupations()) {
          oprot.writeString(struct.occupations);
        }
        if (struct.isSetScale()) {
          oprot.writeString(struct.scale);
        }
        if (struct.isSetEmployment_type()) {
          oprot.writeString(struct.employment_type);
        }
        if (struct.isSetCandidate_source()) {
          oprot.writeString(struct.candidate_source);
        }
        if (struct.isSetExperience()) {
          oprot.writeString(struct.experience);
        }
        if (struct.isSetDegree()) {
          oprot.writeString(struct.degree);
        }
        if (struct.isSetSalary()) {
          oprot.writeString(struct.salary);
        }
        if (struct.isSetCompany_name()) {
          oprot.writeString(struct.company_name);
        }
        if (struct.isSetPage_from()) {
          oprot.writeI32(struct.page_from);
        }
        if (struct.isSetPage_size()) {
          oprot.writeI32(struct.page_size);
        }
        if (struct.isSetChild_company_name()) {
          oprot.writeString(struct.child_company_name);
        }
        if (struct.isSetDepartment()) {
          oprot.writeString(struct.department);
        }
        if (struct.isSetOrder_by_priority()) {
          oprot.writeBool(struct.order_by_priority);
        }
        if (struct.isSetCustom()) {
          oprot.writeString(struct.custom);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, query_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(17);
        if (incoming.get(0)) {
          struct.keywords = iprot.readString();
          struct.setKeywordsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.cities = iprot.readString();
          struct.setCitiesIsSet(true);
        }
        if (incoming.get(2)) {
          struct.industries = iprot.readString();
          struct.setIndustriesIsSet(true);
        }
        if (incoming.get(3)) {
          struct.occupations = iprot.readString();
          struct.setOccupationsIsSet(true);
        }
        if (incoming.get(4)) {
          struct.scale = iprot.readString();
          struct.setScaleIsSet(true);
        }
        if (incoming.get(5)) {
          struct.employment_type = iprot.readString();
          struct.setEmployment_typeIsSet(true);
        }
        if (incoming.get(6)) {
          struct.candidate_source = iprot.readString();
          struct.setCandidate_sourceIsSet(true);
        }
        if (incoming.get(7)) {
          struct.experience = iprot.readString();
          struct.setExperienceIsSet(true);
        }
        if (incoming.get(8)) {
          struct.degree = iprot.readString();
          struct.setDegreeIsSet(true);
        }
        if (incoming.get(9)) {
          struct.salary = iprot.readString();
          struct.setSalaryIsSet(true);
        }
        if (incoming.get(10)) {
          struct.company_name = iprot.readString();
          struct.setCompany_nameIsSet(true);
        }
        if (incoming.get(11)) {
          struct.page_from = iprot.readI32();
          struct.setPage_fromIsSet(true);
        }
        if (incoming.get(12)) {
          struct.page_size = iprot.readI32();
          struct.setPage_sizeIsSet(true);
        }
        if (incoming.get(13)) {
          struct.child_company_name = iprot.readString();
          struct.setChild_company_nameIsSet(true);
        }
        if (incoming.get(14)) {
          struct.department = iprot.readString();
          struct.setDepartmentIsSet(true);
        }
        if (incoming.get(15)) {
          struct.order_by_priority = iprot.readBool();
          struct.setOrder_by_priorityIsSet(true);
        }
        if (incoming.get(16)) {
          struct.custom = iprot.readString();
          struct.setCustomIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class query_result implements org.apache.thrift.TBase<query_result, query_result._Fields>, java.io.Serializable, Cloneable, Comparable<query_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("query_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new query_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new query_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(query_result.class, metaDataMap);
    }

    public query_result() {
    }

    public query_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public query_result(query_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public query_result deepCopy() {
      return new query_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public query_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof query_result)
        return this.equals((query_result)that);
      return false;
    }

    public boolean equals(query_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(query_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("query_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class query_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_resultStandardScheme getScheme() {
        return new query_resultStandardScheme();
      }
    }

    private static class query_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<query_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, query_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class query_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public query_resultTupleScheme getScheme() {
        return new query_resultTupleScheme();
      }
    }

    private static class query_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<query_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, query_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateposition_args implements org.apache.thrift.TBase<updateposition_args, updateposition_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateposition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateposition_args");

    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateposition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateposition_argsTupleSchemeFactory();

    public String position; // required
    public int id; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      POSITION((short)1, "position"),
      ID((short)2, "id");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // POSITION
            return POSITION;
          case 2: // ID
            return ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateposition_args.class, metaDataMap);
    }

    public updateposition_args() {
    }

    public updateposition_args(
      String position,
      int id)
    {
      this();
      this.position = position;
      this.id = id;
      setIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateposition_args(updateposition_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPosition()) {
        this.position = other.position;
      }
      this.id = other.id;
    }

    public updateposition_args deepCopy() {
      return new updateposition_args(this);
    }

    @Override
    public void clear() {
      this.position = null;
      setIdIsSet(false);
      this.id = 0;
    }

    public String getPosition() {
      return this.position;
    }

    public updateposition_args setPosition(String position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public int getId() {
      return this.id;
    }

    public updateposition_args setId(int id) {
      this.id = id;
      setIdIsSet(true);
      return this;
    }

    public void unsetId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
    }

    /** Returns true if field id is set (has been assigned a value) and false otherwise */
    public boolean isSetId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
    }

    public void setIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case POSITION:
        if (value == null) {
          unsetPosition();
        } else {
          setPosition((String)value);
        }
        break;

      case ID:
        if (value == null) {
          unsetId();
        } else {
          setId((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case POSITION:
        return getPosition();

      case ID:
        return getId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case POSITION:
        return isSetPosition();
      case ID:
        return isSetId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateposition_args)
        return this.equals((updateposition_args)that);
      return false;
    }

    public boolean equals(updateposition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      boolean this_present_id = true;
      boolean that_present_id = true;
      if (this_present_id || that_present_id) {
        if (!(this_present_id && that_present_id))
          return false;
        if (this.id != that.id)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      hashCode = hashCode * 8191 + id;

      return hashCode;
    }

    @Override
    public int compareTo(updateposition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateposition_args(");
      boolean first = true;

      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateposition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_argsStandardScheme getScheme() {
        return new updateposition_argsStandardScheme();
      }
    }

    private static class updateposition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateposition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.position = iprot.readString();
                struct.setPositionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.id = iprot.readI32();
                struct.setIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateposition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          oprot.writeString(struct.position);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateposition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_argsTupleScheme getScheme() {
        return new updateposition_argsTupleScheme();
      }
    }

    private static class updateposition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateposition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPosition()) {
          optionals.set(0);
        }
        if (struct.isSetId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPosition()) {
          oprot.writeString(struct.position);
        }
        if (struct.isSetId()) {
          oprot.writeI32(struct.id);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateposition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.position = iprot.readString();
          struct.setPositionIsSet(true);
        }
        if (incoming.get(1)) {
          struct.id = iprot.readI32();
          struct.setIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateposition_result implements org.apache.thrift.TBase<updateposition_result, updateposition_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateposition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateposition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateposition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateposition_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateposition_result.class, metaDataMap);
    }

    public updateposition_result() {
    }

    public updateposition_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateposition_result(updateposition_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public updateposition_result deepCopy() {
      return new updateposition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public updateposition_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof updateposition_result)
        return this.equals((updateposition_result)that);
      return false;
    }

    public boolean equals(updateposition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateposition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("updateposition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateposition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_resultStandardScheme getScheme() {
        return new updateposition_resultStandardScheme();
      }
    }

    private static class updateposition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateposition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateposition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateposition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateposition_resultTupleScheme getScheme() {
        return new updateposition_resultTupleScheme();
      }
    }

    private static class updateposition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateposition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateposition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRanking_args implements org.apache.thrift.TBase<queryAwardRanking_args, queryAwardRanking_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRanking_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRanking_args");

    private static final org.apache.thrift.protocol.TField COMPANY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("companyIds", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TIMESPAN_FIELD_DESC = new org.apache.thrift.protocol.TField("timespan", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField PAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("pageNum", org.apache.thrift.protocol.TType.I32, (short)4);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRanking_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRanking_argsTupleSchemeFactory();

    public java.util.List<Integer> companyIds; // required
    public String timespan; // required
    public int pageSize; // required
    public int pageNum; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_IDS((short)1, "companyIds"),
      TIMESPAN((short)2, "timespan"),
      PAGE_SIZE((short)3, "pageSize"),
      PAGE_NUM((short)4, "pageNum");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_IDS
            return COMPANY_IDS;
          case 2: // TIMESPAN
            return TIMESPAN;
          case 3: // PAGE_SIZE
            return PAGE_SIZE;
          case 4: // PAGE_NUM
            return PAGE_NUM;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PAGESIZE_ISSET_ID = 0;
    private static final int __PAGENUM_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_IDS, new org.apache.thrift.meta_data.FieldMetaData("companyIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      tmpMap.put(_Fields.TIMESPAN, new org.apache.thrift.meta_data.FieldMetaData("timespan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("pageNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRanking_args.class, metaDataMap);
    }

    public queryAwardRanking_args() {
    }

    public queryAwardRanking_args(
      java.util.List<Integer> companyIds,
      String timespan,
      int pageSize,
      int pageNum)
    {
      this();
      this.companyIds = companyIds;
      this.timespan = timespan;
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      this.pageNum = pageNum;
      setPageNumIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRanking_args(queryAwardRanking_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyIds()) {
        java.util.List<Integer> __this__companyIds = new java.util.ArrayList<Integer>(other.companyIds);
        this.companyIds = __this__companyIds;
      }
      if (other.isSetTimespan()) {
        this.timespan = other.timespan;
      }
      this.pageSize = other.pageSize;
      this.pageNum = other.pageNum;
    }

    public queryAwardRanking_args deepCopy() {
      return new queryAwardRanking_args(this);
    }

    @Override
    public void clear() {
      this.companyIds = null;
      this.timespan = null;
      setPageSizeIsSet(false);
      this.pageSize = 0;
      setPageNumIsSet(false);
      this.pageNum = 0;
    }

    public int getCompanyIdsSize() {
      return (this.companyIds == null) ? 0 : this.companyIds.size();
    }

    public java.util.Iterator<Integer> getCompanyIdsIterator() {
      return (this.companyIds == null) ? null : this.companyIds.iterator();
    }

    public void addToCompanyIds(int elem) {
      if (this.companyIds == null) {
        this.companyIds = new java.util.ArrayList<Integer>();
      }
      this.companyIds.add(elem);
    }

    public java.util.List<Integer> getCompanyIds() {
      return this.companyIds;
    }

    public queryAwardRanking_args setCompanyIds(java.util.List<Integer> companyIds) {
      this.companyIds = companyIds;
      return this;
    }

    public void unsetCompanyIds() {
      this.companyIds = null;
    }

    /** Returns true if field companyIds is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyIds() {
      return this.companyIds != null;
    }

    public void setCompanyIdsIsSet(boolean value) {
      if (!value) {
        this.companyIds = null;
      }
    }

    public String getTimespan() {
      return this.timespan;
    }

    public queryAwardRanking_args setTimespan(String timespan) {
      this.timespan = timespan;
      return this;
    }

    public void unsetTimespan() {
      this.timespan = null;
    }

    /** Returns true if field timespan is set (has been assigned a value) and false otherwise */
    public boolean isSetTimespan() {
      return this.timespan != null;
    }

    public void setTimespanIsSet(boolean value) {
      if (!value) {
        this.timespan = null;
      }
    }

    public int getPageSize() {
      return this.pageSize;
    }

    public queryAwardRanking_args setPageSize(int pageSize) {
      this.pageSize = pageSize;
      setPageSizeIsSet(true);
      return this;
    }

    public void unsetPageSize() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
    public boolean isSetPageSize() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
    }

    public void setPageSizeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
    }

    public int getPageNum() {
      return this.pageNum;
    }

    public queryAwardRanking_args setPageNum(int pageNum) {
      this.pageNum = pageNum;
      setPageNumIsSet(true);
      return this;
    }

    public void unsetPageNum() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    /** Returns true if field pageNum is set (has been assigned a value) and false otherwise */
    public boolean isSetPageNum() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAGENUM_ISSET_ID);
    }

    public void setPageNumIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAGENUM_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case COMPANY_IDS:
        if (value == null) {
          unsetCompanyIds();
        } else {
          setCompanyIds((java.util.List<Integer>)value);
        }
        break;

      case TIMESPAN:
        if (value == null) {
          unsetTimespan();
        } else {
          setTimespan((String)value);
        }
        break;

      case PAGE_SIZE:
        if (value == null) {
          unsetPageSize();
        } else {
          setPageSize((Integer)value);
        }
        break;

      case PAGE_NUM:
        if (value == null) {
          unsetPageNum();
        } else {
          setPageNum((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_IDS:
        return getCompanyIds();

      case TIMESPAN:
        return getTimespan();

      case PAGE_SIZE:
        return getPageSize();

      case PAGE_NUM:
        return getPageNum();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_IDS:
        return isSetCompanyIds();
      case TIMESPAN:
        return isSetTimespan();
      case PAGE_SIZE:
        return isSetPageSize();
      case PAGE_NUM:
        return isSetPageNum();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRanking_args)
        return this.equals((queryAwardRanking_args)that);
      return false;
    }

    public boolean equals(queryAwardRanking_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyIds = true && this.isSetCompanyIds();
      boolean that_present_companyIds = true && that.isSetCompanyIds();
      if (this_present_companyIds || that_present_companyIds) {
        if (!(this_present_companyIds && that_present_companyIds))
          return false;
        if (!this.companyIds.equals(that.companyIds))
          return false;
      }

      boolean this_present_timespan = true && this.isSetTimespan();
      boolean that_present_timespan = true && that.isSetTimespan();
      if (this_present_timespan || that_present_timespan) {
        if (!(this_present_timespan && that_present_timespan))
          return false;
        if (!this.timespan.equals(that.timespan))
          return false;
      }

      boolean this_present_pageSize = true;
      boolean that_present_pageSize = true;
      if (this_present_pageSize || that_present_pageSize) {
        if (!(this_present_pageSize && that_present_pageSize))
          return false;
        if (this.pageSize != that.pageSize)
          return false;
      }

      boolean this_present_pageNum = true;
      boolean that_present_pageNum = true;
      if (this_present_pageNum || that_present_pageNum) {
        if (!(this_present_pageNum && that_present_pageNum))
          return false;
        if (this.pageNum != that.pageNum)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyIds()) ? 131071 : 524287);
      if (isSetCompanyIds())
        hashCode = hashCode * 8191 + companyIds.hashCode();

      hashCode = hashCode * 8191 + ((isSetTimespan()) ? 131071 : 524287);
      if (isSetTimespan())
        hashCode = hashCode * 8191 + timespan.hashCode();

      hashCode = hashCode * 8191 + pageSize;

      hashCode = hashCode * 8191 + pageNum;

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRanking_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetCompanyIds()).compareTo(other.isSetCompanyIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyIds, other.companyIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTimespan()).compareTo(other.isSetTimespan());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimespan()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timespan, other.timespan);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageSize()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageNum()).compareTo(other.isSetPageNum());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageNum()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageNum, other.pageNum);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryAwardRanking_args(");
      boolean first = true;

      sb.append("companyIds:");
      if (this.companyIds == null) {
        sb.append("null");
      } else {
        sb.append(this.companyIds);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("timespan:");
      if (this.timespan == null) {
        sb.append("null");
      } else {
        sb.append(this.timespan);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageNum:");
      sb.append(this.pageNum);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRanking_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_argsStandardScheme getScheme() {
        return new queryAwardRanking_argsStandardScheme();
      }
    }

    private static class queryAwardRanking_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRanking_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                  struct.companyIds = new java.util.ArrayList<Integer>(_list0.size);
                  int _elem1;
                  for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                  {
                    _elem1 = iprot.readI32();
                    struct.companyIds.add(_elem1);
                  }
                  iprot.readListEnd();
                }
                struct.setCompanyIdsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TIMESPAN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.timespan = iprot.readString();
                struct.setTimespanIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_SIZE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageSize = iprot.readI32();
                struct.setPageSizeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // PAGE_NUM
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.pageNum = iprot.readI32();
                struct.setPageNumIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyIds != null) {
          oprot.writeFieldBegin(COMPANY_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.companyIds.size()));
            for (int _iter3 : struct.companyIds)
            {
              oprot.writeI32(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.timespan != null) {
          oprot.writeFieldBegin(TIMESPAN_FIELD_DESC);
          oprot.writeString(struct.timespan);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PAGE_NUM_FIELD_DESC);
        oprot.writeI32(struct.pageNum);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRanking_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_argsTupleScheme getScheme() {
        return new queryAwardRanking_argsTupleScheme();
      }
    }

    private static class queryAwardRanking_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRanking_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyIds()) {
          optionals.set(0);
        }
        if (struct.isSetTimespan()) {
          optionals.set(1);
        }
        if (struct.isSetPageSize()) {
          optionals.set(2);
        }
        if (struct.isSetPageNum()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetCompanyIds()) {
          {
            oprot.writeI32(struct.companyIds.size());
            for (int _iter4 : struct.companyIds)
            {
              oprot.writeI32(_iter4);
            }
          }
        }
        if (struct.isSetTimespan()) {
          oprot.writeString(struct.timespan);
        }
        if (struct.isSetPageSize()) {
          oprot.writeI32(struct.pageSize);
        }
        if (struct.isSetPageNum()) {
          oprot.writeI32(struct.pageNum);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.companyIds = new java.util.ArrayList<Integer>(_list5.size);
            int _elem6;
            for (int _i7 = 0; _i7 < _list5.size; ++_i7)
            {
              _elem6 = iprot.readI32();
              struct.companyIds.add(_elem6);
            }
          }
          struct.setCompanyIdsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.timespan = iprot.readString();
          struct.setTimespanIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageSize = iprot.readI32();
          struct.setPageSizeIsSet(true);
        }
        if (incoming.get(3)) {
          struct.pageNum = iprot.readI32();
          struct.setPageNumIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRanking_result implements org.apache.thrift.TBase<queryAwardRanking_result, queryAwardRanking_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRanking_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRanking_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRanking_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRanking_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRanking_result.class, metaDataMap);
    }

    public queryAwardRanking_result() {
    }

    public queryAwardRanking_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRanking_result(queryAwardRanking_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public queryAwardRanking_result deepCopy() {
      return new queryAwardRanking_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public queryAwardRanking_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRanking_result)
        return this.equals((queryAwardRanking_result)that);
      return false;
    }

    public boolean equals(queryAwardRanking_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRanking_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryAwardRanking_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRanking_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_resultStandardScheme getScheme() {
        return new queryAwardRanking_resultStandardScheme();
      }
    }

    private static class queryAwardRanking_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRanking_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRanking_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRanking_resultTupleScheme getScheme() {
        return new queryAwardRanking_resultTupleScheme();
      }
    }

    private static class queryAwardRanking_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRanking_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRanking_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRankingInWx_args implements org.apache.thrift.TBase<queryAwardRankingInWx_args, queryAwardRankingInWx_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRankingInWx_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRankingInWx_args");

    private static final org.apache.thrift.protocol.TField COMPANY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("companyIds", org.apache.thrift.protocol.TType.LIST, (short)1);
    private static final org.apache.thrift.protocol.TField TIMESPAN_FIELD_DESC = new org.apache.thrift.protocol.TField("timespan", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField EMPLOYEE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("employeeId", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRankingInWx_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRankingInWx_argsTupleSchemeFactory();

    public java.util.List<Integer> companyIds; // required
    public String timespan; // required
    public int employeeId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COMPANY_IDS((short)1, "companyIds"),
      TIMESPAN((short)2, "timespan"),
      EMPLOYEE_ID((short)3, "employeeId");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // COMPANY_IDS
            return COMPANY_IDS;
          case 2: // TIMESPAN
            return TIMESPAN;
          case 3: // EMPLOYEE_ID
            return EMPLOYEE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __EMPLOYEEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COMPANY_IDS, new org.apache.thrift.meta_data.FieldMetaData("companyIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
      tmpMap.put(_Fields.TIMESPAN, new org.apache.thrift.meta_data.FieldMetaData("timespan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.EMPLOYEE_ID, new org.apache.thrift.meta_data.FieldMetaData("employeeId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRankingInWx_args.class, metaDataMap);
    }

    public queryAwardRankingInWx_args() {
    }

    public queryAwardRankingInWx_args(
      java.util.List<Integer> companyIds,
      String timespan,
      int employeeId)
    {
      this();
      this.companyIds = companyIds;
      this.timespan = timespan;
      this.employeeId = employeeId;
      setEmployeeIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRankingInWx_args(queryAwardRankingInWx_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetCompanyIds()) {
        java.util.List<Integer> __this__companyIds = new java.util.ArrayList<Integer>(other.companyIds);
        this.companyIds = __this__companyIds;
      }
      if (other.isSetTimespan()) {
        this.timespan = other.timespan;
      }
      this.employeeId = other.employeeId;
    }

    public queryAwardRankingInWx_args deepCopy() {
      return new queryAwardRankingInWx_args(this);
    }

    @Override
    public void clear() {
      this.companyIds = null;
      this.timespan = null;
      setEmployeeIdIsSet(false);
      this.employeeId = 0;
    }

    public int getCompanyIdsSize() {
      return (this.companyIds == null) ? 0 : this.companyIds.size();
    }

    public java.util.Iterator<Integer> getCompanyIdsIterator() {
      return (this.companyIds == null) ? null : this.companyIds.iterator();
    }

    public void addToCompanyIds(int elem) {
      if (this.companyIds == null) {
        this.companyIds = new java.util.ArrayList<Integer>();
      }
      this.companyIds.add(elem);
    }

    public java.util.List<Integer> getCompanyIds() {
      return this.companyIds;
    }

    public queryAwardRankingInWx_args setCompanyIds(java.util.List<Integer> companyIds) {
      this.companyIds = companyIds;
      return this;
    }

    public void unsetCompanyIds() {
      this.companyIds = null;
    }

    /** Returns true if field companyIds is set (has been assigned a value) and false otherwise */
    public boolean isSetCompanyIds() {
      return this.companyIds != null;
    }

    public void setCompanyIdsIsSet(boolean value) {
      if (!value) {
        this.companyIds = null;
      }
    }

    public String getTimespan() {
      return this.timespan;
    }

    public queryAwardRankingInWx_args setTimespan(String timespan) {
      this.timespan = timespan;
      return this;
    }

    public void unsetTimespan() {
      this.timespan = null;
    }

    /** Returns true if field timespan is set (has been assigned a value) and false otherwise */
    public boolean isSetTimespan() {
      return this.timespan != null;
    }

    public void setTimespanIsSet(boolean value) {
      if (!value) {
        this.timespan = null;
      }
    }

    public int getEmployeeId() {
      return this.employeeId;
    }

    public queryAwardRankingInWx_args setEmployeeId(int employeeId) {
      this.employeeId = employeeId;
      setEmployeeIdIsSet(true);
      return this;
    }

    public void unsetEmployeeId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
    }

    /** Returns true if field employeeId is set (has been assigned a value) and false otherwise */
    public boolean isSetEmployeeId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID);
    }

    public void setEmployeeIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EMPLOYEEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case COMPANY_IDS:
        if (value == null) {
          unsetCompanyIds();
        } else {
          setCompanyIds((java.util.List<Integer>)value);
        }
        break;

      case TIMESPAN:
        if (value == null) {
          unsetTimespan();
        } else {
          setTimespan((String)value);
        }
        break;

      case EMPLOYEE_ID:
        if (value == null) {
          unsetEmployeeId();
        } else {
          setEmployeeId((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case COMPANY_IDS:
        return getCompanyIds();

      case TIMESPAN:
        return getTimespan();

      case EMPLOYEE_ID:
        return getEmployeeId();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case COMPANY_IDS:
        return isSetCompanyIds();
      case TIMESPAN:
        return isSetTimespan();
      case EMPLOYEE_ID:
        return isSetEmployeeId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRankingInWx_args)
        return this.equals((queryAwardRankingInWx_args)that);
      return false;
    }

    public boolean equals(queryAwardRankingInWx_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_companyIds = true && this.isSetCompanyIds();
      boolean that_present_companyIds = true && that.isSetCompanyIds();
      if (this_present_companyIds || that_present_companyIds) {
        if (!(this_present_companyIds && that_present_companyIds))
          return false;
        if (!this.companyIds.equals(that.companyIds))
          return false;
      }

      boolean this_present_timespan = true && this.isSetTimespan();
      boolean that_present_timespan = true && that.isSetTimespan();
      if (this_present_timespan || that_present_timespan) {
        if (!(this_present_timespan && that_present_timespan))
          return false;
        if (!this.timespan.equals(that.timespan))
          return false;
      }

      boolean this_present_employeeId = true;
      boolean that_present_employeeId = true;
      if (this_present_employeeId || that_present_employeeId) {
        if (!(this_present_employeeId && that_present_employeeId))
          return false;
        if (this.employeeId != that.employeeId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCompanyIds()) ? 131071 : 524287);
      if (isSetCompanyIds())
        hashCode = hashCode * 8191 + companyIds.hashCode();

      hashCode = hashCode * 8191 + ((isSetTimespan()) ? 131071 : 524287);
      if (isSetTimespan())
        hashCode = hashCode * 8191 + timespan.hashCode();

      hashCode = hashCode * 8191 + employeeId;

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRankingInWx_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetCompanyIds()).compareTo(other.isSetCompanyIds());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCompanyIds()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyIds, other.companyIds);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTimespan()).compareTo(other.isSetTimespan());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimespan()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timespan, other.timespan);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetEmployeeId()).compareTo(other.isSetEmployeeId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEmployeeId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.employeeId, other.employeeId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryAwardRankingInWx_args(");
      boolean first = true;

      sb.append("companyIds:");
      if (this.companyIds == null) {
        sb.append("null");
      } else {
        sb.append(this.companyIds);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("timespan:");
      if (this.timespan == null) {
        sb.append("null");
      } else {
        sb.append(this.timespan);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("employeeId:");
      sb.append(this.employeeId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRankingInWx_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_argsStandardScheme getScheme() {
        return new queryAwardRankingInWx_argsStandardScheme();
      }
    }

    private static class queryAwardRankingInWx_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRankingInWx_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // COMPANY_IDS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                  struct.companyIds = new java.util.ArrayList<Integer>(_list8.size);
                  int _elem9;
                  for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                  {
                    _elem9 = iprot.readI32();
                    struct.companyIds.add(_elem9);
                  }
                  iprot.readListEnd();
                }
                struct.setCompanyIdsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TIMESPAN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.timespan = iprot.readString();
                struct.setTimespanIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // EMPLOYEE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.employeeId = iprot.readI32();
                struct.setEmployeeIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.companyIds != null) {
          oprot.writeFieldBegin(COMPANY_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.companyIds.size()));
            for (int _iter11 : struct.companyIds)
            {
              oprot.writeI32(_iter11);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.timespan != null) {
          oprot.writeFieldBegin(TIMESPAN_FIELD_DESC);
          oprot.writeString(struct.timespan);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(EMPLOYEE_ID_FIELD_DESC);
        oprot.writeI32(struct.employeeId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRankingInWx_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_argsTupleScheme getScheme() {
        return new queryAwardRankingInWx_argsTupleScheme();
      }
    }

    private static class queryAwardRankingInWx_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRankingInWx_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCompanyIds()) {
          optionals.set(0);
        }
        if (struct.isSetTimespan()) {
          optionals.set(1);
        }
        if (struct.isSetEmployeeId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetCompanyIds()) {
          {
            oprot.writeI32(struct.companyIds.size());
            for (int _iter12 : struct.companyIds)
            {
              oprot.writeI32(_iter12);
            }
          }
        }
        if (struct.isSetTimespan()) {
          oprot.writeString(struct.timespan);
        }
        if (struct.isSetEmployeeId()) {
          oprot.writeI32(struct.employeeId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.companyIds = new java.util.ArrayList<Integer>(_list13.size);
            int _elem14;
            for (int _i15 = 0; _i15 < _list13.size; ++_i15)
            {
              _elem14 = iprot.readI32();
              struct.companyIds.add(_elem14);
            }
          }
          struct.setCompanyIdsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.timespan = iprot.readString();
          struct.setTimespanIsSet(true);
        }
        if (incoming.get(2)) {
          struct.employeeId = iprot.readI32();
          struct.setEmployeeIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class queryAwardRankingInWx_result implements org.apache.thrift.TBase<queryAwardRankingInWx_result, queryAwardRankingInWx_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryAwardRankingInWx_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryAwardRankingInWx_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new queryAwardRankingInWx_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new queryAwardRankingInWx_resultTupleSchemeFactory();

    public com.moseeker.thrift.gen.common.struct.Response success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.moseeker.thrift.gen.common.struct.Response.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryAwardRankingInWx_result.class, metaDataMap);
    }

    public queryAwardRankingInWx_result() {
    }

    public queryAwardRankingInWx_result(
      com.moseeker.thrift.gen.common.struct.Response success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryAwardRankingInWx_result(queryAwardRankingInWx_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.moseeker.thrift.gen.common.struct.Response(other.success);
      }
    }

    public queryAwardRankingInWx_result deepCopy() {
      return new queryAwardRankingInWx_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.moseeker.thrift.gen.common.struct.Response getSuccess() {
      return this.success;
    }

    public queryAwardRankingInWx_result setSuccess(com.moseeker.thrift.gen.common.struct.Response success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.moseeker.thrift.gen.common.struct.Response)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryAwardRankingInWx_result)
        return this.equals((queryAwardRankingInWx_result)that);
      return false;
    }

    public boolean equals(queryAwardRankingInWx_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(queryAwardRankingInWx_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryAwardRankingInWx_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryAwardRankingInWx_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_resultStandardScheme getScheme() {
        return new queryAwardRankingInWx_resultStandardScheme();
      }
    }

    private static class queryAwardRankingInWx_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<queryAwardRankingInWx_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.moseeker.thrift.gen.common.struct.Response();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryAwardRankingInWx_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public queryAwardRankingInWx_resultTupleScheme getScheme() {
        return new queryAwardRankingInWx_resultTupleScheme();
      }
    }

    private static class queryAwardRankingInWx_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<queryAwardRankingInWx_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryAwardRankingInWx_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.moseeker.thrift.gen.common.struct.Response();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
