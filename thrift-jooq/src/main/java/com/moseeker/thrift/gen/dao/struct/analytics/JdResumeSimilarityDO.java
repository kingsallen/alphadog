/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.dao.struct.analytics;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-15")
public class JdResumeSimilarityDO implements org.apache.thrift.TBase<JdResumeSimilarityDO, JdResumeSimilarityDO._Fields>, java.io.Serializable, Cloneable, Comparable<JdResumeSimilarityDO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JdResumeSimilarityDO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField HR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hrId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField JD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("jdId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField RESUME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("resumeId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SIM_WEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("simWeight", org.apache.thrift.protocol.TType.DOUBLE, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JdResumeSimilarityDOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JdResumeSimilarityDOTupleSchemeFactory();

  public int id; // optional
  public int hrId; // optional
  public int jdId; // optional
  public java.lang.String resumeId; // optional
  public double simWeight; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    HR_ID((short)2, "hrId"),
    JD_ID((short)3, "jdId"),
    RESUME_ID((short)4, "resumeId"),
    SIM_WEIGHT((short)5, "simWeight");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // HR_ID
          return HR_ID;
        case 3: // JD_ID
          return JD_ID;
        case 4: // RESUME_ID
          return RESUME_ID;
        case 5: // SIM_WEIGHT
          return SIM_WEIGHT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __HRID_ISSET_ID = 1;
  private static final int __JDID_ISSET_ID = 2;
  private static final int __SIMWEIGHT_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.HR_ID,_Fields.JD_ID,_Fields.RESUME_ID,_Fields.SIM_WEIGHT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HR_ID, new org.apache.thrift.meta_data.FieldMetaData("hrId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JD_ID, new org.apache.thrift.meta_data.FieldMetaData("jdId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RESUME_ID, new org.apache.thrift.meta_data.FieldMetaData("resumeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIM_WEIGHT, new org.apache.thrift.meta_data.FieldMetaData("simWeight", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JdResumeSimilarityDO.class, metaDataMap);
  }

  public JdResumeSimilarityDO() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JdResumeSimilarityDO(JdResumeSimilarityDO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.hrId = other.hrId;
    this.jdId = other.jdId;
    if (other.isSetResumeId()) {
      this.resumeId = other.resumeId;
    }
    this.simWeight = other.simWeight;
  }

  public JdResumeSimilarityDO deepCopy() {
    return new JdResumeSimilarityDO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setHrIdIsSet(false);
    this.hrId = 0;
    setJdIdIsSet(false);
    this.jdId = 0;
    this.resumeId = null;
    setSimWeightIsSet(false);
    this.simWeight = 0.0;
  }

  public int getId() {
    return this.id;
  }

  public JdResumeSimilarityDO setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getHrId() {
    return this.hrId;
  }

  public JdResumeSimilarityDO setHrId(int hrId) {
    this.hrId = hrId;
    setHrIdIsSet(true);
    return this;
  }

  public void unsetHrId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRID_ISSET_ID);
  }

  /** Returns true if field hrId is set (has been assigned a value) and false otherwise */
  public boolean isSetHrId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRID_ISSET_ID);
  }

  public void setHrIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRID_ISSET_ID, value);
  }

  public int getJdId() {
    return this.jdId;
  }

  public JdResumeSimilarityDO setJdId(int jdId) {
    this.jdId = jdId;
    setJdIdIsSet(true);
    return this;
  }

  public void unsetJdId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JDID_ISSET_ID);
  }

  /** Returns true if field jdId is set (has been assigned a value) and false otherwise */
  public boolean isSetJdId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JDID_ISSET_ID);
  }

  public void setJdIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JDID_ISSET_ID, value);
  }

  public java.lang.String getResumeId() {
    return this.resumeId;
  }

  public JdResumeSimilarityDO setResumeId(java.lang.String resumeId) {
    this.resumeId = resumeId;
    return this;
  }

  public void unsetResumeId() {
    this.resumeId = null;
  }

  /** Returns true if field resumeId is set (has been assigned a value) and false otherwise */
  public boolean isSetResumeId() {
    return this.resumeId != null;
  }

  public void setResumeIdIsSet(boolean value) {
    if (!value) {
      this.resumeId = null;
    }
  }

  public double getSimWeight() {
    return this.simWeight;
  }

  public JdResumeSimilarityDO setSimWeight(double simWeight) {
    this.simWeight = simWeight;
    setSimWeightIsSet(true);
    return this;
  }

  public void unsetSimWeight() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SIMWEIGHT_ISSET_ID);
  }

  /** Returns true if field simWeight is set (has been assigned a value) and false otherwise */
  public boolean isSetSimWeight() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SIMWEIGHT_ISSET_ID);
  }

  public void setSimWeightIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SIMWEIGHT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    case HR_ID:
      if (value == null) {
        unsetHrId();
      } else {
        setHrId((java.lang.Integer)value);
      }
      break;

    case JD_ID:
      if (value == null) {
        unsetJdId();
      } else {
        setJdId((java.lang.Integer)value);
      }
      break;

    case RESUME_ID:
      if (value == null) {
        unsetResumeId();
      } else {
        setResumeId((java.lang.String)value);
      }
      break;

    case SIM_WEIGHT:
      if (value == null) {
        unsetSimWeight();
      } else {
        setSimWeight((java.lang.Double)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case HR_ID:
      return getHrId();

    case JD_ID:
      return getJdId();

    case RESUME_ID:
      return getResumeId();

    case SIM_WEIGHT:
      return getSimWeight();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case HR_ID:
      return isSetHrId();
    case JD_ID:
      return isSetJdId();
    case RESUME_ID:
      return isSetResumeId();
    case SIM_WEIGHT:
      return isSetSimWeight();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof JdResumeSimilarityDO)
      return this.equals((JdResumeSimilarityDO)that);
    return false;
  }

  public boolean equals(JdResumeSimilarityDO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_hrId = true && this.isSetHrId();
    boolean that_present_hrId = true && that.isSetHrId();
    if (this_present_hrId || that_present_hrId) {
      if (!(this_present_hrId && that_present_hrId))
        return false;
      if (this.hrId != that.hrId)
        return false;
    }

    boolean this_present_jdId = true && this.isSetJdId();
    boolean that_present_jdId = true && that.isSetJdId();
    if (this_present_jdId || that_present_jdId) {
      if (!(this_present_jdId && that_present_jdId))
        return false;
      if (this.jdId != that.jdId)
        return false;
    }

    boolean this_present_resumeId = true && this.isSetResumeId();
    boolean that_present_resumeId = true && that.isSetResumeId();
    if (this_present_resumeId || that_present_resumeId) {
      if (!(this_present_resumeId && that_present_resumeId))
        return false;
      if (!this.resumeId.equals(that.resumeId))
        return false;
    }

    boolean this_present_simWeight = true && this.isSetSimWeight();
    boolean that_present_simWeight = true && that.isSetSimWeight();
    if (this_present_simWeight || that_present_simWeight) {
      if (!(this_present_simWeight && that_present_simWeight))
        return false;
      if (this.simWeight != that.simWeight)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetHrId()) ? 131071 : 524287);
    if (isSetHrId())
      hashCode = hashCode * 8191 + hrId;

    hashCode = hashCode * 8191 + ((isSetJdId()) ? 131071 : 524287);
    if (isSetJdId())
      hashCode = hashCode * 8191 + jdId;

    hashCode = hashCode * 8191 + ((isSetResumeId()) ? 131071 : 524287);
    if (isSetResumeId())
      hashCode = hashCode * 8191 + resumeId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSimWeight()) ? 131071 : 524287);
    if (isSetSimWeight())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(simWeight);

    return hashCode;
  }

  @Override
  public int compareTo(JdResumeSimilarityDO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHrId()).compareTo(other.isSetHrId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHrId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hrId, other.hrId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJdId()).compareTo(other.isSetJdId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJdId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jdId, other.jdId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResumeId()).compareTo(other.isSetResumeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResumeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resumeId, other.resumeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSimWeight()).compareTo(other.isSetSimWeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimWeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.simWeight, other.simWeight);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("JdResumeSimilarityDO(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetHrId()) {
      if (!first) sb.append(", ");
      sb.append("hrId:");
      sb.append(this.hrId);
      first = false;
    }
    if (isSetJdId()) {
      if (!first) sb.append(", ");
      sb.append("jdId:");
      sb.append(this.jdId);
      first = false;
    }
    if (isSetResumeId()) {
      if (!first) sb.append(", ");
      sb.append("resumeId:");
      if (this.resumeId == null) {
        sb.append("null");
      } else {
        sb.append(this.resumeId);
      }
      first = false;
    }
    if (isSetSimWeight()) {
      if (!first) sb.append(", ");
      sb.append("simWeight:");
      sb.append(this.simWeight);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JdResumeSimilarityDOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JdResumeSimilarityDOStandardScheme getScheme() {
      return new JdResumeSimilarityDOStandardScheme();
    }
  }

  private static class JdResumeSimilarityDOStandardScheme extends org.apache.thrift.scheme.StandardScheme<JdResumeSimilarityDO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JdResumeSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hrId = iprot.readI32();
              struct.setHrIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jdId = iprot.readI32();
              struct.setJdIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESUME_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resumeId = iprot.readString();
              struct.setResumeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SIM_WEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.simWeight = iprot.readDouble();
              struct.setSimWeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JdResumeSimilarityDO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHrId()) {
        oprot.writeFieldBegin(HR_ID_FIELD_DESC);
        oprot.writeI32(struct.hrId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetJdId()) {
        oprot.writeFieldBegin(JD_ID_FIELD_DESC);
        oprot.writeI32(struct.jdId);
        oprot.writeFieldEnd();
      }
      if (struct.resumeId != null) {
        if (struct.isSetResumeId()) {
          oprot.writeFieldBegin(RESUME_ID_FIELD_DESC);
          oprot.writeString(struct.resumeId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSimWeight()) {
        oprot.writeFieldBegin(SIM_WEIGHT_FIELD_DESC);
        oprot.writeDouble(struct.simWeight);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JdResumeSimilarityDOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JdResumeSimilarityDOTupleScheme getScheme() {
      return new JdResumeSimilarityDOTupleScheme();
    }
  }

  private static class JdResumeSimilarityDOTupleScheme extends org.apache.thrift.scheme.TupleScheme<JdResumeSimilarityDO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JdResumeSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetHrId()) {
        optionals.set(1);
      }
      if (struct.isSetJdId()) {
        optionals.set(2);
      }
      if (struct.isSetResumeId()) {
        optionals.set(3);
      }
      if (struct.isSetSimWeight()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetHrId()) {
        oprot.writeI32(struct.hrId);
      }
      if (struct.isSetJdId()) {
        oprot.writeI32(struct.jdId);
      }
      if (struct.isSetResumeId()) {
        oprot.writeString(struct.resumeId);
      }
      if (struct.isSetSimWeight()) {
        oprot.writeDouble(struct.simWeight);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JdResumeSimilarityDO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.hrId = iprot.readI32();
        struct.setHrIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.jdId = iprot.readI32();
        struct.setJdIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.resumeId = iprot.readString();
        struct.setResumeIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.simWeight = iprot.readDouble();
        struct.setSimWeightIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

