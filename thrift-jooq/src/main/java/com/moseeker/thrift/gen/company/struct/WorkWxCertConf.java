/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-08-29")
public class WorkWxCertConf implements org.apache.thrift.TBase<WorkWxCertConf, WorkWxCertConf._Fields>, java.io.Serializable, Cloneable, Comparable<WorkWxCertConf> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WorkWxCertConf");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CORPID_FIELD_DESC = new org.apache.thrift.protocol.TField("corpid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SECRET_FIELD_DESC = new org.apache.thrift.protocol.TField("secret", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ERR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("errCode", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ERR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("errMsg", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ACCESS_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("accessToken", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField JSAPI_TICKET_FIELD_DESC = new org.apache.thrift.protocol.TField("jsapiTicket", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WorkWxCertConfStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WorkWxCertConfTupleSchemeFactory();

  public int companyId; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String corpid; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String secret; // optional
  public int errCode; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String errMsg; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String accessToken; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String jsapiTicket; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "companyId"),
    CORPID((short)2, "corpid"),
    SECRET((short)3, "secret"),
    ERR_CODE((short)4, "errCode"),
    ERR_MSG((short)5, "errMsg"),
    ACCESS_TOKEN((short)6, "accessToken"),
    JSAPI_TICKET((short)7, "jsapiTicket");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // CORPID
          return CORPID;
        case 3: // SECRET
          return SECRET;
        case 4: // ERR_CODE
          return ERR_CODE;
        case 5: // ERR_MSG
          return ERR_MSG;
        case 6: // ACCESS_TOKEN
          return ACCESS_TOKEN;
        case 7: // JSAPI_TICKET
          return JSAPI_TICKET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANYID_ISSET_ID = 0;
  private static final int __ERRCODE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.CORPID,_Fields.SECRET,_Fields.ERR_CODE,_Fields.ERR_MSG,_Fields.ACCESS_TOKEN,_Fields.JSAPI_TICKET};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CORPID, new org.apache.thrift.meta_data.FieldMetaData("corpid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SECRET, new org.apache.thrift.meta_data.FieldMetaData("secret", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERR_CODE, new org.apache.thrift.meta_data.FieldMetaData("errCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ERR_MSG, new org.apache.thrift.meta_data.FieldMetaData("errMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCESS_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("accessToken", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JSAPI_TICKET, new org.apache.thrift.meta_data.FieldMetaData("jsapiTicket", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WorkWxCertConf.class, metaDataMap);
  }

  public WorkWxCertConf() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WorkWxCertConf(WorkWxCertConf other) {
    __isset_bitfield = other.__isset_bitfield;
    this.companyId = other.companyId;
    if (other.isSetCorpid()) {
      this.corpid = other.corpid;
    }
    if (other.isSetSecret()) {
      this.secret = other.secret;
    }
    this.errCode = other.errCode;
    if (other.isSetErrMsg()) {
      this.errMsg = other.errMsg;
    }
    if (other.isSetAccessToken()) {
      this.accessToken = other.accessToken;
    }
    if (other.isSetJsapiTicket()) {
      this.jsapiTicket = other.jsapiTicket;
    }
  }

  public WorkWxCertConf deepCopy() {
    return new WorkWxCertConf(this);
  }

  @Override
  public void clear() {
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.corpid = null;
    this.secret = null;
    setErrCodeIsSet(false);
    this.errCode = 0;
    this.errMsg = null;
    this.accessToken = null;
    this.jsapiTicket = null;
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public WorkWxCertConf setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCorpid() {
    return this.corpid;
  }

  public WorkWxCertConf setCorpid(@org.apache.thrift.annotation.Nullable java.lang.String corpid) {
    this.corpid = corpid;
    return this;
  }

  public void unsetCorpid() {
    this.corpid = null;
  }

  /** Returns true if field corpid is set (has been assigned a value) and false otherwise */
  public boolean isSetCorpid() {
    return this.corpid != null;
  }

  public void setCorpidIsSet(boolean value) {
    if (!value) {
      this.corpid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSecret() {
    return this.secret;
  }

  public WorkWxCertConf setSecret(@org.apache.thrift.annotation.Nullable java.lang.String secret) {
    this.secret = secret;
    return this;
  }

  public void unsetSecret() {
    this.secret = null;
  }

  /** Returns true if field secret is set (has been assigned a value) and false otherwise */
  public boolean isSetSecret() {
    return this.secret != null;
  }

  public void setSecretIsSet(boolean value) {
    if (!value) {
      this.secret = null;
    }
  }

  public int getErrCode() {
    return this.errCode;
  }

  public WorkWxCertConf setErrCode(int errCode) {
    this.errCode = errCode;
    setErrCodeIsSet(true);
    return this;
  }

  public void unsetErrCode() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ERRCODE_ISSET_ID);
  }

  /** Returns true if field errCode is set (has been assigned a value) and false otherwise */
  public boolean isSetErrCode() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ERRCODE_ISSET_ID);
  }

  public void setErrCodeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ERRCODE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getErrMsg() {
    return this.errMsg;
  }

  public WorkWxCertConf setErrMsg(@org.apache.thrift.annotation.Nullable java.lang.String errMsg) {
    this.errMsg = errMsg;
    return this;
  }

  public void unsetErrMsg() {
    this.errMsg = null;
  }

  /** Returns true if field errMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetErrMsg() {
    return this.errMsg != null;
  }

  public void setErrMsgIsSet(boolean value) {
    if (!value) {
      this.errMsg = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAccessToken() {
    return this.accessToken;
  }

  public WorkWxCertConf setAccessToken(@org.apache.thrift.annotation.Nullable java.lang.String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  public void unsetAccessToken() {
    this.accessToken = null;
  }

  /** Returns true if field accessToken is set (has been assigned a value) and false otherwise */
  public boolean isSetAccessToken() {
    return this.accessToken != null;
  }

  public void setAccessTokenIsSet(boolean value) {
    if (!value) {
      this.accessToken = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getJsapiTicket() {
    return this.jsapiTicket;
  }

  public WorkWxCertConf setJsapiTicket(@org.apache.thrift.annotation.Nullable java.lang.String jsapiTicket) {
    this.jsapiTicket = jsapiTicket;
    return this;
  }

  public void unsetJsapiTicket() {
    this.jsapiTicket = null;
  }

  /** Returns true if field jsapiTicket is set (has been assigned a value) and false otherwise */
  public boolean isSetJsapiTicket() {
    return this.jsapiTicket != null;
  }

  public void setJsapiTicketIsSet(boolean value) {
    if (!value) {
      this.jsapiTicket = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((java.lang.Integer)value);
      }
      break;

    case CORPID:
      if (value == null) {
        unsetCorpid();
      } else {
        setCorpid((java.lang.String)value);
      }
      break;

    case SECRET:
      if (value == null) {
        unsetSecret();
      } else {
        setSecret((java.lang.String)value);
      }
      break;

    case ERR_CODE:
      if (value == null) {
        unsetErrCode();
      } else {
        setErrCode((java.lang.Integer)value);
      }
      break;

    case ERR_MSG:
      if (value == null) {
        unsetErrMsg();
      } else {
        setErrMsg((java.lang.String)value);
      }
      break;

    case ACCESS_TOKEN:
      if (value == null) {
        unsetAccessToken();
      } else {
        setAccessToken((java.lang.String)value);
      }
      break;

    case JSAPI_TICKET:
      if (value == null) {
        unsetJsapiTicket();
      } else {
        setJsapiTicket((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return getCompanyId();

    case CORPID:
      return getCorpid();

    case SECRET:
      return getSecret();

    case ERR_CODE:
      return getErrCode();

    case ERR_MSG:
      return getErrMsg();

    case ACCESS_TOKEN:
      return getAccessToken();

    case JSAPI_TICKET:
      return getJsapiTicket();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompanyId();
    case CORPID:
      return isSetCorpid();
    case SECRET:
      return isSetSecret();
    case ERR_CODE:
      return isSetErrCode();
    case ERR_MSG:
      return isSetErrMsg();
    case ACCESS_TOKEN:
      return isSetAccessToken();
    case JSAPI_TICKET:
      return isSetJsapiTicket();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WorkWxCertConf)
      return this.equals((WorkWxCertConf)that);
    return false;
  }

  public boolean equals(WorkWxCertConf that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_corpid = true && this.isSetCorpid();
    boolean that_present_corpid = true && that.isSetCorpid();
    if (this_present_corpid || that_present_corpid) {
      if (!(this_present_corpid && that_present_corpid))
        return false;
      if (!this.corpid.equals(that.corpid))
        return false;
    }

    boolean this_present_secret = true && this.isSetSecret();
    boolean that_present_secret = true && that.isSetSecret();
    if (this_present_secret || that_present_secret) {
      if (!(this_present_secret && that_present_secret))
        return false;
      if (!this.secret.equals(that.secret))
        return false;
    }

    boolean this_present_errCode = true && this.isSetErrCode();
    boolean that_present_errCode = true && that.isSetErrCode();
    if (this_present_errCode || that_present_errCode) {
      if (!(this_present_errCode && that_present_errCode))
        return false;
      if (this.errCode != that.errCode)
        return false;
    }

    boolean this_present_errMsg = true && this.isSetErrMsg();
    boolean that_present_errMsg = true && that.isSetErrMsg();
    if (this_present_errMsg || that_present_errMsg) {
      if (!(this_present_errMsg && that_present_errMsg))
        return false;
      if (!this.errMsg.equals(that.errMsg))
        return false;
    }

    boolean this_present_accessToken = true && this.isSetAccessToken();
    boolean that_present_accessToken = true && that.isSetAccessToken();
    if (this_present_accessToken || that_present_accessToken) {
      if (!(this_present_accessToken && that_present_accessToken))
        return false;
      if (!this.accessToken.equals(that.accessToken))
        return false;
    }

    boolean this_present_jsapiTicket = true && this.isSetJsapiTicket();
    boolean that_present_jsapiTicket = true && that.isSetJsapiTicket();
    if (this_present_jsapiTicket || that_present_jsapiTicket) {
      if (!(this_present_jsapiTicket && that_present_jsapiTicket))
        return false;
      if (!this.jsapiTicket.equals(that.jsapiTicket))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCompanyId()) ? 131071 : 524287);
    if (isSetCompanyId())
      hashCode = hashCode * 8191 + companyId;

    hashCode = hashCode * 8191 + ((isSetCorpid()) ? 131071 : 524287);
    if (isSetCorpid())
      hashCode = hashCode * 8191 + corpid.hashCode();

    hashCode = hashCode * 8191 + ((isSetSecret()) ? 131071 : 524287);
    if (isSetSecret())
      hashCode = hashCode * 8191 + secret.hashCode();

    hashCode = hashCode * 8191 + ((isSetErrCode()) ? 131071 : 524287);
    if (isSetErrCode())
      hashCode = hashCode * 8191 + errCode;

    hashCode = hashCode * 8191 + ((isSetErrMsg()) ? 131071 : 524287);
    if (isSetErrMsg())
      hashCode = hashCode * 8191 + errMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSetAccessToken()) ? 131071 : 524287);
    if (isSetAccessToken())
      hashCode = hashCode * 8191 + accessToken.hashCode();

    hashCode = hashCode * 8191 + ((isSetJsapiTicket()) ? 131071 : 524287);
    if (isSetJsapiTicket())
      hashCode = hashCode * 8191 + jsapiTicket.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WorkWxCertConf other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCorpid()).compareTo(other.isSetCorpid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCorpid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.corpid, other.corpid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSecret()).compareTo(other.isSetSecret());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecret()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secret, other.secret);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErrCode()).compareTo(other.isSetErrCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errCode, other.errCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErrMsg()).compareTo(other.isSetErrMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errMsg, other.errMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAccessToken()).compareTo(other.isSetAccessToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccessToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accessToken, other.accessToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJsapiTicket()).compareTo(other.isSetJsapiTicket());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJsapiTicket()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jsapiTicket, other.jsapiTicket);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WorkWxCertConf(");
    boolean first = true;

    if (isSetCompanyId()) {
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetCorpid()) {
      if (!first) sb.append(", ");
      sb.append("corpid:");
      if (this.corpid == null) {
        sb.append("null");
      } else {
        sb.append(this.corpid);
      }
      first = false;
    }
    if (isSetSecret()) {
      if (!first) sb.append(", ");
      sb.append("secret:");
      if (this.secret == null) {
        sb.append("null");
      } else {
        sb.append(this.secret);
      }
      first = false;
    }
    if (isSetErrCode()) {
      if (!first) sb.append(", ");
      sb.append("errCode:");
      sb.append(this.errCode);
      first = false;
    }
    if (isSetErrMsg()) {
      if (!first) sb.append(", ");
      sb.append("errMsg:");
      if (this.errMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.errMsg);
      }
      first = false;
    }
    if (isSetAccessToken()) {
      if (!first) sb.append(", ");
      sb.append("accessToken:");
      if (this.accessToken == null) {
        sb.append("null");
      } else {
        sb.append(this.accessToken);
      }
      first = false;
    }
    if (isSetJsapiTicket()) {
      if (!first) sb.append(", ");
      sb.append("jsapiTicket:");
      if (this.jsapiTicket == null) {
        sb.append("null");
      } else {
        sb.append(this.jsapiTicket);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WorkWxCertConfStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WorkWxCertConfStandardScheme getScheme() {
      return new WorkWxCertConfStandardScheme();
    }
  }

  private static class WorkWxCertConfStandardScheme extends org.apache.thrift.scheme.StandardScheme<WorkWxCertConf> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WorkWxCertConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CORPID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.corpid = iprot.readString();
              struct.setCorpidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SECRET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.secret = iprot.readString();
              struct.setSecretIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ERR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.errCode = iprot.readI32();
              struct.setErrCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ERR_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errMsg = iprot.readString();
              struct.setErrMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ACCESS_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accessToken = iprot.readString();
              struct.setAccessTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // JSAPI_TICKET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jsapiTicket = iprot.readString();
              struct.setJsapiTicketIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WorkWxCertConf struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.corpid != null) {
        if (struct.isSetCorpid()) {
          oprot.writeFieldBegin(CORPID_FIELD_DESC);
          oprot.writeString(struct.corpid);
          oprot.writeFieldEnd();
        }
      }
      if (struct.secret != null) {
        if (struct.isSetSecret()) {
          oprot.writeFieldBegin(SECRET_FIELD_DESC);
          oprot.writeString(struct.secret);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetErrCode()) {
        oprot.writeFieldBegin(ERR_CODE_FIELD_DESC);
        oprot.writeI32(struct.errCode);
        oprot.writeFieldEnd();
      }
      if (struct.errMsg != null) {
        if (struct.isSetErrMsg()) {
          oprot.writeFieldBegin(ERR_MSG_FIELD_DESC);
          oprot.writeString(struct.errMsg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accessToken != null) {
        if (struct.isSetAccessToken()) {
          oprot.writeFieldBegin(ACCESS_TOKEN_FIELD_DESC);
          oprot.writeString(struct.accessToken);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jsapiTicket != null) {
        if (struct.isSetJsapiTicket()) {
          oprot.writeFieldBegin(JSAPI_TICKET_FIELD_DESC);
          oprot.writeString(struct.jsapiTicket);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WorkWxCertConfTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WorkWxCertConfTupleScheme getScheme() {
      return new WorkWxCertConfTupleScheme();
    }
  }

  private static class WorkWxCertConfTupleScheme extends org.apache.thrift.scheme.TupleScheme<WorkWxCertConf> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WorkWxCertConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCompanyId()) {
        optionals.set(0);
      }
      if (struct.isSetCorpid()) {
        optionals.set(1);
      }
      if (struct.isSetSecret()) {
        optionals.set(2);
      }
      if (struct.isSetErrCode()) {
        optionals.set(3);
      }
      if (struct.isSetErrMsg()) {
        optionals.set(4);
      }
      if (struct.isSetAccessToken()) {
        optionals.set(5);
      }
      if (struct.isSetJsapiTicket()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetCorpid()) {
        oprot.writeString(struct.corpid);
      }
      if (struct.isSetSecret()) {
        oprot.writeString(struct.secret);
      }
      if (struct.isSetErrCode()) {
        oprot.writeI32(struct.errCode);
      }
      if (struct.isSetErrMsg()) {
        oprot.writeString(struct.errMsg);
      }
      if (struct.isSetAccessToken()) {
        oprot.writeString(struct.accessToken);
      }
      if (struct.isSetJsapiTicket()) {
        oprot.writeString(struct.jsapiTicket);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WorkWxCertConf struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.corpid = iprot.readString();
        struct.setCorpidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.secret = iprot.readString();
        struct.setSecretIsSet(true);
      }
      if (incoming.get(3)) {
        struct.errCode = iprot.readI32();
        struct.setErrCodeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.errMsg = iprot.readString();
        struct.setErrMsgIsSet(true);
      }
      if (incoming.get(5)) {
        struct.accessToken = iprot.readString();
        struct.setAccessTokenIsSet(true);
      }
      if (incoming.get(6)) {
        struct.jsapiTicket = iprot.readString();
        struct.setJsapiTicketIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

