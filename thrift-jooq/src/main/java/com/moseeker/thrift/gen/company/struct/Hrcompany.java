/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.company.struct;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-09-17")
public class Hrcompany implements org.apache.thrift.TBase<Hrcompany, Hrcompany._Fields>, java.io.Serializable, Cloneable, Comparable<Hrcompany> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Hrcompany");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField INTRODUCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("introduction", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SCALE_FIELD_DESC = new org.apache.thrift.protocol.TField("scale", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("property", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField INDUSTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("industry", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField HOMEPAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("homepage", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("logo", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ABBREVIATION_FIELD_DESC = new org.apache.thrift.protocol.TField("abbreviation", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField IMPRESSION_FIELD_DESC = new org.apache.thrift.protocol.TField("impression", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField BANNER_FIELD_DESC = new org.apache.thrift.protocol.TField("banner", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PARENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("parent_id", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField HRACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("hraccount_id", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField DISABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("disable", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("create_time", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("update_time", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField FEATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("feature", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new HrcompanyStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new HrcompanyTupleSchemeFactory();

  public int id; // optional
  public int type; // optional
  public String name; // optional
  public String introduction; // optional
  public String scale; // optional
  public String address; // optional
  public int property; // optional
  public String industry; // optional
  public String homepage; // optional
  public String logo; // optional
  public String abbreviation; // optional
  public String impression; // optional
  public String banner; // optional
  public int parent_id; // optional
  public int hraccount_id; // optional
  public int disable; // optional
  public String create_time; // optional
  public String update_time; // optional
  public int source; // optional
  public String feature; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TYPE((short)2, "type"),
    NAME((short)3, "name"),
    INTRODUCTION((short)4, "introduction"),
    SCALE((short)5, "scale"),
    ADDRESS((short)6, "address"),
    PROPERTY((short)7, "property"),
    INDUSTRY((short)8, "industry"),
    HOMEPAGE((short)9, "homepage"),
    LOGO((short)10, "logo"),
    ABBREVIATION((short)11, "abbreviation"),
    IMPRESSION((short)12, "impression"),
    BANNER((short)13, "banner"),
    PARENT_ID((short)14, "parent_id"),
    HRACCOUNT_ID((short)15, "hraccount_id"),
    DISABLE((short)16, "disable"),
    CREATE_TIME((short)17, "create_time"),
    UPDATE_TIME((short)18, "update_time"),
    SOURCE((short)19, "source"),
    FEATURE((short)20, "feature");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TYPE
          return TYPE;
        case 3: // NAME
          return NAME;
        case 4: // INTRODUCTION
          return INTRODUCTION;
        case 5: // SCALE
          return SCALE;
        case 6: // ADDRESS
          return ADDRESS;
        case 7: // PROPERTY
          return PROPERTY;
        case 8: // INDUSTRY
          return INDUSTRY;
        case 9: // HOMEPAGE
          return HOMEPAGE;
        case 10: // LOGO
          return LOGO;
        case 11: // ABBREVIATION
          return ABBREVIATION;
        case 12: // IMPRESSION
          return IMPRESSION;
        case 13: // BANNER
          return BANNER;
        case 14: // PARENT_ID
          return PARENT_ID;
        case 15: // HRACCOUNT_ID
          return HRACCOUNT_ID;
        case 16: // DISABLE
          return DISABLE;
        case 17: // CREATE_TIME
          return CREATE_TIME;
        case 18: // UPDATE_TIME
          return UPDATE_TIME;
        case 19: // SOURCE
          return SOURCE;
        case 20: // FEATURE
          return FEATURE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __TYPE_ISSET_ID = 1;
  private static final int __PROPERTY_ISSET_ID = 2;
  private static final int __PARENT_ID_ISSET_ID = 3;
  private static final int __HRACCOUNT_ID_ISSET_ID = 4;
  private static final int __DISABLE_ISSET_ID = 5;
  private static final int __SOURCE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.TYPE,_Fields.NAME,_Fields.INTRODUCTION,_Fields.SCALE,_Fields.ADDRESS,_Fields.PROPERTY,_Fields.INDUSTRY,_Fields.HOMEPAGE,_Fields.LOGO,_Fields.ABBREVIATION,_Fields.IMPRESSION,_Fields.BANNER,_Fields.PARENT_ID,_Fields.HRACCOUNT_ID,_Fields.DISABLE,_Fields.CREATE_TIME,_Fields.UPDATE_TIME,_Fields.SOURCE,_Fields.FEATURE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTRODUCTION, new org.apache.thrift.meta_data.FieldMetaData("introduction", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCALE, new org.apache.thrift.meta_data.FieldMetaData("scale", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INDUSTRY, new org.apache.thrift.meta_data.FieldMetaData("industry", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOMEPAGE, new org.apache.thrift.meta_data.FieldMetaData("homepage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGO, new org.apache.thrift.meta_data.FieldMetaData("logo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ABBREVIATION, new org.apache.thrift.meta_data.FieldMetaData("abbreviation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMPRESSION, new org.apache.thrift.meta_data.FieldMetaData("impression", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANNER, new org.apache.thrift.meta_data.FieldMetaData("banner", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARENT_ID, new org.apache.thrift.meta_data.FieldMetaData("parent_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HRACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("hraccount_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DISABLE, new org.apache.thrift.meta_data.FieldMetaData("disable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("create_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("update_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Timestamp")));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FEATURE, new org.apache.thrift.meta_data.FieldMetaData("feature", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Hrcompany.class, metaDataMap);
  }

  public Hrcompany() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Hrcompany(Hrcompany other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.type = other.type;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetIntroduction()) {
      this.introduction = other.introduction;
    }
    if (other.isSetScale()) {
      this.scale = other.scale;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.property = other.property;
    if (other.isSetIndustry()) {
      this.industry = other.industry;
    }
    if (other.isSetHomepage()) {
      this.homepage = other.homepage;
    }
    if (other.isSetLogo()) {
      this.logo = other.logo;
    }
    if (other.isSetAbbreviation()) {
      this.abbreviation = other.abbreviation;
    }
    if (other.isSetImpression()) {
      this.impression = other.impression;
    }
    if (other.isSetBanner()) {
      this.banner = other.banner;
    }
    this.parent_id = other.parent_id;
    this.hraccount_id = other.hraccount_id;
    this.disable = other.disable;
    if (other.isSetCreate_time()) {
      this.create_time = other.create_time;
    }
    if (other.isSetUpdate_time()) {
      this.update_time = other.update_time;
    }
    this.source = other.source;
    if (other.isSetFeature()) {
      this.feature = other.feature;
    }
  }

  public Hrcompany deepCopy() {
    return new Hrcompany(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setTypeIsSet(false);
    this.type = 0;
    this.name = null;
    this.introduction = null;
    this.scale = null;
    this.address = null;
    setPropertyIsSet(false);
    this.property = 0;
    this.industry = null;
    this.homepage = null;
    this.logo = null;
    this.abbreviation = null;
    this.impression = null;
    this.banner = null;
    setParent_idIsSet(false);
    this.parent_id = 0;
    setHraccount_idIsSet(false);
    this.hraccount_id = 0;
    setDisableIsSet(false);
    this.disable = 0;
    this.create_time = null;
    this.update_time = null;
    setSourceIsSet(false);
    this.source = 0;
    this.feature = null;
  }

  public int getId() {
    return this.id;
  }

  public Hrcompany setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getType() {
    return this.type;
  }

  public Hrcompany setType(int type) {
    this.type = type;
    setTypeIsSet(true);
    return this;
  }

  public void unsetType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TYPE_ISSET_ID);
  }

  public void setTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TYPE_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public Hrcompany setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getIntroduction() {
    return this.introduction;
  }

  public Hrcompany setIntroduction(String introduction) {
    this.introduction = introduction;
    return this;
  }

  public void unsetIntroduction() {
    this.introduction = null;
  }

  /** Returns true if field introduction is set (has been assigned a value) and false otherwise */
  public boolean isSetIntroduction() {
    return this.introduction != null;
  }

  public void setIntroductionIsSet(boolean value) {
    if (!value) {
      this.introduction = null;
    }
  }

  public String getScale() {
    return this.scale;
  }

  public Hrcompany setScale(String scale) {
    this.scale = scale;
    return this;
  }

  public void unsetScale() {
    this.scale = null;
  }

  /** Returns true if field scale is set (has been assigned a value) and false otherwise */
  public boolean isSetScale() {
    return this.scale != null;
  }

  public void setScaleIsSet(boolean value) {
    if (!value) {
      this.scale = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public Hrcompany setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public int getProperty() {
    return this.property;
  }

  public Hrcompany setProperty(int property) {
    this.property = property;
    setPropertyIsSet(true);
    return this;
  }

  public void unsetProperty() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROPERTY_ISSET_ID);
  }

  /** Returns true if field property is set (has been assigned a value) and false otherwise */
  public boolean isSetProperty() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROPERTY_ISSET_ID);
  }

  public void setPropertyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROPERTY_ISSET_ID, value);
  }

  public String getIndustry() {
    return this.industry;
  }

  public Hrcompany setIndustry(String industry) {
    this.industry = industry;
    return this;
  }

  public void unsetIndustry() {
    this.industry = null;
  }

  /** Returns true if field industry is set (has been assigned a value) and false otherwise */
  public boolean isSetIndustry() {
    return this.industry != null;
  }

  public void setIndustryIsSet(boolean value) {
    if (!value) {
      this.industry = null;
    }
  }

  public String getHomepage() {
    return this.homepage;
  }

  public Hrcompany setHomepage(String homepage) {
    this.homepage = homepage;
    return this;
  }

  public void unsetHomepage() {
    this.homepage = null;
  }

  /** Returns true if field homepage is set (has been assigned a value) and false otherwise */
  public boolean isSetHomepage() {
    return this.homepage != null;
  }

  public void setHomepageIsSet(boolean value) {
    if (!value) {
      this.homepage = null;
    }
  }

  public String getLogo() {
    return this.logo;
  }

  public Hrcompany setLogo(String logo) {
    this.logo = logo;
    return this;
  }

  public void unsetLogo() {
    this.logo = null;
  }

  /** Returns true if field logo is set (has been assigned a value) and false otherwise */
  public boolean isSetLogo() {
    return this.logo != null;
  }

  public void setLogoIsSet(boolean value) {
    if (!value) {
      this.logo = null;
    }
  }

  public String getAbbreviation() {
    return this.abbreviation;
  }

  public Hrcompany setAbbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
    return this;
  }

  public void unsetAbbreviation() {
    this.abbreviation = null;
  }

  /** Returns true if field abbreviation is set (has been assigned a value) and false otherwise */
  public boolean isSetAbbreviation() {
    return this.abbreviation != null;
  }

  public void setAbbreviationIsSet(boolean value) {
    if (!value) {
      this.abbreviation = null;
    }
  }

  public String getImpression() {
    return this.impression;
  }

  public Hrcompany setImpression(String impression) {
    this.impression = impression;
    return this;
  }

  public void unsetImpression() {
    this.impression = null;
  }

  /** Returns true if field impression is set (has been assigned a value) and false otherwise */
  public boolean isSetImpression() {
    return this.impression != null;
  }

  public void setImpressionIsSet(boolean value) {
    if (!value) {
      this.impression = null;
    }
  }

  public String getBanner() {
    return this.banner;
  }

  public Hrcompany setBanner(String banner) {
    this.banner = banner;
    return this;
  }

  public void unsetBanner() {
    this.banner = null;
  }

  /** Returns true if field banner is set (has been assigned a value) and false otherwise */
  public boolean isSetBanner() {
    return this.banner != null;
  }

  public void setBannerIsSet(boolean value) {
    if (!value) {
      this.banner = null;
    }
  }

  public int getParent_id() {
    return this.parent_id;
  }

  public Hrcompany setParent_id(int parent_id) {
    this.parent_id = parent_id;
    setParent_idIsSet(true);
    return this;
  }

  public void unsetParent_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PARENT_ID_ISSET_ID);
  }

  /** Returns true if field parent_id is set (has been assigned a value) and false otherwise */
  public boolean isSetParent_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PARENT_ID_ISSET_ID);
  }

  public void setParent_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PARENT_ID_ISSET_ID, value);
  }

  public int getHraccount_id() {
    return this.hraccount_id;
  }

  public Hrcompany setHraccount_id(int hraccount_id) {
    this.hraccount_id = hraccount_id;
    setHraccount_idIsSet(true);
    return this;
  }

  public void unsetHraccount_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HRACCOUNT_ID_ISSET_ID);
  }

  /** Returns true if field hraccount_id is set (has been assigned a value) and false otherwise */
  public boolean isSetHraccount_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HRACCOUNT_ID_ISSET_ID);
  }

  public void setHraccount_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HRACCOUNT_ID_ISSET_ID, value);
  }

  public int getDisable() {
    return this.disable;
  }

  public Hrcompany setDisable(int disable) {
    this.disable = disable;
    setDisableIsSet(true);
    return this;
  }

  public void unsetDisable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  /** Returns true if field disable is set (has been assigned a value) and false otherwise */
  public boolean isSetDisable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISABLE_ISSET_ID);
  }

  public void setDisableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISABLE_ISSET_ID, value);
  }

  public String getCreate_time() {
    return this.create_time;
  }

  public Hrcompany setCreate_time(String create_time) {
    this.create_time = create_time;
    return this;
  }

  public void unsetCreate_time() {
    this.create_time = null;
  }

  /** Returns true if field create_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_time() {
    return this.create_time != null;
  }

  public void setCreate_timeIsSet(boolean value) {
    if (!value) {
      this.create_time = null;
    }
  }

  public String getUpdate_time() {
    return this.update_time;
  }

  public Hrcompany setUpdate_time(String update_time) {
    this.update_time = update_time;
    return this;
  }

  public void unsetUpdate_time() {
    this.update_time = null;
  }

  /** Returns true if field update_time is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdate_time() {
    return this.update_time != null;
  }

  public void setUpdate_timeIsSet(boolean value) {
    if (!value) {
      this.update_time = null;
    }
  }

  public int getSource() {
    return this.source;
  }

  public Hrcompany setSource(int source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
  }

  public String getFeature() {
    return this.feature;
  }

  public Hrcompany setFeature(String feature) {
    this.feature = feature;
    return this;
  }

  public void unsetFeature() {
    this.feature = null;
  }

  /** Returns true if field feature is set (has been assigned a value) and false otherwise */
  public boolean isSetFeature() {
    return this.feature != null;
  }

  public void setFeatureIsSet(boolean value) {
    if (!value) {
      this.feature = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case INTRODUCTION:
      if (value == null) {
        unsetIntroduction();
      } else {
        setIntroduction((String)value);
      }
      break;

    case SCALE:
      if (value == null) {
        unsetScale();
      } else {
        setScale((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case PROPERTY:
      if (value == null) {
        unsetProperty();
      } else {
        setProperty((Integer)value);
      }
      break;

    case INDUSTRY:
      if (value == null) {
        unsetIndustry();
      } else {
        setIndustry((String)value);
      }
      break;

    case HOMEPAGE:
      if (value == null) {
        unsetHomepage();
      } else {
        setHomepage((String)value);
      }
      break;

    case LOGO:
      if (value == null) {
        unsetLogo();
      } else {
        setLogo((String)value);
      }
      break;

    case ABBREVIATION:
      if (value == null) {
        unsetAbbreviation();
      } else {
        setAbbreviation((String)value);
      }
      break;

    case IMPRESSION:
      if (value == null) {
        unsetImpression();
      } else {
        setImpression((String)value);
      }
      break;

    case BANNER:
      if (value == null) {
        unsetBanner();
      } else {
        setBanner((String)value);
      }
      break;

    case PARENT_ID:
      if (value == null) {
        unsetParent_id();
      } else {
        setParent_id((Integer)value);
      }
      break;

    case HRACCOUNT_ID:
      if (value == null) {
        unsetHraccount_id();
      } else {
        setHraccount_id((Integer)value);
      }
      break;

    case DISABLE:
      if (value == null) {
        unsetDisable();
      } else {
        setDisable((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreate_time();
      } else {
        setCreate_time((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdate_time();
      } else {
        setUpdate_time((String)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((Integer)value);
      }
      break;

    case FEATURE:
      if (value == null) {
        unsetFeature();
      } else {
        setFeature((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case TYPE:
      return getType();

    case NAME:
      return getName();

    case INTRODUCTION:
      return getIntroduction();

    case SCALE:
      return getScale();

    case ADDRESS:
      return getAddress();

    case PROPERTY:
      return getProperty();

    case INDUSTRY:
      return getIndustry();

    case HOMEPAGE:
      return getHomepage();

    case LOGO:
      return getLogo();

    case ABBREVIATION:
      return getAbbreviation();

    case IMPRESSION:
      return getImpression();

    case BANNER:
      return getBanner();

    case PARENT_ID:
      return getParent_id();

    case HRACCOUNT_ID:
      return getHraccount_id();

    case DISABLE:
      return getDisable();

    case CREATE_TIME:
      return getCreate_time();

    case UPDATE_TIME:
      return getUpdate_time();

    case SOURCE:
      return getSource();

    case FEATURE:
      return getFeature();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TYPE:
      return isSetType();
    case NAME:
      return isSetName();
    case INTRODUCTION:
      return isSetIntroduction();
    case SCALE:
      return isSetScale();
    case ADDRESS:
      return isSetAddress();
    case PROPERTY:
      return isSetProperty();
    case INDUSTRY:
      return isSetIndustry();
    case HOMEPAGE:
      return isSetHomepage();
    case LOGO:
      return isSetLogo();
    case ABBREVIATION:
      return isSetAbbreviation();
    case IMPRESSION:
      return isSetImpression();
    case BANNER:
      return isSetBanner();
    case PARENT_ID:
      return isSetParent_id();
    case HRACCOUNT_ID:
      return isSetHraccount_id();
    case DISABLE:
      return isSetDisable();
    case CREATE_TIME:
      return isSetCreate_time();
    case UPDATE_TIME:
      return isSetUpdate_time();
    case SOURCE:
      return isSetSource();
    case FEATURE:
      return isSetFeature();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Hrcompany)
      return this.equals((Hrcompany)that);
    return false;
  }

  public boolean equals(Hrcompany that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (this.type != that.type)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_introduction = true && this.isSetIntroduction();
    boolean that_present_introduction = true && that.isSetIntroduction();
    if (this_present_introduction || that_present_introduction) {
      if (!(this_present_introduction && that_present_introduction))
        return false;
      if (!this.introduction.equals(that.introduction))
        return false;
    }

    boolean this_present_scale = true && this.isSetScale();
    boolean that_present_scale = true && that.isSetScale();
    if (this_present_scale || that_present_scale) {
      if (!(this_present_scale && that_present_scale))
        return false;
      if (!this.scale.equals(that.scale))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_property = true && this.isSetProperty();
    boolean that_present_property = true && that.isSetProperty();
    if (this_present_property || that_present_property) {
      if (!(this_present_property && that_present_property))
        return false;
      if (this.property != that.property)
        return false;
    }

    boolean this_present_industry = true && this.isSetIndustry();
    boolean that_present_industry = true && that.isSetIndustry();
    if (this_present_industry || that_present_industry) {
      if (!(this_present_industry && that_present_industry))
        return false;
      if (!this.industry.equals(that.industry))
        return false;
    }

    boolean this_present_homepage = true && this.isSetHomepage();
    boolean that_present_homepage = true && that.isSetHomepage();
    if (this_present_homepage || that_present_homepage) {
      if (!(this_present_homepage && that_present_homepage))
        return false;
      if (!this.homepage.equals(that.homepage))
        return false;
    }

    boolean this_present_logo = true && this.isSetLogo();
    boolean that_present_logo = true && that.isSetLogo();
    if (this_present_logo || that_present_logo) {
      if (!(this_present_logo && that_present_logo))
        return false;
      if (!this.logo.equals(that.logo))
        return false;
    }

    boolean this_present_abbreviation = true && this.isSetAbbreviation();
    boolean that_present_abbreviation = true && that.isSetAbbreviation();
    if (this_present_abbreviation || that_present_abbreviation) {
      if (!(this_present_abbreviation && that_present_abbreviation))
        return false;
      if (!this.abbreviation.equals(that.abbreviation))
        return false;
    }

    boolean this_present_impression = true && this.isSetImpression();
    boolean that_present_impression = true && that.isSetImpression();
    if (this_present_impression || that_present_impression) {
      if (!(this_present_impression && that_present_impression))
        return false;
      if (!this.impression.equals(that.impression))
        return false;
    }

    boolean this_present_banner = true && this.isSetBanner();
    boolean that_present_banner = true && that.isSetBanner();
    if (this_present_banner || that_present_banner) {
      if (!(this_present_banner && that_present_banner))
        return false;
      if (!this.banner.equals(that.banner))
        return false;
    }

    boolean this_present_parent_id = true && this.isSetParent_id();
    boolean that_present_parent_id = true && that.isSetParent_id();
    if (this_present_parent_id || that_present_parent_id) {
      if (!(this_present_parent_id && that_present_parent_id))
        return false;
      if (this.parent_id != that.parent_id)
        return false;
    }

    boolean this_present_hraccount_id = true && this.isSetHraccount_id();
    boolean that_present_hraccount_id = true && that.isSetHraccount_id();
    if (this_present_hraccount_id || that_present_hraccount_id) {
      if (!(this_present_hraccount_id && that_present_hraccount_id))
        return false;
      if (this.hraccount_id != that.hraccount_id)
        return false;
    }

    boolean this_present_disable = true && this.isSetDisable();
    boolean that_present_disable = true && that.isSetDisable();
    if (this_present_disable || that_present_disable) {
      if (!(this_present_disable && that_present_disable))
        return false;
      if (this.disable != that.disable)
        return false;
    }

    boolean this_present_create_time = true && this.isSetCreate_time();
    boolean that_present_create_time = true && that.isSetCreate_time();
    if (this_present_create_time || that_present_create_time) {
      if (!(this_present_create_time && that_present_create_time))
        return false;
      if (!this.create_time.equals(that.create_time))
        return false;
    }

    boolean this_present_update_time = true && this.isSetUpdate_time();
    boolean that_present_update_time = true && that.isSetUpdate_time();
    if (this_present_update_time || that_present_update_time) {
      if (!(this_present_update_time && that_present_update_time))
        return false;
      if (!this.update_time.equals(that.update_time))
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_feature = true && this.isSetFeature();
    boolean that_present_feature = true && that.isSetFeature();
    if (this_present_feature || that_present_feature) {
      if (!(this_present_feature && that_present_feature))
        return false;
      if (!this.feature.equals(that.feature))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetIntroduction()) ? 131071 : 524287);
    if (isSetIntroduction())
      hashCode = hashCode * 8191 + introduction.hashCode();

    hashCode = hashCode * 8191 + ((isSetScale()) ? 131071 : 524287);
    if (isSetScale())
      hashCode = hashCode * 8191 + scale.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetProperty()) ? 131071 : 524287);
    if (isSetProperty())
      hashCode = hashCode * 8191 + property;

    hashCode = hashCode * 8191 + ((isSetIndustry()) ? 131071 : 524287);
    if (isSetIndustry())
      hashCode = hashCode * 8191 + industry.hashCode();

    hashCode = hashCode * 8191 + ((isSetHomepage()) ? 131071 : 524287);
    if (isSetHomepage())
      hashCode = hashCode * 8191 + homepage.hashCode();

    hashCode = hashCode * 8191 + ((isSetLogo()) ? 131071 : 524287);
    if (isSetLogo())
      hashCode = hashCode * 8191 + logo.hashCode();

    hashCode = hashCode * 8191 + ((isSetAbbreviation()) ? 131071 : 524287);
    if (isSetAbbreviation())
      hashCode = hashCode * 8191 + abbreviation.hashCode();

    hashCode = hashCode * 8191 + ((isSetImpression()) ? 131071 : 524287);
    if (isSetImpression())
      hashCode = hashCode * 8191 + impression.hashCode();

    hashCode = hashCode * 8191 + ((isSetBanner()) ? 131071 : 524287);
    if (isSetBanner())
      hashCode = hashCode * 8191 + banner.hashCode();

    hashCode = hashCode * 8191 + ((isSetParent_id()) ? 131071 : 524287);
    if (isSetParent_id())
      hashCode = hashCode * 8191 + parent_id;

    hashCode = hashCode * 8191 + ((isSetHraccount_id()) ? 131071 : 524287);
    if (isSetHraccount_id())
      hashCode = hashCode * 8191 + hraccount_id;

    hashCode = hashCode * 8191 + ((isSetDisable()) ? 131071 : 524287);
    if (isSetDisable())
      hashCode = hashCode * 8191 + disable;

    hashCode = hashCode * 8191 + ((isSetCreate_time()) ? 131071 : 524287);
    if (isSetCreate_time())
      hashCode = hashCode * 8191 + create_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdate_time()) ? 131071 : 524287);
    if (isSetUpdate_time())
      hashCode = hashCode * 8191 + update_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
    if (isSetSource())
      hashCode = hashCode * 8191 + source;

    hashCode = hashCode * 8191 + ((isSetFeature()) ? 131071 : 524287);
    if (isSetFeature())
      hashCode = hashCode * 8191 + feature.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Hrcompany other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntroduction()).compareTo(other.isSetIntroduction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntroduction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.introduction, other.introduction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScale()).compareTo(other.isSetScale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scale, other.scale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProperty()).compareTo(other.isSetProperty());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperty()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.property, other.property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIndustry()).compareTo(other.isSetIndustry());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIndustry()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industry, other.industry);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHomepage()).compareTo(other.isSetHomepage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHomepage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.homepage, other.homepage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogo()).compareTo(other.isSetLogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logo, other.logo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAbbreviation()).compareTo(other.isSetAbbreviation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbbreviation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.abbreviation, other.abbreviation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImpression()).compareTo(other.isSetImpression());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImpression()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.impression, other.impression);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBanner()).compareTo(other.isSetBanner());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBanner()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.banner, other.banner);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParent_id()).compareTo(other.isSetParent_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParent_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parent_id, other.parent_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHraccount_id()).compareTo(other.isSetHraccount_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHraccount_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hraccount_id, other.hraccount_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisable()).compareTo(other.isSetDisable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.disable, other.disable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_time()).compareTo(other.isSetCreate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_time, other.create_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdate_time()).compareTo(other.isSetUpdate_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdate_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.update_time, other.update_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeature()).compareTo(other.isSetFeature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feature, other.feature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Hrcompany(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      sb.append(this.type);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetIntroduction()) {
      if (!first) sb.append(", ");
      sb.append("introduction:");
      if (this.introduction == null) {
        sb.append("null");
      } else {
        sb.append(this.introduction);
      }
      first = false;
    }
    if (isSetScale()) {
      if (!first) sb.append(", ");
      sb.append("scale:");
      if (this.scale == null) {
        sb.append("null");
      } else {
        sb.append(this.scale);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (isSetProperty()) {
      if (!first) sb.append(", ");
      sb.append("property:");
      sb.append(this.property);
      first = false;
    }
    if (isSetIndustry()) {
      if (!first) sb.append(", ");
      sb.append("industry:");
      if (this.industry == null) {
        sb.append("null");
      } else {
        sb.append(this.industry);
      }
      first = false;
    }
    if (isSetHomepage()) {
      if (!first) sb.append(", ");
      sb.append("homepage:");
      if (this.homepage == null) {
        sb.append("null");
      } else {
        sb.append(this.homepage);
      }
      first = false;
    }
    if (isSetLogo()) {
      if (!first) sb.append(", ");
      sb.append("logo:");
      if (this.logo == null) {
        sb.append("null");
      } else {
        sb.append(this.logo);
      }
      first = false;
    }
    if (isSetAbbreviation()) {
      if (!first) sb.append(", ");
      sb.append("abbreviation:");
      if (this.abbreviation == null) {
        sb.append("null");
      } else {
        sb.append(this.abbreviation);
      }
      first = false;
    }
    if (isSetImpression()) {
      if (!first) sb.append(", ");
      sb.append("impression:");
      if (this.impression == null) {
        sb.append("null");
      } else {
        sb.append(this.impression);
      }
      first = false;
    }
    if (isSetBanner()) {
      if (!first) sb.append(", ");
      sb.append("banner:");
      if (this.banner == null) {
        sb.append("null");
      } else {
        sb.append(this.banner);
      }
      first = false;
    }
    if (isSetParent_id()) {
      if (!first) sb.append(", ");
      sb.append("parent_id:");
      sb.append(this.parent_id);
      first = false;
    }
    if (isSetHraccount_id()) {
      if (!first) sb.append(", ");
      sb.append("hraccount_id:");
      sb.append(this.hraccount_id);
      first = false;
    }
    if (isSetDisable()) {
      if (!first) sb.append(", ");
      sb.append("disable:");
      sb.append(this.disable);
      first = false;
    }
    if (isSetCreate_time()) {
      if (!first) sb.append(", ");
      sb.append("create_time:");
      if (this.create_time == null) {
        sb.append("null");
      } else {
        sb.append(this.create_time);
      }
      first = false;
    }
    if (isSetUpdate_time()) {
      if (!first) sb.append(", ");
      sb.append("update_time:");
      if (this.update_time == null) {
        sb.append("null");
      } else {
        sb.append(this.update_time);
      }
      first = false;
    }
    if (isSetSource()) {
      if (!first) sb.append(", ");
      sb.append("source:");
      sb.append(this.source);
      first = false;
    }
    if (isSetFeature()) {
      if (!first) sb.append(", ");
      sb.append("feature:");
      if (this.feature == null) {
        sb.append("null");
      } else {
        sb.append(this.feature);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class HrcompanyStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrcompanyStandardScheme getScheme() {
      return new HrcompanyStandardScheme();
    }
  }

  private static class HrcompanyStandardScheme extends org.apache.thrift.scheme.StandardScheme<Hrcompany> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Hrcompany struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = iprot.readI32();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INTRODUCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.introduction = iprot.readString();
              struct.setIntroductionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SCALE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.scale = iprot.readString();
              struct.setScaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.property = iprot.readI32();
              struct.setPropertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // INDUSTRY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.industry = iprot.readString();
              struct.setIndustryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // HOMEPAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.homepage = iprot.readString();
              struct.setHomepageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logo = iprot.readString();
              struct.setLogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ABBREVIATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.abbreviation = iprot.readString();
              struct.setAbbreviationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IMPRESSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.impression = iprot.readString();
              struct.setImpressionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BANNER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.banner = iprot.readString();
              struct.setBannerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PARENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.parent_id = iprot.readI32();
              struct.setParent_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // HRACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hraccount_id = iprot.readI32();
              struct.setHraccount_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // DISABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.disable = iprot.readI32();
              struct.setDisableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.create_time = iprot.readString();
              struct.setCreate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.update_time = iprot.readString();
              struct.setUpdate_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source = iprot.readI32();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // FEATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.feature = iprot.readString();
              struct.setFeatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Hrcompany struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetType()) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.introduction != null) {
        if (struct.isSetIntroduction()) {
          oprot.writeFieldBegin(INTRODUCTION_FIELD_DESC);
          oprot.writeString(struct.introduction);
          oprot.writeFieldEnd();
        }
      }
      if (struct.scale != null) {
        if (struct.isSetScale()) {
          oprot.writeFieldBegin(SCALE_FIELD_DESC);
          oprot.writeString(struct.scale);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProperty()) {
        oprot.writeFieldBegin(PROPERTY_FIELD_DESC);
        oprot.writeI32(struct.property);
        oprot.writeFieldEnd();
      }
      if (struct.industry != null) {
        if (struct.isSetIndustry()) {
          oprot.writeFieldBegin(INDUSTRY_FIELD_DESC);
          oprot.writeString(struct.industry);
          oprot.writeFieldEnd();
        }
      }
      if (struct.homepage != null) {
        if (struct.isSetHomepage()) {
          oprot.writeFieldBegin(HOMEPAGE_FIELD_DESC);
          oprot.writeString(struct.homepage);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logo != null) {
        if (struct.isSetLogo()) {
          oprot.writeFieldBegin(LOGO_FIELD_DESC);
          oprot.writeString(struct.logo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.abbreviation != null) {
        if (struct.isSetAbbreviation()) {
          oprot.writeFieldBegin(ABBREVIATION_FIELD_DESC);
          oprot.writeString(struct.abbreviation);
          oprot.writeFieldEnd();
        }
      }
      if (struct.impression != null) {
        if (struct.isSetImpression()) {
          oprot.writeFieldBegin(IMPRESSION_FIELD_DESC);
          oprot.writeString(struct.impression);
          oprot.writeFieldEnd();
        }
      }
      if (struct.banner != null) {
        if (struct.isSetBanner()) {
          oprot.writeFieldBegin(BANNER_FIELD_DESC);
          oprot.writeString(struct.banner);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetParent_id()) {
        oprot.writeFieldBegin(PARENT_ID_FIELD_DESC);
        oprot.writeI32(struct.parent_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHraccount_id()) {
        oprot.writeFieldBegin(HRACCOUNT_ID_FIELD_DESC);
        oprot.writeI32(struct.hraccount_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDisable()) {
        oprot.writeFieldBegin(DISABLE_FIELD_DESC);
        oprot.writeI32(struct.disable);
        oprot.writeFieldEnd();
      }
      if (struct.create_time != null) {
        if (struct.isSetCreate_time()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          oprot.writeString(struct.create_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.update_time != null) {
        if (struct.isSetUpdate_time()) {
          oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
          oprot.writeString(struct.update_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSource()) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeI32(struct.source);
        oprot.writeFieldEnd();
      }
      if (struct.feature != null) {
        if (struct.isSetFeature()) {
          oprot.writeFieldBegin(FEATURE_FIELD_DESC);
          oprot.writeString(struct.feature);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class HrcompanyTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public HrcompanyTupleScheme getScheme() {
      return new HrcompanyTupleScheme();
    }
  }

  private static class HrcompanyTupleScheme extends org.apache.thrift.scheme.TupleScheme<Hrcompany> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Hrcompany struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetName()) {
        optionals.set(2);
      }
      if (struct.isSetIntroduction()) {
        optionals.set(3);
      }
      if (struct.isSetScale()) {
        optionals.set(4);
      }
      if (struct.isSetAddress()) {
        optionals.set(5);
      }
      if (struct.isSetProperty()) {
        optionals.set(6);
      }
      if (struct.isSetIndustry()) {
        optionals.set(7);
      }
      if (struct.isSetHomepage()) {
        optionals.set(8);
      }
      if (struct.isSetLogo()) {
        optionals.set(9);
      }
      if (struct.isSetAbbreviation()) {
        optionals.set(10);
      }
      if (struct.isSetImpression()) {
        optionals.set(11);
      }
      if (struct.isSetBanner()) {
        optionals.set(12);
      }
      if (struct.isSetParent_id()) {
        optionals.set(13);
      }
      if (struct.isSetHraccount_id()) {
        optionals.set(14);
      }
      if (struct.isSetDisable()) {
        optionals.set(15);
      }
      if (struct.isSetCreate_time()) {
        optionals.set(16);
      }
      if (struct.isSetUpdate_time()) {
        optionals.set(17);
      }
      if (struct.isSetSource()) {
        optionals.set(18);
      }
      if (struct.isSetFeature()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetIntroduction()) {
        oprot.writeString(struct.introduction);
      }
      if (struct.isSetScale()) {
        oprot.writeString(struct.scale);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetProperty()) {
        oprot.writeI32(struct.property);
      }
      if (struct.isSetIndustry()) {
        oprot.writeString(struct.industry);
      }
      if (struct.isSetHomepage()) {
        oprot.writeString(struct.homepage);
      }
      if (struct.isSetLogo()) {
        oprot.writeString(struct.logo);
      }
      if (struct.isSetAbbreviation()) {
        oprot.writeString(struct.abbreviation);
      }
      if (struct.isSetImpression()) {
        oprot.writeString(struct.impression);
      }
      if (struct.isSetBanner()) {
        oprot.writeString(struct.banner);
      }
      if (struct.isSetParent_id()) {
        oprot.writeI32(struct.parent_id);
      }
      if (struct.isSetHraccount_id()) {
        oprot.writeI32(struct.hraccount_id);
      }
      if (struct.isSetDisable()) {
        oprot.writeI32(struct.disable);
      }
      if (struct.isSetCreate_time()) {
        oprot.writeString(struct.create_time);
      }
      if (struct.isSetUpdate_time()) {
        oprot.writeString(struct.update_time);
      }
      if (struct.isSetSource()) {
        oprot.writeI32(struct.source);
      }
      if (struct.isSetFeature()) {
        oprot.writeString(struct.feature);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Hrcompany struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = iprot.readI32();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.introduction = iprot.readString();
        struct.setIntroductionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.scale = iprot.readString();
        struct.setScaleIsSet(true);
      }
      if (incoming.get(5)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(6)) {
        struct.property = iprot.readI32();
        struct.setPropertyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.industry = iprot.readString();
        struct.setIndustryIsSet(true);
      }
      if (incoming.get(8)) {
        struct.homepage = iprot.readString();
        struct.setHomepageIsSet(true);
      }
      if (incoming.get(9)) {
        struct.logo = iprot.readString();
        struct.setLogoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.abbreviation = iprot.readString();
        struct.setAbbreviationIsSet(true);
      }
      if (incoming.get(11)) {
        struct.impression = iprot.readString();
        struct.setImpressionIsSet(true);
      }
      if (incoming.get(12)) {
        struct.banner = iprot.readString();
        struct.setBannerIsSet(true);
      }
      if (incoming.get(13)) {
        struct.parent_id = iprot.readI32();
        struct.setParent_idIsSet(true);
      }
      if (incoming.get(14)) {
        struct.hraccount_id = iprot.readI32();
        struct.setHraccount_idIsSet(true);
      }
      if (incoming.get(15)) {
        struct.disable = iprot.readI32();
        struct.setDisableIsSet(true);
      }
      if (incoming.get(16)) {
        struct.create_time = iprot.readString();
        struct.setCreate_timeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.update_time = iprot.readString();
        struct.setUpdate_timeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.source = iprot.readI32();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(19)) {
        struct.feature = iprot.readString();
        struct.setFeatureIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

