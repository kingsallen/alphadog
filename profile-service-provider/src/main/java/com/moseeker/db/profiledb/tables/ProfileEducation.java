/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.profiledb.tables;


import com.moseeker.db.profiledb.Keys;
import com.moseeker.db.profiledb.Profiledb;
import com.moseeker.db.profiledb.tables.records.ProfileEducationRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Profile的教育经历
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileEducation extends TableImpl<ProfileEducationRecord> {

	private static final long serialVersionUID = -359034194;

	/**
	 * The reference instance of <code>profileDB.profile_education</code>
	 */
	public static final ProfileEducation PROFILE_EDUCATION = new ProfileEducation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfileEducationRecord> getRecordType() {
		return ProfileEducationRecord.class;
	}

	/**
	 * The column <code>profileDB.profile_education.id</code>. 主key
	 */
	public final TableField<ProfileEducationRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "主key");

	/**
	 * The column <code>profileDB.profile_education.profile_id</code>. profile.id
	 */
	public final TableField<ProfileEducationRecord, UInteger> PROFILE_ID = createField("profile_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "profile.id");

	/**
	 * The column <code>profileDB.profile_education.start</code>. 起止时间-起 yyyy-mm-dd
	 */
	public final TableField<ProfileEducationRecord, Date> START = createField("start", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "起止时间-起 yyyy-mm-dd");

	/**
	 * The column <code>profileDB.profile_education.end</code>. 起止时间-止 yyyy-mm-dd
	 */
	public final TableField<ProfileEducationRecord, Date> END = createField("end", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "起止时间-止 yyyy-mm-dd");

	/**
	 * The column <code>profileDB.profile_education.end_until_now</code>. 是否至今 0：否 1：是
	 */
	public final TableField<ProfileEducationRecord, Byte> END_UNTIL_NOW = createField("end_until_now", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "是否至今 0：否 1：是");

	/**
	 * The column <code>profileDB.profile_education.degree</code>. 学历 0:未选择 1: 大专以下, 2: 大专, 3: 本科, 4: 硕士, 5: 博士, 6:博士以上
	 */
	public final TableField<ProfileEducationRecord, Byte> DEGREE = createField("degree", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "学历 0:未选择 1: 大专以下, 2: 大专, 3: 本科, 4: 硕士, 5: 博士, 6:博士以上");

	/**
	 * The column <code>profileDB.profile_education.school_code</code>. 学校字典编码
	 */
	public final TableField<ProfileEducationRecord, Byte> SCHOOL_CODE = createField("school_code", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "学校字典编码");

	/**
	 * The column <code>profileDB.profile_education.school_name</code>. 学校名称
	 */
	public final TableField<ProfileEducationRecord, String> SCHOOL_NAME = createField("school_name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "学校名称");

	/**
	 * The column <code>profileDB.profile_education.major_code</code>. 专业字典编码
	 */
	public final TableField<ProfileEducationRecord, Byte> MAJOR_CODE = createField("major_code", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "专业字典编码");

	/**
	 * The column <code>profileDB.profile_education.major_name</code>. 专业名称
	 */
	public final TableField<ProfileEducationRecord, String> MAJOR_NAME = createField("major_name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "专业名称");

	/**
	 * The column <code>profileDB.profile_education.type</code>. 专业类型 0:未选择 1:文科 2:理科 ？
	 */
	public final TableField<ProfileEducationRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "专业类型 0:未选择 1:文科 2:理科 ？");

	/**
	 * The column <code>profileDB.profile_education.description</code>. 教育描述
	 */
	public final TableField<ProfileEducationRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaulted(true), this, "教育描述");

	/**
	 * The column <code>profileDB.profile_education.create_time</code>. 创建时间
	 */
	public final TableField<ProfileEducationRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>profileDB.profile_education.update_time</code>. 更新时间
	 */
	public final TableField<ProfileEducationRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * Create a <code>profileDB.profile_education</code> table reference
	 */
	public ProfileEducation() {
		this("profile_education", null);
	}

	/**
	 * Create an aliased <code>profileDB.profile_education</code> table reference
	 */
	public ProfileEducation(String alias) {
		this(alias, PROFILE_EDUCATION);
	}

	private ProfileEducation(String alias, Table<ProfileEducationRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProfileEducation(String alias, Table<ProfileEducationRecord> aliased, Field<?>[] parameters) {
		super(alias, Profiledb.PROFILEDB, aliased, parameters, "Profile的教育经历");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProfileEducationRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_PROFILE_EDUCATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfileEducationRecord> getPrimaryKey() {
		return Keys.KEY_PROFILE_EDUCATION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfileEducationRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfileEducationRecord>>asList(Keys.KEY_PROFILE_EDUCATION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProfileEducation as(String alias) {
		return new ProfileEducation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProfileEducation rename(String name) {
		return new ProfileEducation(name, null);
	}
}
