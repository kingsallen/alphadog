/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.dqv4.tables;


import com.moseeker.db.dqv4.Dqv4;
import com.moseeker.db.dqv4.Keys;
import com.moseeker.db.dqv4.tables.records.UserEmployeePointsRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEmployeePointsRecord extends TableImpl<UserEmployeePointsRecordRecord> {

	private static final long serialVersionUID = 1856548602;

	/**
	 * The reference instance of <code>dqv4.user_employee_points_record</code>
	 */
	public static final UserEmployeePointsRecord USER_EMPLOYEE_POINTS_RECORD = new UserEmployeePointsRecord();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserEmployeePointsRecordRecord> getRecordType() {
		return UserEmployeePointsRecordRecord.class;
	}

	/**
	 * The column <code>dqv4.user_employee_points_record.id</code>.
	 */
	public final TableField<UserEmployeePointsRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dqv4.user_employee_points_record.employee_id</code>. employee.id
	 */
	public final TableField<UserEmployeePointsRecordRecord, Long> EMPLOYEE_ID = createField("employee_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "employee.id");

	/**
	 * The column <code>dqv4.user_employee_points_record.reason</code>. 积分变更说明
	 */
	public final TableField<UserEmployeePointsRecordRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "积分变更说明");

	/**
	 * The column <code>dqv4.user_employee_points_record.award</code>. 积分值
	 */
	public final TableField<UserEmployeePointsRecordRecord, Integer> AWARD = createField("award", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "积分值");

	/**
	 * The column <code>dqv4.user_employee_points_record.application_id</code>. application.id
	 */
	public final TableField<UserEmployeePointsRecordRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "application.id");

	/**
	 * The column <code>dqv4.user_employee_points_record.recom_wxuser</code>. wx_user.id
	 */
	public final TableField<UserEmployeePointsRecordRecord, Long> RECOM_WXUSER = createField("recom_wxuser", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "wx_user.id");

	/**
	 * The column <code>dqv4.user_employee_points_record.create_time</code>. 创建时间
	 */
	public final TableField<UserEmployeePointsRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>dqv4.user_employee_points_record.update_time</code>. 修改时间
	 */
	public final TableField<UserEmployeePointsRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "修改时间");

	/**
	 * Create a <code>dqv4.user_employee_points_record</code> table reference
	 */
	public UserEmployeePointsRecord() {
		this("user_employee_points_record", null);
	}

	/**
	 * Create an aliased <code>dqv4.user_employee_points_record</code> table reference
	 */
	public UserEmployeePointsRecord(String alias) {
		this(alias, USER_EMPLOYEE_POINTS_RECORD);
	}

	private UserEmployeePointsRecord(String alias, Table<UserEmployeePointsRecordRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserEmployeePointsRecord(String alias, Table<UserEmployeePointsRecordRecord> aliased, Field<?>[] parameters) {
		super(alias, Dqv4.DQV4, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserEmployeePointsRecordRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USER_EMPLOYEE_POINTS_RECORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserEmployeePointsRecordRecord> getPrimaryKey() {
		return Keys.KEY_USER_EMPLOYEE_POINTS_RECORD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserEmployeePointsRecordRecord>> getKeys() {
		return Arrays.<UniqueKey<UserEmployeePointsRecordRecord>>asList(Keys.KEY_USER_EMPLOYEE_POINTS_RECORD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserEmployeePointsRecord as(String alias) {
		return new UserEmployeePointsRecord(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserEmployeePointsRecord rename(String name) {
		return new UserEmployeePointsRecord(name, null);
	}
}
