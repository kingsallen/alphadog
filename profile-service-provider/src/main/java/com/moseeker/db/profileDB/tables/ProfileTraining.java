/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.profileDB.tables;


import com.moseeker.db.profileDB.Keys;
import com.moseeker.db.profileDB.Profiledb;
import com.moseeker.db.profileDB.tables.records.ProfileTrainingRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Profile的培训经历
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileTraining extends TableImpl<ProfileTrainingRecord> {

	private static final long serialVersionUID = -1829701257;

	/**
	 * The reference instance of <code>profileDB.profile_training</code>
	 */
	public static final ProfileTraining PROFILE_TRAINING = new ProfileTraining();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfileTrainingRecord> getRecordType() {
		return ProfileTrainingRecord.class;
	}

	/**
	 * The column <code>profileDB.profile_training.id</code>. 主key
	 */
	public final TableField<ProfileTrainingRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "主key");

	/**
	 * The column <code>profileDB.profile_training.profile_id</code>. profile.id
	 */
	public final TableField<ProfileTrainingRecord, UInteger> PROFILE_ID = createField("profile_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "profile.id");

	/**
	 * The column <code>profileDB.profile_training.name</code>. 培训名称
	 */
	public final TableField<ProfileTrainingRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "培训名称");

	/**
	 * The column <code>profileDB.profile_training.start_date</code>. 培训时间-起
	 */
	public final TableField<ProfileTrainingRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "培训时间-起");

	/**
	 * The column <code>profileDB.profile_training.end_date</code>. 培训时间-止
	 */
	public final TableField<ProfileTrainingRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "培训时间-止");

	/**
	 * The column <code>profileDB.profile_training.orgnization</code>. 培训机构
	 */
	public final TableField<ProfileTrainingRecord, String> ORGNIZATION = createField("orgnization", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "培训机构");

	/**
	 * The column <code>profileDB.profile_training.description</code>. 培训描述
	 */
	public final TableField<ProfileTrainingRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaulted(true), this, "培训描述");

	/**
	 * The column <code>profileDB.profile_training.create_time</code>. 创建时间
	 */
	public final TableField<ProfileTrainingRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>profileDB.profile_training.update_time</code>. 更新时间
	 */
	public final TableField<ProfileTrainingRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * Create a <code>profileDB.profile_training</code> table reference
	 */
	public ProfileTraining() {
		this("profile_training", null);
	}

	/**
	 * Create an aliased <code>profileDB.profile_training</code> table reference
	 */
	public ProfileTraining(String alias) {
		this(alias, PROFILE_TRAINING);
	}

	private ProfileTraining(String alias, Table<ProfileTrainingRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProfileTraining(String alias, Table<ProfileTrainingRecord> aliased, Field<?>[] parameters) {
		super(alias, Profiledb.PROFILEDB, aliased, parameters, "Profile的培训经历");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProfileTrainingRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_PROFILE_TRAINING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfileTrainingRecord> getPrimaryKey() {
		return Keys.KEY_PROFILE_TRAINING_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfileTrainingRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfileTrainingRecord>>asList(Keys.KEY_PROFILE_TRAINING_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProfileTraining as(String alias) {
		return new ProfileTraining(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProfileTraining rename(String name) {
		return new ProfileTraining(name, null);
	}
}
