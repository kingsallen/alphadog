/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.profileDB.tables;


import com.moseeker.db.profileDB.Keys;
import com.moseeker.db.profileDB.Profiledb;
import com.moseeker.db.profileDB.tables.records.ProfileRewardRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * Profile的荣誉证书竞赛表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileReward extends TableImpl<ProfileRewardRecord> {

	private static final long serialVersionUID = -426446071;

	/**
	 * The reference instance of <code>profileDB.profile_reward</code>
	 */
	public static final ProfileReward PROFILE_REWARD = new ProfileReward();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfileRewardRecord> getRecordType() {
		return ProfileRewardRecord.class;
	}

	/**
	 * The column <code>profileDB.profile_reward.id</code>. 主key
	 */
	public final TableField<ProfileRewardRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "主key");

	/**
	 * The column <code>profileDB.profile_reward.profile_id</code>. profile.id
	 */
	public final TableField<ProfileRewardRecord, UInteger> PROFILE_ID = createField("profile_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "profile.id");

	/**
	 * The column <code>profileDB.profile_reward.type</code>. 0：无法识别 1:竞赛 2:荣誉
	 */
	public final TableField<ProfileRewardRecord, UByte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaulted(true), this, "0：无法识别 1:竞赛 2:荣誉");

	/**
	 * The column <code>profileDB.profile_reward.reward_date</code>. 获取证书
	 */
	public final TableField<ProfileRewardRecord, Date> REWARD_DATE = createField("reward_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "获取证书");

	/**
	 * The column <code>profileDB.profile_reward.name</code>. 获得奖励名称
	 */
	public final TableField<ProfileRewardRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaulted(true), this, "获得奖励名称");

	/**
	 * The column <code>profileDB.profile_reward.description</code>. 描述
	 */
	public final TableField<ProfileRewardRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false).defaulted(true), this, "描述");

	/**
	 * The column <code>profileDB.profile_reward.create_time</code>. 创建时间
	 */
	public final TableField<ProfileRewardRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>profileDB.profile_reward.update_time</code>. 更新时间
	 */
	public final TableField<ProfileRewardRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * Create a <code>profileDB.profile_reward</code> table reference
	 */
	public ProfileReward() {
		this("profile_reward", null);
	}

	/**
	 * Create an aliased <code>profileDB.profile_reward</code> table reference
	 */
	public ProfileReward(String alias) {
		this(alias, PROFILE_REWARD);
	}

	private ProfileReward(String alias, Table<ProfileRewardRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProfileReward(String alias, Table<ProfileRewardRecord> aliased, Field<?>[] parameters) {
		super(alias, Profiledb.PROFILEDB, aliased, parameters, "Profile的荣誉证书竞赛表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ProfileRewardRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_PROFILE_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfileRewardRecord> getPrimaryKey() {
		return Keys.KEY_PROFILE_REWARD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfileRewardRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfileRewardRecord>>asList(Keys.KEY_PROFILE_REWARD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProfileReward as(String alias) {
		return new ProfileReward(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProfileReward rename(String name) {
		return new ProfileReward(name, null);
	}
}
