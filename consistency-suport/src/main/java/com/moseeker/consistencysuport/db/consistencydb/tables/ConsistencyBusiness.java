/*
 * This file is generated by jOOQ.
*/
package com.moseeker.consistencysuport.db.consistencydb.tables;


import com.moseeker.consistencysuport.db.consistencydb.Consistencydb;
import com.moseeker.consistencysuport.db.consistencydb.Keys;
import com.moseeker.consistencysuport.db.consistencydb.tables.records.ConsistencyBusinessRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 消息业务表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsistencyBusiness extends TableImpl<ConsistencyBusinessRecord> {

    private static final long serialVersionUID = -1544585027;

    /**
     * The reference instance of <code>consistencydb.consistency_business</code>
     */
    public static final ConsistencyBusiness CONSISTENCY_BUSINESS = new ConsistencyBusiness();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConsistencyBusinessRecord> getRecordType() {
        return ConsistencyBusinessRecord.class;
    }

    /**
     * The column <code>consistencydb.consistency_business.id</code>. 主键
     */
    public final TableField<ConsistencyBusinessRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键");

    /**
     * The column <code>consistencydb.consistency_business.register_time</code>. 业务注册时间
     */
    public final TableField<ConsistencyBusinessRecord, Timestamp> REGISTER_TIME = createField("register_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "业务注册时间");

    /**
     * The column <code>consistencydb.consistency_business.update_time</code>. 更新时间
     */
    public final TableField<ConsistencyBusinessRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>consistencydb.consistency_business.name</code>. 业务名称
     */
    public final TableField<ConsistencyBusinessRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "业务名称");

    /**
     * The column <code>consistencydb.consistency_business.finish</code>. 是否完成 0 未完成 1 完成
     */
    public final TableField<ConsistencyBusinessRecord, Byte> FINISH = createField("finish", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否完成 0 未完成 1 完成");

    /**
     * The column <code>consistencydb.consistency_business.last_shake_hand_time</code>. 最后握手的时间
     */
    public final TableField<ConsistencyBusinessRecord, Timestamp> LAST_SHAKE_HAND_TIME = createField("last_shake_hand_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "最后握手的时间");

    /**
     * Create a <code>consistencydb.consistency_business</code> table reference
     */
    public ConsistencyBusiness() {
        this("consistency_business", null);
    }

    /**
     * Create an aliased <code>consistencydb.consistency_business</code> table reference
     */
    public ConsistencyBusiness(String alias) {
        this(alias, CONSISTENCY_BUSINESS);
    }

    private ConsistencyBusiness(String alias, Table<ConsistencyBusinessRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConsistencyBusiness(String alias, Table<ConsistencyBusinessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "消息业务表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Consistencydb.CONSISTENCYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConsistencyBusinessRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONSISTENCY_BUSINESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConsistencyBusinessRecord> getPrimaryKey() {
        return Keys.KEY_CONSISTENCY_BUSINESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConsistencyBusinessRecord>> getKeys() {
        return Arrays.<UniqueKey<ConsistencyBusinessRecord>>asList(Keys.KEY_CONSISTENCY_BUSINESS_PRIMARY, Keys.KEY_CONSISTENCY_BUSINESS_CONSISTENCY_BUSINESS_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConsistencyBusiness as(String alias) {
        return new ConsistencyBusiness(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConsistencyBusiness rename(String name) {
        return new ConsistencyBusiness(name, null);
    }
}
