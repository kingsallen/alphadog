/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.wordpressdb.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import com.moseeker.baseorm.db.wordpressdb.tables.WordpressComments;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WordpressCommentsRecord extends UpdatableRecordImpl<WordpressCommentsRecord> implements Record15<ULong, ULong, String, String, String, String, Timestamp, Timestamp, String, Integer, String, String, String, ULong, ULong> {

	private static final long serialVersionUID = -777167115;

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_ID</code>.
	 */
	public void setCommentId(ULong value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_ID</code>.
	 */
	public ULong getCommentId() {
		return (ULong) getValue(0);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_post_ID</code>.
	 */
	public void setCommentPostId(ULong value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_post_ID</code>.
	 */
	public ULong getCommentPostId() {
		return (ULong) getValue(1);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_author</code>.
	 */
	public void setCommentAuthor(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_author</code>.
	 */
	public String getCommentAuthor() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_author_email</code>.
	 */
	public void setCommentAuthorEmail(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_author_email</code>.
	 */
	public String getCommentAuthorEmail() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_author_url</code>.
	 */
	public void setCommentAuthorUrl(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_author_url</code>.
	 */
	public String getCommentAuthorUrl() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_author_IP</code>.
	 */
	public void setCommentAuthorIp(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_author_IP</code>.
	 */
	public String getCommentAuthorIp() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_date</code>.
	 */
	public void setCommentDate(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_date</code>.
	 */
	public Timestamp getCommentDate() {
		return (Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_date_gmt</code>.
	 */
	public void setCommentDateGmt(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_date_gmt</code>.
	 */
	public Timestamp getCommentDateGmt() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_content</code>.
	 */
	public void setCommentContent(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_content</code>.
	 */
	public String getCommentContent() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_karma</code>.
	 */
	public void setCommentKarma(Integer value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_karma</code>.
	 */
	public Integer getCommentKarma() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_approved</code>.
	 */
	public void setCommentApproved(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_approved</code>.
	 */
	public String getCommentApproved() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_agent</code>.
	 */
	public void setCommentAgent(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_agent</code>.
	 */
	public String getCommentAgent() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_type</code>.
	 */
	public void setCommentType(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_type</code>.
	 */
	public String getCommentType() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.comment_parent</code>.
	 */
	public void setCommentParent(ULong value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.comment_parent</code>.
	 */
	public ULong getCommentParent() {
		return (ULong) getValue(13);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_comments.user_id</code>.
	 */
	public void setUserId(ULong value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_comments.user_id</code>.
	 */
	public ULong getUserId() {
		return (ULong) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<ULong> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<ULong, ULong, String, String, String, String, Timestamp, Timestamp, String, Integer, String, String, String, ULong, ULong> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<ULong, ULong, String, String, String, String, Timestamp, Timestamp, String, Integer, String, String, String, ULong, ULong> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field1() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field2() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_POST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_AUTHOR_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_AUTHOR_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_AUTHOR_IP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_DATE_GMT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_KARMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_APPROVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_AGENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field14() {
		return WordpressComments.WORDPRESS_COMMENTS.COMMENT_PARENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field15() {
		return WordpressComments.WORDPRESS_COMMENTS.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value1() {
		return getCommentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value2() {
		return getCommentPostId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCommentAuthor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getCommentAuthorEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getCommentAuthorUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getCommentAuthorIp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getCommentDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getCommentDateGmt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getCommentContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getCommentKarma();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getCommentApproved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getCommentAgent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getCommentType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value14() {
		return getCommentParent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value15() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value1(ULong value) {
		setCommentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value2(ULong value) {
		setCommentPostId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value3(String value) {
		setCommentAuthor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value4(String value) {
		setCommentAuthorEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value5(String value) {
		setCommentAuthorUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value6(String value) {
		setCommentAuthorIp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value7(Timestamp value) {
		setCommentDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value8(Timestamp value) {
		setCommentDateGmt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value9(String value) {
		setCommentContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value10(Integer value) {
		setCommentKarma(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value11(String value) {
		setCommentApproved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value12(String value) {
		setCommentAgent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value13(String value) {
		setCommentType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value14(ULong value) {
		setCommentParent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord value15(ULong value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressCommentsRecord values(ULong value1, ULong value2, String value3, String value4, String value5, String value6, Timestamp value7, Timestamp value8, String value9, Integer value10, String value11, String value12, String value13, ULong value14, ULong value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached WordpressCommentsRecord
	 */
	public WordpressCommentsRecord() {
		super(WordpressComments.WORDPRESS_COMMENTS);
	}

	/**
	 * Create a detached, initialised WordpressCommentsRecord
	 */
	public WordpressCommentsRecord(ULong commentId, ULong commentPostId, String commentAuthor, String commentAuthorEmail, String commentAuthorUrl, String commentAuthorIp, Timestamp commentDate, Timestamp commentDateGmt, String commentContent, Integer commentKarma, String commentApproved, String commentAgent, String commentType, ULong commentParent, ULong userId) {
		super(WordpressComments.WORDPRESS_COMMENTS);

		setValue(0, commentId);
		setValue(1, commentPostId);
		setValue(2, commentAuthor);
		setValue(3, commentAuthorEmail);
		setValue(4, commentAuthorUrl);
		setValue(5, commentAuthorIp);
		setValue(6, commentDate);
		setValue(7, commentDateGmt);
		setValue(8, commentContent);
		setValue(9, commentKarma);
		setValue(10, commentApproved);
		setValue(11, commentAgent);
		setValue(12, commentType);
		setValue(13, commentParent);
		setValue(14, userId);
	}
}
