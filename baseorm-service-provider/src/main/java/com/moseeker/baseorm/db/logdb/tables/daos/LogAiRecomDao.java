/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.logdb.tables.daos;


import com.moseeker.baseorm.db.logdb.tables.LogAiRecom;
import com.moseeker.baseorm.db.logdb.tables.records.LogAiRecomRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 智能画像日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogAiRecomDao extends DAOImpl<LogAiRecomRecord, com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom, Integer> {

    /**
     * Create a new LogAiRecomDao without any configuration
     */
    public LogAiRecomDao() {
        super(LogAiRecom.LOG_AI_RECOM, com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom.class);
    }

    /**
     * Create a new LogAiRecomDao with an attached configuration
     */
    public LogAiRecomDao(Configuration configuration) {
        super(LogAiRecom.LOG_AI_RECOM, com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchById(Integer... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom fetchOneById(Integer value) {
        return fetchOne(LogAiRecom.LOG_AI_RECOM.ID, value);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByUserId(Integer... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.USER_ID, values);
    }

    /**
     * Fetch records that have <code>company_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByCompanyId(Integer... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>action IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByAction(String... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.ACTION, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByType(Byte... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.TYPE, values);
    }

    /**
     * Fetch records that have <code>send_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchBySendTime(Timestamp... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.SEND_TIME, values);
    }

    /**
     * Fetch records that have <code>md_code IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByMdCode(String... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.MD_CODE, values);
    }

    /**
     * Fetch records that have <code>algorithm_name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogAiRecom> fetchByAlgorithmName(String... values) {
        return fetch(LogAiRecom.LOG_AI_RECOM.ALGORITHM_NAME, values);
    }
}
