/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserPrivacyRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户隐私协议状态表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPrivacyRecord extends TableImpl<UserPrivacyRecordRecord> {

    private static final long serialVersionUID = 1532490786;

    /**
     * The reference instance of <code>userdb.user_privacy_record</code>
     */
    public static final UserPrivacyRecord USER_PRIVACY_RECORD = new UserPrivacyRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPrivacyRecordRecord> getRecordType() {
        return UserPrivacyRecordRecord.class;
    }

    /**
     * The column <code>userdb.user_privacy_record.id</code>. 主key
     */
    public final TableField<UserPrivacyRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主key");

    /**
     * The column <code>userdb.user_privacy_record.user_id</code>. user_user.id, 用户id
     */
    public final TableField<UserPrivacyRecordRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "user_user.id, 用户id");

    /**
     * The column <code>userdb.user_privacy_record.status</code>. 0:不弹窗， 1弹窗
     */
    public final TableField<UserPrivacyRecordRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "0:不弹窗， 1弹窗");

    /**
     * The column <code>userdb.user_privacy_record.create_time</code>. 创建时间
     */
    public final TableField<UserPrivacyRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_privacy_record.update_time</code>. 更新时间
     */
    public final TableField<UserPrivacyRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>userdb.user_privacy_record.version</code>. 隐私协议版本
     */
    public final TableField<UserPrivacyRecordRecord, Byte> VERSION = createField("version", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "隐私协议版本");

    /**
     * Create a <code>userdb.user_privacy_record</code> table reference
     */
    public UserPrivacyRecord() {
        this("user_privacy_record", null);
    }

    /**
     * Create an aliased <code>userdb.user_privacy_record</code> table reference
     */
    public UserPrivacyRecord(String alias) {
        this(alias, USER_PRIVACY_RECORD);
    }

    private UserPrivacyRecord(String alias, Table<UserPrivacyRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPrivacyRecord(String alias, Table<UserPrivacyRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户隐私协议状态表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserPrivacyRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_PRIVACY_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserPrivacyRecordRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIVACY_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserPrivacyRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<UserPrivacyRecordRecord>>asList(Keys.KEY_USER_PRIVACY_RECORD_PRIMARY, Keys.KEY_USER_PRIVACY_RECORD_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPrivacyRecord as(String alias) {
        return new UserPrivacyRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserPrivacyRecord rename(String name) {
        return new UserPrivacyRecord(name, null);
    }
}
