/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.historydb.tables;


import com.moseeker.baseorm.db.historydb.Historydb;
import com.moseeker.baseorm.db.historydb.Keys;
import com.moseeker.baseorm.db.historydb.tables.records.HistoryHrWxHrChat_180313Record;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * IM聊天
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryHrWxHrChat_180313 extends TableImpl<HistoryHrWxHrChat_180313Record> {

    private static final long serialVersionUID = -606000800;

    /**
     * The reference instance of <code>historydb.history_hr_wx_hr_chat_180313</code>
     */
    public static final HistoryHrWxHrChat_180313 HISTORY_HR_WX_HR_CHAT_180313 = new HistoryHrWxHrChat_180313();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HistoryHrWxHrChat_180313Record> getRecordType() {
        return HistoryHrWxHrChat_180313Record.class;
    }

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.id</code>. ID
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ID");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.chatlist_id</code>. wx_hr_chat_list.id
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Integer> CHATLIST_ID = createField("chatlist_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "wx_hr_chat_list.id");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.content</code>. 聊天内容
     */
    public final TableField<HistoryHrWxHrChat_180313Record, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "聊天内容");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.pid</code>. hr_position.id
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "hr_position.id");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.speaker</code>. 聊天的发起人，0：求职者（websocket），1：HR （hr后台回复，或者sysplat 仟寻回复聚合号的求职者），2：chatbot （ 如果公司开启了 chatbot-compnany_conf.hr_chat， 请求chatbot后再回复就是2）
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Byte> SPEAKER = createField("speaker", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "聊天的发起人，0：求职者（websocket），1：HR （hr后台回复，或者sysplat 仟寻回复聚合号的求职者），2：chatbot （ 如果公司开启了 chatbot-compnany_conf.hr_chat， 请求chatbot后再回复就是2）");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.status</code>. 状态，0：有效，1：无效
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态，0：有效，1：无效");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.create_time</code>. 创建时间
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.origin</code>. 来源 0 用户输入(包括求职者和HR)， 1 系统自动生成：欢迎语， 2 AI输入 
     */
    public final TableField<HistoryHrWxHrChat_180313Record, Byte> ORIGIN = createField("origin", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "来源 0 用户输入(包括求职者和HR)， 1 系统自动生成：欢迎语， 2 AI输入 ");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.msg_type</code>. 消息类型
     */
    public final TableField<HistoryHrWxHrChat_180313Record, String> MSG_TYPE = createField("msg_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "消息类型");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.pic_url</code>. 图片url
     */
    public final TableField<HistoryHrWxHrChat_180313Record, String> PIC_URL = createField("pic_url", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "图片url");

    /**
     * The column <code>historydb.history_hr_wx_hr_chat_180313.btn_content</code>. 控件类信息,当字段msg_type值为为"button_radio"时,会保存json格式:"[{"content": "\u662f"}, {"content": "\u5426"}]"
     */
    public final TableField<HistoryHrWxHrChat_180313Record, String> BTN_CONTENT = createField("btn_content", org.jooq.impl.SQLDataType.CLOB, this, "控件类信息,当字段msg_type值为为\"button_radio\"时,会保存json格式:\"[{\"content\": \"\\u662f\"}, {\"content\": \"\\u5426\"}]\"");

    /**
     * Create a <code>historydb.history_hr_wx_hr_chat_180313</code> table reference
     */
    public HistoryHrWxHrChat_180313() {
        this("history_hr_wx_hr_chat_180313", null);
    }

    /**
     * Create an aliased <code>historydb.history_hr_wx_hr_chat_180313</code> table reference
     */
    public HistoryHrWxHrChat_180313(String alias) {
        this(alias, HISTORY_HR_WX_HR_CHAT_180313);
    }

    private HistoryHrWxHrChat_180313(String alias, Table<HistoryHrWxHrChat_180313Record> aliased) {
        this(alias, aliased, null);
    }

    private HistoryHrWxHrChat_180313(String alias, Table<HistoryHrWxHrChat_180313Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "IM聊天");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Historydb.HISTORYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HistoryHrWxHrChat_180313Record, Integer> getIdentity() {
        return Keys.IDENTITY_HISTORY_HR_WX_HR_CHAT_180313;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HistoryHrWxHrChat_180313Record> getPrimaryKey() {
        return Keys.KEY_HISTORY_HR_WX_HR_CHAT_180313_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HistoryHrWxHrChat_180313Record>> getKeys() {
        return Arrays.<UniqueKey<HistoryHrWxHrChat_180313Record>>asList(Keys.KEY_HISTORY_HR_WX_HR_CHAT_180313_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HistoryHrWxHrChat_180313 as(String alias) {
        return new HistoryHrWxHrChat_180313(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryHrWxHrChat_180313 rename(String name) {
        return new HistoryHrWxHrChat_180313(name, null);
    }
}
