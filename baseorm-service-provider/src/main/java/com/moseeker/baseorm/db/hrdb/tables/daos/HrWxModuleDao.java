/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.hrdb.tables.daos;


import com.moseeker.baseorm.db.hrdb.tables.HrWxModule;
import com.moseeker.baseorm.db.hrdb.tables.records.HrWxModuleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 微信模块表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrWxModuleDao extends DAOImpl<HrWxModuleRecord, com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule, Byte> {

    /**
     * Create a new HrWxModuleDao without any configuration
     */
    public HrWxModuleDao() {
        super(HrWxModule.HR_WX_MODULE, com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule.class);
    }

    /**
     * Create a new HrWxModuleDao with an attached configuration
     */
    public HrWxModuleDao(Configuration configuration) {
        super(HrWxModule.HR_WX_MODULE, com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Byte getId(com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchById(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule fetchOneById(Byte value) {
        return fetchOne(HrWxModule.HR_WX_MODULE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByName(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.NAME, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByTitle(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.TITLE, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByVersion(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.VERSION, values);
    }

    /**
     * Fetch records that have <code>ability IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByAbility(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.ABILITY, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByDescription(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>author IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByAuthor(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.AUTHOR, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByUrl(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.URL, values);
    }

    /**
     * Fetch records that have <code>settings IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchBySettings(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.SETTINGS, values);
    }

    /**
     * Fetch records that have <code>subscribes IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchBySubscribes(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.SUBSCRIBES, values);
    }

    /**
     * Fetch records that have <code>handles IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByHandles(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.HANDLES, values);
    }

    /**
     * Fetch records that have <code>isrulefields IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByIsrulefields(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.ISRULEFIELDS, values);
    }

    /**
     * Fetch records that have <code>home IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByHome(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.HOME, values);
    }

    /**
     * Fetch records that have <code>issystem IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByIssystem(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.ISSYSTEM, values);
    }

    /**
     * Fetch records that have <code>options IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByOptions(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.OPTIONS, values);
    }

    /**
     * Fetch records that have <code>profile IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByProfile(Byte... values) {
        return fetch(HrWxModule.HR_WX_MODULE.PROFILE, values);
    }

    /**
     * Fetch records that have <code>site_menus IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchBySiteMenus(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.SITE_MENUS, values);
    }

    /**
     * Fetch records that have <code>platform_menus IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrWxModule> fetchByPlatformMenus(String... values) {
        return fetch(HrWxModule.HR_WX_MODULE.PLATFORM_MENUS, values);
    }
}
