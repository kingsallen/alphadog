/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.referraldb.tables;


import com.moseeker.baseorm.db.referraldb.Keys;
import com.moseeker.baseorm.db.referraldb.Referraldb;
import com.moseeker.baseorm.db.referraldb.tables.records.ReferralSeekRecommendRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 候选人联系内推记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferralSeekRecommend extends TableImpl<ReferralSeekRecommendRecord> {

    private static final long serialVersionUID = 1295643260;

    /**
     * The reference instance of <code>referraldb.referral_seek_recommend</code>
     */
    public static final ReferralSeekRecommend REFERRAL_SEEK_RECOMMEND = new ReferralSeekRecommend();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReferralSeekRecommendRecord> getRecordType() {
        return ReferralSeekRecommendRecord.class;
    }

    /**
     * The column <code>referraldb.referral_seek_recommend.id</code>.
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>referraldb.referral_seek_recommend.post_user_id</code>. user_user.id 员工的C端账号
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> POST_USER_ID = createField("post_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "user_user.id 员工的C端账号");

    /**
     * The column <code>referraldb.referral_seek_recommend.presentee_user_id</code>. user_user.id 求推荐候选人C端账号
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> PRESENTEE_USER_ID = createField("presentee_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "user_user.id 求推荐候选人C端账号");

    /**
     * The column <code>referraldb.referral_seek_recommend.position_id</code>. 求推荐职位编号
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "求推荐职位编号");

    /**
     * The column <code>referraldb.referral_seek_recommend.app_id</code>. 申请编号
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "申请编号");

    /**
     * The column <code>referraldb.referral_seek_recommend.create_time</code>. 创建时间
     */
    public final TableField<ReferralSeekRecommendRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>referraldb.referral_seek_recommend.update_time</code>. 更新时间
     */
    public final TableField<ReferralSeekRecommendRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>referraldb.referral_seek_recommend.origin</code>. 间接内推来源，1 直接转发求内推，2连连看转发求内推 
     */
    public final TableField<ReferralSeekRecommendRecord, Integer> ORIGIN = createField("origin", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "间接内推来源，1 直接转发求内推，2连连看转发求内推 ");

    /**
     * The column <code>referraldb.referral_seek_recommend.recommend_time</code>.
     */
    public final TableField<ReferralSeekRecommendRecord, Timestamp> RECOMMEND_TIME = createField("recommend_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>referraldb.referral_seek_recommend</code> table reference
     */
    public ReferralSeekRecommend() {
        this("referral_seek_recommend", null);
    }

    /**
     * Create an aliased <code>referraldb.referral_seek_recommend</code> table reference
     */
    public ReferralSeekRecommend(String alias) {
        this(alias, REFERRAL_SEEK_RECOMMEND);
    }

    private ReferralSeekRecommend(String alias, Table<ReferralSeekRecommendRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReferralSeekRecommend(String alias, Table<ReferralSeekRecommendRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "候选人联系内推记录");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referraldb.REFERRALDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReferralSeekRecommendRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFERRAL_SEEK_RECOMMEND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReferralSeekRecommendRecord> getPrimaryKey() {
        return Keys.KEY_REFERRAL_SEEK_RECOMMEND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReferralSeekRecommendRecord>> getKeys() {
        return Arrays.<UniqueKey<ReferralSeekRecommendRecord>>asList(Keys.KEY_REFERRAL_SEEK_RECOMMEND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReferralSeekRecommend as(String alias) {
        return new ReferralSeekRecommend(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReferralSeekRecommend rename(String name) {
        return new ReferralSeekRecommend(name, null);
    }
}
