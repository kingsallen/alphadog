/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.dictdb.tables.daos;


import com.moseeker.baseorm.db.dictdb.tables.DictCity;
import com.moseeker.baseorm.db.dictdb.tables.records.DictCityRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 城市字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictCityDao extends DAOImpl<DictCityRecord, com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity, Integer> {

    /**
     * Create a new DictCityDao without any configuration
     */
    public DictCityDao() {
        super(DictCity.DICT_CITY, com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity.class);
    }

    /**
     * Create a new DictCityDao with an attached configuration
     */
    public DictCityDao(Configuration configuration) {
        super(DictCity.DICT_CITY, com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity object) {
        return object.getCode();
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByCode(Integer... values) {
        return fetch(DictCity.DICT_CITY.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity fetchOneByCode(Integer value) {
        return fetchOne(DictCity.DICT_CITY.CODE, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByName(String... values) {
        return fetch(DictCity.DICT_CITY.NAME, values);
    }

    /**
     * Fetch records that have <code>level IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByLevel(Byte... values) {
        return fetch(DictCity.DICT_CITY.LEVEL, values);
    }

    /**
     * Fetch records that have <code>hot_city IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByHotCity(Byte... values) {
        return fetch(DictCity.DICT_CITY.HOT_CITY, values);
    }

    /**
     * Fetch records that have <code>ename IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByEname(String... values) {
        return fetch(DictCity.DICT_CITY.ENAME, values);
    }

    /**
     * Fetch records that have <code>is_using IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.dictdb.tables.pojos.DictCity> fetchByIsUsing(Byte... values) {
        return fetch(DictCity.DICT_CITY.IS_USING, values);
    }
}
