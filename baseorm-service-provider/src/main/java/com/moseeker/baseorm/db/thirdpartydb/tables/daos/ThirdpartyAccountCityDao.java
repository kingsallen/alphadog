/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.thirdpartydb.tables.daos;


import com.moseeker.baseorm.db.thirdpartydb.tables.ThirdpartyAccountCity;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCityRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 第三方渠道的可发布职位的地区
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThirdpartyAccountCityDao extends DAOImpl<ThirdpartyAccountCityRecord, com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity, Integer> {

    /**
     * Create a new ThirdpartyAccountCityDao without any configuration
     */
    public ThirdpartyAccountCityDao() {
        super(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY, com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity.class);
    }

    /**
     * Create a new ThirdpartyAccountCityDao with an attached configuration
     */
    public ThirdpartyAccountCityDao(Configuration configuration) {
        super(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY, com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchById(Integer... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity fetchOneById(Integer value) {
        return fetchOne(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.ID, value);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByAccountId(Integer... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByCode(Integer... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.CODE, values);
    }

    /**
     * Fetch records that have <code>jobType IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByJobtype(Byte... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.JOBTYPE, values);
    }

    /**
     * Fetch records that have <code>remain_num IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByRemainNum(Integer... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.REMAIN_NUM, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByCreateTime(Timestamp... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.thirdpartydb.tables.pojos.ThirdpartyAccountCity> fetchByUpdateTime(Timestamp... values) {
        return fetch(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.UPDATE_TIME, values);
    }
}
