/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.logdb.tables.daos;


import com.moseeker.baseorm.db.logdb.tables.LogSmsSendrecord;
import com.moseeker.baseorm.db.logdb.tables.records.LogSmsSendrecordRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 短信发送记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogSmsSendrecordDao extends DAOImpl<LogSmsSendrecordRecord, com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord, Integer> {

    /**
     * Create a new LogSmsSendrecordDao without any configuration
     */
    public LogSmsSendrecordDao() {
        super(LogSmsSendrecord.LOG_SMS_SENDRECORD, com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord.class);
    }

    /**
     * Create a new LogSmsSendrecordDao with an attached configuration
     */
    public LogSmsSendrecordDao(Configuration configuration) {
        super(LogSmsSendrecord.LOG_SMS_SENDRECORD, com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchById(Integer... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord fetchOneById(Integer value) {
        return fetchOne(LogSmsSendrecord.LOG_SMS_SENDRECORD.ID, value);
    }

    /**
     * Fetch records that have <code>sys IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchBySys(Byte... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.SYS, values);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchByMobile(Long... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.MOBILE, values);
    }

    /**
     * Fetch records that have <code>msg IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchByMsg(String... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.MSG, values);
    }

    /**
     * Fetch records that have <code>ip IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchByIp(String... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.IP, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchByCreateTime(Timestamp... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>country_code IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.logdb.tables.pojos.LogSmsSendrecord> fetchByCountryCode(String... values) {
        return fetch(LogSmsSendrecord.LOG_SMS_SENDRECORD.COUNTRY_CODE, values);
    }
}
