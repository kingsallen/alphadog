/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables.records;


import com.moseeker.baseorm.db.configdb.tables.ConfigObsoleteReason;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 淘汰理由记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigObsoleteReasonRecord extends UpdatableRecordImpl<ConfigObsoleteReasonRecord> implements Record6<Integer, Byte, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = -167608029;

    /**
     * Setter for <code>configdb.config_obsolete_reason.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>configdb.config_obsolete_reason.obsolete_type</code>. 淘汰类型（0拒绝候选人,1被候选人拒绝）
     */
    public void setObsoleteType(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.obsolete_type</code>. 淘汰类型（0拒绝候选人,1被候选人拒绝）
     */
    public Byte getObsoleteType() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>configdb.config_obsolete_reason.obsolete_type_name</code>. 淘汰类型名称
     */
    public void setObsoleteTypeName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.obsolete_type_name</code>. 淘汰类型名称
     */
    public String getObsoleteTypeName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>configdb.config_obsolete_reason.obsolete_reason</code>. 淘汰原因类型
     */
    public void setObsoleteReason(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.obsolete_reason</code>. 淘汰原因类型
     */
    public String getObsoleteReason() {
        return (String) get(3);
    }

    /**
     * Setter for <code>configdb.config_obsolete_reason.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>configdb.config_obsolete_reason.update_time</code>. 修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>configdb.config_obsolete_reason.update_time</code>. 修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Byte, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Byte, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.OBSOLETE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.OBSOLETE_TYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.OBSOLETE_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return ConfigObsoleteReason.CONFIG_OBSOLETE_REASON.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getObsoleteType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getObsoleteTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getObsoleteReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value2(Byte value) {
        setObsoleteType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value3(String value) {
        setObsoleteTypeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value4(String value) {
        setObsoleteReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value5(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord value6(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReasonRecord values(Integer value1, Byte value2, String value3, String value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConfigObsoleteReasonRecord
     */
    public ConfigObsoleteReasonRecord() {
        super(ConfigObsoleteReason.CONFIG_OBSOLETE_REASON);
    }

    /**
     * Create a detached, initialised ConfigObsoleteReasonRecord
     */
    public ConfigObsoleteReasonRecord(Integer id, Byte obsoleteType, String obsoleteTypeName, String obsoleteReason, Timestamp createTime, Timestamp updateTime) {
        super(ConfigObsoleteReason.CONFIG_OBSOLETE_REASON);

        set(0, id);
        set(1, obsoleteType);
        set(2, obsoleteTypeName);
        set(3, obsoleteReason);
        set(4, createTime);
        set(5, updateTime);
    }
}
