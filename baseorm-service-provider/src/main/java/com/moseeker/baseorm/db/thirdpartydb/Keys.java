/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.thirdpartydb;


import com.moseeker.baseorm.db.thirdpartydb.tables.ThirdpartyAccountCity;
import com.moseeker.baseorm.db.thirdpartydb.tables.ThirdpartyAccountCompany;
import com.moseeker.baseorm.db.thirdpartydb.tables.ThirdpartyAccountCompanyAddress;
import com.moseeker.baseorm.db.thirdpartydb.tables.ThirdpartyAccountDepartment;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCityRecord;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCompanyAddressRecord;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCompanyRecord;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountDepartmentRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>thirdpartydb</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ThirdpartyAccountCityRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_CITY = Identities0.IDENTITY_THIRDPARTY_ACCOUNT_CITY;
    public static final Identity<ThirdpartyAccountCompanyRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_COMPANY = Identities0.IDENTITY_THIRDPARTY_ACCOUNT_COMPANY;
    public static final Identity<ThirdpartyAccountCompanyAddressRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS = Identities0.IDENTITY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS;
    public static final Identity<ThirdpartyAccountDepartmentRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_DEPARTMENT = Identities0.IDENTITY_THIRDPARTY_ACCOUNT_DEPARTMENT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ThirdpartyAccountCityRecord> KEY_THIRDPARTY_ACCOUNT_CITY_PRIMARY = UniqueKeys0.KEY_THIRDPARTY_ACCOUNT_CITY_PRIMARY;
    public static final UniqueKey<ThirdpartyAccountCompanyRecord> KEY_THIRDPARTY_ACCOUNT_COMPANY_PRIMARY = UniqueKeys0.KEY_THIRDPARTY_ACCOUNT_COMPANY_PRIMARY;
    public static final UniqueKey<ThirdpartyAccountCompanyAddressRecord> KEY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS_PRIMARY = UniqueKeys0.KEY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS_PRIMARY;
    public static final UniqueKey<ThirdpartyAccountDepartmentRecord> KEY_THIRDPARTY_ACCOUNT_DEPARTMENT_PRIMARY = UniqueKeys0.KEY_THIRDPARTY_ACCOUNT_DEPARTMENT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<ThirdpartyAccountCityRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_CITY = createIdentity(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY, ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.ID);
        public static Identity<ThirdpartyAccountCompanyRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_COMPANY = createIdentity(ThirdpartyAccountCompany.THIRDPARTY_ACCOUNT_COMPANY, ThirdpartyAccountCompany.THIRDPARTY_ACCOUNT_COMPANY.ID);
        public static Identity<ThirdpartyAccountCompanyAddressRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS = createIdentity(ThirdpartyAccountCompanyAddress.THIRDPARTY_ACCOUNT_COMPANY_ADDRESS, ThirdpartyAccountCompanyAddress.THIRDPARTY_ACCOUNT_COMPANY_ADDRESS.ID);
        public static Identity<ThirdpartyAccountDepartmentRecord, Integer> IDENTITY_THIRDPARTY_ACCOUNT_DEPARTMENT = createIdentity(ThirdpartyAccountDepartment.THIRDPARTY_ACCOUNT_DEPARTMENT, ThirdpartyAccountDepartment.THIRDPARTY_ACCOUNT_DEPARTMENT.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ThirdpartyAccountCityRecord> KEY_THIRDPARTY_ACCOUNT_CITY_PRIMARY = createUniqueKey(ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY, "KEY_thirdparty_account_city_PRIMARY", ThirdpartyAccountCity.THIRDPARTY_ACCOUNT_CITY.ID);
        public static final UniqueKey<ThirdpartyAccountCompanyRecord> KEY_THIRDPARTY_ACCOUNT_COMPANY_PRIMARY = createUniqueKey(ThirdpartyAccountCompany.THIRDPARTY_ACCOUNT_COMPANY, "KEY_thirdparty_account_company_PRIMARY", ThirdpartyAccountCompany.THIRDPARTY_ACCOUNT_COMPANY.ID);
        public static final UniqueKey<ThirdpartyAccountCompanyAddressRecord> KEY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS_PRIMARY = createUniqueKey(ThirdpartyAccountCompanyAddress.THIRDPARTY_ACCOUNT_COMPANY_ADDRESS, "KEY_thirdparty_account_company_address_PRIMARY", ThirdpartyAccountCompanyAddress.THIRDPARTY_ACCOUNT_COMPANY_ADDRESS.ID);
        public static final UniqueKey<ThirdpartyAccountDepartmentRecord> KEY_THIRDPARTY_ACCOUNT_DEPARTMENT_PRIMARY = createUniqueKey(ThirdpartyAccountDepartment.THIRDPARTY_ACCOUNT_DEPARTMENT, "KEY_thirdparty_account_department_PRIMARY", ThirdpartyAccountDepartment.THIRDPARTY_ACCOUNT_DEPARTMENT.ID);
    }
}
