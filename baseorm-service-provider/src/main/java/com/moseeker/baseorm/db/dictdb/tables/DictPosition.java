/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.dictdb.tables;


import com.moseeker.baseorm.db.dictdb.Dictdb;
import com.moseeker.baseorm.db.dictdb.Keys;
import com.moseeker.baseorm.db.dictdb.tables.records.DictPositionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 职能分类字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictPosition extends TableImpl<DictPositionRecord> {

    private static final long serialVersionUID = 1985303816;

    /**
     * The reference instance of <code>dictdb.dict_position</code>
     */
    public static final DictPosition DICT_POSITION = new DictPosition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictPositionRecord> getRecordType() {
        return DictPositionRecord.class;
    }

    /**
     * The column <code>dictdb.dict_position.code</code>. 字典code
     */
    public final TableField<DictPositionRecord, Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("000000", org.jooq.impl.SQLDataType.INTEGER)), this, "字典code");

    /**
     * The column <code>dictdb.dict_position.name</code>. 字典name
     */
    public final TableField<DictPositionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "字典name");

    /**
     * The column <code>dictdb.dict_position.ename</code>.
     */
    public final TableField<DictPositionRecord, String> ENAME = createField("ename", org.jooq.impl.SQLDataType.VARCHAR.length(99), this, "");

    /**
     * The column <code>dictdb.dict_position.parent</code>. 父编码
     */
    public final TableField<DictPositionRecord, Integer> PARENT = createField("parent", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("000000", org.jooq.impl.SQLDataType.INTEGER)), this, "父编码");

    /**
     * The column <code>dictdb.dict_position.level</code>. 字典level
     */
    public final TableField<DictPositionRecord, Byte> LEVEL = createField("level", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "字典level");

    /**
     * Create a <code>dictdb.dict_position</code> table reference
     */
    public DictPosition() {
        this("dict_position", null);
    }

    /**
     * Create an aliased <code>dictdb.dict_position</code> table reference
     */
    public DictPosition(String alias) {
        this(alias, DICT_POSITION);
    }

    private DictPosition(String alias, Table<DictPositionRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictPosition(String alias, Table<DictPositionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "职能分类字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dictdb.DICTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictPositionRecord>> getKeys() {
        return Arrays.<UniqueKey<DictPositionRecord>>asList(Keys.KEY_DICT_POSITION_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictPosition as(String alias) {
        return new DictPosition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DictPosition rename(String name) {
        return new DictPosition(name, null);
    }
}
