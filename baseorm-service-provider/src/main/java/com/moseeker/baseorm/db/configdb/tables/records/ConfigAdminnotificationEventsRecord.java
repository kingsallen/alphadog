/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables.records;


import com.moseeker.baseorm.db.configdb.tables.ConfigAdminnotificationEvents;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 管理员通知事件列表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigAdminnotificationEventsRecord extends UpdatableRecordImpl<ConfigAdminnotificationEventsRecord> implements Record12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> {

    private static final long serialVersionUID = 1439271111;

    /**
     * Setter for <code>configdb.config_adminnotification_events.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.project_appid</code>. 项目appid
     */
    public void setProjectAppid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.project_appid</code>. 项目appid
     */
    public String getProjectAppid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.event_key</code>. 事件标识符，大写英文
     */
    public void setEventKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.event_key</code>. 事件标识符，大写英文
     */
    public String getEventKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.event_name</code>. 事件名称
     */
    public void setEventName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.event_name</code>. 事件名称
     */
    public String getEventName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.event_desc</code>. 事件描述
     */
    public void setEventDesc(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.event_desc</code>. 事件描述
     */
    public String getEventDesc() {
        return (String) get(4);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.threshold_value</code>. 触发几次后通知
     */
    public void setThresholdValue(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.threshold_value</code>. 触发几次后通知
     */
    public Integer getThresholdValue() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.threshold_interval</code>. 单位秒，0表示不限制，  thresholdinterval和thresholdvalue搭配使用，表达 每分钟超过5次 报警。
     */
    public void setThresholdInterval(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.threshold_interval</code>. 单位秒，0表示不限制，  thresholdinterval和thresholdvalue搭配使用，表达 每分钟超过5次 报警。
     */
    public Integer getThresholdInterval() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.enable_notifyby_email</code>. 是否email通知， 1是 0否
     */
    public void setEnableNotifybyEmail(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.enable_notifyby_email</code>. 是否email通知， 1是 0否
     */
    public Byte getEnableNotifybyEmail() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.enable_notifyby_sms</code>. 是否短信通知， 1是 0否
     */
    public void setEnableNotifybySms(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.enable_notifyby_sms</code>. 是否短信通知， 1是 0否
     */
    public Byte getEnableNotifybySms() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.enable_notifyby_wechattemplatemessage</code>. 是否微信模板消息通知， 1是 0否
     */
    public void setEnableNotifybyWechattemplatemessage(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.enable_notifyby_wechattemplatemessage</code>. 是否微信模板消息通知， 1是 0否
     */
    public Byte getEnableNotifybyWechattemplatemessage() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.groupid</code>. 发送给哪个组
     */
    public void setGroupid(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.groupid</code>. 发送给哪个组
     */
    public Integer getGroupid() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>configdb.config_adminnotification_events.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>configdb.config_adminnotification_events.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, String, String, String, Integer, Integer, Byte, Byte, Byte, Integer, Timestamp> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.PROJECT_APPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.EVENT_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.EVENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.EVENT_DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.THRESHOLD_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.THRESHOLD_INTERVAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_SMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.ENABLE_NOTIFYBY_WECHATTEMPLATEMESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.GROUPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProjectAppid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEventKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEventDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getThresholdValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getThresholdInterval();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getEnableNotifybyEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getEnableNotifybySms();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getEnableNotifybyWechattemplatemessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getGroupid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value2(String value) {
        setProjectAppid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value3(String value) {
        setEventKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value4(String value) {
        setEventName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value5(String value) {
        setEventDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value6(Integer value) {
        setThresholdValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value7(Integer value) {
        setThresholdInterval(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value8(Byte value) {
        setEnableNotifybyEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value9(Byte value) {
        setEnableNotifybySms(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value10(Byte value) {
        setEnableNotifybyWechattemplatemessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value11(Integer value) {
        setGroupid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord value12(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigAdminnotificationEventsRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, Byte value8, Byte value9, Byte value10, Integer value11, Timestamp value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConfigAdminnotificationEventsRecord
     */
    public ConfigAdminnotificationEventsRecord() {
        super(ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS);
    }

    /**
     * Create a detached, initialised ConfigAdminnotificationEventsRecord
     */
    public ConfigAdminnotificationEventsRecord(Integer id, String projectAppid, String eventKey, String eventName, String eventDesc, Integer thresholdValue, Integer thresholdInterval, Byte enableNotifybyEmail, Byte enableNotifybySms, Byte enableNotifybyWechattemplatemessage, Integer groupid, Timestamp createTime) {
        super(ConfigAdminnotificationEvents.CONFIG_ADMINNOTIFICATION_EVENTS);

        set(0, id);
        set(1, projectAppid);
        set(2, eventKey);
        set(3, eventName);
        set(4, eventDesc);
        set(5, thresholdValue);
        set(6, thresholdInterval);
        set(7, enableNotifybyEmail);
        set(8, enableNotifybySms);
        set(9, enableNotifybyWechattemplatemessage);
        set(10, groupid);
        set(11, createTime);
    }
}
