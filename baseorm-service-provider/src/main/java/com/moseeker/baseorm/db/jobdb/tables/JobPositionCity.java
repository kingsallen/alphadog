/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.jobdb.tables;


import com.moseeker.baseorm.db.jobdb.Jobdb;
import com.moseeker.baseorm.db.jobdb.Keys;
import com.moseeker.baseorm.db.jobdb.tables.records.JobPositionCityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobPositionCity extends TableImpl<JobPositionCityRecord> {

    private static final long serialVersionUID = 366994318;

    /**
     * The reference instance of <code>jobdb.job_position_city</code>
     */
    public static final JobPositionCity JOB_POSITION_CITY = new JobPositionCity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobPositionCityRecord> getRecordType() {
        return JobPositionCityRecord.class;
    }

    /**
     * The column <code>jobdb.job_position_city.pid</code>. 职位id
     */
    public final TableField<JobPositionCityRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "职位id");

    /**
     * The column <code>jobdb.job_position_city.code</code>. 城市code
     */
    public final TableField<JobPositionCityRecord, Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "城市code");

    /**
     * Create a <code>jobdb.job_position_city</code> table reference
     */
    public JobPositionCity() {
        this("job_position_city", null);
    }

    /**
     * Create an aliased <code>jobdb.job_position_city</code> table reference
     */
    public JobPositionCity(String alias) {
        this(alias, JOB_POSITION_CITY);
    }

    private JobPositionCity(String alias, Table<JobPositionCityRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobPositionCity(String alias, Table<JobPositionCityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobdb.JOBDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobPositionCityRecord>> getKeys() {
        return Arrays.<UniqueKey<JobPositionCityRecord>>asList(Keys.KEY_JOB_POSITION_CITY_IDX_PID_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobPositionCity as(String alias) {
        return new JobPositionCity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobPositionCity rename(String name) {
        return new JobPositionCity(name, null);
    }
}
