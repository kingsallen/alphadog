/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.jobdb.tables;


import com.moseeker.baseorm.db.jobdb.Jobdb;
import com.moseeker.baseorm.db.jobdb.Keys;
import com.moseeker.baseorm.db.jobdb.tables.records.FeatureMappingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeatureMapping extends TableImpl<FeatureMappingRecord> {

    private static final long serialVersionUID = -96918877;

    /**
     * The reference instance of <code>jobdb.feature_mapping</code>
     */
    public static final FeatureMapping FEATURE_MAPPING = new FeatureMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeatureMappingRecord> getRecordType() {
        return FeatureMappingRecord.class;
    }

    /**
     * The column <code>jobdb.feature_mapping.id</code>.
     */
    public final TableField<FeatureMappingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jobdb.feature_mapping.o_feature</code>.
     */
    public final TableField<FeatureMappingRecord, String> O_FEATURE = createField("o_feature", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false), this, "");

    /**
     * The column <code>jobdb.feature_mapping.n_feature</code>.
     */
    public final TableField<FeatureMappingRecord, String> N_FEATURE = createField("n_feature", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false), this, "");

    /**
     * The column <code>jobdb.feature_mapping.company_id</code>.
     */
    public final TableField<FeatureMappingRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>jobdb.feature_mapping</code> table reference
     */
    public FeatureMapping() {
        this("feature_mapping", null);
    }

    /**
     * Create an aliased <code>jobdb.feature_mapping</code> table reference
     */
    public FeatureMapping(String alias) {
        this(alias, FEATURE_MAPPING);
    }

    private FeatureMapping(String alias, Table<FeatureMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private FeatureMapping(String alias, Table<FeatureMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobdb.JOBDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeatureMappingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FEATURE_MAPPING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FeatureMappingRecord> getPrimaryKey() {
        return Keys.KEY_FEATURE_MAPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeatureMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<FeatureMappingRecord>>asList(Keys.KEY_FEATURE_MAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureMapping as(String alias) {
        return new FeatureMapping(alias, this);
    }

    /**
     * Rename this table
     */
    public FeatureMapping rename(String name) {
        return new FeatureMapping(name, null);
    }
}
