/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables.daos;


import com.moseeker.baseorm.db.configdb.tables.ConfigAtsApplicationShowField;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigAtsApplicationShowFieldRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 招聘管理自定义可显示字段基表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigAtsApplicationShowFieldDao extends DAOImpl<ConfigAtsApplicationShowFieldRecord, com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField, Integer> {

    /**
     * Create a new ConfigAtsApplicationShowFieldDao without any configuration
     */
    public ConfigAtsApplicationShowFieldDao() {
        super(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD, com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField.class);
    }

    /**
     * Create a new ConfigAtsApplicationShowFieldDao with an attached configuration
     */
    public ConfigAtsApplicationShowFieldDao(Configuration configuration) {
        super(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD, com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchById(Integer... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField fetchOneById(Integer value) {
        return fetchOne(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByName(String... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.NAME, values);
    }

    /**
     * Fetch records that have <code>field_name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByFieldName(String... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.FIELD_NAME, values);
    }

    /**
     * Fetch records that have <code>company_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByCompanyId(Integer... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>disable IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByDisable(Integer... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.DISABLE, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByCreateTime(Timestamp... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.configdb.tables.pojos.ConfigAtsApplicationShowField> fetchByUpdateTime(Timestamp... values) {
        return fetch(ConfigAtsApplicationShowField.CONFIG_ATS_APPLICATION_SHOW_FIELD.UPDATE_TIME, values);
    }
}
