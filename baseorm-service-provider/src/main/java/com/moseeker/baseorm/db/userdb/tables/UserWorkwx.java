/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserWorkwxRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 企业微信用户信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserWorkwx extends TableImpl<UserWorkwxRecord> {

    private static final long serialVersionUID = 948752587;

    /**
     * The reference instance of <code>userdb.user_workwx</code>
     */
    public static final UserWorkwx USER_WORKWX = new UserWorkwx();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserWorkwxRecord> getRecordType() {
        return UserWorkwxRecord.class;
    }

    /**
     * The column <code>userdb.user_workwx.id</code>.
     */
    public final TableField<UserWorkwxRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_workwx.company_id</code>. 关联hr_company.id
     */
    public final TableField<UserWorkwxRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "关联hr_company.id");

    /**
     * The column <code>userdb.user_workwx.sysuser_id</code>. 关联仟寻用户id
     */
    public final TableField<UserWorkwxRecord, Integer> SYSUSER_ID = createField("sysuser_id", org.jooq.impl.SQLDataType.INTEGER, this, "关联仟寻用户id");

    /**
     * The column <code>userdb.user_workwx.work_wechat_corpid</code>. 企业微信公司ID，这样设计的好处是以防止HR改变了企业微信账号
     */
    public final TableField<UserWorkwxRecord, String> WORK_WECHAT_CORPID = createField("work_wechat_corpid", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "企业微信公司ID，这样设计的好处是以防止HR改变了企业微信账号");

    /**
     * The column <code>userdb.user_workwx.work_wechat_userid</code>. 企业微信用户ID
     */
    public final TableField<UserWorkwxRecord, String> WORK_WECHAT_USERID = createField("work_wechat_userid", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "企业微信用户ID");

    /**
     * The column <code>userdb.user_workwx.name</code>. 员工姓名
     */
    public final TableField<UserWorkwxRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "员工姓名");

    /**
     * The column <code>userdb.user_workwx.headimg</code>. 头像
     */
    public final TableField<UserWorkwxRecord, String> HEADIMG = createField("headimg", org.jooq.impl.SQLDataType.CLOB, this, "头像");

    /**
     * The column <code>userdb.user_workwx.mobile</code>. 手机号
     */
    public final TableField<UserWorkwxRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "手机号");

    /**
     * The column <code>userdb.user_workwx.email</code>. 邮箱
     */
    public final TableField<UserWorkwxRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "邮箱");

    /**
     * The column <code>userdb.user_workwx.department</code>. 部门id列表
     */
    public final TableField<UserWorkwxRecord, String> DEPARTMENT = createField("department", org.jooq.impl.SQLDataType.CLOB, this, "部门id列表");

    /**
     * The column <code>userdb.user_workwx.department_names</code>. 部门名称列表
     */
    public final TableField<UserWorkwxRecord, String> DEPARTMENT_NAMES = createField("department_names", org.jooq.impl.SQLDataType.CLOB, this, "部门名称列表");

    /**
     * The column <code>userdb.user_workwx.position</code>. 职位
     */
    public final TableField<UserWorkwxRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "职位");

    /**
     * The column <code>userdb.user_workwx.address</code>. 地址
     */
    public final TableField<UserWorkwxRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "地址");

    /**
     * The column <code>userdb.user_workwx.gender</code>. 性别 1：男 2：女 0：未知，默认值0
     */
    public final TableField<UserWorkwxRecord, Byte> GENDER = createField("gender", org.jooq.impl.SQLDataType.TINYINT, this, "性别 1：男 2：女 0：未知，默认值0");

    /**
     * The column <code>userdb.user_workwx.telephone</code>. 座机
     */
    public final TableField<UserWorkwxRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "座机");

    /**
     * The column <code>userdb.user_workwx.enable</code>. 成员启用状态。1表示启用的成员，0表示被禁用
     */
    public final TableField<UserWorkwxRecord, Byte> ENABLE = createField("enable", org.jooq.impl.SQLDataType.TINYINT, this, "成员启用状态。1表示启用的成员，0表示被禁用");

    /**
     * The column <code>userdb.user_workwx.extattr</code>. 扩展属性
     */
    public final TableField<UserWorkwxRecord, String> EXTATTR = createField("extattr", org.jooq.impl.SQLDataType.CLOB, this, "扩展属性");

    /**
     * The column <code>userdb.user_workwx.status</code>. 激活状态: 1=已激活，2=已禁用，4=未激活
     */
    public final TableField<UserWorkwxRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "激活状态: 1=已激活，2=已禁用，4=未激活");

    /**
     * The column <code>userdb.user_workwx.external_profile</code>. 成员对外属性
     */
    public final TableField<UserWorkwxRecord, String> EXTERNAL_PROFILE = createField("external_profile", org.jooq.impl.SQLDataType.CLOB, this, "成员对外属性");

    /**
     * The column <code>userdb.user_workwx.external_position</code>. 对外职位
     */
    public final TableField<UserWorkwxRecord, String> EXTERNAL_POSITION = createField("external_position", org.jooq.impl.SQLDataType.CLOB, this, "对外职位");

    /**
     * The column <code>userdb.user_workwx.disable</code>. 是否有效 1:无效 0：有效
     */
    public final TableField<UserWorkwxRecord, Byte> DISABLE = createField("disable", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否有效 1:无效 0：有效");

    /**
     * The column <code>userdb.user_workwx.create_time</code>.
     */
    public final TableField<UserWorkwxRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>userdb.user_workwx.update_time</code>.
     */
    public final TableField<UserWorkwxRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>userdb.user_workwx</code> table reference
     */
    public UserWorkwx() {
        this("user_workwx", null);
    }

    /**
     * Create an aliased <code>userdb.user_workwx</code> table reference
     */
    public UserWorkwx(String alias) {
        this(alias, USER_WORKWX);
    }

    private UserWorkwx(String alias, Table<UserWorkwxRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserWorkwx(String alias, Table<UserWorkwxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "企业微信用户信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserWorkwxRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_WORKWX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserWorkwxRecord> getPrimaryKey() {
        return Keys.KEY_USER_WORKWX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserWorkwxRecord>> getKeys() {
        return Arrays.<UniqueKey<UserWorkwxRecord>>asList(Keys.KEY_USER_WORKWX_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserWorkwx as(String alias) {
        return new UserWorkwx(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserWorkwx rename(String name) {
        return new UserWorkwx(name, null);
    }
}
