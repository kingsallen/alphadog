/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables.daos;


import com.moseeker.baseorm.db.userdb.tables.UserEmployeeUpvote;
import com.moseeker.baseorm.db.userdb.tables.records.UserEmployeeUpvoteRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 员工点赞记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEmployeeUpvoteDao extends DAOImpl<UserEmployeeUpvoteRecord, com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote, Integer> {

    /**
     * Create a new UserEmployeeUpvoteDao without any configuration
     */
    public UserEmployeeUpvoteDao() {
        super(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE, com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote.class);
    }

    /**
     * Create a new UserEmployeeUpvoteDao with an attached configuration
     */
    public UserEmployeeUpvoteDao(Configuration configuration) {
        super(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE, com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchById(Integer... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote fetchOneById(Integer value) {
        return fetchOne(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.ID, value);
    }

    /**
     * Fetch records that have <code>sender IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchBySender(Integer... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.SENDER, values);
    }

    /**
     * Fetch records that have <code>receiver IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByReceiver(Integer... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.RECEIVER, values);
    }

    /**
     * Fetch records that have <code>company_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByCompanyId(Integer... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>upvote_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByUpvoteTime(Timestamp... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.UPVOTE_TIME, values);
    }

    /**
     * Fetch records that have <code>cancel IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByCancel(Byte... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.CANCEL, values);
    }

    /**
     * Fetch records that have <code>cancel_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByCancelTime(Timestamp... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.CANCEL_TIME, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByCreateTime(Timestamp... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.UserEmployeeUpvote> fetchByUpdateTime(Timestamp... values) {
        return fetch(UserEmployeeUpvote.USER_EMPLOYEE_UPVOTE.UPDATE_TIME, values);
    }
}
