/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.candidatedb.tables;


import com.moseeker.baseorm.db.candidatedb.Candidatedb;
import com.moseeker.baseorm.db.candidatedb.Keys;
import com.moseeker.baseorm.db.candidatedb.tables.records.CandidateRecomRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 候选人推荐记录表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CandidateRecomRecord extends TableImpl<CandidateRecomRecordRecord> {

	private static final long serialVersionUID = -956249121;

	/**
	 * The reference instance of <code>candidatedb.candidate_recom_record</code>
	 */
	public static final CandidateRecomRecord CANDIDATE_RECOM_RECORD = new CandidateRecomRecord();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CandidateRecomRecordRecord> getRecordType() {
		return CandidateRecomRecordRecord.class;
	}

	/**
	 * The column <code>candidatedb.candidate_recom_record.id</code>. 主key
	 */
	public final TableField<CandidateRecomRecordRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "主key");

	/**
	 * The column <code>candidatedb.candidate_recom_record.position_id</code>. 推荐的职位ID, hr_position.id
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "推荐的职位ID, hr_position.id");

	/**
	 * The column <code>candidatedb.candidate_recom_record.app_id</code>. job_application.id, 被推荐者申请ID
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "job_application.id, 被推荐者申请ID");

	/**
	 * The column <code>candidatedb.candidate_recom_record.presentee_id</code>. userdb.user_wx_user.id, 被推荐者的微信ID。现在已经废弃，改由被推荐者的C端账号编号表示，请参考presentee_user_id
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> PRESENTEE_ID = createField("presentee_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "userdb.user_wx_user.id, 被推荐者的微信ID。现在已经废弃，改由被推荐者的C端账号编号表示，请参考presentee_user_id");

	/**
	 * The column <code>candidatedb.candidate_recom_record.click_time</code>. 职位点击时间
	 */
	public final TableField<CandidateRecomRecordRecord, Timestamp> CLICK_TIME = createField("click_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "职位点击时间");

	/**
	 * The column <code>candidatedb.candidate_recom_record.depth</code>. 第几层关系
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> DEPTH = createField("depth", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "第几层关系");

	/**
	 * The column <code>candidatedb.candidate_recom_record.recom_id_2</code>. userdb.user_wx_usesr.id, 第2度人脉推荐人微信ID，用来标记谁的朋友。已经废弃，第2度人脉微信ID由第2度人脉C端账号编号替换，请参考repost_user_id
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> RECOM_ID_2 = createField("recom_id_2", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "userdb.user_wx_usesr.id, 第2度人脉推荐人微信ID，用来标记谁的朋友。已经废弃，第2度人脉微信ID由第2度人脉C端账号编号替换，请参考repost_user_id");

	/**
	 * The column <code>candidatedb.candidate_recom_record.recom_id</code>. userdb.user_wx_user.id, 推荐者的微信ID。已经废弃，推荐者的微信ID被推荐者的C端账号编号替换，请参考post_user_id
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> RECOM_ID = createField("recom_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "userdb.user_wx_user.id, 推荐者的微信ID。已经废弃，推荐者的微信ID被推荐者的C端账号编号替换，请参考post_user_id");

	/**
	 * The column <code>candidatedb.candidate_recom_record.realname</code>. 被推荐人真实姓名
	 */
	public final TableField<CandidateRecomRecordRecord, String> REALNAME = createField("realname", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "被推荐人真实姓名");

	/**
	 * The column <code>candidatedb.candidate_recom_record.company</code>. 被推荐者目前就职公司
	 */
	public final TableField<CandidateRecomRecordRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "被推荐者目前就职公司");

	/**
	 * The column <code>candidatedb.candidate_recom_record.position</code>. 被推荐者的职位
	 */
	public final TableField<CandidateRecomRecordRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "被推荐者的职位");

	/**
	 * The column <code>candidatedb.candidate_recom_record.recom_reason</code>. 推荐理由, 逗号分隔
	 */
	public final TableField<CandidateRecomRecordRecord, String> RECOM_REASON = createField("recom_reason", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaulted(true), this, "推荐理由, 逗号分隔");

	/**
	 * The column <code>candidatedb.candidate_recom_record.recom_time</code>. 推荐时间
	 */
	public final TableField<CandidateRecomRecordRecord, Timestamp> RECOM_TIME = createField("recom_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "推荐时间");

	/**
	 * The column <code>candidatedb.candidate_recom_record.is_recom</code>. 推荐状态，0：推荐过，1：未推荐,2:忽略--推荐被动求职者时，可以选中多个求职者挨个填写求职者信息。忽略是指跳过当前求职者，到下一个求职者。3： 选中--推荐被动求职者时，可以选中多个被动求职者。
	 */
	public final TableField<CandidateRecomRecordRecord, Integer> IS_RECOM = createField("is_recom", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "推荐状态，0：推荐过，1：未推荐,2:忽略--推荐被动求职者时，可以选中多个求职者挨个填写求职者信息。忽略是指跳过当前求职者，到下一个求职者。3： 选中--推荐被动求职者时，可以选中多个被动求职者。");

	/**
	 * The column <code>candidatedb.candidate_recom_record.create_time</code>. 创建时间
	 */
	public final TableField<CandidateRecomRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>candidatedb.candidate_recom_record.update_time</code>. 更新时间
	 */
	public final TableField<CandidateRecomRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * The column <code>candidatedb.candidate_recom_record.mobile</code>. 被推荐者的手机号
	 */
	public final TableField<CandidateRecomRecordRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaulted(true), this, "被推荐者的手机号");

	/**
	 * The column <code>candidatedb.candidate_recom_record.presentee_user_id</code>. userdb.user_user.id 被推荐者的C端账号编号
	 */
	public final TableField<CandidateRecomRecordRecord, UInteger> PRESENTEE_USER_ID = createField("presentee_user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "userdb.user_user.id 被推荐者的C端账号编号");

	/**
	 * The column <code>candidatedb.candidate_recom_record.repost_user_id</code>. userdb.user_user.id 第2度人脉推荐人C 端账号编号，用来标记谁的朋友
	 */
	public final TableField<CandidateRecomRecordRecord, UInteger> REPOST_USER_ID = createField("repost_user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "userdb.user_user.id 第2度人脉推荐人C 端账号编号，用来标记谁的朋友");

	/**
	 * The column <code>candidatedb.candidate_recom_record.post_user_id</code>. userdb.user_user.id 推荐者的C端账号编号
	 */
	public final TableField<CandidateRecomRecordRecord, UInteger> POST_USER_ID = createField("post_user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "userdb.user_user.id 推荐者的C端账号编号");

	/**
	 * Create a <code>candidatedb.candidate_recom_record</code> table reference
	 */
	public CandidateRecomRecord() {
		this("candidate_recom_record", null);
	}

	/**
	 * Create an aliased <code>candidatedb.candidate_recom_record</code> table reference
	 */
	public CandidateRecomRecord(String alias) {
		this(alias, CANDIDATE_RECOM_RECORD);
	}

	private CandidateRecomRecord(String alias, Table<CandidateRecomRecordRecord> aliased) {
		this(alias, aliased, null);
	}

	private CandidateRecomRecord(String alias, Table<CandidateRecomRecordRecord> aliased, Field<?>[] parameters) {
		super(alias, Candidatedb.CANDIDATEDB, aliased, parameters, "候选人推荐记录表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CandidateRecomRecordRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_CANDIDATE_RECOM_RECORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CandidateRecomRecordRecord> getPrimaryKey() {
		return Keys.KEY_CANDIDATE_RECOM_RECORD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CandidateRecomRecordRecord>> getKeys() {
		return Arrays.<UniqueKey<CandidateRecomRecordRecord>>asList(Keys.KEY_CANDIDATE_RECOM_RECORD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CandidateRecomRecord as(String alias) {
		return new CandidateRecomRecord(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CandidateRecomRecord rename(String name) {
		return new CandidateRecomRecord(name, null);
	}
}
