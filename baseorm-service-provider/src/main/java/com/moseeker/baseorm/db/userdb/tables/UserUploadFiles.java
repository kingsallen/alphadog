/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserUploadFilesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户上传文件记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserUploadFiles extends TableImpl<UserUploadFilesRecord> {

    private static final long serialVersionUID = -1652230085;

    /**
     * The reference instance of <code>userdb.user_upload_files</code>
     */
    public static final UserUploadFiles USER_UPLOAD_FILES = new UserUploadFiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserUploadFilesRecord> getRecordType() {
        return UserUploadFilesRecord.class;
    }

    /**
     * The column <code>userdb.user_upload_files.id</code>. 主key
     */
    public final TableField<UserUploadFilesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主key");

    /**
     * The column <code>userdb.user_upload_files.scene_id</code>. 场景 1:身份证识别
     */
    public final TableField<UserUploadFilesRecord, String> SCENE_ID = createField("scene_id", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "场景 1:身份证识别");

    /**
     * The column <code>userdb.user_upload_files.uniname</code>. 后台生成文件名称
     */
    public final TableField<UserUploadFilesRecord, String> UNINAME = createField("uniname", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "后台生成文件名称");

    /**
     * The column <code>userdb.user_upload_files.sysuser_id</code>. c端用户账号，user_user.id
     */
    public final TableField<UserUploadFilesRecord, String> SYSUSER_ID = createField("sysuser_id", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "c端用户账号，user_user.id");

    /**
     * The column <code>userdb.user_upload_files.source</code>. 上传渠道：1 微信端 2电脑上传
     */
    public final TableField<UserUploadFilesRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER, this, "上传渠道：1 微信端 2电脑上传");

    /**
     * The column <code>userdb.user_upload_files.filename</code>. 文件名
     */
    public final TableField<UserUploadFilesRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "文件名");

    /**
     * The column <code>userdb.user_upload_files.url</code>. 文件保存地址
     */
    public final TableField<UserUploadFilesRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "文件保存地址");

    /**
     * The column <code>userdb.user_upload_files.create_time</code>. 创建时间
     */
    public final TableField<UserUploadFilesRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_upload_files.update_time</code>. 更新时间
     */
    public final TableField<UserUploadFilesRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>userdb.user_upload_files.status</code>. 状态：0正常，1删除
     */
    public final TableField<UserUploadFilesRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "状态：0正常，1删除");

    /**
     * Create a <code>userdb.user_upload_files</code> table reference
     */
    public UserUploadFiles() {
        this("user_upload_files", null);
    }

    /**
     * Create an aliased <code>userdb.user_upload_files</code> table reference
     */
    public UserUploadFiles(String alias) {
        this(alias, USER_UPLOAD_FILES);
    }

    private UserUploadFiles(String alias, Table<UserUploadFilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserUploadFiles(String alias, Table<UserUploadFilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户上传文件记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserUploadFilesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_UPLOAD_FILES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserUploadFilesRecord> getPrimaryKey() {
        return Keys.KEY_USER_UPLOAD_FILES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserUploadFilesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserUploadFilesRecord>>asList(Keys.KEY_USER_UPLOAD_FILES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserUploadFiles as(String alias) {
        return new UserUploadFiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserUploadFiles rename(String name) {
        return new UserUploadFiles(name, null);
    }
}
