/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.historydb.tables;


import com.moseeker.baseorm.db.historydb.Historydb;
import com.moseeker.baseorm.db.historydb.Keys;
import com.moseeker.baseorm.db.historydb.tables.records.HrThirdPartyPosition_20180428Record;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 第三方渠道同步的职位
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrThirdPartyPosition_20180428 extends TableImpl<HrThirdPartyPosition_20180428Record> {

    private static final long serialVersionUID = -55822795;

    /**
     * The reference instance of <code>historydb.hr_third_party_position_20180428</code>
     */
    public static final HrThirdPartyPosition_20180428 HR_THIRD_PARTY_POSITION_20180428 = new HrThirdPartyPosition_20180428();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HrThirdPartyPosition_20180428Record> getRecordType() {
        return HrThirdPartyPosition_20180428Record.class;
    }

    /**
     * The column <code>historydb.hr_third_party_position_20180428.id</code>.
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.position_id</code>. jobdb.job_position.id
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "jobdb.job_position.id");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.third_part_position_id</code>. 第三方渠道编号
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> THIRD_PART_POSITION_ID = createField("third_part_position_id", org.jooq.impl.SQLDataType.VARCHAR.length(200).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "第三方渠道编号");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.channel</code>. 1=51job,2=猎聘,3=智联,4=linkedin
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Short> CHANNEL = createField("channel", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "1=51job,2=猎聘,3=智联,4=linkedin");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.is_synchronization</code>. 是否同步:0=未同步,1=同步,2=同步中，3=同步失败，4=同步错误(发生不能给用户显示的错误)
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Short> IS_SYNCHRONIZATION = createField("is_synchronization", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "是否同步:0=未同步,1=同步,2=同步中，3=同步失败，4=同步错误(发生不能给用户显示的错误)");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.is_refresh</code>. 是否刷新:0=未刷新,1=刷新,2=刷新中
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Short> IS_REFRESH = createField("is_refresh", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "是否刷新:0=未刷新,1=刷新,2=刷新中");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.sync_time</code>. 职位同步时间
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Timestamp> SYNC_TIME = createField("sync_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "职位同步时间");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.refresh_time</code>. 职位刷新时间
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Timestamp> REFRESH_TIME = createField("refresh_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "职位刷新时间");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.update_time</code>. 数据更新时间
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "数据更新时间");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.address</code>. 详细地址
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "详细地址");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.occupation</code>. 同步时选中的第三方职位职能
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> OCCUPATION = createField("occupation", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "同步时选中的第三方职位职能");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.sync_fail_reason</code>. 失败原因
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> SYNC_FAIL_REASON = createField("sync_fail_reason", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "失败原因");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.use_company_address</code>. 使用企业地址
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Short> USE_COMPANY_ADDRESS = createField("use_company_address", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "使用企业地址");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.third_party_account_id</code>. 第三方账号ID
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> THIRD_PARTY_ACCOUNT_ID = createField("third_party_account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "第三方账号ID");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.department</code>. 同步时自定义或者匹配的部门名
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> DEPARTMENT = createField("department", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "同步时自定义或者匹配的部门名");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.salary_month</code>. 发放月薪数
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> SALARY_MONTH = createField("salary_month", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "发放月薪数");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.feedback_period</code>. 招聘反馈时长
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> FEEDBACK_PERIOD = createField("feedback_period", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "招聘反馈时长");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.salary_discuss</code>. 是否显示为面议0否1是
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Short> SALARY_DISCUSS = createField("salary_discuss", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "是否显示为面议0否1是");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.salary_bottom</code>. 薪资底线
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> SALARY_BOTTOM = createField("salary_bottom", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "薪资底线");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.salary_top</code>. 薪资封顶
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> SALARY_TOP = createField("salary_top", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "薪资封顶");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.practice_salary</code>. 实习薪资，完整薪资
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> PRACTICE_SALARY = createField("practice_salary", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "实习薪资，完整薪资");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.practice_salary_unit</code>. 实习薪资单位，0：元/月，1：元/天
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Byte> PRACTICE_SALARY_UNIT = createField("practice_salary_unit", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "实习薪资单位，0：元/月，1：元/天");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.practice_per_week</code>. 每周实习天数
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Byte> PRACTICE_PER_WEEK = createField("practice_per_week", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "每周实习天数");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.company_id</code>. 绑定第三方账号对应公司的id，关联thirdparty_account_city的id
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER, this, "绑定第三方账号对应公司的id，关联thirdparty_account_city的id");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.address_id</code>. 绑定第三方账号对应地址的id，关联thirdparty_account_company_address的id
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.INTEGER, this, "绑定第三方账号对应地址的id，关联thirdparty_account_company_address的id");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.department_id</code>. 绑定第三方账号对应部门的id，关联thirdparty_account_department的id
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> DEPARTMENT_ID = createField("department_id", org.jooq.impl.SQLDataType.INTEGER, this, "绑定第三方账号对应部门的id，关联thirdparty_account_department的id");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.company_name</code>. 绑定第三方账号对应公司的名称
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "绑定第三方账号对应公司的名称");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.address_name</code>. 绑定第三方账号对应地址的名称
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> ADDRESS_NAME = createField("address_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "绑定第三方账号对应地址的名称");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.department_name</code>. 绑定第三方账号对应部门的名称
     */
    public final TableField<HrThirdPartyPosition_20180428Record, String> DEPARTMENT_NAME = createField("department_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "绑定第三方账号对应部门的名称");

    /**
     * The column <code>historydb.hr_third_party_position_20180428.count</code>. 招聘人数
     */
    public final TableField<HrThirdPartyPosition_20180428Record, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "招聘人数");

    /**
     * Create a <code>historydb.hr_third_party_position_20180428</code> table reference
     */
    public HrThirdPartyPosition_20180428() {
        this("hr_third_party_position_20180428", null);
    }

    /**
     * Create an aliased <code>historydb.hr_third_party_position_20180428</code> table reference
     */
    public HrThirdPartyPosition_20180428(String alias) {
        this(alias, HR_THIRD_PARTY_POSITION_20180428);
    }

    private HrThirdPartyPosition_20180428(String alias, Table<HrThirdPartyPosition_20180428Record> aliased) {
        this(alias, aliased, null);
    }

    private HrThirdPartyPosition_20180428(String alias, Table<HrThirdPartyPosition_20180428Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "第三方渠道同步的职位");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Historydb.HISTORYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HrThirdPartyPosition_20180428Record, Integer> getIdentity() {
        return Keys.IDENTITY_HR_THIRD_PARTY_POSITION_20180428;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HrThirdPartyPosition_20180428Record> getPrimaryKey() {
        return Keys.KEY_HR_THIRD_PARTY_POSITION_20180428_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HrThirdPartyPosition_20180428Record>> getKeys() {
        return Arrays.<UniqueKey<HrThirdPartyPosition_20180428Record>>asList(Keys.KEY_HR_THIRD_PARTY_POSITION_20180428_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HrThirdPartyPosition_20180428 as(String alias) {
        return new HrThirdPartyPosition_20180428(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HrThirdPartyPosition_20180428 rename(String name) {
        return new HrThirdPartyPosition_20180428(name, null);
    }
}
