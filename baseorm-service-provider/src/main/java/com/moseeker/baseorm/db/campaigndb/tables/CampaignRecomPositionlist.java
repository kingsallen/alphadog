/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.campaigndb.tables;


import com.moseeker.baseorm.db.campaigndb.Campaigndb;
import com.moseeker.baseorm.db.campaigndb.Keys;
import com.moseeker.baseorm.db.campaigndb.tables.records.CampaignRecomPositionlistRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 职位推送记录，暂时用于个人画像，员工推送转发，也可用于其他有相同需求的地方
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CampaignRecomPositionlist extends TableImpl<CampaignRecomPositionlistRecord> {

    private static final long serialVersionUID = 498729613;

    /**
     * The reference instance of <code>campaigndb.campaign_recom_positionlist</code>
     */
    public static final CampaignRecomPositionlist CAMPAIGN_RECOM_POSITIONLIST = new CampaignRecomPositionlist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignRecomPositionlistRecord> getRecordType() {
        return CampaignRecomPositionlistRecord.class;
    }

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.id</code>.
     */
    public final TableField<CampaignRecomPositionlistRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.company_id</code>. 公司id
     */
    public final TableField<CampaignRecomPositionlistRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司id");

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.position_ids</code>. 职位id,之间用逗号隔开
     */
    public final TableField<CampaignRecomPositionlistRecord, String> POSITION_IDS = createField("position_ids", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "职位id,之间用逗号隔开");

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.type</code>. 推送职位类型 0;粉丝，暂时不用 1:员工职位推送
     */
    public final TableField<CampaignRecomPositionlistRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "推送职位类型 0;粉丝，暂时不用 1:员工职位推送");

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.create_time</code>.
     */
    public final TableField<CampaignRecomPositionlistRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>campaigndb.campaign_recom_positionlist.update_time</code>.
     */
    public final TableField<CampaignRecomPositionlistRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>campaigndb.campaign_recom_positionlist</code> table reference
     */
    public CampaignRecomPositionlist() {
        this("campaign_recom_positionlist", null);
    }

    /**
     * Create an aliased <code>campaigndb.campaign_recom_positionlist</code> table reference
     */
    public CampaignRecomPositionlist(String alias) {
        this(alias, CAMPAIGN_RECOM_POSITIONLIST);
    }

    private CampaignRecomPositionlist(String alias, Table<CampaignRecomPositionlistRecord> aliased) {
        this(alias, aliased, null);
    }

    private CampaignRecomPositionlist(String alias, Table<CampaignRecomPositionlistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "职位推送记录，暂时用于个人画像，员工推送转发，也可用于其他有相同需求的地方");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Campaigndb.CAMPAIGNDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CampaignRecomPositionlistRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CAMPAIGN_RECOM_POSITIONLIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CampaignRecomPositionlistRecord> getPrimaryKey() {
        return Keys.KEY_CAMPAIGN_RECOM_POSITIONLIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CampaignRecomPositionlistRecord>> getKeys() {
        return Arrays.<UniqueKey<CampaignRecomPositionlistRecord>>asList(Keys.KEY_CAMPAIGN_RECOM_POSITIONLIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CampaignRecomPositionlist as(String alias) {
        return new CampaignRecomPositionlist(alias, this);
    }

    /**
     * Rename this table
     */

    public CampaignRecomPositionlist rename(String name) {
        return new CampaignRecomPositionlist(name, null);
    }
}
