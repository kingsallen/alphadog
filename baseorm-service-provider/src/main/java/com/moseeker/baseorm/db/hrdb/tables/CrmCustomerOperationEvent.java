/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.hrdb.tables;


import com.moseeker.baseorm.db.hrdb.Hrdb;
import com.moseeker.baseorm.db.hrdb.Keys;
import com.moseeker.baseorm.db.hrdb.tables.records.CrmCustomerOperationEventRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrmCustomerOperationEvent extends TableImpl<CrmCustomerOperationEventRecord> {

    private static final long serialVersionUID = -2121000775;

    /**
     * The reference instance of <code>hrdb.crm_customer_operation_event</code>
     */
    public static final CrmCustomerOperationEvent CRM_CUSTOMER_OPERATION_EVENT = new CrmCustomerOperationEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrmCustomerOperationEventRecord> getRecordType() {
        return CrmCustomerOperationEventRecord.class;
    }

    /**
     * The column <code>hrdb.crm_customer_operation_event.id</code>. primaryKey
     */
    public final TableField<CrmCustomerOperationEventRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "primaryKey");

    /**
     * The column <code>hrdb.crm_customer_operation_event.operation_record_id</code>. 运营记录id crm_customer_operation_record.id
     */
    public final TableField<CrmCustomerOperationEventRecord, Integer> OPERATION_RECORD_ID = createField("operation_record_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "运营记录id crm_customer_operation_record.id");

    /**
     * The column <code>hrdb.crm_customer_operation_event.event_type</code>. 活动分类：1：线上，2：线下
     */
    public final TableField<CrmCustomerOperationEventRecord, Byte> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "活动分类：1：线上，2：线下");

    /**
     * The column <code>hrdb.crm_customer_operation_event.type</code>. 活动类型：1：推文，2: 红包活动，3：积分活动，4：展台，5：内部通知，6：其他
     */
    public final TableField<CrmCustomerOperationEventRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "活动类型：1：推文，2: 红包活动，3：积分活动，4：展台，5：内部通知，6：其他");

    /**
     * The column <code>hrdb.crm_customer_operation_event.remark</code>. 备注
     */
    public final TableField<CrmCustomerOperationEventRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "备注");

    /**
     * The column <code>hrdb.crm_customer_operation_event.create_time</code>. 创建时间
     */
    public final TableField<CrmCustomerOperationEventRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>hrdb.crm_customer_operation_event.update_time</code>. 更新时间
     */
    public final TableField<CrmCustomerOperationEventRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>hrdb.crm_customer_operation_event.ver</code>. 版本号
     */
    public final TableField<CrmCustomerOperationEventRecord, Integer> VER = createField("ver", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "版本号");

    /**
     * Create a <code>hrdb.crm_customer_operation_event</code> table reference
     */
    public CrmCustomerOperationEvent() {
        this("crm_customer_operation_event", null);
    }

    /**
     * Create an aliased <code>hrdb.crm_customer_operation_event</code> table reference
     */
    public CrmCustomerOperationEvent(String alias) {
        this(alias, CRM_CUSTOMER_OPERATION_EVENT);
    }

    private CrmCustomerOperationEvent(String alias, Table<CrmCustomerOperationEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private CrmCustomerOperationEvent(String alias, Table<CrmCustomerOperationEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Hrdb.HRDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CrmCustomerOperationEventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CRM_CUSTOMER_OPERATION_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrmCustomerOperationEventRecord> getPrimaryKey() {
        return Keys.KEY_CRM_CUSTOMER_OPERATION_EVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrmCustomerOperationEventRecord>> getKeys() {
        return Arrays.<UniqueKey<CrmCustomerOperationEventRecord>>asList(Keys.KEY_CRM_CUSTOMER_OPERATION_EVENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CrmCustomerOperationEvent as(String alias) {
        return new CrmCustomerOperationEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CrmCustomerOperationEvent rename(String name) {
        return new CrmCustomerOperationEvent(name, null);
    }
}
