/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.jobdb.tables;


import com.moseeker.baseorm.db.jobdb.Jobdb;
import com.moseeker.baseorm.db.jobdb.Keys;
import com.moseeker.baseorm.db.jobdb.tables.records.JobApplicationCommunicationRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobApplicationCommunicationRecord extends TableImpl<JobApplicationCommunicationRecordRecord> {

    private static final long serialVersionUID = 688960578;

    /**
     * The reference instance of <code>jobdb.job_application_communication_record</code>
     */
    public static final JobApplicationCommunicationRecord JOB_APPLICATION_COMMUNICATION_RECORD = new JobApplicationCommunicationRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobApplicationCommunicationRecordRecord> getRecordType() {
        return JobApplicationCommunicationRecordRecord.class;
    }

    /**
     * The column <code>jobdb.job_application_communication_record.id</code>. primaryKey
     */
    public final TableField<JobApplicationCommunicationRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "primaryKey");

    /**
     * The column <code>jobdb.job_application_communication_record.content</code>. 备注内容
     */
    public final TableField<JobApplicationCommunicationRecordRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "备注内容");

    /**
     * The column <code>jobdb.job_application_communication_record.creator_type</code>. 1:userdb.user_hr_account
     */
    public final TableField<JobApplicationCommunicationRecordRecord, Byte> CREATOR_TYPE = createField("creator_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1:userdb.user_hr_account");

    /**
     * The column <code>jobdb.job_application_communication_record.creator_id</code>. 备注创建人id,对应的创建人类型存储对应的创建人id
     */
    public final TableField<JobApplicationCommunicationRecordRecord, Integer> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "备注创建人id,对应的创建人类型存储对应的创建人id");

    /**
     * The column <code>jobdb.job_application_communication_record.create_time</code>. 创建时间
     */
    public final TableField<JobApplicationCommunicationRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>jobdb.job_application_communication_record.update_time</code>. 更新时间
     */
    public final TableField<JobApplicationCommunicationRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>jobdb.job_application_communication_record</code> table reference
     */
    public JobApplicationCommunicationRecord() {
        this("job_application_communication_record", null);
    }

    /**
     * Create an aliased <code>jobdb.job_application_communication_record</code> table reference
     */
    public JobApplicationCommunicationRecord(String alias) {
        this(alias, JOB_APPLICATION_COMMUNICATION_RECORD);
    }

    private JobApplicationCommunicationRecord(String alias, Table<JobApplicationCommunicationRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobApplicationCommunicationRecord(String alias, Table<JobApplicationCommunicationRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobdb.JOBDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JobApplicationCommunicationRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JOB_APPLICATION_COMMUNICATION_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobApplicationCommunicationRecordRecord> getPrimaryKey() {
        return Keys.KEY_JOB_APPLICATION_COMMUNICATION_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobApplicationCommunicationRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<JobApplicationCommunicationRecordRecord>>asList(Keys.KEY_JOB_APPLICATION_COMMUNICATION_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobApplicationCommunicationRecord as(String alias) {
        return new JobApplicationCommunicationRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobApplicationCommunicationRecord rename(String name) {
        return new JobApplicationCommunicationRecord(name, null);
    }
}
