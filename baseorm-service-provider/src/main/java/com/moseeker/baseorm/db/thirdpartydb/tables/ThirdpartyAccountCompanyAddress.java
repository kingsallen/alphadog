/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.thirdpartydb.tables;


import com.moseeker.baseorm.db.thirdpartydb.Keys;
import com.moseeker.baseorm.db.thirdpartydb.Thirdpartydb;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCompanyAddressRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 第三方渠道的上班地址
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThirdpartyAccountCompanyAddress extends TableImpl<ThirdpartyAccountCompanyAddressRecord> {

    private static final long serialVersionUID = 87040973;

    /**
     * The reference instance of <code>thirdpartydb.thirdparty_account_company_address</code>
     */
    public static final ThirdpartyAccountCompanyAddress THIRDPARTY_ACCOUNT_COMPANY_ADDRESS = new ThirdpartyAccountCompanyAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThirdpartyAccountCompanyAddressRecord> getRecordType() {
        return ThirdpartyAccountCompanyAddressRecord.class;
    }

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.id</code>. 主键
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键");

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.account_id</code>. 第三方渠道账号的编号
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "第三方渠道账号的编号");

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.city</code>. 上班城市
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "上班城市");

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.address</code>. 上班地址
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "上班地址");

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.create_time</code>. 创建时间
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>thirdpartydb.thirdparty_account_company_address.update_time</code>. 注册时间
     */
    public final TableField<ThirdpartyAccountCompanyAddressRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "注册时间");

    /**
     * Create a <code>thirdpartydb.thirdparty_account_company_address</code> table reference
     */
    public ThirdpartyAccountCompanyAddress() {
        this("thirdparty_account_company_address", null);
    }

    /**
     * Create an aliased <code>thirdpartydb.thirdparty_account_company_address</code> table reference
     */
    public ThirdpartyAccountCompanyAddress(String alias) {
        this(alias, THIRDPARTY_ACCOUNT_COMPANY_ADDRESS);
    }

    private ThirdpartyAccountCompanyAddress(String alias, Table<ThirdpartyAccountCompanyAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThirdpartyAccountCompanyAddress(String alias, Table<ThirdpartyAccountCompanyAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "第三方渠道的上班地址");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Thirdpartydb.THIRDPARTYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ThirdpartyAccountCompanyAddressRecord, Integer> getIdentity() {
        return Keys.IDENTITY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThirdpartyAccountCompanyAddressRecord> getPrimaryKey() {
        return Keys.KEY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThirdpartyAccountCompanyAddressRecord>> getKeys() {
        return Arrays.<UniqueKey<ThirdpartyAccountCompanyAddressRecord>>asList(Keys.KEY_THIRDPARTY_ACCOUNT_COMPANY_ADDRESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThirdpartyAccountCompanyAddress as(String alias) {
        return new ThirdpartyAccountCompanyAddress(alias, this);
    }

    /**
     * Rename this table
     */
    public ThirdpartyAccountCompanyAddress rename(String name) {
        return new ThirdpartyAccountCompanyAddress(name, null);
    }
}
