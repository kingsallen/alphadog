/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.talentpooldb.tables;


import com.moseeker.baseorm.db.talentpooldb.Keys;
import com.moseeker.baseorm.db.talentpooldb.Talentpooldb;
import com.moseeker.baseorm.db.talentpooldb.tables.records.TalentpoolCompanyManualTagRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 企业手动标签
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalentpoolCompanyManualTag extends TableImpl<TalentpoolCompanyManualTagRecord> {

    private static final long serialVersionUID = -929318697;

    /**
     * The reference instance of <code>talentpooldb.talentpool_company_manual_tag</code>
     */
    public static final TalentpoolCompanyManualTag TALENTPOOL_COMPANY_MANUAL_TAG = new TalentpoolCompanyManualTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalentpoolCompanyManualTagRecord> getRecordType() {
        return TalentpoolCompanyManualTagRecord.class;
    }

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.id</code>.
     */
    public final TableField<TalentpoolCompanyManualTagRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.company_id</code>. 公司ID
     */
    public final TableField<TalentpoolCompanyManualTagRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司ID");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.name</code>. 标签的名称
     */
    public final TableField<TalentpoolCompanyManualTagRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "标签的名称");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.color</code>.  标签颜色
     */
    public final TableField<TalentpoolCompanyManualTagRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, " 标签颜色");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.talent_num</code>. 人才数量
     */
    public final TableField<TalentpoolCompanyManualTagRecord, Integer> TALENT_NUM = createField("talent_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "人才数量");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.create_time</code>.
     */
    public final TableField<TalentpoolCompanyManualTagRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>talentpooldb.talentpool_company_manual_tag.update_time</code>.
     */
    public final TableField<TalentpoolCompanyManualTagRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>talentpooldb.talentpool_company_manual_tag</code> table reference
     */
    public TalentpoolCompanyManualTag() {
        this("talentpool_company_manual_tag", null);
    }

    /**
     * Create an aliased <code>talentpooldb.talentpool_company_manual_tag</code> table reference
     */
    public TalentpoolCompanyManualTag(String alias) {
        this(alias, TALENTPOOL_COMPANY_MANUAL_TAG);
    }

    private TalentpoolCompanyManualTag(String alias, Table<TalentpoolCompanyManualTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalentpoolCompanyManualTag(String alias, Table<TalentpoolCompanyManualTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "企业手动标签");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Talentpooldb.TALENTPOOLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TalentpoolCompanyManualTagRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALENTPOOL_COMPANY_MANUAL_TAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TalentpoolCompanyManualTagRecord> getPrimaryKey() {
        return Keys.KEY_TALENTPOOL_COMPANY_MANUAL_TAG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TalentpoolCompanyManualTagRecord>> getKeys() {
        return Arrays.<UniqueKey<TalentpoolCompanyManualTagRecord>>asList(Keys.KEY_TALENTPOOL_COMPANY_MANUAL_TAG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TalentpoolCompanyManualTag as(String alias) {
        return new TalentpoolCompanyManualTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalentpoolCompanyManualTag rename(String name) {
        return new TalentpoolCompanyManualTag(name, null);
    }
}
