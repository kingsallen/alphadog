/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserMenuRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 菜单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMenu extends TableImpl<UserMenuRecord> {

    private static final long serialVersionUID = -197507754;

    /**
     * The reference instance of <code>userdb.user_menu</code>
     */
    public static final UserMenu USER_MENU = new UserMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserMenuRecord> getRecordType() {
        return UserMenuRecord.class;
    }

    /**
     * The column <code>userdb.user_menu.id</code>.
     */
    public final TableField<UserMenuRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_menu.menu_name</code>. 菜单名
     */
    public final TableField<UserMenuRecord, String> MENU_NAME = createField("menu_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "菜单名");

    /**
     * The column <code>userdb.user_menu.menu_desc</code>. 菜单描述
     */
    public final TableField<UserMenuRecord, String> MENU_DESC = createField("menu_desc", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "菜单描述");

    /**
     * The column <code>userdb.user_menu.ico_url</code>. 菜单ico地址
     */
    public final TableField<UserMenuRecord, String> ICO_URL = createField("ico_url", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "菜单ico地址");

    /**
     * The column <code>userdb.user_menu.menu_order</code>. 菜单顺序
     */
    public final TableField<UserMenuRecord, Byte> MENU_ORDER = createField("menu_order", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "菜单顺序");

    /**
     * The column <code>userdb.user_menu.create_time</code>. 创建时间
     */
    public final TableField<UserMenuRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_menu.creator</code>. 创建人
     */
    public final TableField<UserMenuRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人");

    /**
     * The column <code>userdb.user_menu.update_time</code>. 修改时间
     */
    public final TableField<UserMenuRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>userdb.user_menu.updator</code>. 修改人
     */
    public final TableField<UserMenuRecord, String> UPDATOR = createField("updator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "修改人");

    /**
     * Create a <code>userdb.user_menu</code> table reference
     */
    public UserMenu() {
        this("user_menu", null);
    }

    /**
     * Create an aliased <code>userdb.user_menu</code> table reference
     */
    public UserMenu(String alias) {
        this(alias, USER_MENU);
    }

    private UserMenu(String alias, Table<UserMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserMenu(String alias, Table<UserMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "菜单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserMenuRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_MENU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserMenuRecord> getPrimaryKey() {
        return Keys.KEY_USER_MENU_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<UserMenuRecord>>asList(Keys.KEY_USER_MENU_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserMenu as(String alias) {
        return new UserMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMenu rename(String name) {
        return new UserMenu(name, null);
    }
}
