/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigSmsTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 短信模板配置（包括发送渠道）
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigSmsTemplate extends TableImpl<ConfigSmsTemplateRecord> {

    private static final long serialVersionUID = 1477920716;

    /**
     * The reference instance of <code>configdb.config_sms_template</code>
     */
    public static final ConfigSmsTemplate CONFIG_SMS_TEMPLATE = new ConfigSmsTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigSmsTemplateRecord> getRecordType() {
        return ConfigSmsTemplateRecord.class;
    }

    /**
     * The column <code>configdb.config_sms_template.id</code>.
     */
    public final TableField<ConfigSmsTemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>configdb.config_sms_template.name</code>.
     */
    public final TableField<ConfigSmsTemplateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>configdb.config_sms_template.code</code>.
     */
    public final TableField<ConfigSmsTemplateRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>configdb.config_sms_template.content_ali</code>. Aliyun 短信模板
     */
    public final TableField<ConfigSmsTemplateRecord, String> CONTENT_ALI = createField("content_ali", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "Aliyun 短信模板");

    /**
     * The column <code>configdb.config_sms_template.content_253</code>. 253短信模板
     */
    public final TableField<ConfigSmsTemplateRecord, String> CONTENT_253 = createField("content_253", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "253短信模板");

    /**
     * The column <code>configdb.config_sms_template.variable_order_253</code>. 253变量名都是 $var, 需要此变量确定变量的位置
     */
    public final TableField<ConfigSmsTemplateRecord, String> VARIABLE_ORDER_253 = createField("variable_order_253", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "253变量名都是 $var, 需要此变量确定变量的位置");

    /**
     * The column <code>configdb.config_sms_template.channel_type</code>. 1: 阿里云短信 2：253
     */
    public final TableField<ConfigSmsTemplateRecord, Byte> CHANNEL_TYPE = createField("channel_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1: 阿里云短信 2：253");

    /**
     * The column <code>configdb.config_sms_template.create_time</code>.
     */
    public final TableField<ConfigSmsTemplateRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>configdb.config_sms_template.update_time</code>.
     */
    public final TableField<ConfigSmsTemplateRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>configdb.config_sms_template</code> table reference
     */
    public ConfigSmsTemplate() {
        this("config_sms_template", null);
    }

    /**
     * Create an aliased <code>configdb.config_sms_template</code> table reference
     */
    public ConfigSmsTemplate(String alias) {
        this(alias, CONFIG_SMS_TEMPLATE);
    }

    private ConfigSmsTemplate(String alias, Table<ConfigSmsTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigSmsTemplate(String alias, Table<ConfigSmsTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "短信模板配置（包括发送渠道）");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigSmsTemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONFIG_SMS_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigSmsTemplateRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_SMS_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigSmsTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigSmsTemplateRecord>>asList(Keys.KEY_CONFIG_SMS_TEMPLATE_PRIMARY, Keys.KEY_CONFIG_SMS_TEMPLATE_CODE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigSmsTemplate as(String alias) {
        return new ConfigSmsTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigSmsTemplate rename(String name) {
        return new ConfigSmsTemplate(name, null);
    }
}
