/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.test.tables;


import com.moseeker.baseorm.db.test.Keys;
import com.moseeker.baseorm.db.test.Test;
import com.moseeker.baseorm.db.test.tables.records.DemoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 开发标准示例
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Demo extends TableImpl<DemoRecord> {

	private static final long serialVersionUID = -658775124;

	/**
	 * The reference instance of <code>test.demo</code>
	 */
	public static final Demo DEMO = new Demo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DemoRecord> getRecordType() {
		return DemoRecord.class;
	}

	/**
	 * The column <code>test.demo.id</code>.
	 */
	public final TableField<DemoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>test.demo.name</code>.
	 */
	public final TableField<DemoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>test.demo.value</code>.
	 */
	public final TableField<DemoRecord, Integer> VALUE = createField("value", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>test.demo</code> table reference
	 */
	public Demo() {
		this("demo", null);
	}

	/**
	 * Create an aliased <code>test.demo</code> table reference
	 */
	public Demo(String alias) {
		this(alias, DEMO);
	}

	private Demo(String alias, Table<DemoRecord> aliased) {
		this(alias, aliased, null);
	}

	private Demo(String alias, Table<DemoRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "开发标准示例");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DemoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DEMO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DemoRecord> getPrimaryKey() {
		return Keys.KEY_DEMO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DemoRecord>> getKeys() {
		return Arrays.<UniqueKey<DemoRecord>>asList(Keys.KEY_DEMO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Demo as(String alias) {
		return new Demo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Demo rename(String name) {
		return new Demo(name, null);
	}
}
