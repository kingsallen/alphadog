/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigSysThemeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 部门主题表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigSysTheme extends TableImpl<ConfigSysThemeRecord> {

    private static final long serialVersionUID = 1411823767;

    /**
     * The reference instance of <code>configdb.config_sys_theme</code>
     */
    public static final ConfigSysTheme CONFIG_SYS_THEME = new ConfigSysTheme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigSysThemeRecord> getRecordType() {
        return ConfigSysThemeRecord.class;
    }

    /**
     * The column <code>configdb.config_sys_theme.id</code>.
     */
    public final TableField<ConfigSysThemeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>configdb.config_sys_theme.background_color</code>. 背景色
     */
    public final TableField<ConfigSysThemeRecord, String> BACKGROUND_COLOR = createField("background_color", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "背景色");

    /**
     * The column <code>configdb.config_sys_theme.title_color</code>. 标题
     */
    public final TableField<ConfigSysThemeRecord, String> TITLE_COLOR = createField("title_color", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "标题");

    /**
     * The column <code>configdb.config_sys_theme.button_color</code>. 按钮
     */
    public final TableField<ConfigSysThemeRecord, String> BUTTON_COLOR = createField("button_color", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "按钮");

    /**
     * The column <code>configdb.config_sys_theme.other_color</code>. other
     */
    public final TableField<ConfigSysThemeRecord, String> OTHER_COLOR = createField("other_color", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "other");

    /**
     * The column <code>configdb.config_sys_theme.free</code>. 是否免费 0：免费 1：收费，只能在大岂后台操作收费主题
     */
    public final TableField<ConfigSysThemeRecord, Byte> FREE = createField("free", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否免费 0：免费 1：收费，只能在大岂后台操作收费主题");

    /**
     * The column <code>configdb.config_sys_theme.prority</code>. 排序优先级
     */
    public final TableField<ConfigSysThemeRecord, Short> PRORITY = createField("prority", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("10", org.jooq.impl.SQLDataType.SMALLINT)), this, "排序优先级");

    /**
     * The column <code>configdb.config_sys_theme.disable</code>. 是否禁用 0：可用1：不可用
     */
    public final TableField<ConfigSysThemeRecord, Byte> DISABLE = createField("disable", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否禁用 0：可用1：不可用");

    /**
     * The column <code>configdb.config_sys_theme.create_time</code>.
     */
    public final TableField<ConfigSysThemeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>configdb.config_sys_theme.update_time</code>.
     */
    public final TableField<ConfigSysThemeRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>configdb.config_sys_theme.company_id</code>. hr_company.id, 用于隔离企业自定义的颜色
     */
    public final TableField<ConfigSysThemeRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "hr_company.id, 用于隔离企业自定义的颜色");

    /**
     * Create a <code>configdb.config_sys_theme</code> table reference
     */
    public ConfigSysTheme() {
        this("config_sys_theme", null);
    }

    /**
     * Create an aliased <code>configdb.config_sys_theme</code> table reference
     */
    public ConfigSysTheme(String alias) {
        this(alias, CONFIG_SYS_THEME);
    }

    private ConfigSysTheme(String alias, Table<ConfigSysThemeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigSysTheme(String alias, Table<ConfigSysThemeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "部门主题表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigSysThemeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONFIG_SYS_THEME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigSysThemeRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_SYS_THEME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigSysThemeRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigSysThemeRecord>>asList(Keys.KEY_CONFIG_SYS_THEME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigSysTheme as(String alias) {
        return new ConfigSysTheme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigSysTheme rename(String name) {
        return new ConfigSysTheme(name, null);
    }
}
