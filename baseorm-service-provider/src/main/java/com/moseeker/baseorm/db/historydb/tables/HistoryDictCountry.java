/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.historydb.tables;


import com.moseeker.baseorm.db.historydb.Historydb;
import com.moseeker.baseorm.db.historydb.Keys;
import com.moseeker.baseorm.db.historydb.tables.records.HistoryDictCountryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 城市字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryDictCountry extends TableImpl<HistoryDictCountryRecord> {

    private static final long serialVersionUID = 993029269;

    /**
     * The reference instance of <code>historydb.history_dict_country</code>
     */
    public static final HistoryDictCountry HISTORY_DICT_COUNTRY = new HistoryDictCountry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HistoryDictCountryRecord> getRecordType() {
        return HistoryDictCountryRecord.class;
    }

    /**
     * The column <code>historydb.history_dict_country.id</code>. 主key
     */
    public final TableField<HistoryDictCountryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主key");

    /**
     * The column <code>historydb.history_dict_country.name</code>. 国家中文名称
     */
    public final TableField<HistoryDictCountryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "国家中文名称");

    /**
     * The column <code>historydb.history_dict_country.ename</code>. 国家英文名称
     */
    public final TableField<HistoryDictCountryRecord, String> ENAME = createField("ename", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "国家英文名称");

    /**
     * The column <code>historydb.history_dict_country.iso_code_2</code>. iso_code_2
     */
    public final TableField<HistoryDictCountryRecord, String> ISO_CODE_2 = createField("iso_code_2", org.jooq.impl.SQLDataType.CHAR.length(2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "iso_code_2");

    /**
     * The column <code>historydb.history_dict_country.iso_code_3</code>. iso_code_3
     */
    public final TableField<HistoryDictCountryRecord, String> ISO_CODE_3 = createField("iso_code_3", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "iso_code_3");

    /**
     * The column <code>historydb.history_dict_country.code</code>. COUNTRY CODE
     */
    public final TableField<HistoryDictCountryRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CHAR.length(11).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "COUNTRY CODE");

    /**
     * The column <code>historydb.history_dict_country.sms_enabled</code>. 是否发送国际短信
     */
    public final TableField<HistoryDictCountryRecord, Byte> SMS_ENABLED = createField("sms_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否发送国际短信");

    /**
     * The column <code>historydb.history_dict_country.icon_class</code>. 国旗样式
     */
    public final TableField<HistoryDictCountryRecord, String> ICON_CLASS = createField("icon_class", org.jooq.impl.SQLDataType.CHAR.length(3).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "国旗样式");

    /**
     * The column <code>historydb.history_dict_country.hot_country</code>. 热门国家 0=否 1=是
     */
    public final TableField<HistoryDictCountryRecord, Byte> HOT_COUNTRY = createField("hot_country", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "热门国家 0=否 1=是");

    /**
     * The column <code>historydb.history_dict_country.continent_code</code>. 7大洲code, dict_constant.parent_code: 9103
     */
    public final TableField<HistoryDictCountryRecord, Integer> CONTINENT_CODE = createField("continent_code", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "7大洲code, dict_constant.parent_code: 9103");

    /**
     * The column <code>historydb.history_dict_country.priority</code>. 优先级
     */
    public final TableField<HistoryDictCountryRecord, Short> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "优先级");

    /**
     * Create a <code>historydb.history_dict_country</code> table reference
     */
    public HistoryDictCountry() {
        this("history_dict_country", null);
    }

    /**
     * Create an aliased <code>historydb.history_dict_country</code> table reference
     */
    public HistoryDictCountry(String alias) {
        this(alias, HISTORY_DICT_COUNTRY);
    }

    private HistoryDictCountry(String alias, Table<HistoryDictCountryRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistoryDictCountry(String alias, Table<HistoryDictCountryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "城市字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Historydb.HISTORYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HistoryDictCountryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HISTORY_DICT_COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HistoryDictCountryRecord> getPrimaryKey() {
        return Keys.KEY_HISTORY_DICT_COUNTRY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HistoryDictCountryRecord>> getKeys() {
        return Arrays.<UniqueKey<HistoryDictCountryRecord>>asList(Keys.KEY_HISTORY_DICT_COUNTRY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HistoryDictCountry as(String alias) {
        return new HistoryDictCountry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HistoryDictCountry rename(String name) {
        return new HistoryDictCountry(name, null);
    }
}
