/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.thirdpartydb.tables;


import com.moseeker.baseorm.db.thirdpartydb.Keys;
import com.moseeker.baseorm.db.thirdpartydb.Thirdpartydb;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountCityRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 第三方渠道的可发布职位的地区
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThirdpartyAccountCity extends TableImpl<ThirdpartyAccountCityRecord> {

    private static final long serialVersionUID = 987696257;

    /**
     * The reference instance of <code>thirdpartydb.thirdparty_account_city</code>
     */
    public static final ThirdpartyAccountCity THIRDPARTY_ACCOUNT_CITY = new ThirdpartyAccountCity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThirdpartyAccountCityRecord> getRecordType() {
        return ThirdpartyAccountCityRecord.class;
    }

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.id</code>. 主键
     */
    public final TableField<ThirdpartyAccountCityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.account_id</code>. 第三方渠道账号的编号
     */
    public final TableField<ThirdpartyAccountCityRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "第三方渠道账号的编号");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.code</code>. 可发布的城市code
     */
    public final TableField<ThirdpartyAccountCityRecord, Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "可发布的城市code");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.jobType</code>. 1 社招， 2 校招
     */
    public final TableField<ThirdpartyAccountCityRecord, Byte> JOBTYPE = createField("jobType", org.jooq.impl.SQLDataType.TINYINT, this, "1 社招， 2 校招");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.remain_num</code>. 可发布数
     */
    public final TableField<ThirdpartyAccountCityRecord, Integer> REMAIN_NUM = createField("remain_num", org.jooq.impl.SQLDataType.INTEGER, this, "可发布数");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.create_time</code>. 创建时间
     */
    public final TableField<ThirdpartyAccountCityRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>thirdpartydb.thirdparty_account_city.update_time</code>. 注册时间
     */
    public final TableField<ThirdpartyAccountCityRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "注册时间");

    /**
     * Create a <code>thirdpartydb.thirdparty_account_city</code> table reference
     */
    public ThirdpartyAccountCity() {
        this("thirdparty_account_city", null);
    }

    /**
     * Create an aliased <code>thirdpartydb.thirdparty_account_city</code> table reference
     */
    public ThirdpartyAccountCity(String alias) {
        this(alias, THIRDPARTY_ACCOUNT_CITY);
    }

    private ThirdpartyAccountCity(String alias, Table<ThirdpartyAccountCityRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThirdpartyAccountCity(String alias, Table<ThirdpartyAccountCityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "第三方渠道的可发布职位的地区");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Thirdpartydb.THIRDPARTYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ThirdpartyAccountCityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_THIRDPARTY_ACCOUNT_CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThirdpartyAccountCityRecord> getPrimaryKey() {
        return Keys.KEY_THIRDPARTY_ACCOUNT_CITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThirdpartyAccountCityRecord>> getKeys() {
        return Arrays.<UniqueKey<ThirdpartyAccountCityRecord>>asList(Keys.KEY_THIRDPARTY_ACCOUNT_CITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThirdpartyAccountCity as(String alias) {
        return new ThirdpartyAccountCity(alias, this);
    }

    /**
     * Rename this table
     */
    public ThirdpartyAccountCity rename(String name) {
        return new ThirdpartyAccountCity(name, null);
    }
}
