/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.historydb.tables;


import com.moseeker.baseorm.db.historydb.Historydb;
import com.moseeker.baseorm.db.historydb.Keys;
import com.moseeker.baseorm.db.historydb.tables.records.StatsRecomRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 推荐记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatsRecomRecord extends TableImpl<StatsRecomRecordRecord> {

    private static final long serialVersionUID = -1395006083;

    /**
     * The reference instance of <code>historydb.stats_recom_record</code>
     */
    public static final StatsRecomRecord STATS_RECOM_RECORD = new StatsRecomRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatsRecomRecordRecord> getRecordType() {
        return StatsRecomRecordRecord.class;
    }

    /**
     * The column <code>historydb.stats_recom_record.id</code>. 主key
     */
    public final TableField<StatsRecomRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主key");

    /**
     * The column <code>historydb.stats_recom_record.position_id</code>. 推荐的职位ID, hr_position.id
     */
    public final TableField<StatsRecomRecordRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "推荐的职位ID, hr_position.id");

    /**
     * The column <code>historydb.stats_recom_record.app_id</code>. job_application.id, 被推荐者申请ID
     */
    public final TableField<StatsRecomRecordRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "job_application.id, 被推荐者申请ID");

    /**
     * The column <code>historydb.stats_recom_record.presentee_id</code>. wx_group_user.id, 被推荐者的微信ID
     */
    public final TableField<StatsRecomRecordRecord, Integer> PRESENTEE_ID = createField("presentee_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "wx_group_user.id, 被推荐者的微信ID");

    /**
     * The column <code>historydb.stats_recom_record.click_time</code>. 职位点击时间
     */
    public final TableField<StatsRecomRecordRecord, Timestamp> CLICK_TIME = createField("click_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "职位点击时间");

    /**
     * The column <code>historydb.stats_recom_record.depth</code>. 第几层关系
     */
    public final TableField<StatsRecomRecordRecord, Integer> DEPTH = createField("depth", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "第几层关系");

    /**
     * The column <code>historydb.stats_recom_record.recom_id_2</code>. wx_group_user.id, 第2度人脉推荐人微信ID，用来标记谁的朋友
     */
    public final TableField<StatsRecomRecordRecord, Integer> RECOM_ID_2 = createField("recom_id_2", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "wx_group_user.id, 第2度人脉推荐人微信ID，用来标记谁的朋友");

    /**
     * The column <code>historydb.stats_recom_record.recom_id</code>. wx_group_user.id, 推荐者的微信ID
     */
    public final TableField<StatsRecomRecordRecord, Integer> RECOM_ID = createField("recom_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "wx_group_user.id, 推荐者的微信ID");

    /**
     * The column <code>historydb.stats_recom_record.realname</code>. 被推荐人真实姓名
     */
    public final TableField<StatsRecomRecordRecord, String> REALNAME = createField("realname", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "被推荐人真实姓名");

    /**
     * The column <code>historydb.stats_recom_record.company</code>. 被推荐者目前就职公司
     */
    public final TableField<StatsRecomRecordRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "被推荐者目前就职公司");

    /**
     * The column <code>historydb.stats_recom_record.position</code>. 被推荐者的职位
     */
    public final TableField<StatsRecomRecordRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "被推荐者的职位");

    /**
     * The column <code>historydb.stats_recom_record.recom_reason</code>. 推荐理由, 逗号分隔
     */
    public final TableField<StatsRecomRecordRecord, String> RECOM_REASON = createField("recom_reason", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "推荐理由, 逗号分隔");

    /**
     * The column <code>historydb.stats_recom_record.recom_time</code>. 推荐时间
     */
    public final TableField<StatsRecomRecordRecord, Timestamp> RECOM_TIME = createField("recom_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "推荐时间");

    /**
     * The column <code>historydb.stats_recom_record.is_recom</code>. 推荐状态，0：推荐过，1：未推荐
     */
    public final TableField<StatsRecomRecordRecord, Integer> IS_RECOM = createField("is_recom", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "推荐状态，0：推荐过，1：未推荐");

    /**
     * The column <code>historydb.stats_recom_record.create_time</code>. 创建时间
     */
    public final TableField<StatsRecomRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>historydb.stats_recom_record.update_time</code>. 更新时间
     */
    public final TableField<StatsRecomRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>historydb.stats_recom_record.last_recom_id</code>. wx_group_user.id, 转发链前一位的微信ID
     */
    public final TableField<StatsRecomRecordRecord, Integer> LAST_RECOM_ID = createField("last_recom_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "wx_group_user.id, 转发链前一位的微信ID");

    /**
     * Create a <code>historydb.stats_recom_record</code> table reference
     */
    public StatsRecomRecord() {
        this("stats_recom_record", null);
    }

    /**
     * Create an aliased <code>historydb.stats_recom_record</code> table reference
     */
    public StatsRecomRecord(String alias) {
        this(alias, STATS_RECOM_RECORD);
    }

    private StatsRecomRecord(String alias, Table<StatsRecomRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatsRecomRecord(String alias, Table<StatsRecomRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "推荐记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Historydb.HISTORYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StatsRecomRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STATS_RECOM_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatsRecomRecordRecord> getPrimaryKey() {
        return Keys.KEY_STATS_RECOM_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatsRecomRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<StatsRecomRecordRecord>>asList(Keys.KEY_STATS_RECOM_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatsRecomRecord as(String alias) {
        return new StatsRecomRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatsRecomRecord rename(String name) {
        return new StatsRecomRecord(name, null);
    }
}
