/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.referraldb.tables;


import com.moseeker.baseorm.db.referraldb.Keys;
import com.moseeker.baseorm.db.referraldb.Referraldb;
import com.moseeker.baseorm.db.referraldb.tables.records.ReferralCompanyConfRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferralCompanyConf extends TableImpl<ReferralCompanyConfRecord> {

    private static final long serialVersionUID = 1338491630;

    /**
     * The reference instance of <code>referraldb.referral_company_conf</code>
     */
    public static final ReferralCompanyConf REFERRAL_COMPANY_CONF = new ReferralCompanyConf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReferralCompanyConfRecord> getRecordType() {
        return ReferralCompanyConfRecord.class;
    }

    /**
     * The column <code>referraldb.referral_company_conf.id</code>. 序列ID
     */
    public final TableField<ReferralCompanyConfRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "序列ID");

    /**
     * The column <code>referraldb.referral_company_conf.company_id</code>. 公司ID
     */
    public final TableField<ReferralCompanyConfRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "公司ID");

    /**
     * The column <code>referraldb.referral_company_conf.position_points_flag</code>. 是否只针对内推职位开启积分奖励  1 是0否
     */
    public final TableField<ReferralCompanyConfRecord, Byte> POSITION_POINTS_FLAG = createField("position_points_flag", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否只针对内推职位开启积分奖励  1 是0否");

    /**
     * The column <code>referraldb.referral_company_conf.create_time</code>. 创建时间
     */
    public final TableField<ReferralCompanyConfRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>referraldb.referral_company_conf.update_time</code>. 更新时间
     */
    public final TableField<ReferralCompanyConfRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>referraldb.referral_company_conf</code> table reference
     */
    public ReferralCompanyConf() {
        this("referral_company_conf", null);
    }

    /**
     * Create an aliased <code>referraldb.referral_company_conf</code> table reference
     */
    public ReferralCompanyConf(String alias) {
        this(alias, REFERRAL_COMPANY_CONF);
    }

    private ReferralCompanyConf(String alias, Table<ReferralCompanyConfRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReferralCompanyConf(String alias, Table<ReferralCompanyConfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referraldb.REFERRALDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReferralCompanyConfRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFERRAL_COMPANY_CONF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReferralCompanyConfRecord> getPrimaryKey() {
        return Keys.KEY_REFERRAL_COMPANY_CONF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReferralCompanyConfRecord>> getKeys() {
        return Arrays.<UniqueKey<ReferralCompanyConfRecord>>asList(Keys.KEY_REFERRAL_COMPANY_CONF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReferralCompanyConf as(String alias) {
        return new ReferralCompanyConf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReferralCompanyConf rename(String name) {
        return new ReferralCompanyConf(name, null);
    }
}
