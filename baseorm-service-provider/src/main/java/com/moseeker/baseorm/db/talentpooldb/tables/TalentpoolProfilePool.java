/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.talentpooldb.tables;


import com.moseeker.baseorm.db.talentpooldb.Keys;
import com.moseeker.baseorm.db.talentpooldb.Talentpooldb;
import com.moseeker.baseorm.db.talentpooldb.tables.records.TalentpoolProfilePoolRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 简历池表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TalentpoolProfilePool extends TableImpl<TalentpoolProfilePoolRecord> {

    private static final long serialVersionUID = -837006079;

    /**
     * The reference instance of <code>talentpooldb.talentpool_profile_pool</code>
     */
    public static final TalentpoolProfilePool TALENTPOOL_PROFILE_POOL = new TalentpoolProfilePool();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TalentpoolProfilePoolRecord> getRecordType() {
        return TalentpoolProfilePoolRecord.class;
    }

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.id</code>. 主键key
     */
    public final TableField<TalentpoolProfilePoolRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键key");

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.company_id</code>. 公司ID
     */
    public final TableField<TalentpoolProfilePoolRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司ID");

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.parent_id</code>. 父级目录id
     */
    public final TableField<TalentpoolProfilePoolRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父级目录id");

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.profile_pool_name</code>. 目录名称
     */
    public final TableField<TalentpoolProfilePoolRecord, String> PROFILE_POOL_NAME = createField("profile_pool_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "目录名称");

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.create_time</code>.
     */
    public final TableField<TalentpoolProfilePoolRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>talentpooldb.talentpool_profile_pool.update_time</code>.
     */
    public final TableField<TalentpoolProfilePoolRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>talentpooldb.talentpool_profile_pool</code> table reference
     */
    public TalentpoolProfilePool() {
        this("talentpool_profile_pool", null);
    }

    /**
     * Create an aliased <code>talentpooldb.talentpool_profile_pool</code> table reference
     */
    public TalentpoolProfilePool(String alias) {
        this(alias, TALENTPOOL_PROFILE_POOL);
    }

    private TalentpoolProfilePool(String alias, Table<TalentpoolProfilePoolRecord> aliased) {
        this(alias, aliased, null);
    }

    private TalentpoolProfilePool(String alias, Table<TalentpoolProfilePoolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "简历池表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Talentpooldb.TALENTPOOLDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TalentpoolProfilePoolRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TALENTPOOL_PROFILE_POOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TalentpoolProfilePoolRecord> getPrimaryKey() {
        return Keys.KEY_TALENTPOOL_PROFILE_POOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TalentpoolProfilePoolRecord>> getKeys() {
        return Arrays.<UniqueKey<TalentpoolProfilePoolRecord>>asList(Keys.KEY_TALENTPOOL_PROFILE_POOL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TalentpoolProfilePool as(String alias) {
        return new TalentpoolProfilePool(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TalentpoolProfilePool rename(String name) {
        return new TalentpoolProfilePool(name, null);
    }
}
