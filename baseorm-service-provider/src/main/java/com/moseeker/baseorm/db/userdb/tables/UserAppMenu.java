/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserAppMenuRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 应用下的菜单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAppMenu extends TableImpl<UserAppMenuRecord> {

    private static final long serialVersionUID = 1785704045;

    /**
     * The reference instance of <code>userdb.user_app_menu</code>
     */
    public static final UserAppMenu USER_APP_MENU = new UserAppMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAppMenuRecord> getRecordType() {
        return UserAppMenuRecord.class;
    }

    /**
     * The column <code>userdb.user_app_menu.id</code>.
     */
    public final TableField<UserAppMenuRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_app_menu.app_id</code>. 应用id
     */
    public final TableField<UserAppMenuRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "应用id");

    /**
     * The column <code>userdb.user_app_menu.menu_id</code>. 菜单id
     */
    public final TableField<UserAppMenuRecord, Integer> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "菜单id");

    /**
     * The column <code>userdb.user_app_menu.enable</code>. 0:不可用 1:可用
     */
    public final TableField<UserAppMenuRecord, Byte> ENABLE = createField("enable", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:不可用 1:可用");

    /**
     * The column <code>userdb.user_app_menu.create_time</code>. 创建时间
     */
    public final TableField<UserAppMenuRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_app_menu.creator</code>. 创建人
     */
    public final TableField<UserAppMenuRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人");

    /**
     * The column <code>userdb.user_app_menu.update_time</code>. 修改时间
     */
    public final TableField<UserAppMenuRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>userdb.user_app_menu.updator</code>. 修改人
     */
    public final TableField<UserAppMenuRecord, String> UPDATOR = createField("updator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "修改人");

    /**
     * Create a <code>userdb.user_app_menu</code> table reference
     */
    public UserAppMenu() {
        this("user_app_menu", null);
    }

    /**
     * Create an aliased <code>userdb.user_app_menu</code> table reference
     */
    public UserAppMenu(String alias) {
        this(alias, USER_APP_MENU);
    }

    private UserAppMenu(String alias, Table<UserAppMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAppMenu(String alias, Table<UserAppMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "应用下的菜单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserAppMenuRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_APP_MENU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserAppMenuRecord> getPrimaryKey() {
        return Keys.KEY_USER_APP_MENU_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserAppMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAppMenuRecord>>asList(Keys.KEY_USER_APP_MENU_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAppMenu as(String alias) {
        return new UserAppMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAppMenu rename(String name) {
        return new UserAppMenu(name, null);
    }
}
