/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.profiledb.tables;


import com.moseeker.baseorm.db.profiledb.Keys;
import com.moseeker.baseorm.db.profiledb.Profiledb;
import com.moseeker.baseorm.db.profiledb.tables.records.ProfileUploadFilesRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileUploadFiles extends TableImpl<ProfileUploadFilesRecord> {

    private static final long serialVersionUID = 1764041986;

    /**
     * The reference instance of <code>profiledb.profile_upload_files</code>
     */
    public static final ProfileUploadFiles PROFILE_UPLOAD_FILES = new ProfileUploadFiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileUploadFilesRecord> getRecordType() {
        return ProfileUploadFilesRecord.class;
    }

    /**
     * The column <code>profiledb.profile_upload_files.id</code>.
     */
    public final TableField<ProfileUploadFilesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.fileId</code>.
     */
    public final TableField<ProfileUploadFilesRecord, String> FILEID = createField("fileId", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.uniname</code>.
     */
    public final TableField<ProfileUploadFilesRecord, String> UNINAME = createField("uniname", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.unionid</code>.
     */
    public final TableField<ProfileUploadFilesRecord, String> UNIONID = createField("unionid", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.filename</code>.
     */
    public final TableField<ProfileUploadFilesRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.url</code>.
     */
    public final TableField<ProfileUploadFilesRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>profiledb.profile_upload_files.createtime</code>.
     */
    public final TableField<ProfileUploadFilesRecord, Date> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>profiledb.profile_upload_files.updatetime</code>.
     */
    public final TableField<ProfileUploadFilesRecord, Date> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>profiledb.profile_upload_files.STATUS</code>.
     */
    public final TableField<ProfileUploadFilesRecord, Integer> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>profiledb.profile_upload_files</code> table reference
     */
    public ProfileUploadFiles() {
        this("profile_upload_files", null);
    }

    /**
     * Create an aliased <code>profiledb.profile_upload_files</code> table reference
     */
    public ProfileUploadFiles(String alias) {
        this(alias, PROFILE_UPLOAD_FILES);
    }

    private ProfileUploadFiles(String alias, Table<ProfileUploadFilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProfileUploadFiles(String alias, Table<ProfileUploadFilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Profiledb.PROFILEDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProfileUploadFilesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROFILE_UPLOAD_FILES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfileUploadFilesRecord> getPrimaryKey() {
        return Keys.KEY_PROFILE_UPLOAD_FILES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfileUploadFilesRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfileUploadFilesRecord>>asList(Keys.KEY_PROFILE_UPLOAD_FILES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfileUploadFiles as(String alias) {
        return new ProfileUploadFiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProfileUploadFiles rename(String name) {
        return new ProfileUploadFiles(name, null);
    }
}
