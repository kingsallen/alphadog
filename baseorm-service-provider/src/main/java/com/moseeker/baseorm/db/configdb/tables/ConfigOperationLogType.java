/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigOperationLogTypeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 操作记录类型配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigOperationLogType extends TableImpl<ConfigOperationLogTypeRecord> {

    private static final long serialVersionUID = -1827077573;

    /**
     * The reference instance of <code>configdb.config_operation_log_type</code>
     */
    public static final ConfigOperationLogType CONFIG_OPERATION_LOG_TYPE = new ConfigOperationLogType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigOperationLogTypeRecord> getRecordType() {
        return ConfigOperationLogTypeRecord.class;
    }

    /**
     * The column <code>configdb.config_operation_log_type.id</code>. 自增主键id
     */
    public final TableField<ConfigOperationLogTypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "自增主键id");

    /**
     * The column <code>configdb.config_operation_log_type.type_name</code>. 操作记录类型名称
     */
    public final TableField<ConfigOperationLogTypeRecord, String> TYPE_NAME = createField("type_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作记录类型名称");

    /**
     * The column <code>configdb.config_operation_log_type.parent_id</code>. 父类型id
     */
    public final TableField<ConfigOperationLogTypeRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父类型id");

    /**
     * The column <code>configdb.config_operation_log_type.create_time</code>.  创建时间
     */
    public final TableField<ConfigOperationLogTypeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, " 创建时间");

    /**
     * The column <code>configdb.config_operation_log_type.update_time</code>. 修改时间
     */
    public final TableField<ConfigOperationLogTypeRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>configdb.config_operation_log_type</code> table reference
     */
    public ConfigOperationLogType() {
        this("config_operation_log_type", null);
    }

    /**
     * Create an aliased <code>configdb.config_operation_log_type</code> table reference
     */
    public ConfigOperationLogType(String alias) {
        this(alias, CONFIG_OPERATION_LOG_TYPE);
    }

    private ConfigOperationLogType(String alias, Table<ConfigOperationLogTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigOperationLogType(String alias, Table<ConfigOperationLogTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "操作记录类型配置表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigOperationLogTypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONFIG_OPERATION_LOG_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigOperationLogTypeRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_OPERATION_LOG_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigOperationLogTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigOperationLogTypeRecord>>asList(Keys.KEY_CONFIG_OPERATION_LOG_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigOperationLogType as(String alias) {
        return new ConfigOperationLogType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigOperationLogType rename(String name) {
        return new ConfigOperationLogType(name, null);
    }
}
