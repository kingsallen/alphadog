/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.profiledb.tables;


import com.moseeker.baseorm.db.profiledb.Keys;
import com.moseeker.baseorm.db.profiledb.Profiledb;
import com.moseeker.baseorm.db.profiledb.tables.records.ProfileCredentialsRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Profile的证书表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileCredentials extends TableImpl<ProfileCredentialsRecord> {

    private static final long serialVersionUID = -239388921;

    /**
     * The reference instance of <code>profiledb.profile_credentials</code>
     */
    public static final ProfileCredentials PROFILE_CREDENTIALS = new ProfileCredentials();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileCredentialsRecord> getRecordType() {
        return ProfileCredentialsRecord.class;
    }

    /**
     * The column <code>profiledb.profile_credentials.id</code>. 主key
     */
    public final TableField<ProfileCredentialsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主key");

    /**
     * The column <code>profiledb.profile_credentials.profile_id</code>. profile.id
     */
    public final TableField<ProfileCredentialsRecord, Integer> PROFILE_ID = createField("profile_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "profile.id");

    /**
     * The column <code>profiledb.profile_credentials.name</code>. 证书名称
     */
    public final TableField<ProfileCredentialsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "证书名称");

    /**
     * The column <code>profiledb.profile_credentials.organization</code>. 证书机构
     */
    public final TableField<ProfileCredentialsRecord, String> ORGANIZATION = createField("organization", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "证书机构");

    /**
     * The column <code>profiledb.profile_credentials.code</code>. 证书编码
     */
    public final TableField<ProfileCredentialsRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "证书编码");

    /**
     * The column <code>profiledb.profile_credentials.url</code>. 认证链接
     */
    public final TableField<ProfileCredentialsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "认证链接");

    /**
     * The column <code>profiledb.profile_credentials.get_date</code>. 获得时间
     */
    public final TableField<ProfileCredentialsRecord, Date> GET_DATE = createField("get_date", org.jooq.impl.SQLDataType.DATE, this, "获得时间");

    /**
     * The column <code>profiledb.profile_credentials.score</code>. 成绩
     */
    public final TableField<ProfileCredentialsRecord, String> SCORE = createField("score", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "成绩");

    /**
     * The column <code>profiledb.profile_credentials.create_time</code>. 创建时间
     */
    public final TableField<ProfileCredentialsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>profiledb.profile_credentials.update_time</code>. 更新时间
     */
    public final TableField<ProfileCredentialsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>profiledb.profile_credentials</code> table reference
     */
    public ProfileCredentials() {
        this("profile_credentials", null);
    }

    /**
     * Create an aliased <code>profiledb.profile_credentials</code> table reference
     */
    public ProfileCredentials(String alias) {
        this(alias, PROFILE_CREDENTIALS);
    }

    private ProfileCredentials(String alias, Table<ProfileCredentialsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProfileCredentials(String alias, Table<ProfileCredentialsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Profile的证书表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Profiledb.PROFILEDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProfileCredentialsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROFILE_CREDENTIALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfileCredentialsRecord> getPrimaryKey() {
        return Keys.KEY_PROFILE_CREDENTIALS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfileCredentialsRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfileCredentialsRecord>>asList(Keys.KEY_PROFILE_CREDENTIALS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfileCredentials as(String alias) {
        return new ProfileCredentials(alias, this);
    }

    /**
     * Rename this table
     */
    public ProfileCredentials rename(String name) {
        return new ProfileCredentials(name, null);
    }
}
