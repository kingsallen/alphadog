/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.thirdpartydb.tables;


import com.moseeker.baseorm.db.thirdpartydb.Keys;
import com.moseeker.baseorm.db.thirdpartydb.Thirdpartydb;
import com.moseeker.baseorm.db.thirdpartydb.tables.records.ThirdpartyAccountSubsiteRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 一览人才的第三方发布网站表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThirdpartyAccountSubsite extends TableImpl<ThirdpartyAccountSubsiteRecord> {

    private static final long serialVersionUID = 555963199;

    /**
     * The reference instance of <code>thirdpartydb.thirdparty_account_subsite</code>
     */
    public static final ThirdpartyAccountSubsite THIRDPARTY_ACCOUNT_SUBSITE = new ThirdpartyAccountSubsite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThirdpartyAccountSubsiteRecord> getRecordType() {
        return ThirdpartyAccountSubsiteRecord.class;
    }

    /**
     * The column <code>thirdpartydb.thirdparty_account_subsite.id</code>. 主键
     */
    public final TableField<ThirdpartyAccountSubsiteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键");

    /**
     * The column <code>thirdpartydb.thirdparty_account_subsite.account_id</code>. 第三方渠道账号的编号
     */
    public final TableField<ThirdpartyAccountSubsiteRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "第三方渠道账号的编号");

    /**
     * The column <code>thirdpartydb.thirdparty_account_subsite.text</code>. 第三方账号对应的发布网站名称
     */
    public final TableField<ThirdpartyAccountSubsiteRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "第三方账号对应的发布网站名称");

    /**
     * The column <code>thirdpartydb.thirdparty_account_subsite.site</code>. 第三方账号对应的发布网站
     */
    public final TableField<ThirdpartyAccountSubsiteRecord, String> SITE = createField("site", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "第三方账号对应的发布网站");

    /**
     * The column <code>thirdpartydb.thirdparty_account_subsite.createTime</code>. 创建时间
     */
    public final TableField<ThirdpartyAccountSubsiteRecord, Timestamp> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>thirdpartydb.thirdparty_account_subsite</code> table reference
     */
    public ThirdpartyAccountSubsite() {
        this("thirdparty_account_subsite", null);
    }

    /**
     * Create an aliased <code>thirdpartydb.thirdparty_account_subsite</code> table reference
     */
    public ThirdpartyAccountSubsite(String alias) {
        this(alias, THIRDPARTY_ACCOUNT_SUBSITE);
    }

    private ThirdpartyAccountSubsite(String alias, Table<ThirdpartyAccountSubsiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThirdpartyAccountSubsite(String alias, Table<ThirdpartyAccountSubsiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "一览人才的第三方发布网站表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Thirdpartydb.THIRDPARTYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ThirdpartyAccountSubsiteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_THIRDPARTY_ACCOUNT_SUBSITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThirdpartyAccountSubsiteRecord> getPrimaryKey() {
        return Keys.KEY_THIRDPARTY_ACCOUNT_SUBSITE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThirdpartyAccountSubsiteRecord>> getKeys() {
        return Arrays.<UniqueKey<ThirdpartyAccountSubsiteRecord>>asList(Keys.KEY_THIRDPARTY_ACCOUNT_SUBSITE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThirdpartyAccountSubsite as(String alias) {
        return new ThirdpartyAccountSubsite(alias, this);
    }

    /**
     * Rename this table
     */
    public ThirdpartyAccountSubsite rename(String name) {
        return new ThirdpartyAccountSubsite(name, null);
    }
}
