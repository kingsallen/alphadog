/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.redpacketdb.tables.records;


import com.moseeker.baseorm.db.redpacketdb.tables.RedpacketMessageHandlerLog;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 消息消费记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedpacketMessageHandlerLogRecord extends UpdatableRecordImpl<RedpacketMessageHandlerLogRecord> implements Record4<String, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = -750161867;

    /**
     * Setter for <code>redpacketdb.redpacket_message_handler_log.message_id</code>. 消息编号
     */
    public void setMessageId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>redpacketdb.redpacket_message_handler_log.message_id</code>. 消息编号
     */
    public String getMessageId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>redpacketdb.redpacket_message_handler_log.times</code>. 重试次数
     */
    public void setTimes(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>redpacketdb.redpacket_message_handler_log.times</code>. 重试次数
     */
    public Byte getTimes() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>redpacketdb.redpacket_message_handler_log.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>redpacketdb.redpacket_message_handler_log.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>redpacketdb.redpacket_message_handler_log.update_time</code>. 更新时间
     */
    public void setUpdateTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>redpacketdb.redpacket_message_handler_log.update_time</code>. 更新时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG.MESSAGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG.TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getMessageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketMessageHandlerLogRecord value1(String value) {
        setMessageId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketMessageHandlerLogRecord value2(Byte value) {
        setTimes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketMessageHandlerLogRecord value3(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketMessageHandlerLogRecord value4(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketMessageHandlerLogRecord values(String value1, Byte value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RedpacketMessageHandlerLogRecord
     */
    public RedpacketMessageHandlerLogRecord() {
        super(RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG);
    }

    /**
     * Create a detached, initialised RedpacketMessageHandlerLogRecord
     */
    public RedpacketMessageHandlerLogRecord(String messageId, Byte times, Timestamp createTime, Timestamp updateTime) {
        super(RedpacketMessageHandlerLog.REDPACKET_MESSAGE_HANDLER_LOG);

        set(0, messageId);
        set(1, times);
        set(2, createTime);
        set(3, updateTime);
    }
}
