/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.historydb.tables;


import com.moseeker.baseorm.db.historydb.Historydb;
import com.moseeker.baseorm.db.historydb.Keys;
import com.moseeker.baseorm.db.historydb.tables.records.SchemaMigrations_20170612Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaMigrations_20170612 extends TableImpl<SchemaMigrations_20170612Record> {

    private static final long serialVersionUID = -643425888;

    /**
     * The reference instance of <code>historydb.schema_migrations_20170612</code>
     */
    public static final SchemaMigrations_20170612 SCHEMA_MIGRATIONS_20170612 = new SchemaMigrations_20170612();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemaMigrations_20170612Record> getRecordType() {
        return SchemaMigrations_20170612Record.class;
    }

    /**
     * The column <code>historydb.schema_migrations_20170612.version</code>.
     */
    public final TableField<SchemaMigrations_20170612Record, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

    /**
     * Create a <code>historydb.schema_migrations_20170612</code> table reference
     */
    public SchemaMigrations_20170612() {
        this("schema_migrations_20170612", null);
    }

    /**
     * Create an aliased <code>historydb.schema_migrations_20170612</code> table reference
     */
    public SchemaMigrations_20170612(String alias) {
        this(alias, SCHEMA_MIGRATIONS_20170612);
    }

    private SchemaMigrations_20170612(String alias, Table<SchemaMigrations_20170612Record> aliased) {
        this(alias, aliased, null);
    }

    private SchemaMigrations_20170612(String alias, Table<SchemaMigrations_20170612Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Historydb.HISTORYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SchemaMigrations_20170612Record>> getKeys() {
        return Arrays.<UniqueKey<SchemaMigrations_20170612Record>>asList(Keys.KEY_SCHEMA_MIGRATIONS_20170612_UNIQUE_SCHEMA_MIGRATIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaMigrations_20170612 as(String alias) {
        return new SchemaMigrations_20170612(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaMigrations_20170612 rename(String name) {
        return new SchemaMigrations_20170612(name, null);
    }
}
