/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.profiledb.tables.daos;


import com.moseeker.baseorm.db.profiledb.tables.ProfileImport;
import com.moseeker.baseorm.db.profiledb.tables.records.ProfileImportRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 用户profile导入记录信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileImportDao extends DAOImpl<ProfileImportRecord, com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport, Integer> {

    /**
     * Create a new ProfileImportDao without any configuration
     */
    public ProfileImportDao() {
        super(ProfileImport.PROFILE_IMPORT, com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport.class);
    }

    /**
     * Create a new ProfileImportDao with an attached configuration
     */
    public ProfileImportDao(Configuration configuration) {
        super(ProfileImport.PROFILE_IMPORT, com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport object) {
        return object.getProfileId();
    }

    /**
     * Fetch records that have <code>profile_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByProfileId(Integer... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.PROFILE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>profile_id = value</code>
     */
    public com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport fetchOneByProfileId(Integer value) {
        return fetchOne(ProfileImport.PROFILE_IMPORT.PROFILE_ID, value);
    }

    /**
     * Fetch records that have <code>source IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchBySource(Byte... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.SOURCE, values);
    }

    /**
     * Fetch records that have <code>last_update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByLastUpdateTime(Timestamp... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.LAST_UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByAccountId(String... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>resume_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByResumeId(String... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.RESUME_ID, values);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByUserName(String... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByCreateTime(Timestamp... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByUpdateTime(Timestamp... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.profiledb.tables.pojos.ProfileImport> fetchByData(String... values) {
        return fetch(ProfileImport.PROFILE_IMPORT.DATA, values);
    }
}
