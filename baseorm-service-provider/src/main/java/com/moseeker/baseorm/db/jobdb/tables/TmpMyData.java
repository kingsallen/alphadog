/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.jobdb.tables;


import com.moseeker.baseorm.db.jobdb.Jobdb;
import com.moseeker.baseorm.db.jobdb.Keys;
import com.moseeker.baseorm.db.jobdb.tables.records.TmpMyDataRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmpMyData extends TableImpl<TmpMyDataRecord> {

    private static final long serialVersionUID = -1744031797;

    /**
     * The reference instance of <code>jobdb.tmp_my_data</code>
     */
    public static final TmpMyData TMP_MY_DATA = new TmpMyData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmpMyDataRecord> getRecordType() {
        return TmpMyDataRecord.class;
    }

    /**
     * The column <code>jobdb.tmp_my_data.id</code>.
     */
    public final TableField<TmpMyDataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jobdb.tmp_my_data.name</code>.
     */
    public final TableField<TmpMyDataRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * Create a <code>jobdb.tmp_my_data</code> table reference
     */
    public TmpMyData() {
        this("tmp_my_data", null);
    }

    /**
     * Create an aliased <code>jobdb.tmp_my_data</code> table reference
     */
    public TmpMyData(String alias) {
        this(alias, TMP_MY_DATA);
    }

    private TmpMyData(String alias, Table<TmpMyDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmpMyData(String alias, Table<TmpMyDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jobdb.JOBDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TmpMyDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TMP_MY_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmpMyDataRecord> getPrimaryKey() {
        return Keys.KEY_TMP_MY_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmpMyDataRecord>> getKeys() {
        return Arrays.<UniqueKey<TmpMyDataRecord>>asList(Keys.KEY_TMP_MY_DATA_PRIMARY, Keys.KEY_TMP_MY_DATA_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmpMyData as(String alias) {
        return new TmpMyData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmpMyData rename(String name) {
        return new TmpMyData(name, null);
    }
}
