/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.campaigndb.tables;


import com.moseeker.baseorm.db.campaigndb.Campaigndb;
import com.moseeker.baseorm.db.campaigndb.Keys;
import com.moseeker.baseorm.db.campaigndb.tables.records.CampaignRecommedCompanyRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 推荐公司
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CampaignRecommedCompany extends TableImpl<CampaignRecommedCompanyRecord> {

    private static final long serialVersionUID = 71998692;

    /**
     * The reference instance of <code>campaigndb.campaign_recommed_company</code>
     */
    public static final CampaignRecommedCompany CAMPAIGN_RECOMMED_COMPANY = new CampaignRecommedCompany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignRecommedCompanyRecord> getRecordType() {
        return CampaignRecommedCompanyRecord.class;
    }

    /**
     * The column <code>campaigndb.campaign_recommed_company.id</code>.
     */
    public final TableField<CampaignRecommedCompanyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>campaigndb.campaign_recommed_company.company_id</code>. hr_company.id 公司id
     */
    public final TableField<CampaignRecommedCompanyRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "hr_company.id 公司id");

    /**
     * The column <code>campaigndb.campaign_recommed_company.company_name</code>. 公司名称
     */
    public final TableField<CampaignRecommedCompanyRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(999).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "公司名称");

    /**
     * The column <code>campaigndb.campaign_recommed_company.weight</code>. 权重值
     */
    public final TableField<CampaignRecommedCompanyRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "权重值");

    /**
     * The column <code>campaigndb.campaign_recommed_company.disable</code>. 是否禁用(0: 启用，1: 禁用)
     */
    public final TableField<CampaignRecommedCompanyRecord, Byte> DISABLE = createField("disable", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否禁用(0: 启用，1: 禁用)");

    /**
     * The column <code>campaigndb.campaign_recommed_company.create_time</code>. 创建时间
     */
    public final TableField<CampaignRecommedCompanyRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>campaigndb.campaign_recommed_company.update_time</code>. 修改时间
     */
    public final TableField<CampaignRecommedCompanyRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>campaigndb.campaign_recommed_company</code> table reference
     */
    public CampaignRecommedCompany() {
        this("campaign_recommed_company", null);
    }

    /**
     * Create an aliased <code>campaigndb.campaign_recommed_company</code> table reference
     */
    public CampaignRecommedCompany(String alias) {
        this(alias, CAMPAIGN_RECOMMED_COMPANY);
    }

    private CampaignRecommedCompany(String alias, Table<CampaignRecommedCompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private CampaignRecommedCompany(String alias, Table<CampaignRecommedCompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "推荐公司");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Campaigndb.CAMPAIGNDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CampaignRecommedCompanyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CAMPAIGN_RECOMMED_COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CampaignRecommedCompanyRecord> getPrimaryKey() {
        return Keys.KEY_CAMPAIGN_RECOMMED_COMPANY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CampaignRecommedCompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<CampaignRecommedCompanyRecord>>asList(Keys.KEY_CAMPAIGN_RECOMMED_COMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CampaignRecommedCompany as(String alias) {
        return new CampaignRecommedCompany(alias, this);
    }

    /**
     * Rename this table
     */
    public CampaignRecommedCompany rename(String name) {
        return new CampaignRecommedCompany(name, null);
    }
}
