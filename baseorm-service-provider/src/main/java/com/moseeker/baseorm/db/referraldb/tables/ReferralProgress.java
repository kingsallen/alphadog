/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.referraldb.tables;


import com.moseeker.baseorm.db.referraldb.Keys;
import com.moseeker.baseorm.db.referraldb.Referraldb;
import com.moseeker.baseorm.db.referraldb.tables.records.ReferralProgressRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 分享推荐进度页面用于存储候选人查看推荐进度时的申请状态
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferralProgress extends TableImpl<ReferralProgressRecord> {

    private static final long serialVersionUID = -1234976395;

    /**
     * The reference instance of <code>referraldb.referral_progress</code>
     */
    public static final ReferralProgress REFERRAL_PROGRESS = new ReferralProgress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReferralProgressRecord> getRecordType() {
        return ReferralProgressRecord.class;
    }

    /**
     * The column <code>referraldb.referral_progress.id</code>.
     */
    public final TableField<ReferralProgressRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>referraldb.referral_progress.app_id</code>. 申请id
     */
    public final TableField<ReferralProgressRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "申请id");

    /**
     * The column <code>referraldb.referral_progress.view_progress</code>. 候选人查看推荐进度时的申请状态，每次候选人查看时会更新此字段
     */
    public final TableField<ReferralProgressRecord, Integer> VIEW_PROGRESS = createField("view_progress", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "候选人查看推荐进度时的申请状态，每次候选人查看时会更新此字段");

    /**
     * The column <code>referraldb.referral_progress.state</code>. 推荐进度是否正常 0 否 1 正常
     */
    public final TableField<ReferralProgressRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "推荐进度是否正常 0 否 1 正常");

    /**
     * The column <code>referraldb.referral_progress.create_time</code>.
     */
    public final TableField<ReferralProgressRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>referraldb.referral_progress.update_time</code>.
     */
    public final TableField<ReferralProgressRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>referraldb.referral_progress</code> table reference
     */
    public ReferralProgress() {
        this("referral_progress", null);
    }

    /**
     * Create an aliased <code>referraldb.referral_progress</code> table reference
     */
    public ReferralProgress(String alias) {
        this(alias, REFERRAL_PROGRESS);
    }

    private ReferralProgress(String alias, Table<ReferralProgressRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReferralProgress(String alias, Table<ReferralProgressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "分享推荐进度页面用于存储候选人查看推荐进度时的申请状态");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referraldb.REFERRALDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReferralProgressRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFERRAL_PROGRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReferralProgressRecord> getPrimaryKey() {
        return Keys.KEY_REFERRAL_PROGRESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReferralProgressRecord>> getKeys() {
        return Arrays.<UniqueKey<ReferralProgressRecord>>asList(Keys.KEY_REFERRAL_PROGRESS_PRIMARY, Keys.KEY_REFERRAL_PROGRESS_APPID_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReferralProgress as(String alias) {
        return new ReferralProgress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReferralProgress rename(String name) {
        return new ReferralProgress(name, null);
    }
}
