/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigOperationLogTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 操作记录模版配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigOperationLogTemplate extends TableImpl<ConfigOperationLogTemplateRecord> {

    private static final long serialVersionUID = -1251945230;

    /**
     * The reference instance of <code>configdb.config_operation_log_template</code>
     */
    public static final ConfigOperationLogTemplate CONFIG_OPERATION_LOG_TEMPLATE = new ConfigOperationLogTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigOperationLogTemplateRecord> getRecordType() {
        return ConfigOperationLogTemplateRecord.class;
    }

    /**
     * The column <code>configdb.config_operation_log_template.id</code>. 自增主键
     */
    public final TableField<ConfigOperationLogTemplateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "自增主键");

    /**
     * The column <code>configdb.config_operation_log_template.business_type</code>. 业务场景 (大分类)
     */
    public final TableField<ConfigOperationLogTemplateRecord, Integer> BUSINESS_TYPE = createField("business_type", org.jooq.impl.SQLDataType.INTEGER, this, "业务场景 (大分类)");

    /**
     * The column <code>configdb.config_operation_log_template.business_sub_type</code>. 业务场景(小分类)
     */
    public final TableField<ConfigOperationLogTemplateRecord, Integer> BUSINESS_SUB_TYPE = createField("business_sub_type", org.jooq.impl.SQLDataType.INTEGER, this, "业务场景(小分类)");

    /**
     * The column <code>configdb.config_operation_log_template.operation_type</code>. 操作类型(未知0/增1/删2/改3）
     */
    public final TableField<ConfigOperationLogTemplateRecord, Integer> OPERATION_TYPE = createField("operation_type", org.jooq.impl.SQLDataType.INTEGER, this, "操作类型(未知0/增1/删2/改3）");

    /**
     * The column <code>configdb.config_operation_log_template.operation_log_template</code>. 字符串模版
     */
    public final TableField<ConfigOperationLogTemplateRecord, String> OPERATION_LOG_TEMPLATE = createField("operation_log_template", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "字符串模版");

    /**
     * The column <code>configdb.config_operation_log_template.operation_log_template_discription</code>. 字符串模版中占位符的解释说明
     */
    public final TableField<ConfigOperationLogTemplateRecord, String> OPERATION_LOG_TEMPLATE_DISCRIPTION = createField("operation_log_template_discription", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "字符串模版中占位符的解释说明");

    /**
     * The column <code>configdb.config_operation_log_template.create_time</code>. 创建时间
     */
    public final TableField<ConfigOperationLogTemplateRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>configdb.config_operation_log_template.update_time</code>. 修改时间
     */
    public final TableField<ConfigOperationLogTemplateRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>configdb.config_operation_log_template.application_log_template</code>.
     */
    public final TableField<ConfigOperationLogTemplateRecord, String> APPLICATION_LOG_TEMPLATE = createField("application_log_template", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * Create a <code>configdb.config_operation_log_template</code> table reference
     */
    public ConfigOperationLogTemplate() {
        this("config_operation_log_template", null);
    }

    /**
     * Create an aliased <code>configdb.config_operation_log_template</code> table reference
     */
    public ConfigOperationLogTemplate(String alias) {
        this(alias, CONFIG_OPERATION_LOG_TEMPLATE);
    }

    private ConfigOperationLogTemplate(String alias, Table<ConfigOperationLogTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigOperationLogTemplate(String alias, Table<ConfigOperationLogTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "操作记录模版配置表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigOperationLogTemplateRecord, Long> getIdentity() {
        return Keys.IDENTITY_CONFIG_OPERATION_LOG_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigOperationLogTemplateRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_OPERATION_LOG_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigOperationLogTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigOperationLogTemplateRecord>>asList(Keys.KEY_CONFIG_OPERATION_LOG_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigOperationLogTemplate as(String alias) {
        return new ConfigOperationLogTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigOperationLogTemplate rename(String name) {
        return new ConfigOperationLogTemplate(name, null);
    }
}
