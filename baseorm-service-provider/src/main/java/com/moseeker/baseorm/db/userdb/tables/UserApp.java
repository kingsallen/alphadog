/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserAppRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 应用
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserApp extends TableImpl<UserAppRecord> {

    private static final long serialVersionUID = -1163011215;

    /**
     * The reference instance of <code>userdb.user_app</code>
     */
    public static final UserApp USER_APP = new UserApp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAppRecord> getRecordType() {
        return UserAppRecord.class;
    }

    /**
     * The column <code>userdb.user_app.id</code>.
     */
    public final TableField<UserAppRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_app.app_name</code>. 应用权限名
     */
    public final TableField<UserAppRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "应用权限名");

    /**
     * The column <code>userdb.user_app.app_desc</code>. 应用权限描述
     */
    public final TableField<UserAppRecord, String> APP_DESC = createField("app_desc", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "应用权限描述");

    /**
     * The column <code>userdb.user_app.ico_url</code>. 应用图标ico地址
     */
    public final TableField<UserAppRecord, String> ICO_URL = createField("ico_url", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "应用图标ico地址");

    /**
     * The column <code>userdb.user_app.app_order</code>. 应用显示顺序
     */
    public final TableField<UserAppRecord, Byte> APP_ORDER = createField("app_order", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "应用显示顺序");

    /**
     * The column <code>userdb.user_app.link</code>. 老项目路由
     */
    public final TableField<UserAppRecord, String> LINK = createField("link", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "老项目路由");

    /**
     * The column <code>userdb.user_app.inner_link</code>. 新项目路由
     */
    public final TableField<UserAppRecord, String> INNER_LINK = createField("inner_link", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "新项目路由");

    /**
     * The column <code>userdb.user_app.label</code>. 多语言
     */
    public final TableField<UserAppRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "多语言");

    /**
     * The column <code>userdb.user_app.app_type</code>. 应用类型 1:工作台 2:职位管理 3:招聘管理 4:微信招聘 5:内推管理 6:数据分析 7:设置中心
     */
    public final TableField<UserAppRecord, Byte> APP_TYPE = createField("app_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "应用类型 1:工作台 2:职位管理 3:招聘管理 4:微信招聘 5:内推管理 6:数据分析 7:设置中心");

    /**
     * The column <code>userdb.user_app.set_type</code>. 设置类型 0:可设置  1:不可设置
     */
    public final TableField<UserAppRecord, Byte> SET_TYPE = createField("set_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "设置类型 0:可设置  1:不可设置");

    /**
     * The column <code>userdb.user_app.create_time</code>. 创建时间
     */
    public final TableField<UserAppRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_app.creator</code>. 创建人
     */
    public final TableField<UserAppRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人");

    /**
     * The column <code>userdb.user_app.update_time</code>. 修改时间
     */
    public final TableField<UserAppRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>userdb.user_app.updator</code>. 修改人
     */
    public final TableField<UserAppRecord, String> UPDATOR = createField("updator", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "修改人");

    /**
     * Create a <code>userdb.user_app</code> table reference
     */
    public UserApp() {
        this("user_app", null);
    }

    /**
     * Create an aliased <code>userdb.user_app</code> table reference
     */
    public UserApp(String alias) {
        this(alias, USER_APP);
    }

    private UserApp(String alias, Table<UserAppRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserApp(String alias, Table<UserAppRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "应用");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserAppRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserAppRecord> getPrimaryKey() {
        return Keys.KEY_USER_APP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserAppRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAppRecord>>asList(Keys.KEY_USER_APP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserApp as(String alias) {
        return new UserApp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserApp rename(String name) {
        return new UserApp(name, null);
    }
}
