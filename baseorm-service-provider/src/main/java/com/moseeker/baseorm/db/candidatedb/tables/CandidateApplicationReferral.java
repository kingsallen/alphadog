/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.candidatedb.tables;


import com.moseeker.baseorm.db.candidatedb.Candidatedb;
import com.moseeker.baseorm.db.candidatedb.Keys;
import com.moseeker.baseorm.db.candidatedb.tables.records.CandidateApplicationReferralRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 申请时推荐链路信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CandidateApplicationReferral extends TableImpl<CandidateApplicationReferralRecord> {

    private static final long serialVersionUID = -411660923;

    /**
     * The reference instance of <code>candidatedb.candidate_application_referral</code>
     */
    public static final CandidateApplicationReferral CANDIDATE_APPLICATION_REFERRAL = new CandidateApplicationReferral();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CandidateApplicationReferralRecord> getRecordType() {
        return CandidateApplicationReferralRecord.class;
    }

    /**
     * The column <code>candidatedb.candidate_application_referral.id</code>.
     */
    public final TableField<CandidateApplicationReferralRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>candidatedb.candidate_application_referral.application_id</code>. job_application.id
     */
    public final TableField<CandidateApplicationReferralRecord, Integer> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "job_application.id");

    /**
     * The column <code>candidatedb.candidate_application_referral.psc_id</code>. candidate_share_chain.id
     */
    public final TableField<CandidateApplicationReferralRecord, Integer> PSC_ID = createField("psc_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "candidate_share_chain.id");

    /**
     * The column <code>candidatedb.candidate_application_referral.direct_referral_user_id</code>. 申请的直接推荐人user_id
     */
    public final TableField<CandidateApplicationReferralRecord, Integer> DIRECT_REFERRAL_USER_ID = createField("direct_referral_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "申请的直接推荐人user_id");

    /**
     * Create a <code>candidatedb.candidate_application_referral</code> table reference
     */
    public CandidateApplicationReferral() {
        this("candidate_application_referral", null);
    }

    /**
     * Create an aliased <code>candidatedb.candidate_application_referral</code> table reference
     */
    public CandidateApplicationReferral(String alias) {
        this(alias, CANDIDATE_APPLICATION_REFERRAL);
    }

    private CandidateApplicationReferral(String alias, Table<CandidateApplicationReferralRecord> aliased) {
        this(alias, aliased, null);
    }

    private CandidateApplicationReferral(String alias, Table<CandidateApplicationReferralRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "申请时推荐链路信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Candidatedb.CANDIDATEDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CandidateApplicationReferralRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CANDIDATE_APPLICATION_REFERRAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CandidateApplicationReferralRecord> getPrimaryKey() {
        return Keys.KEY_CANDIDATE_APPLICATION_REFERRAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CandidateApplicationReferralRecord>> getKeys() {
        return Arrays.<UniqueKey<CandidateApplicationReferralRecord>>asList(Keys.KEY_CANDIDATE_APPLICATION_REFERRAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CandidateApplicationReferral as(String alias) {
        return new CandidateApplicationReferral(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CandidateApplicationReferral rename(String name) {
        return new CandidateApplicationReferral(name, null);
    }
}
