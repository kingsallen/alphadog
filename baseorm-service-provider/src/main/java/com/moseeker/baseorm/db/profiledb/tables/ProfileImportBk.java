/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.profiledb.tables;


import com.moseeker.baseorm.db.profiledb.Keys;
import com.moseeker.baseorm.db.profiledb.Profiledb;
import com.moseeker.baseorm.db.profiledb.tables.records.ProfileImportBkRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户profile导入记录信息
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfileImportBk extends TableImpl<ProfileImportBkRecord> {

	private static final long serialVersionUID = 1716606269;

	/**
	 * The reference instance of <code>profiledb.profile_import_bk</code>
	 */
	public static final ProfileImportBk PROFILE_IMPORT_BK = new ProfileImportBk();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfileImportBkRecord> getRecordType() {
		return ProfileImportBkRecord.class;
	}

	/**
	 * The column <code>profiledb.profile_import_bk.profile_id</code>. profile.id
	 */
	public final TableField<ProfileImportBkRecord, Integer> PROFILE_ID = createField("profile_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "profile.id");

	/**
	 * The column <code>profiledb.profile_import_bk.source</code>. 来源, 0:无法识别 1:51Job 2:Liepin 3:zhilian 4:linkedin
	 */
	public final TableField<ProfileImportBkRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "来源, 0:无法识别 1:51Job 2:Liepin 3:zhilian 4:linkedin");

	/**
	 * The column <code>profiledb.profile_import_bk.last_update_time</code>. 导入简历的最后修改时间
	 */
	public final TableField<ProfileImportBkRecord, Timestamp> LAST_UPDATE_TIME = createField("last_update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "导入简历的最后修改时间");

	/**
	 * The column <code>profiledb.profile_import_bk.account_id</code>. 他系统的用户ID
	 */
	public final TableField<ProfileImportBkRecord, String> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "他系统的用户ID");

	/**
	 * The column <code>profiledb.profile_import_bk.resume_id</code>. 他系统的简历ID
	 */
	public final TableField<ProfileImportBkRecord, String> RESUME_ID = createField("resume_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "他系统的简历ID");

	/**
	 * The column <code>profiledb.profile_import_bk.user_name</code>. 他系统的登陆用户名
	 */
	public final TableField<ProfileImportBkRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "他系统的登陆用户名");

	/**
	 * The column <code>profiledb.profile_import_bk.create_time</code>. 创建时间
	 */
	public final TableField<ProfileImportBkRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>profiledb.profile_import_bk.update_time</code>. 更新时间
	 */
	public final TableField<ProfileImportBkRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "更新时间");

	/**
	 * The column <code>profiledb.profile_import_bk.data</code>. 导入数据
	 */
	public final TableField<ProfileImportBkRecord, String> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "导入数据");

	/**
	 * Create a <code>profiledb.profile_import_bk</code> table reference
	 */
	public ProfileImportBk() {
		this("profile_import_bk", null);
	}

	/**
	 * Create an aliased <code>profiledb.profile_import_bk</code> table reference
	 */
	public ProfileImportBk(String alias) {
		this(alias, PROFILE_IMPORT_BK);
	}

	private ProfileImportBk(String alias, Table<ProfileImportBkRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProfileImportBk(String alias, Table<ProfileImportBkRecord> aliased, Field<?>[] parameters) {
		super(alias, Profiledb.PROFILEDB, aliased, parameters, "用户profile导入记录信息");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfileImportBkRecord> getPrimaryKey() {
		return Keys.KEY_PROFILE_IMPORT_BK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfileImportBkRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfileImportBkRecord>>asList(Keys.KEY_PROFILE_IMPORT_BK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProfileImportBk as(String alias) {
		return new ProfileImportBk(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProfileImportBk rename(String name) {
		return new ProfileImportBk(name, null);
	}
}
