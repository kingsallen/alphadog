/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserChatRoomRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 员工和候选人的聊天室
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserChatRoom extends TableImpl<UserChatRoomRecord> {

    private static final long serialVersionUID = -980059178;

    /**
     * The reference instance of <code>userdb.user_chat_room</code>
     */
    public static final UserChatRoom USER_CHAT_ROOM = new UserChatRoom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserChatRoomRecord> getRecordType() {
        return UserChatRoomRecord.class;
    }

    /**
     * The column <code>userdb.user_chat_room.id</code>. ID
     */
    public final TableField<UserChatRoomRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ID");

    /**
     * The column <code>userdb.user_chat_room.company_id</code>. hr_company.id
     */
    public final TableField<UserChatRoomRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "hr_company.id");

    /**
     * The column <code>userdb.user_chat_room.user_id</code>. 候选人user_id
     */
    public final TableField<UserChatRoomRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "候选人user_id");

    /**
     * The column <code>userdb.user_chat_room.employee_id</code>. 员工user_employee.id
     */
    public final TableField<UserChatRoomRecord, Integer> EMPLOYEE_ID = createField("employee_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "员工user_employee.id");

    /**
     * The column <code>userdb.user_chat_room.latest_chat_time</code>. 最近一次聊天消息发送时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> LATEST_CHAT_TIME = createField("latest_chat_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近一次聊天消息发送时间");

    /**
     * The column <code>userdb.user_chat_room.user_enter_time</code>. sysuser最近进入聊天室时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> USER_ENTER_TIME = createField("user_enter_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "sysuser最近进入聊天室时间");

    /**
     * The column <code>userdb.user_chat_room.employee_enter_time</code>. employee最近进入聊天室时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> EMPLOYEE_ENTER_TIME = createField("employee_enter_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "employee最近进入聊天室时间");

    /**
     * The column <code>userdb.user_chat_room.user_leave_time</code>. sysuser最近一次离开聊天室时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> USER_LEAVE_TIME = createField("user_leave_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "sysuser最近一次离开聊天室时间");

    /**
     * The column <code>userdb.user_chat_room.employee_leave_time</code>. employee最近一次离开聊天室时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> EMPLOYEE_LEAVE_TIME = createField("employee_leave_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "employee最近一次离开聊天室时间");

    /**
     * The column <code>userdb.user_chat_room.user_del</code>. user聊天列表中删除，0：显示，1：删除
     */
    public final TableField<UserChatRoomRecord, Byte> USER_DEL = createField("user_del", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "user聊天列表中删除，0：显示，1：删除");

    /**
     * The column <code>userdb.user_chat_room.employee_del</code>. user聊天列表中删除，0：显示，1：删除
     */
    public final TableField<UserChatRoomRecord, Byte> EMPLOYEE_DEL = createField("employee_del", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "user聊天列表中删除，0：显示，1：删除");

    /**
     * The column <code>userdb.user_chat_room.employee_unread_count</code>. 员工未读消息数量
     */
    public final TableField<UserChatRoomRecord, Integer> EMPLOYEE_UNREAD_COUNT = createField("employee_unread_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "员工未读消息数量");

    /**
     * The column <code>userdb.user_chat_room.user_unread_count</code>. C端用户未读消息数量
     */
    public final TableField<UserChatRoomRecord, Integer> USER_UNREAD_COUNT = createField("user_unread_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "C端用户未读消息数量");

    /**
     * The column <code>userdb.user_chat_room.employee_hint_schedule</code>. 对员工计划进行未读消息推送
     */
    public final TableField<UserChatRoomRecord, Integer> EMPLOYEE_HINT_SCHEDULE = createField("employee_hint_schedule", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "对员工计划进行未读消息推送");

    /**
     * The column <code>userdb.user_chat_room.user_hint_schedule</code>. 对候选人计划进行未读消息推送
     */
    public final TableField<UserChatRoomRecord, Integer> USER_HINT_SCHEDULE = createField("user_hint_schedule", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "对候选人计划进行未读消息推送");

    /**
     * The column <code>userdb.user_chat_room.user_send_for_msg_id</code>. 为候选人未读IM聊天消息发送公众号模板消息时的最大IM消息ID
     */
    public final TableField<UserChatRoomRecord, Integer> USER_SEND_FOR_MSG_ID = createField("user_send_for_msg_id", org.jooq.impl.SQLDataType.INTEGER, this, "为候选人未读IM聊天消息发送公众号模板消息时的最大IM消息ID");

    /**
     * The column <code>userdb.user_chat_room.employee_send_for_msg_id</code>. 为员工未读IM聊天消息发送公众号模板消息时的最大IM消息ID
     */
    public final TableField<UserChatRoomRecord, Integer> EMPLOYEE_SEND_FOR_MSG_ID = createField("employee_send_for_msg_id", org.jooq.impl.SQLDataType.INTEGER, this, "为员工未读IM聊天消息发送公众号模板消息时的最大IM消息ID");

    /**
     * The column <code>userdb.user_chat_room.create_time</code>. 创建时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_chat_room.update_time</code>. 修改时间
     */
    public final TableField<UserChatRoomRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>userdb.user_chat_room</code> table reference
     */
    public UserChatRoom() {
        this("user_chat_room", null);
    }

    /**
     * Create an aliased <code>userdb.user_chat_room</code> table reference
     */
    public UserChatRoom(String alias) {
        this(alias, USER_CHAT_ROOM);
    }

    private UserChatRoom(String alias, Table<UserChatRoomRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserChatRoom(String alias, Table<UserChatRoomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "员工和候选人的聊天室");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserChatRoomRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_CHAT_ROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserChatRoomRecord> getPrimaryKey() {
        return Keys.KEY_USER_CHAT_ROOM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserChatRoomRecord>> getKeys() {
        return Arrays.<UniqueKey<UserChatRoomRecord>>asList(Keys.KEY_USER_CHAT_ROOM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserChatRoom as(String alias) {
        return new UserChatRoom(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserChatRoom rename(String name) {
        return new UserChatRoom(name, null);
    }
}
