/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.hrdb.tables.daos;


import com.moseeker.baseorm.db.hrdb.tables.HrThirdPartyAccountHr;
import com.moseeker.baseorm.db.hrdb.tables.records.HrThirdPartyAccountHrRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 第三方账号和hr表关联表，账号分配表，取消分配将status置为0，重新分配不修改记录而是新加分配记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HrThirdPartyAccountHrDao extends DAOImpl<HrThirdPartyAccountHrRecord, com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr, Integer> {

    /**
     * Create a new HrThirdPartyAccountHrDao without any configuration
     */
    public HrThirdPartyAccountHrDao() {
        super(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR, com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr.class);
    }

    /**
     * Create a new HrThirdPartyAccountHrDao with an attached configuration
     */
    public HrThirdPartyAccountHrDao(Configuration configuration) {
        super(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR, com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchById(Integer... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr fetchOneById(Integer value) {
        return fetchOne(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.ID, value);
    }

    /**
     * Fetch records that have <code>third_party_account_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByThirdPartyAccountId(Integer... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.THIRD_PARTY_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>hr_account_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByHrAccountId(Integer... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.HR_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>channel IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByChannel(Short... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.CHANNEL, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByStatus(Byte... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByCreateTime(Timestamp... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.hrdb.tables.pojos.HrThirdPartyAccountHr> fetchByUpdateTime(Timestamp... values) {
        return fetch(HrThirdPartyAccountHr.HR_THIRD_PARTY_ACCOUNT_HR.UPDATE_TIME, values);
    }
}
