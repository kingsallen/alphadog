/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserEmployeePointsRecordCompanyRelRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEmployeePointsRecordCompanyRel extends TableImpl<UserEmployeePointsRecordCompanyRelRecord> {

    private static final long serialVersionUID = -1621167196;

    /**
     * The reference instance of <code>userdb.user_employee_points_record_company_rel</code>
     */
    public static final UserEmployeePointsRecordCompanyRel USER_EMPLOYEE_POINTS_RECORD_COMPANY_REL = new UserEmployeePointsRecordCompanyRel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserEmployeePointsRecordCompanyRelRecord> getRecordType() {
        return UserEmployeePointsRecordCompanyRelRecord.class;
    }

    /**
     * The column <code>userdb.user_employee_points_record_company_rel.id</code>.
     */
    public final TableField<UserEmployeePointsRecordCompanyRelRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_employee_points_record_company_rel.company_id</code>. 公司ID
     */
    public final TableField<UserEmployeePointsRecordCompanyRelRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER, this, "公司ID");

    /**
     * The column <code>userdb.user_employee_points_record_company_rel.employee_points_record_id</code>. 员工积分记录表ID
     */
    public final TableField<UserEmployeePointsRecordCompanyRelRecord, Integer> EMPLOYEE_POINTS_RECORD_ID = createField("employee_points_record_id", org.jooq.impl.SQLDataType.INTEGER, this, "员工积分记录表ID");

    /**
     * The column <code>userdb.user_employee_points_record_company_rel.create_time</code>.
     */
    public final TableField<UserEmployeePointsRecordCompanyRelRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>userdb.user_employee_points_record_company_rel.update_time</code>.
     */
    public final TableField<UserEmployeePointsRecordCompanyRelRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>userdb.user_employee_points_record_company_rel</code> table reference
     */
    public UserEmployeePointsRecordCompanyRel() {
        this("user_employee_points_record_company_rel", null);
    }

    /**
     * Create an aliased <code>userdb.user_employee_points_record_company_rel</code> table reference
     */
    public UserEmployeePointsRecordCompanyRel(String alias) {
        this(alias, USER_EMPLOYEE_POINTS_RECORD_COMPANY_REL);
    }

    private UserEmployeePointsRecordCompanyRel(String alias, Table<UserEmployeePointsRecordCompanyRelRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserEmployeePointsRecordCompanyRel(String alias, Table<UserEmployeePointsRecordCompanyRelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserEmployeePointsRecordCompanyRelRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_EMPLOYEE_POINTS_RECORD_COMPANY_REL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserEmployeePointsRecordCompanyRelRecord> getPrimaryKey() {
        return Keys.KEY_USER_EMPLOYEE_POINTS_RECORD_COMPANY_REL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserEmployeePointsRecordCompanyRelRecord>> getKeys() {
        return Arrays.<UniqueKey<UserEmployeePointsRecordCompanyRelRecord>>asList(Keys.KEY_USER_EMPLOYEE_POINTS_RECORD_COMPANY_REL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserEmployeePointsRecordCompanyRel as(String alias) {
        return new UserEmployeePointsRecordCompanyRel(alias, this);
    }

    /**
     * Rename this table
     */
    public UserEmployeePointsRecordCompanyRel rename(String name) {
        return new UserEmployeePointsRecordCompanyRel(name, null);
    }
}
