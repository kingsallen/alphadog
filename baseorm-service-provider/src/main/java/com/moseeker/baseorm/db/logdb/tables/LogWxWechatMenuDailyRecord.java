/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.logdb.tables;


import com.moseeker.baseorm.db.logdb.Keys;
import com.moseeker.baseorm.db.logdb.Logdb;
import com.moseeker.baseorm.db.logdb.tables.records.LogWxWechatMenuDailyRecordRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 每日微信公众号菜单数据, 脚本运行每天的已经微信公众号菜单数据
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogWxWechatMenuDailyRecord extends TableImpl<LogWxWechatMenuDailyRecordRecord> {

    private static final long serialVersionUID = -1816357717;

    /**
     * The reference instance of <code>logdb.log_wx_wechat_menu_daily_record</code>
     */
    public static final LogWxWechatMenuDailyRecord LOG_WX_WECHAT_MENU_DAILY_RECORD = new LogWxWechatMenuDailyRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogWxWechatMenuDailyRecordRecord> getRecordType() {
        return LogWxWechatMenuDailyRecordRecord.class;
    }

    /**
     * The column <code>logdb.log_wx_wechat_menu_daily_record.id</code>.
     */
    public final TableField<LogWxWechatMenuDailyRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>logdb.log_wx_wechat_menu_daily_record.wechat_id</code>.
     */
    public final TableField<LogWxWechatMenuDailyRecordRecord, Integer> WECHAT_ID = createField("wechat_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>logdb.log_wx_wechat_menu_daily_record.company_id</code>.
     */
    public final TableField<LogWxWechatMenuDailyRecordRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>logdb.log_wx_wechat_menu_daily_record.menu_json</code>. 菜单的json数据
     */
    public final TableField<LogWxWechatMenuDailyRecordRecord, String> MENU_JSON = createField("menu_json", org.jooq.impl.SQLDataType.CLOB, this, "菜单的json数据");

    /**
     * The column <code>logdb.log_wx_wechat_menu_daily_record.create_date</code>.
     */
    public final TableField<LogWxWechatMenuDailyRecordRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>logdb.log_wx_wechat_menu_daily_record</code> table reference
     */
    public LogWxWechatMenuDailyRecord() {
        this("log_wx_wechat_menu_daily_record", null);
    }

    /**
     * Create an aliased <code>logdb.log_wx_wechat_menu_daily_record</code> table reference
     */
    public LogWxWechatMenuDailyRecord(String alias) {
        this(alias, LOG_WX_WECHAT_MENU_DAILY_RECORD);
    }

    private LogWxWechatMenuDailyRecord(String alias, Table<LogWxWechatMenuDailyRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private LogWxWechatMenuDailyRecord(String alias, Table<LogWxWechatMenuDailyRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "每日微信公众号菜单数据, 脚本运行每天的已经微信公众号菜单数据");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Logdb.LOGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LogWxWechatMenuDailyRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOG_WX_WECHAT_MENU_DAILY_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogWxWechatMenuDailyRecordRecord> getPrimaryKey() {
        return Keys.KEY_LOG_WX_WECHAT_MENU_DAILY_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogWxWechatMenuDailyRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<LogWxWechatMenuDailyRecordRecord>>asList(Keys.KEY_LOG_WX_WECHAT_MENU_DAILY_RECORD_PRIMARY, Keys.KEY_LOG_WX_WECHAT_MENU_DAILY_RECORD_WECHAT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogWxWechatMenuDailyRecord as(String alias) {
        return new LogWxWechatMenuDailyRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LogWxWechatMenuDailyRecord rename(String name) {
        return new LogWxWechatMenuDailyRecord(name, null);
    }
}
