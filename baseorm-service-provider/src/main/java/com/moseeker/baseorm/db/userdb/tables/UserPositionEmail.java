/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables;


import com.moseeker.baseorm.db.userdb.Keys;
import com.moseeker.baseorm.db.userdb.Userdb;
import com.moseeker.baseorm.db.userdb.tables.records.UserPositionEmailRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户订阅职位推荐邮件
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPositionEmail extends TableImpl<UserPositionEmailRecord> {

    private static final long serialVersionUID = 640472250;

    /**
     * The reference instance of <code>userdb.user_position_email</code>
     */
    public static final UserPositionEmail USER_POSITION_EMAIL = new UserPositionEmail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPositionEmailRecord> getRecordType() {
        return UserPositionEmailRecord.class;
    }

    /**
     * The column <code>userdb.user_position_email.id</code>.
     */
    public final TableField<UserPositionEmailRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>userdb.user_position_email.user_id</code>. 用户id
     */
    public final TableField<UserPositionEmailRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>userdb.user_position_email.conditions</code>. 订阅的职位条件
     */
    public final TableField<UserPositionEmailRecord, String> CONDITIONS = createField("conditions", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "订阅的职位条件");

    /**
     * The column <code>userdb.user_position_email.status</code>. 状态，0是正常，1是取消
     */
    public final TableField<UserPositionEmailRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态，0是正常，1是取消");

    /**
     * The column <code>userdb.user_position_email.create_time</code>. 创建时间
     */
    public final TableField<UserPositionEmailRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>userdb.user_position_email.update_time</code>. 更新时间
     */
    public final TableField<UserPositionEmailRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>userdb.user_position_email</code> table reference
     */
    public UserPositionEmail() {
        this("user_position_email", null);
    }

    /**
     * Create an aliased <code>userdb.user_position_email</code> table reference
     */
    public UserPositionEmail(String alias) {
        this(alias, USER_POSITION_EMAIL);
    }

    private UserPositionEmail(String alias, Table<UserPositionEmailRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPositionEmail(String alias, Table<UserPositionEmailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户订阅职位推荐邮件");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userdb.USERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserPositionEmailRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_POSITION_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserPositionEmailRecord> getPrimaryKey() {
        return Keys.KEY_USER_POSITION_EMAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserPositionEmailRecord>> getKeys() {
        return Arrays.<UniqueKey<UserPositionEmailRecord>>asList(Keys.KEY_USER_POSITION_EMAIL_PRIMARY, Keys.KEY_USER_POSITION_EMAIL_USER_POSITION_EMAIL_USER_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPositionEmail as(String alias) {
        return new UserPositionEmail(alias, this);
    }

    /**
     * Rename this table
     */
    public UserPositionEmail rename(String name) {
        return new UserPositionEmail(name, null);
    }
}
