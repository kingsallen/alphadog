/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.logdb.tables;


import com.moseeker.baseorm.db.logdb.Keys;
import com.moseeker.baseorm.db.logdb.Logdb;
import com.moseeker.baseorm.db.logdb.tables.records.LogEmailProfileSendLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 简历被转发记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogEmailProfileSendLog extends TableImpl<LogEmailProfileSendLogRecord> {

    private static final long serialVersionUID = -397284710;

    /**
     * The reference instance of <code>logdb.log_email_profile_send_log</code>
     */
    public static final LogEmailProfileSendLog LOG_EMAIL_PROFILE_SEND_LOG = new LogEmailProfileSendLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogEmailProfileSendLogRecord> getRecordType() {
        return LogEmailProfileSendLogRecord.class;
    }

    /**
     * The column <code>logdb.log_email_profile_send_log.id</code>.
     */
    public final TableField<LogEmailProfileSendLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>logdb.log_email_profile_send_log.email</code>. 邮件接收人的邮箱
     */
    public final TableField<LogEmailProfileSendLogRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "邮件接收人的邮箱");

    /**
     * The column <code>logdb.log_email_profile_send_log.user_id</code>. 简历所属的人的编号 userdb.user_user.id
     */
    public final TableField<LogEmailProfileSendLogRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "简历所属的人的编号 userdb.user_user.id");

    /**
     * The column <code>logdb.log_email_profile_send_log.type</code>. 发送类型 0是默认不处理 1是职位配置的转发 5是人才库手动转发简历
     */
    public final TableField<LogEmailProfileSendLogRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "发送类型 0是默认不处理 1是职位配置的转发 5是人才库手动转发简历");

    /**
     * The column <code>logdb.log_email_profile_send_log.create_time</code>. 发送日期
     */
    public final TableField<LogEmailProfileSendLogRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "发送日期");

    /**
     * The column <code>logdb.log_email_profile_send_log.company_id</code>. 公司编号
     */
    public final TableField<LogEmailProfileSendLogRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "公司编号");

    /**
     * Create a <code>logdb.log_email_profile_send_log</code> table reference
     */
    public LogEmailProfileSendLog() {
        this("log_email_profile_send_log", null);
    }

    /**
     * Create an aliased <code>logdb.log_email_profile_send_log</code> table reference
     */
    public LogEmailProfileSendLog(String alias) {
        this(alias, LOG_EMAIL_PROFILE_SEND_LOG);
    }

    private LogEmailProfileSendLog(String alias, Table<LogEmailProfileSendLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private LogEmailProfileSendLog(String alias, Table<LogEmailProfileSendLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "简历被转发记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Logdb.LOGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LogEmailProfileSendLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOG_EMAIL_PROFILE_SEND_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogEmailProfileSendLogRecord> getPrimaryKey() {
        return Keys.KEY_LOG_EMAIL_PROFILE_SEND_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogEmailProfileSendLogRecord>> getKeys() {
        return Arrays.<UniqueKey<LogEmailProfileSendLogRecord>>asList(Keys.KEY_LOG_EMAIL_PROFILE_SEND_LOG_PRIMARY, Keys.KEY_LOG_EMAIL_PROFILE_SEND_LOG_LOG_EMAIL_PROFILE_SEND_LOG_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogEmailProfileSendLog as(String alias) {
        return new LogEmailProfileSendLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LogEmailProfileSendLog rename(String name) {
        return new LogEmailProfileSendLog(name, null);
    }
}
