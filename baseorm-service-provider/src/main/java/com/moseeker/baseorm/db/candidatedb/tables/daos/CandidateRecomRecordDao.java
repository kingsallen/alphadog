/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.candidatedb.tables.daos;


import com.moseeker.baseorm.db.candidatedb.tables.CandidateRecomRecord;
import com.moseeker.baseorm.db.candidatedb.tables.records.CandidateRecomRecordRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 候选人推荐记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CandidateRecomRecordDao extends DAOImpl<CandidateRecomRecordRecord, com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord, Integer> {

    /**
     * Create a new CandidateRecomRecordDao without any configuration
     */
    public CandidateRecomRecordDao() {
        super(CandidateRecomRecord.CANDIDATE_RECOM_RECORD, com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord.class);
    }

    /**
     * Create a new CandidateRecomRecordDao with an attached configuration
     */
    public CandidateRecomRecordDao(Configuration configuration) {
        super(CandidateRecomRecord.CANDIDATE_RECOM_RECORD, com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchById(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord fetchOneById(Integer value) {
        return fetchOne(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.ID, value);
    }

    /**
     * Fetch records that have <code>position_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByPositionId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.POSITION_ID, values);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByAppId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.APP_ID, values);
    }

    /**
     * Fetch records that have <code>presentee_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByPresenteeId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.PRESENTEE_ID, values);
    }

    /**
     * Fetch records that have <code>click_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByClickTime(Timestamp... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.CLICK_TIME, values);
    }

    /**
     * Fetch records that have <code>depth IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByDepth(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.DEPTH, values);
    }

    /**
     * Fetch records that have <code>recom_id_2 IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRecomId_2(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.RECOM_ID_2, values);
    }

    /**
     * Fetch records that have <code>recom_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRecomId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.RECOM_ID, values);
    }

    /**
     * Fetch records that have <code>realname IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRealname(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.REALNAME, values);
    }

    /**
     * Fetch records that have <code>company IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByCompany(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.COMPANY, values);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByPosition(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.POSITION, values);
    }

    /**
     * Fetch records that have <code>recom_reason IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRecomReason(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.RECOM_REASON, values);
    }

    /**
     * Fetch records that have <code>recom_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRecomTime(Timestamp... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.RECOM_TIME, values);
    }

    /**
     * Fetch records that have <code>is_recom IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByIsRecom(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.IS_RECOM, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByCreateTime(Timestamp... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByUpdateTime(Timestamp... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByMobile(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.MOBILE, values);
    }

    /**
     * Fetch records that have <code>presentee_user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByPresenteeUserId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.PRESENTEE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>repost_user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByRepostUserId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.REPOST_USER_ID, values);
    }

    /**
     * Fetch records that have <code>post_user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByPostUserId(Integer... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.POST_USER_ID, values);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByGender(Byte... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.GENDER, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.candidatedb.tables.pojos.CandidateRecomRecord> fetchByEmail(String... values) {
        return fetch(CandidateRecomRecord.CANDIDATE_RECOM_RECORD.EMAIL, values);
    }
}
