/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.referraldb.tables.daos;


import com.moseeker.baseorm.db.referraldb.tables.ReferralEmployeeNetworkResources;
import com.moseeker.baseorm.db.referraldb.tables.records.ReferralEmployeeNetworkResourcesRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 员工的雷达人脉top
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferralEmployeeNetworkResourcesDao extends DAOImpl<ReferralEmployeeNetworkResourcesRecord, com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources, Integer> {

    /**
     * Create a new ReferralEmployeeNetworkResourcesDao without any configuration
     */
    public ReferralEmployeeNetworkResourcesDao() {
        super(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES, com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources.class);
    }

    /**
     * Create a new ReferralEmployeeNetworkResourcesDao with an attached configuration
     */
    public ReferralEmployeeNetworkResourcesDao(Configuration configuration) {
        super(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES, com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchById(Integer... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources fetchOneById(Integer value) {
        return fetchOne(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.ID, value);
    }

    /**
     * Fetch records that have <code>post_user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchByPostUserId(Integer... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.POST_USER_ID, values);
    }

    /**
     * Fetch records that have <code>presentee_user_id IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchByPresenteeUserId(Integer... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.PRESENTEE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchByCreateTime(Timestamp... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchByUpdateTime(Timestamp... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>disable IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.referraldb.tables.pojos.ReferralEmployeeNetworkResources> fetchByDisable(Byte... values) {
        return fetch(ReferralEmployeeNetworkResources.REFERRAL_EMPLOYEE_NETWORK_RESOURCES.DISABLE, values);
    }
}
