/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.userdb.tables.daos;


import com.moseeker.baseorm.db.userdb.tables.ConsistencyBusinessType;
import com.moseeker.baseorm.db.userdb.tables.records.ConsistencyBusinessTypeRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * 消息业务类型表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsistencyBusinessTypeDao extends DAOImpl<ConsistencyBusinessTypeRecord, com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType, Record2<String, String>> {

    /**
     * Create a new ConsistencyBusinessTypeDao without any configuration
     */
    public ConsistencyBusinessTypeDao() {
        super(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE, com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType.class);
    }

    /**
     * Create a new ConsistencyBusinessTypeDao with an attached configuration
     */
    public ConsistencyBusinessTypeDao(Configuration configuration) {
        super(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE, com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType object) {
        return compositeKeyRecord(object.getName(), object.getMessageName());
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByName(String... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.NAME, values);
    }

    /**
     * Fetch records that have <code>message_name IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByMessageName(String... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.MESSAGE_NAME, values);
    }

    /**
     * Fetch records that have <code>register_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByRegisterTime(Timestamp... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.REGISTER_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByUpdateTime(Timestamp... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>last_shake_hand_time IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByLastShakeHandTime(Timestamp... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.LAST_SHAKE_HAND_TIME, values);
    }

    /**
     * Fetch records that have <code>receive_email IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByReceiveEmail(String... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.RECEIVE_EMAIL, values);
    }

    /**
     * Fetch records that have <code>enable IN (values)</code>
     */
    public List<com.moseeker.baseorm.db.userdb.tables.pojos.ConsistencyBusinessType> fetchByEnable(Byte... values) {
        return fetch(ConsistencyBusinessType.CONSISTENCY_BUSINESS_TYPE.ENABLE, values);
    }
}
