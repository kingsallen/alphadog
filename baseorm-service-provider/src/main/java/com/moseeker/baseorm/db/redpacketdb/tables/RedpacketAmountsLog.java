/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.redpacketdb.tables;


import com.moseeker.baseorm.db.redpacketdb.Keys;
import com.moseeker.baseorm.db.redpacketdb.Redpacketdb;
import com.moseeker.baseorm.db.redpacketdb.tables.records.RedpacketAmountsLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 红包埋点
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedpacketAmountsLog extends TableImpl<RedpacketAmountsLogRecord> {

    private static final long serialVersionUID = -1555064128;

    /**
     * The reference instance of <code>redpacketdb.redpacket_amounts_log</code>
     */
    public static final RedpacketAmountsLog REDPACKET_AMOUNTS_LOG = new RedpacketAmountsLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RedpacketAmountsLogRecord> getRecordType() {
        return RedpacketAmountsLogRecord.class;
    }

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.id</code>.
     */
    public final TableField<RedpacketAmountsLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.activity_id</code>. 所属红包活动
     */
    public final TableField<RedpacketAmountsLogRecord, Integer> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所属红包活动");

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.amount</code>. 红包金额，有可能是0
     */
    public final TableField<RedpacketAmountsLogRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "红包金额，有可能是0");

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.position_id</code>. 职位编号
     */
    public final TableField<RedpacketAmountsLogRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER, this, "职位编号");

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.create_time</code>. 创建时间
     */
    public final TableField<RedpacketAmountsLogRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>redpacketdb.redpacket_amounts_log.update_time</code>. 更新时间
     */
    public final TableField<RedpacketAmountsLogRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>redpacketdb.redpacket_amounts_log</code> table reference
     */
    public RedpacketAmountsLog() {
        this("redpacket_amounts_log", null);
    }

    /**
     * Create an aliased <code>redpacketdb.redpacket_amounts_log</code> table reference
     */
    public RedpacketAmountsLog(String alias) {
        this(alias, REDPACKET_AMOUNTS_LOG);
    }

    private RedpacketAmountsLog(String alias, Table<RedpacketAmountsLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private RedpacketAmountsLog(String alias, Table<RedpacketAmountsLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "红包埋点");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Redpacketdb.REDPACKETDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RedpacketAmountsLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REDPACKET_AMOUNTS_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RedpacketAmountsLogRecord> getPrimaryKey() {
        return Keys.KEY_REDPACKET_AMOUNTS_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RedpacketAmountsLogRecord>> getKeys() {
        return Arrays.<UniqueKey<RedpacketAmountsLogRecord>>asList(Keys.KEY_REDPACKET_AMOUNTS_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedpacketAmountsLog as(String alias) {
        return new RedpacketAmountsLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RedpacketAmountsLog rename(String name) {
        return new RedpacketAmountsLog(name, null);
    }
}
