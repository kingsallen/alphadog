/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.referraldb.tables;


import com.moseeker.baseorm.db.referraldb.Keys;
import com.moseeker.baseorm.db.referraldb.Referraldb;
import com.moseeker.baseorm.db.referraldb.tables.records.ReferralConnectionLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用于记录人脉连连看当前连接状态（未开始 已完成 连接中）
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferralConnectionLog extends TableImpl<ReferralConnectionLogRecord> {

    private static final long serialVersionUID = -1826759098;

    /**
     * The reference instance of <code>referraldb.referral_connection_log</code>
     */
    public static final ReferralConnectionLog REFERRAL_CONNECTION_LOG = new ReferralConnectionLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReferralConnectionLogRecord> getRecordType() {
        return ReferralConnectionLogRecord.class;
    }

    /**
     * The column <code>referraldb.referral_connection_log.id</code>.
     */
    public final TableField<ReferralConnectionLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>referraldb.referral_connection_log.root_chain_id</code>. 链路起始id
     */
    public final TableField<ReferralConnectionLogRecord, Integer> ROOT_CHAIN_ID = createField("root_chain_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "链路起始id");

    /**
     * The column <code>referraldb.referral_connection_log.position_id</code>. 职位id
     */
    public final TableField<ReferralConnectionLogRecord, Integer> POSITION_ID = createField("position_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "职位id");

    /**
     * The column <code>referraldb.referral_connection_log.root_user_id</code>. 链路起始用户id
     */
    public final TableField<ReferralConnectionLogRecord, Integer> ROOT_USER_ID = createField("root_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "链路起始用户id");

    /**
     * The column <code>referraldb.referral_connection_log.end_user_id</code>. 链路结束用户id
     */
    public final TableField<ReferralConnectionLogRecord, Integer> END_USER_ID = createField("end_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "链路结束用户id");

    /**
     * The column <code>referraldb.referral_connection_log.state</code>. 人脉连连看是否已连接完成 0 未开始 1 已完成 2 连接中
     */
    public final TableField<ReferralConnectionLogRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "人脉连连看是否已连接完成 0 未开始 1 已完成 2 连接中");

    /**
     * The column <code>referraldb.referral_connection_log.create_time</code>.
     */
    public final TableField<ReferralConnectionLogRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>referraldb.referral_connection_log.update_time</code>.
     */
    public final TableField<ReferralConnectionLogRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>referraldb.referral_connection_log</code> table reference
     */
    public ReferralConnectionLog() {
        this("referral_connection_log", null);
    }

    /**
     * Create an aliased <code>referraldb.referral_connection_log</code> table reference
     */
    public ReferralConnectionLog(String alias) {
        this(alias, REFERRAL_CONNECTION_LOG);
    }

    private ReferralConnectionLog(String alias, Table<ReferralConnectionLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReferralConnectionLog(String alias, Table<ReferralConnectionLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用于记录人脉连连看当前连接状态（未开始 已完成 连接中）");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referraldb.REFERRALDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReferralConnectionLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFERRAL_CONNECTION_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReferralConnectionLogRecord> getPrimaryKey() {
        return Keys.KEY_REFERRAL_CONNECTION_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReferralConnectionLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ReferralConnectionLogRecord>>asList(Keys.KEY_REFERRAL_CONNECTION_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReferralConnectionLog as(String alias) {
        return new ReferralConnectionLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReferralConnectionLog rename(String name) {
        return new ReferralConnectionLog(name, null);
    }
}
