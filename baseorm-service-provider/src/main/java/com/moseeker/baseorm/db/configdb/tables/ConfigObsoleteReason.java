/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigObsoleteReasonRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 淘汰理由记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigObsoleteReason extends TableImpl<ConfigObsoleteReasonRecord> {

    private static final long serialVersionUID = 122588018;

    /**
     * The reference instance of <code>configdb.config_obsolete_reason</code>
     */
    public static final ConfigObsoleteReason CONFIG_OBSOLETE_REASON = new ConfigObsoleteReason();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigObsoleteReasonRecord> getRecordType() {
        return ConfigObsoleteReasonRecord.class;
    }

    /**
     * The column <code>configdb.config_obsolete_reason.id</code>.
     */
    public final TableField<ConfigObsoleteReasonRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>configdb.config_obsolete_reason.obsolete_type</code>. 淘汰类型（0拒绝候选人,1被候选人拒绝）
     */
    public final TableField<ConfigObsoleteReasonRecord, Byte> OBSOLETE_TYPE = createField("obsolete_type", org.jooq.impl.SQLDataType.TINYINT, this, "淘汰类型（0拒绝候选人,1被候选人拒绝）");

    /**
     * The column <code>configdb.config_obsolete_reason.obsolete_type_name</code>. 淘汰类型名称
     */
    public final TableField<ConfigObsoleteReasonRecord, String> OBSOLETE_TYPE_NAME = createField("obsolete_type_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "淘汰类型名称");

    /**
     * The column <code>configdb.config_obsolete_reason.obsolete_reason</code>. 淘汰原因类型
     */
    public final TableField<ConfigObsoleteReasonRecord, String> OBSOLETE_REASON = createField("obsolete_reason", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "淘汰原因类型");

    /**
     * The column <code>configdb.config_obsolete_reason.create_time</code>. 创建时间
     */
    public final TableField<ConfigObsoleteReasonRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>configdb.config_obsolete_reason.update_time</code>. 修改时间
     */
    public final TableField<ConfigObsoleteReasonRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>configdb.config_obsolete_reason</code> table reference
     */
    public ConfigObsoleteReason() {
        this("config_obsolete_reason", null);
    }

    /**
     * Create an aliased <code>configdb.config_obsolete_reason</code> table reference
     */
    public ConfigObsoleteReason(String alias) {
        this(alias, CONFIG_OBSOLETE_REASON);
    }

    private ConfigObsoleteReason(String alias, Table<ConfigObsoleteReasonRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigObsoleteReason(String alias, Table<ConfigObsoleteReasonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "淘汰理由记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigObsoleteReasonRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONFIG_OBSOLETE_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigObsoleteReasonRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_OBSOLETE_REASON_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigObsoleteReasonRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigObsoleteReasonRecord>>asList(Keys.KEY_CONFIG_OBSOLETE_REASON_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigObsoleteReason as(String alias) {
        return new ConfigObsoleteReason(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigObsoleteReason rename(String name) {
        return new ConfigObsoleteReason(name, null);
    }
}
