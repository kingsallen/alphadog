/*
 * This file is generated by jOOQ.
*/
package com.moseeker.baseorm.db.configdb.tables;


import com.moseeker.baseorm.db.configdb.Configdb;
import com.moseeker.baseorm.db.configdb.Keys;
import com.moseeker.baseorm.db.configdb.tables.records.ConfigCronjobsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigCronjobs extends TableImpl<ConfigCronjobsRecord> {

    private static final long serialVersionUID = 314295558;

    /**
     * The reference instance of <code>configdb.config_cronjobs</code>
     */
    public static final ConfigCronjobs CONFIG_CRONJOBS = new ConfigCronjobs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigCronjobsRecord> getRecordType() {
        return ConfigCronjobsRecord.class;
    }

    /**
     * The column <code>configdb.config_cronjobs.id</code>.
     */
    public final TableField<ConfigCronjobsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>configdb.config_cronjobs.name</code>.
     */
    public final TableField<ConfigCronjobsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>configdb.config_cronjobs.command</code>.
     */
    public final TableField<ConfigCronjobsRecord, String> COMMAND = createField("command", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

    /**
     * The column <code>configdb.config_cronjobs.desc</code>.
     */
    public final TableField<ConfigCronjobsRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

    /**
     * The column <code>configdb.config_cronjobs.check_delay</code>. job开始几分钟后开始检查结果
     */
    public final TableField<ConfigCronjobsRecord, Integer> CHECK_DELAY = createField("check_delay", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("45", org.jooq.impl.SQLDataType.INTEGER)), this, "job开始几分钟后开始检查结果");

    /**
     * The column <code>configdb.config_cronjobs.notice_email</code>. email通知地址, 为空使用 alarm@moseeker.com
     */
    public final TableField<ConfigCronjobsRecord, String> NOTICE_EMAIL = createField("notice_email", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "email通知地址, 为空使用 alarm@moseeker.com");

    /**
     * Create a <code>configdb.config_cronjobs</code> table reference
     */
    public ConfigCronjobs() {
        this("config_cronjobs", null);
    }

    /**
     * Create an aliased <code>configdb.config_cronjobs</code> table reference
     */
    public ConfigCronjobs(String alias) {
        this(alias, CONFIG_CRONJOBS);
    }

    private ConfigCronjobs(String alias, Table<ConfigCronjobsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigCronjobs(String alias, Table<ConfigCronjobsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Configdb.CONFIGDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigCronjobsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONFIG_CRONJOBS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigCronjobsRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_CRONJOBS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigCronjobsRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigCronjobsRecord>>asList(Keys.KEY_CONFIG_CRONJOBS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigCronjobs as(String alias) {
        return new ConfigCronjobs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigCronjobs rename(String name) {
        return new ConfigCronjobs(name, null);
    }
}
