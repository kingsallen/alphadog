/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.dictdb.tables;


import com.moseeker.baseorm.db.dictdb.Dictdb;
import com.moseeker.baseorm.db.dictdb.Keys;
import com.moseeker.baseorm.db.dictdb.tables.records.DictCityMapRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 城市字典code映射表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictCityMap extends TableImpl<DictCityMapRecord> {

    private static final long serialVersionUID = -90829378;

    /**
     * The reference instance of <code>dictdb.dict_city_map</code>
     */
    public static final DictCityMap DICT_CITY_MAP = new DictCityMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictCityMapRecord> getRecordType() {
        return DictCityMapRecord.class;
    }

    /**
     * The column <code>dictdb.dict_city_map.id</code>. 主键id
     */
    public final TableField<DictCityMapRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键id");

    /**
     * The column <code>dictdb.dict_city_map.CODE</code>. 千寻城市字典code
     */
    public final TableField<DictCityMapRecord, Integer> CODE = createField("CODE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "千寻城市字典code");

    /**
     * The column <code>dictdb.dict_city_map.code_other</code>.
     */
    public final TableField<DictCityMapRecord, String> CODE_OTHER = createField("code_other", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>dictdb.dict_city_map.channel</code>. 渠道 1 51job 2 猎聘 3 智联 4 linkedin
     */
    public final TableField<DictCityMapRecord, Integer> CHANNEL = createField("channel", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "渠道 1 51job 2 猎聘 3 智联 4 linkedin");

    /**
     * The column <code>dictdb.dict_city_map.STATUS</code>. 状态 0 是有效 1是无效
     */
    public final TableField<DictCityMapRecord, Integer> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态 0 是有效 1是无效");

    /**
     * The column <code>dictdb.dict_city_map.create_time</code>. 创建时间
     */
    public final TableField<DictCityMapRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>dictdb.dict_city_map</code> table reference
     */
    public DictCityMap() {
        this("dict_city_map", null);
    }

    /**
     * Create an aliased <code>dictdb.dict_city_map</code> table reference
     */
    public DictCityMap(String alias) {
        this(alias, DICT_CITY_MAP);
    }

    private DictCityMap(String alias, Table<DictCityMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private DictCityMap(String alias, Table<DictCityMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "城市字典code映射表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dictdb.DICTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DictCityMapRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DICT_CITY_MAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictCityMapRecord> getPrimaryKey() {
        return Keys.KEY_DICT_CITY_MAP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictCityMapRecord>> getKeys() {
        return Arrays.<UniqueKey<DictCityMapRecord>>asList(Keys.KEY_DICT_CITY_MAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DictCityMap as(String alias) {
        return new DictCityMap(alias, this);
    }

    /**
     * Rename this table
     */
    public DictCityMap rename(String name) {
        return new DictCityMap(name, null);
    }
}
