/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.dictdb.tables;


import com.moseeker.baseorm.db.dictdb.Dictdb;
import com.moseeker.baseorm.db.dictdb.Keys;
import com.moseeker.baseorm.db.dictdb.tables.records.DictCityMapRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DictCityMap extends TableImpl<DictCityMapRecord> {

	private static final long serialVersionUID = -1350751828;

	/**
	 * The reference instance of <code>dictdb.dict_city_map</code>
	 */
	public static final DictCityMap DICT_CITY_MAP = new DictCityMap();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DictCityMapRecord> getRecordType() {
		return DictCityMapRecord.class;
	}

	/**
	 * The column <code>dictdb.dict_city_map.id</code>.
	 */
	public final TableField<DictCityMapRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dictdb.dict_city_map.code</code>.
	 */
	public final TableField<DictCityMapRecord, Integer> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dictdb.dict_city_map.code_other</code>.
	 */
	public final TableField<DictCityMapRecord, Integer> CODE_OTHER = createField("code_other", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dictdb.dict_city_map.channel</code>.
	 */
	public final TableField<DictCityMapRecord, Short> CHANNEL = createField("channel", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>dictdb.dict_city_map.status</code>.
	 */
	public final TableField<DictCityMapRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>dictdb.dict_city_map.create_time</code>.
	 */
	public final TableField<DictCityMapRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>dictdb.dict_city_map</code> table reference
	 */
	public DictCityMap() {
		this("dict_city_map", null);
	}

	/**
	 * Create an aliased <code>dictdb.dict_city_map</code> table reference
	 */
	public DictCityMap(String alias) {
		this(alias, DICT_CITY_MAP);
	}

	private DictCityMap(String alias, Table<DictCityMapRecord> aliased) {
		this(alias, aliased, null);
	}

	private DictCityMap(String alias, Table<DictCityMapRecord> aliased, Field<?>[] parameters) {
		super(alias, Dictdb.DICTDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DictCityMapRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DICT_CITY_MAP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DictCityMapRecord> getPrimaryKey() {
		return Keys.KEY_DICT_CITY_MAP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DictCityMapRecord>> getKeys() {
		return Arrays.<UniqueKey<DictCityMapRecord>>asList(Keys.KEY_DICT_CITY_MAP_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DictCityMap as(String alias) {
		return new DictCityMap(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DictCityMap rename(String name) {
		return new DictCityMap(name, null);
	}
}
