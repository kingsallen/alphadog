/**
 * This class is generated by jOOQ
 */
package com.moseeker.baseorm.db.wordpressdb.tables.records;


import com.moseeker.baseorm.db.wordpressdb.tables.WordpressTermTaxonomy;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WordpressTermTaxonomyRecord extends UpdatableRecordImpl<WordpressTermTaxonomyRecord> implements Record6<ULong, ULong, String, String, ULong, Long> {

	private static final long serialVersionUID = -1221387327;

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.term_taxonomy_id</code>.
	 */
	public void setTermTaxonomyId(ULong value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.term_taxonomy_id</code>.
	 */
	public ULong getTermTaxonomyId() {
		return (ULong) getValue(0);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.term_id</code>.
	 */
	public void setTermId(ULong value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.term_id</code>.
	 */
	public ULong getTermId() {
		return (ULong) getValue(1);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.taxonomy</code>.
	 */
	public void setTaxonomy(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.taxonomy</code>.
	 */
	public String getTaxonomy() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.description</code>.
	 */
	public void setDescription(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.parent</code>.
	 */
	public void setParent(ULong value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.parent</code>.
	 */
	public ULong getParent() {
		return (ULong) getValue(4);
	}

	/**
	 * Setter for <code>wordpressdb.wordpress_term_taxonomy.count</code>.
	 */
	public void setCount(Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>wordpressdb.wordpress_term_taxonomy.count</code>.
	 */
	public Long getCount() {
		return (Long) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<ULong> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<ULong, ULong, String, String, ULong, Long> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<ULong, ULong, String, String, ULong, Long> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field1() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.TERM_TAXONOMY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field2() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.TERM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.TAXONOMY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field5() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.PARENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY.COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value1() {
		return getTermTaxonomyId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value2() {
		return getTermId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTaxonomy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value5() {
		return getParent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value1(ULong value) {
		setTermTaxonomyId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value2(ULong value) {
		setTermId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value3(String value) {
		setTaxonomy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value5(ULong value) {
		setParent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord value6(Long value) {
		setCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WordpressTermTaxonomyRecord values(ULong value1, ULong value2, String value3, String value4, ULong value5, Long value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached WordpressTermTaxonomyRecord
	 */
	public WordpressTermTaxonomyRecord() {
		super(WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY);
	}

	/**
	 * Create a detached, initialised WordpressTermTaxonomyRecord
	 */
	public WordpressTermTaxonomyRecord(ULong termTaxonomyId, ULong termId, String taxonomy, String description, ULong parent, Long count) {
		super(WordpressTermTaxonomy.WORDPRESS_TERM_TAXONOMY);

		setValue(0, termTaxonomyId);
		setValue(1, termId);
		setValue(2, taxonomy);
		setValue(3, description);
		setValue(4, parent);
		setValue(5, count);
	}
}
