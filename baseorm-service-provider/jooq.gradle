project.description = '''
    jooq 生成table和record
'''
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

apply from: '../versions.gradle'

dependencies {
    compile 'org.jooq:jooq:3.9.0'
    compile 'org.jooq:jooq-meta:3.9.0'
    compile 'org.jooq:jooq-codegen:3.9.0'
    testCompile deps["junit"]
}

buildscript {
    apply from: '../versions.gradle'
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath fileTree(dir:'../libs',include:'jooq*.jar')
        classpath deps["mysql-connector-java"]
    }
}

// jooq code gen, 运行命令: gradle -b jooq.gradle generate --debug -Ddb=${db}
task generate << {
    // 输入指定的数据库名 如: userdb, hrdb
    def dbname = java.lang.System.properties['db']
    def dbxml = file("jooq/jooqdb.xml")
    // 读取统一的模板，填充dbname
    dbxml.filterLine("utf-8") { String text -> if(text.contains("\${db}"))
            text.replace("\${db}", dbname)
    }

    GenerationTool.main(
            JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}