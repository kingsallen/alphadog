/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.FriendrequestsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 好友请求
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Friendrequests extends TableImpl<FriendrequestsRecord> {

	private static final long serialVersionUID = 1869769113;

	/**
	 * The reference instance of <code>userDB.friendrequests</code>
	 */
	public static final Friendrequests FRIENDREQUESTS = new Friendrequests();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FriendrequestsRecord> getRecordType() {
		return FriendrequestsRecord.class;
	}

	/**
	 * The column <code>userDB.friendrequests.id</code>.
	 */
	public final TableField<FriendrequestsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>userDB.friendrequests.from</code>. 申请者的用户id
	 */
	public final TableField<FriendrequestsRecord, Integer> FROM = createField("from", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "申请者的用户id");

	/**
	 * The column <code>userDB.friendrequests.to</code>. 向谁申请的userid
	 */
	public final TableField<FriendrequestsRecord, Integer> TO = createField("to", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "向谁申请的userid");

	/**
	 * The column <code>userDB.friendrequests.request_message</code>. 发请求时的附带消息
	 */
	public final TableField<FriendrequestsRecord, String> REQUEST_MESSAGE = createField("request_message", org.jooq.impl.SQLDataType.CLOB, this, "发请求时的附带消息");

	/**
	 * The column <code>userDB.friendrequests.status</code>. 0 等待批准， 1 批准， 2 否决
	 */
	public final TableField<FriendrequestsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "0 等待批准， 1 批准， 2 否决");

	/**
	 * The column <code>userDB.friendrequests.create_time</code>.
	 */
	public final TableField<FriendrequestsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>userDB.friendrequests.update_time</code>.
	 */
	public final TableField<FriendrequestsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>userDB.friendrequests</code> table reference
	 */
	public Friendrequests() {
		this("friendrequests", null);
	}

	/**
	 * Create an aliased <code>userDB.friendrequests</code> table reference
	 */
	public Friendrequests(String alias) {
		this(alias, FRIENDREQUESTS);
	}

	private Friendrequests(String alias, Table<FriendrequestsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Friendrequests(String alias, Table<FriendrequestsRecord> aliased, Field<?>[] parameters) {
		super(alias, Userdb.USERDB, aliased, parameters, "好友请求");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FriendrequestsRecord, Long> getIdentity() {
		return Keys.IDENTITY_FRIENDREQUESTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FriendrequestsRecord> getPrimaryKey() {
		return Keys.KEY_FRIENDREQUESTS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FriendrequestsRecord>> getKeys() {
		return Arrays.<UniqueKey<FriendrequestsRecord>>asList(Keys.KEY_FRIENDREQUESTS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Friendrequests as(String alias) {
		return new Friendrequests(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Friendrequests rename(String name) {
		return new Friendrequests(name, null);
	}
}
