/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables.records;


import com.moseeker.db.userdb.tables.Usersetting;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户设置表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersettingRecord extends UpdatableRecordImpl<UsersettingRecord> implements Record3<Integer, Integer, Byte> {

	private static final long serialVersionUID = 1686571472;

	/**
	 * Setter for <code>userDB.usersetting.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>userDB.usersetting.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>userDB.usersetting.userid</code>. 用户id
	 */
	public void setUserid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>userDB.usersetting.userid</code>. 用户id
	 */
	public Integer getUserid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>userDB.usersetting.profile_privacy_level</code>. profile隐私设置, -1 不公开，0 全部公开， 1 仅限一度好友， 2,仅限二度好友
	 */
	public void setProfilePrivacyLevel(Byte value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>userDB.usersetting.profile_privacy_level</code>. profile隐私设置, -1 不公开，0 全部公开， 1 仅限一度好友， 2,仅限二度好友
	 */
	public Byte getProfilePrivacyLevel() {
		return (Byte) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Byte> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Byte> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Usersetting.USERSETTING.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Usersetting.USERSETTING.USERID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field3() {
		return Usersetting.USERSETTING.PROFILE_PRIVACY_LEVEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getUserid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value3() {
		return getProfilePrivacyLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersettingRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersettingRecord value2(Integer value) {
		setUserid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersettingRecord value3(Byte value) {
		setProfilePrivacyLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UsersettingRecord values(Integer value1, Integer value2, Byte value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UsersettingRecord
	 */
	public UsersettingRecord() {
		super(Usersetting.USERSETTING);
	}

	/**
	 * Create a detached, initialised UsersettingRecord
	 */
	public UsersettingRecord(Integer id, Integer userid, Byte profilePrivacyLevel) {
		super(Usersetting.USERSETTING);

		setValue(0, id);
		setValue(1, userid);
		setValue(2, profilePrivacyLevel);
	}
}
