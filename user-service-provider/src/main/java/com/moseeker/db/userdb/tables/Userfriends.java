/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.UserfriendsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 一度好友关系表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userfriends extends TableImpl<UserfriendsRecord> {

	private static final long serialVersionUID = -1865957141;

	/**
	 * The reference instance of <code>userDB.userfriends</code>
	 */
	public static final Userfriends USERFRIENDS = new Userfriends();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserfriendsRecord> getRecordType() {
		return UserfriendsRecord.class;
	}

	/**
	 * The column <code>userDB.userfriends.id</code>.
	 */
	public final TableField<UserfriendsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>userDB.userfriends.user1</code>. 第一个userid
	 */
	public final TableField<UserfriendsRecord, Integer> USER1 = createField("user1", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "第一个userid");

	/**
	 * The column <code>userDB.userfriends.user2</code>. 第二个userid
	 */
	public final TableField<UserfriendsRecord, Integer> USER2 = createField("user2", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "第二个userid");

	/**
	 * The column <code>userDB.userfriends.create_time</code>.
	 */
	public final TableField<UserfriendsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>userDB.userfriends</code> table reference
	 */
	public Userfriends() {
		this("userfriends", null);
	}

	/**
	 * Create an aliased <code>userDB.userfriends</code> table reference
	 */
	public Userfriends(String alias) {
		this(alias, USERFRIENDS);
	}

	private Userfriends(String alias, Table<UserfriendsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Userfriends(String alias, Table<UserfriendsRecord> aliased, Field<?>[] parameters) {
		super(alias, Userdb.USERDB, aliased, parameters, "一度好友关系表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserfriendsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USERFRIENDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserfriendsRecord> getPrimaryKey() {
		return Keys.KEY_USERFRIENDS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserfriendsRecord>> getKeys() {
		return Arrays.<UniqueKey<UserfriendsRecord>>asList(Keys.KEY_USERFRIENDS_PRIMARY, Keys.KEY_USERFRIENDS_USER1USER2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Userfriends as(String alias) {
		return new Userfriends(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Userfriends rename(String name) {
		return new Userfriends(name, null);
	}
}
