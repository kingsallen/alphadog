/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.FriendcommentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 好友评论
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Friendcomments extends TableImpl<FriendcommentsRecord> {

	private static final long serialVersionUID = -206530040;

	/**
	 * The reference instance of <code>userDB.friendcomments</code>
	 */
	public static final Friendcomments FRIENDCOMMENTS = new Friendcomments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FriendcommentsRecord> getRecordType() {
		return FriendcommentsRecord.class;
	}

	/**
	 * The column <code>userDB.friendcomments.id</code>.
	 */
	public final TableField<FriendcommentsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>userDB.friendcomments.from</code>. 评论人的userid
	 */
	public final TableField<FriendcommentsRecord, Integer> FROM = createField("from", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "评论人的userid");

	/**
	 * The column <code>userDB.friendcomments.to</code>. 被评论的 userid
	 */
	public final TableField<FriendcommentsRecord, Integer> TO = createField("to", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "被评论的 userid");

	/**
	 * The column <code>userDB.friendcomments.comment</code>. 评论内容
	 */
	public final TableField<FriendcommentsRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "评论内容");

	/**
	 * The column <code>userDB.friendcomments.status</code>.  1 显示， 2 删除
	 */
	public final TableField<FriendcommentsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, " 1 显示， 2 删除");

	/**
	 * The column <code>userDB.friendcomments.create_time</code>.
	 */
	public final TableField<FriendcommentsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>userDB.friendcomments</code> table reference
	 */
	public Friendcomments() {
		this("friendcomments", null);
	}

	/**
	 * Create an aliased <code>userDB.friendcomments</code> table reference
	 */
	public Friendcomments(String alias) {
		this(alias, FRIENDCOMMENTS);
	}

	private Friendcomments(String alias, Table<FriendcommentsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Friendcomments(String alias, Table<FriendcommentsRecord> aliased, Field<?>[] parameters) {
		super(alias, Userdb.USERDB, aliased, parameters, "好友评论");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FriendcommentsRecord, Long> getIdentity() {
		return Keys.IDENTITY_FRIENDCOMMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FriendcommentsRecord> getPrimaryKey() {
		return Keys.KEY_FRIENDCOMMENTS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FriendcommentsRecord>> getKeys() {
		return Arrays.<UniqueKey<FriendcommentsRecord>>asList(Keys.KEY_FRIENDCOMMENTS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Friendcomments as(String alias) {
		return new Friendcomments(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Friendcomments rename(String name) {
		return new Friendcomments(name, null);
	}
}
