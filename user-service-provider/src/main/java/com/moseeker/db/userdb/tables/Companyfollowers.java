/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.CompanyfollowersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 企业粉丝表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Companyfollowers extends TableImpl<CompanyfollowersRecord> {

	private static final long serialVersionUID = -1228918185;

	/**
	 * The reference instance of <code>userDB.companyfollowers</code>
	 */
	public static final Companyfollowers COMPANYFOLLOWERS = new Companyfollowers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CompanyfollowersRecord> getRecordType() {
		return CompanyfollowersRecord.class;
	}

	/**
	 * The column <code>userDB.companyfollowers.id</code>.
	 */
	public final TableField<CompanyfollowersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>userDB.companyfollowers.userid</code>. 用户id
	 */
	public final TableField<CompanyfollowersRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

	/**
	 * The column <code>userDB.companyfollowers.companyid</code>. 企业id
	 */
	public final TableField<CompanyfollowersRecord, Integer> COMPANYID = createField("companyid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "企业id");

	/**
	 * The column <code>userDB.companyfollowers.create_time</code>.
	 */
	public final TableField<CompanyfollowersRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>userDB.companyfollowers</code> table reference
	 */
	public Companyfollowers() {
		this("companyfollowers", null);
	}

	/**
	 * Create an aliased <code>userDB.companyfollowers</code> table reference
	 */
	public Companyfollowers(String alias) {
		this(alias, COMPANYFOLLOWERS);
	}

	private Companyfollowers(String alias, Table<CompanyfollowersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Companyfollowers(String alias, Table<CompanyfollowersRecord> aliased, Field<?>[] parameters) {
		super(alias, Userdb.USERDB, aliased, parameters, "企业粉丝表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CompanyfollowersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_COMPANYFOLLOWERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CompanyfollowersRecord> getPrimaryKey() {
		return Keys.KEY_COMPANYFOLLOWERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CompanyfollowersRecord>> getKeys() {
		return Arrays.<UniqueKey<CompanyfollowersRecord>>asList(Keys.KEY_COMPANYFOLLOWERS_PRIMARY, Keys.KEY_COMPANYFOLLOWERS_USERCOMPANY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Companyfollowers as(String alias) {
		return new Companyfollowers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Companyfollowers rename(String name) {
		return new Companyfollowers(name, null);
	}
}
