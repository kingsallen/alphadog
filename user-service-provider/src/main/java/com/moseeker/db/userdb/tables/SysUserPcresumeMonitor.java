/**
 * This class is generated by jOOQ
 */
package com.moseeker.db.userdb.tables;


import com.moseeker.db.userdb.Keys;
import com.moseeker.db.userdb.Userdb;
import com.moseeker.db.userdb.tables.records.SysUserPcresumeMonitorRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户在线简历状态监控表
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysUserPcresumeMonitor extends TableImpl<SysUserPcresumeMonitorRecord> {

	private static final long serialVersionUID = 2013502854;

	/**
	 * The reference instance of <code>userDB.sys_user_pcresume_monitor</code>
	 */
	public static final SysUserPcresumeMonitor SYS_USER_PCRESUME_MONITOR = new SysUserPcresumeMonitor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SysUserPcresumeMonitorRecord> getRecordType() {
		return SysUserPcresumeMonitorRecord.class;
	}

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.id</code>.
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.sysuser_id</code>. sysuser.id
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Long> SYSUSER_ID = createField("sysuser_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "sysuser.id");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.unionid</code>. 微信用户的unionid
	 */
	public final TableField<SysUserPcresumeMonitorRecord, String> UNIONID = createField("unionid", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaulted(true), this, "微信用户的unionid");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.errcode</code>. 处理状态0：成功1：待处理2：失败
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Byte> ERRCODE = createField("errcode", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "处理状态0：成功1：待处理2：失败");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.errmsg</code>. 处理状态提示信息
	 */
	public final TableField<SysUserPcresumeMonitorRecord, String> ERRMSG = createField("errmsg", org.jooq.impl.SQLDataType.VARCHAR.length(128).defaulted(true), this, "处理状态提示信息");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.type</code>. 监控分类 0：无效分类，1：pc扫码登录 2：pc简历填写
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "监控分类 0：无效分类，1：pc扫码登录 2：pc简历填写");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.disable</code>. 是否失效，0：有效1：失效
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Byte> DISABLE = createField("disable", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "是否失效，0：有效1：失效");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.monitor_start_time</code>. 创建霎间
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Long> MONITOR_START_TIME = createField("monitor_start_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "创建霎间");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.create_time</code>. 创建时间
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "创建时间");

	/**
	 * The column <code>userDB.sys_user_pcresume_monitor.update_time</code>. 修改时间
	 */
	public final TableField<SysUserPcresumeMonitorRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "修改时间");

	/**
	 * Create a <code>userDB.sys_user_pcresume_monitor</code> table reference
	 */
	public SysUserPcresumeMonitor() {
		this("sys_user_pcresume_monitor", null);
	}

	/**
	 * Create an aliased <code>userDB.sys_user_pcresume_monitor</code> table reference
	 */
	public SysUserPcresumeMonitor(String alias) {
		this(alias, SYS_USER_PCRESUME_MONITOR);
	}

	private SysUserPcresumeMonitor(String alias, Table<SysUserPcresumeMonitorRecord> aliased) {
		this(alias, aliased, null);
	}

	private SysUserPcresumeMonitor(String alias, Table<SysUserPcresumeMonitorRecord> aliased, Field<?>[] parameters) {
		super(alias, Userdb.USERDB, aliased, parameters, "用户在线简历状态监控表");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SysUserPcresumeMonitorRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SYS_USER_PCRESUME_MONITOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SysUserPcresumeMonitorRecord> getPrimaryKey() {
		return Keys.KEY_SYS_USER_PCRESUME_MONITOR_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SysUserPcresumeMonitorRecord>> getKeys() {
		return Arrays.<UniqueKey<SysUserPcresumeMonitorRecord>>asList(Keys.KEY_SYS_USER_PCRESUME_MONITOR_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SysUserPcresumeMonitor as(String alias) {
		return new SysUserPcresumeMonitor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SysUserPcresumeMonitor rename(String name) {
		return new SysUserPcresumeMonitor(name, null);
	}
}
